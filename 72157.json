{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The address of the zookeeper quorum containing the cloud state\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The address of the zookeeper quorum containing the cloud state\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The address of the zookeeper quorum containing the cloud state\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The address of the zookeeper quorum containing the cloud state\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The address of the zookeeper quorum containing the cloud state\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The address of the zookeeper quorum containing the cloud state\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d4e28423cb9e38084a1bf50f3192b2877871f7a","date":1334664200,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The address of the zookeeper quorum containing the cloud state\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","bugFix":["43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9b79570dbb7dde96e0d8bf42339245b30df35b","date":1344117822,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fb788ea821fd2677915770f1cada8122fce2cce","date":1379008291,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n    shutdownLBHttpSolrServer = false;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0622fbd990643ae4cacb693db6a0c82cf8916ae2","date":1397637446,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this(zkHost, lbServer, true);\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n    shutdownLBHttpSolrServer = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5a233896b7f16ac9b4ed601ef8207d98f1f0500","date":1398857046,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n    shutdownLBHttpSolrServer = false;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this(zkHost, lbServer, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6f693ed86f289b2e42b46684409b3997f2c264a","date":1404319832,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n    shutdownLBHttpSolrServer = false;\n    setupStateVerParamOnQueryString(lbServer);\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n    shutdownLBHttpSolrServer = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4c07fa58a256dccf8b95364855fd5e9ad4d1401","date":1404386015,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n    shutdownLBHttpSolrServer = false;\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n    shutdownLBHttpSolrServer = false;\n    setupStateVerParamOnQueryString(lbServer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52209f74dc33b64e2e3576fe15b8c2d312809d7","date":1408896505,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost\n   *          A zookeeper client endpoint.\n   * @param lbServer\n   *          LBHttpSolrServer instance for requests.\n   * @see #CloudSolrServer(String) for full description and details on zkHost\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this(zkHost, lbServer, true);\n  }\n\n","sourceOld":"  /**\n   * @param zkHost The client endpoint of the zookeeper quorum containing the cloud state,\n   * in the form HOST:PORT.\n   * @param lbServer LBHttpSolrServer instance for requests. \n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this.zkHost = zkHost;\n    this.lbServer = lbServer;\n    this.updatesToLeaders = true;\n    shutdownLBHttpSolrServer = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient#CloudSolrClient(String,LBHttpSolrClient).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#CloudSolrServer(String,LBHttpSolrServer).mjava","sourceNew":"  /**\n   * @param zkHost\n   *          A zookeeper client endpoint.\n   * @param lbClient\n   *          LBHttpSolrServer instance for requests.\n   * @see #CloudSolrClient(String) for full description and details on zkHost\n   */\n  public CloudSolrClient(String zkHost, LBHttpSolrClient lbClient) {\n    this(zkHost, lbClient, true);\n  }\n\n","sourceOld":"  /**\n   * @param zkHost\n   *          A zookeeper client endpoint.\n   * @param lbServer\n   *          LBHttpSolrServer instance for requests.\n   * @see #CloudSolrServer(String) for full description and details on zkHost\n   */\n  public CloudSolrServer(String zkHost, LBHttpSolrServer lbServer) {\n    this(zkHost, lbServer, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"f4c07fa58a256dccf8b95364855fd5e9ad4d1401":["a6f693ed86f289b2e42b46684409b3997f2c264a"],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"bafca15d8e408346a67f4282ad1143b88023893b":["e52209f74dc33b64e2e3576fe15b8c2d312809d7"],"e52209f74dc33b64e2e3576fe15b8c2d312809d7":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401"],"9d4e28423cb9e38084a1bf50f3192b2877871f7a":["c26f00b574427b55127e869b935845554afde1fa"],"fd9b79570dbb7dde96e0d8bf42339245b30df35b":["9d4e28423cb9e38084a1bf50f3192b2877871f7a"],"4fb788ea821fd2677915770f1cada8122fce2cce":["fd9b79570dbb7dde96e0d8bf42339245b30df35b"],"a6f693ed86f289b2e42b46684409b3997f2c264a":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["9d4e28423cb9e38084a1bf50f3192b2877871f7a","fd9b79570dbb7dde96e0d8bf42339245b30df35b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["9d4e28423cb9e38084a1bf50f3192b2877871f7a","fd9b79570dbb7dde96e0d8bf42339245b30df35b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["4fb788ea821fd2677915770f1cada8122fce2cce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"c26f00b574427b55127e869b935845554afde1fa":["9d4e28423cb9e38084a1bf50f3192b2877871f7a"],"f4c07fa58a256dccf8b95364855fd5e9ad4d1401":["e52209f74dc33b64e2e3576fe15b8c2d312809d7"],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["a6f693ed86f289b2e42b46684409b3997f2c264a"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e52209f74dc33b64e2e3576fe15b8c2d312809d7":["bafca15d8e408346a67f4282ad1143b88023893b"],"9d4e28423cb9e38084a1bf50f3192b2877871f7a":["fd9b79570dbb7dde96e0d8bf42339245b30df35b","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"fd9b79570dbb7dde96e0d8bf42339245b30df35b":["4fb788ea821fd2677915770f1cada8122fce2cce","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"4fb788ea821fd2677915770f1cada8122fce2cce":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"a6f693ed86f289b2e42b46684409b3997f2c264a":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}