{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testSerializeTooManyStatesToDeterminizeExc().mjava","commits":[{"id":"3280b83de7800f2a490a2f32e1822b44588c28e9","date":1438783345,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testSerializeTooManyStatesToDeterminizeExc().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-6713\n  public void testSerializeTooManyStatesToDeterminizeExc() throws Exception {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    try {\n      new RegExp(source).toAutomaton();\n      fail();\n    } catch (TooComplexToDeterminizeException e) {\n      assert(e.getMessage().contains(source));\n\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutput out = new ObjectOutputStream(bos);   \n      out.writeObject(e);\n      byte[] bytes = bos.toByteArray();\n\n      ByteArrayInputStream bis = new ByteArrayInputStream(bytes);\n      ObjectInput in = new ObjectInputStream(bis);\n      TooComplexToDeterminizeException e2 = (TooComplexToDeterminizeException) in.readObject();\n      assertNotNull(e2.getMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testSerializeTooManyStatesToDeterminizeExc().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testSerializeTooManyStatesToDeterminizeExc().mjava","sourceNew":"  // LUCENE-6713\n  public void testSerializeTooManyStatesToDeterminizeExc() throws Exception {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    TooComplexToDeterminizeException expected = expectThrows(TooComplexToDeterminizeException.class, () -> {\n      new RegExp(source).toAutomaton();\n    });\n    assertTrue(expected.getMessage().contains(source));\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    ObjectOutput out = new ObjectOutputStream(bos);   \n    out.writeObject(expected);\n    byte[] bytes = bos.toByteArray();\n\n    ByteArrayInputStream bis = new ByteArrayInputStream(bytes);\n    ObjectInput in = new ObjectInputStream(bis);\n    TooComplexToDeterminizeException e2 = (TooComplexToDeterminizeException) in.readObject();\n    assertNotNull(e2.getMessage());\n  }\n\n","sourceOld":"  // LUCENE-6713\n  public void testSerializeTooManyStatesToDeterminizeExc() throws Exception {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    try {\n      new RegExp(source).toAutomaton();\n      fail();\n    } catch (TooComplexToDeterminizeException e) {\n      assert(e.getMessage().contains(source));\n\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutput out = new ObjectOutputStream(bos);   \n      out.writeObject(e);\n      byte[] bytes = bos.toByteArray();\n\n      ByteArrayInputStream bis = new ByteArrayInputStream(bytes);\n      ObjectInput in = new ObjectInputStream(bis);\n      TooComplexToDeterminizeException e2 = (TooComplexToDeterminizeException) in.readObject();\n      assertNotNull(e2.getMessage());\n    }\n  }\n\n","bugFix":["3280b83de7800f2a490a2f32e1822b44588c28e9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54297202372099824b9eb2d6897335b221455496","date":1501840968,"type":3,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testSerializeTooManyStatesToDeterminizeExc().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testSerializeTooManyStatesToDeterminizeExc().mjava","sourceNew":"  // LUCENE-6713\n  public void testSerializeTooManyStatesToDeterminizeExc() throws Exception {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    TooComplexToDeterminizeException expected = expectThrows(TooComplexToDeterminizeException.class, () -> {\n      new RegExp(source).toAutomaton();\n    });\n    assertTrue(expected.getMessage().contains(source));\n  }\n\n","sourceOld":"  // LUCENE-6713\n  public void testSerializeTooManyStatesToDeterminizeExc() throws Exception {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    TooComplexToDeterminizeException expected = expectThrows(TooComplexToDeterminizeException.class, () -> {\n      new RegExp(source).toAutomaton();\n    });\n    assertTrue(expected.getMessage().contains(source));\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    ObjectOutput out = new ObjectOutputStream(bos);   \n    out.writeObject(expected);\n    byte[] bytes = bos.toByteArray();\n\n    ByteArrayInputStream bis = new ByteArrayInputStream(bytes);\n    ObjectInput in = new ObjectInputStream(bis);\n    TooComplexToDeterminizeException e2 = (TooComplexToDeterminizeException) in.readObject();\n    assertNotNull(e2.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testSerializeTooManyStatesToDeterminizeExc().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testSerializeTooManyStatesToDeterminizeExc().mjava","sourceNew":"  // LUCENE-6713\n  public void testSerializeTooManyStatesToDeterminizeExc() throws Exception {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    TooComplexToDeterminizeException expected = expectThrows(TooComplexToDeterminizeException.class, () -> {\n      new RegExp(source).toAutomaton();\n    });\n    assertTrue(expected.getMessage().contains(source));\n  }\n\n","sourceOld":"  // LUCENE-6713\n  public void testSerializeTooManyStatesToDeterminizeExc() throws Exception {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    TooComplexToDeterminizeException expected = expectThrows(TooComplexToDeterminizeException.class, () -> {\n      new RegExp(source).toAutomaton();\n    });\n    assertTrue(expected.getMessage().contains(source));\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    ObjectOutput out = new ObjectOutputStream(bos);   \n    out.writeObject(expected);\n    byte[] bytes = bos.toByteArray();\n\n    ByteArrayInputStream bis = new ByteArrayInputStream(bytes);\n    ObjectInput in = new ObjectInputStream(bis);\n    TooComplexToDeterminizeException e2 = (TooComplexToDeterminizeException) in.readObject();\n    assertNotNull(e2.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["05fe562aa248790944d43cdd478f512572835ba0","54297202372099824b9eb2d6897335b221455496"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["3280b83de7800f2a490a2f32e1822b44588c28e9"],"54297202372099824b9eb2d6897335b221455496":["05fe562aa248790944d43cdd478f512572835ba0"],"3280b83de7800f2a490a2f32e1822b44588c28e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54297202372099824b9eb2d6897335b221455496"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3280b83de7800f2a490a2f32e1822b44588c28e9"],"05fe562aa248790944d43cdd478f512572835ba0":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54297202372099824b9eb2d6897335b221455496"],"54297202372099824b9eb2d6897335b221455496":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3280b83de7800f2a490a2f32e1822b44588c28e9":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}