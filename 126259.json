{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayIterator#newSentenceInstance().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayIterator#newSentenceInstance().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayIterator#newSentenceInstance().mjava","sourceNew":"  /**\n   * Create a new CharArrayIterator that works around JRE bugs\n   * in a manner suitable for {@link BreakIterator#getSentenceInstance()}\n   */\n  public static CharArrayIterator newSentenceInstance() {\n    if (HAS_BUGGY_BREAKITERATORS) {\n      return new CharArrayIterator() {\n        // work around this for now by lying about all surrogates to \n        // the sentence tokenizer, instead we treat them all as \n        // SContinue so we won't break around them.\n        @Override\n        protected char jreBugWorkaround(char ch) {\n          return ch >= 0xD800 && ch <= 0xDFFF ? 0x002C : ch;\n        }\n      };\n    } else {\n      return new CharArrayIterator() {\n        // no bugs\n        @Override\n        protected char jreBugWorkaround(char ch) {\n          return ch;\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Create a new CharArrayIterator that works around JRE bugs\n   * in a manner suitable for {@link BreakIterator#getSentenceInstance()}\n   */\n  public static CharArrayIterator newSentenceInstance() {\n    if (HAS_BUGGY_BREAKITERATORS) {\n      return new CharArrayIterator() {\n        // work around this for now by lying about all surrogates to \n        // the sentence tokenizer, instead we treat them all as \n        // SContinue so we won't break around them.\n        @Override\n        protected char jreBugWorkaround(char ch) {\n          return ch >= 0xD800 && ch <= 0xDFFF ? 0x002C : ch;\n        }\n      };\n    } else {\n      return new CharArrayIterator() {\n        // no bugs\n        @Override\n        protected char jreBugWorkaround(char ch) {\n          return ch;\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}