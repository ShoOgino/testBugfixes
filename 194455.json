{"path":"src/test/org/apache/lucene/search/spans/TestSpanExplanationsOfNonMatches#qtest(Query,int[]).mjava","commits":[{"id":"3bc00bae96415d860c4f6113f29ea7d9406db8ca","date":1150766910,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpanExplanationsOfNonMatches#qtest(Query,int[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Overrides superclass to ignore matches and focus on non-matches\n   *\n   * @see CheckHits#checkNoMatchExplanations\n   */\n  public void qtest(Query q, int[] expDocNrs) throws Exception {\n    CheckHits.checkNoMatchExplanations(q, FIELD, searcher, expDocNrs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpanExplanationsOfNonMatches#qtest(Query,int[]).mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpanExplanationsOfNonMatches#qtest(Query,int[]).mjava","sourceNew":"  /**\n   * Overrides superclass to ignore matches and focus on non-matches\n   *\n   * @see CheckHits#checkNoMatchExplanations\n   */\n  @Override\n  public void qtest(Query q, int[] expDocNrs) throws Exception {\n    CheckHits.checkNoMatchExplanations(q, FIELD, searcher, expDocNrs);\n  }\n\n","sourceOld":"  /**\n   * Overrides superclass to ignore matches and focus on non-matches\n   *\n   * @see CheckHits#checkNoMatchExplanations\n   */\n  public void qtest(Query q, int[] expDocNrs) throws Exception {\n    CheckHits.checkNoMatchExplanations(q, FIELD, searcher, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpanExplanationsOfNonMatches#qtest(Query,int[]).mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpanExplanationsOfNonMatches#qtest(Query,int[]).mjava","sourceNew":"  /**\n   * Overrides superclass to ignore matches and focus on non-matches\n   *\n   * @see CheckHits#checkNoMatchExplanations\n   */\n  @Override\n  public void qtest(Query q, int[] expDocNrs) throws Exception {\n    CheckHits.checkNoMatchExplanations(q, FIELD, searcher, expDocNrs);\n  }\n\n","sourceOld":"  /**\n   * Overrides superclass to ignore matches and focus on non-matches\n   *\n   * @see CheckHits#checkNoMatchExplanations\n   */\n  @Override\n  public void qtest(Query q, int[] expDocNrs) throws Exception {\n    CheckHits.checkNoMatchExplanations(q, FIELD, searcher, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3bc00bae96415d860c4f6113f29ea7d9406db8ca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["3bc00bae96415d860c4f6113f29ea7d9406db8ca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"3bc00bae96415d860c4f6113f29ea7d9406db8ca":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bc00bae96415d860c4f6113f29ea7d9406db8ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}