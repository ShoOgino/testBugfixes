{"path":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#generateClaims().mjava","commits":[{"id":"bb3e075eaa5788b2762ec235bf72b069cefe3f50","date":1548244981,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#generateClaims().mjava","pathOld":"/dev/null","sourceNew":"  static JwtClaims generateClaims() {\n    JwtClaims claims = new JwtClaims();\n    claims.setIssuer(\"IDServer\");  // who creates the token and signs it\n    claims.setAudience(\"Solr\"); // to whom the token is intended to be sent\n    claims.setExpirationTimeMinutesInTheFuture(10); // time when the token will expire (10 minutes from now)\n    claims.setGeneratedJwtId(); // a unique identifier for the token\n    claims.setIssuedAtToNow();  // when the token was issued/created (now)\n    claims.setNotBeforeMinutesInThePast(2); // time before which the token is not yet valid (2 minutes ago)\n    claims.setSubject(\"solruser\"); // the subject/principal is whom the token is about\n    claims.setStringClaim(\"scope\", \"solr:read\"); \n    claims.setClaim(\"name\", \"Solr User\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"customPrincipal\", \"custom\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim1\", \"foo\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim2\", \"bar\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim3\", \"foo\"); // additional claims/attributes about the subject can be added\n    List<String> groups = Arrays.asList(\"group-one\", \"other-group\", \"group-three\");\n    claims.setStringListClaim(\"groups\", groups); // multi-valued claims work too and will end up as a JSON array\n    return claims;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#generateClaims().mjava","pathOld":"/dev/null","sourceNew":"  static JwtClaims generateClaims() {\n    JwtClaims claims = new JwtClaims();\n    claims.setIssuer(\"IDServer\");  // who creates the token and signs it\n    claims.setAudience(\"Solr\"); // to whom the token is intended to be sent\n    claims.setExpirationTimeMinutesInTheFuture(10); // time when the token will expire (10 minutes from now)\n    claims.setGeneratedJwtId(); // a unique identifier for the token\n    claims.setIssuedAtToNow();  // when the token was issued/created (now)\n    claims.setNotBeforeMinutesInThePast(2); // time before which the token is not yet valid (2 minutes ago)\n    claims.setSubject(\"solruser\"); // the subject/principal is whom the token is about\n    claims.setStringClaim(\"scope\", \"solr:read\"); \n    claims.setClaim(\"name\", \"Solr User\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"customPrincipal\", \"custom\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim1\", \"foo\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim2\", \"bar\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim3\", \"foo\"); // additional claims/attributes about the subject can be added\n    List<String> groups = Arrays.asList(\"group-one\", \"other-group\", \"group-three\");\n    claims.setStringListClaim(\"groups\", groups); // multi-valued claims work too and will end up as a JSON array\n    return claims;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b93409dee3306c3446b1f24bced7b660398bd3","date":1568113307,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#generateClaims().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#generateClaims().mjava","sourceNew":"  protected static JwtClaims generateClaims() {\n    JwtClaims claims = new JwtClaims();\n    claims.setIssuer(\"IDServer\");  // who creates the token and signs it\n    claims.setAudience(\"Solr\"); // to whom the token is intended to be sent\n    claims.setExpirationTimeMinutesInTheFuture(10); // time when the token will expire (10 minutes from now)\n    claims.setGeneratedJwtId(); // a unique identifier for the token\n    claims.setIssuedAtToNow();  // when the token was issued/created (now)\n    claims.setNotBeforeMinutesInThePast(2); // time before which the token is not yet valid (2 minutes ago)\n    claims.setSubject(\"solruser\"); // the subject/principal is whom the token is about\n    claims.setStringClaim(\"scope\", \"solr:read\"); \n    claims.setClaim(\"name\", \"Solr User\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"customPrincipal\", \"custom\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim1\", \"foo\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim2\", \"bar\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim3\", \"foo\"); // additional claims/attributes about the subject can be added\n    List<String> groups = Arrays.asList(\"group-one\", \"other-group\", \"group-three\");\n    claims.setStringListClaim(\"groups\", groups); // multi-valued claims work too and will end up as a JSON array\n    return claims;\n  }\n\n","sourceOld":"  static JwtClaims generateClaims() {\n    JwtClaims claims = new JwtClaims();\n    claims.setIssuer(\"IDServer\");  // who creates the token and signs it\n    claims.setAudience(\"Solr\"); // to whom the token is intended to be sent\n    claims.setExpirationTimeMinutesInTheFuture(10); // time when the token will expire (10 minutes from now)\n    claims.setGeneratedJwtId(); // a unique identifier for the token\n    claims.setIssuedAtToNow();  // when the token was issued/created (now)\n    claims.setNotBeforeMinutesInThePast(2); // time before which the token is not yet valid (2 minutes ago)\n    claims.setSubject(\"solruser\"); // the subject/principal is whom the token is about\n    claims.setStringClaim(\"scope\", \"solr:read\"); \n    claims.setClaim(\"name\", \"Solr User\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"customPrincipal\", \"custom\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim1\", \"foo\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim2\", \"bar\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim3\", \"foo\"); // additional claims/attributes about the subject can be added\n    List<String> groups = Arrays.asList(\"group-one\", \"other-group\", \"group-three\");\n    claims.setStringListClaim(\"groups\", groups); // multi-valued claims work too and will end up as a JSON array\n    return claims;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8076096f334b0665d0a69a63ee98ac09baad402b","date":1589405373,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#generateClaims().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#generateClaims().mjava","sourceNew":"  protected static JwtClaims generateClaims() {\n    JwtClaims claims = new JwtClaims();\n    claims.setIssuer(\"IDServer\");  // who creates the token and signs it\n    claims.setAudience(\"Solr\"); // to whom the token is intended to be sent\n    claims.setExpirationTimeMinutesInTheFuture(10); // time when the token will expire (10 minutes from now)\n    claims.setGeneratedJwtId(); // a unique identifier for the token\n    claims.setIssuedAtToNow();  // when the token was issued/created (now)\n    claims.setNotBeforeMinutesInThePast(2); // time before which the token is not yet valid (2 minutes ago)\n    claims.setSubject(\"solruser\"); // the subject/principal is whom the token is about\n    claims.setStringClaim(\"scope\", \"solr:read\"); \n    claims.setClaim(\"name\", \"Solr User\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"customPrincipal\", \"custom\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim1\", \"foo\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim2\", \"bar\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim3\", \"foo\"); // additional claims/attributes about the subject can be added\n    List<String> roles = Arrays.asList(\"group-one\", \"other-group\", \"group-three\");\n    claims.setStringListClaim(\"roles\", roles); // multi-valued claims work too and will end up as a JSON array\n    return claims;\n  }\n\n","sourceOld":"  protected static JwtClaims generateClaims() {\n    JwtClaims claims = new JwtClaims();\n    claims.setIssuer(\"IDServer\");  // who creates the token and signs it\n    claims.setAudience(\"Solr\"); // to whom the token is intended to be sent\n    claims.setExpirationTimeMinutesInTheFuture(10); // time when the token will expire (10 minutes from now)\n    claims.setGeneratedJwtId(); // a unique identifier for the token\n    claims.setIssuedAtToNow();  // when the token was issued/created (now)\n    claims.setNotBeforeMinutesInThePast(2); // time before which the token is not yet valid (2 minutes ago)\n    claims.setSubject(\"solruser\"); // the subject/principal is whom the token is about\n    claims.setStringClaim(\"scope\", \"solr:read\"); \n    claims.setClaim(\"name\", \"Solr User\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"customPrincipal\", \"custom\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim1\", \"foo\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim2\", \"bar\"); // additional claims/attributes about the subject can be added\n    claims.setClaim(\"claim3\", \"foo\"); // additional claims/attributes about the subject can be added\n    List<String> groups = Arrays.asList(\"group-one\", \"other-group\", \"group-three\");\n    claims.setStringListClaim(\"groups\", groups); // multi-valued claims work too and will end up as a JSON array\n    return claims;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8076096f334b0665d0a69a63ee98ac09baad402b":["43b93409dee3306c3446b1f24bced7b660398bd3"],"43b93409dee3306c3446b1f24bced7b660398bd3":["bb3e075eaa5788b2762ec235bf72b069cefe3f50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8076096f334b0665d0a69a63ee98ac09baad402b"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb3e075eaa5788b2762ec235bf72b069cefe3f50"]},"commit2Childs":{"8076096f334b0665d0a69a63ee98ac09baad402b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43b93409dee3306c3446b1f24bced7b660398bd3":["8076096f334b0665d0a69a63ee98ac09baad402b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["43b93409dee3306c3446b1f24bced7b660398bd3","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}