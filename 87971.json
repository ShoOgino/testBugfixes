{"path":"src/java/org/apache/solr/update/SolrIndexWriter.TimeLoggingPrintStream#println(String).mjava","commits":[{"id":"2e0bc4832caa5a5ed426b1618dedc1faf34f43ec","date":1246908697,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/update/SolrIndexWriter.TimeLoggingPrintStream#println(String).mjava","pathOld":"/dev/null","sourceNew":"    // We might ideally want to override print(String) as well, but\n    // looking through the code that writes to infoStream, it appears\n    // that all the classes except CheckIndex just use println.\n    public void println(String x) {\n      print(dateFormat.format(new Date()) + \" \");\n      super.println(x);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/SolrIndexWriter.TimeLoggingPrintStream#println(String).mjava","pathOld":"src/java/org/apache/solr/update/SolrIndexWriter.TimeLoggingPrintStream#println(String).mjava","sourceNew":"    // We might ideally want to override print(String) as well, but\n    // looking through the code that writes to infoStream, it appears\n    // that all the classes except CheckIndex just use println.\n    public void println(String x) {\n      print(dateFormat.format(new Date()) + \" \");\n      super.println(x);\n    }\n\n","sourceOld":"    // We might ideally want to override print(String) as well, but\n    // looking through the code that writes to infoStream, it appears\n    // that all the classes except CheckIndex just use println.\n    public void println(String x) {\n      print(dateFormat.format(new Date()) + \" \");\n      super.println(x);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["2e0bc4832caa5a5ed426b1618dedc1faf34f43ec"],"2e0bc4832caa5a5ed426b1618dedc1faf34f43ec":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2e0bc4832caa5a5ed426b1618dedc1faf34f43ec"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"2e0bc4832caa5a5ed426b1618dedc1faf34f43ec":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}