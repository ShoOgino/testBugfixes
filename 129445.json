{"path":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","commits":[{"id":"17aa383cdefa6c6eb46c3288753026d489892e36","date":1114593391,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"sandbox/contributions/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(Field.Keyword(\"key\", \"\" + (i + 1)));\n      doc.add(\n          Field.Keyword(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\"));\n      doc.add(Field.Keyword(\"date\", cal.getTime()));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), false, false);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")),false, false);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n\n    bobFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(Field.Keyword(\"key\", \"\" + (i + 1)));\n      doc.add(\n          Field.Keyword(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\"));\n      doc.add(Field.Keyword(\"date\", cal.getTime()));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), false, false);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")),false, false);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n\n    bobFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a75cb1ee01043226c4ddd67dfac4512f394f8d9","date":1142960171,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new RangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(Field.Keyword(\"key\", \"\" + (i + 1)));\n      doc.add(\n          Field.Keyword(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\"));\n      doc.add(Field.Keyword(\"date\", cal.getTime()));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), false, false);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")),false, false);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n\n    bobFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new RangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new RangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new RangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new RangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new RangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new RangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new RangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"17aa383cdefa6c6eb46c3288753026d489892e36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["30a558487f2298c2c19ceca9103c1b6865d64708"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["8a75cb1ee01043226c4ddd67dfac4512f394f8d9"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"8a75cb1ee01043226c4ddd67dfac4512f394f8d9":["17aa383cdefa6c6eb46c3288753026d489892e36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"17aa383cdefa6c6eb46c3288753026d489892e36":["8a75cb1ee01043226c4ddd67dfac4512f394f8d9"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17aa383cdefa6c6eb46c3288753026d489892e36"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["30a558487f2298c2c19ceca9103c1b6865d64708"],"8a75cb1ee01043226c4ddd67dfac4512f394f8d9":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}