{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newPolygonQuery(String,Polygon...).mjava","commits":[{"id":"95ddcac9ac08381985af6eac8f8b77ba881d4ad8","date":1459477726,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newPolygonQuery(String,Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Create a query for matching a polygon.\n   * <p>\n   * The supplied {@code polygon} must be clockwise or counter-clockwise.\n   * @param field field name. must not be null.\n   * @param polygons array of polygons. must not be null or empty\n   * @return query matching points within this polygon\n   * @throws IllegalArgumentException if {@code field} is null, {@code polygons} is null or empty\n   */\n  public static Query newPolygonQuery(String field, Polygon... polygons) {\n    return new LatLonPointInPolygonQuery(field, polygons);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"352681a18fe6681fcc339d11477454d49f299249","date":1459786417,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newPolygonQuery(String,Polygon...).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newPolygonQuery(String,Polygon...).mjava","sourceNew":"  /** \n   * Create a query for matching one or more polygons.\n   * @param field field name. must not be null.\n   * @param polygons array of polygons. must not be null or empty\n   * @return query matching points within this polygon\n   * @throws IllegalArgumentException if {@code field} is null, {@code polygons} is null or empty\n   * @see Polygon\n   */\n  public static Query newPolygonQuery(String field, Polygon... polygons) {\n    return new LatLonPointInPolygonQuery(field, polygons);\n  }\n\n","sourceOld":"  /** \n   * Create a query for matching a polygon.\n   * <p>\n   * The supplied {@code polygon} must be clockwise or counter-clockwise.\n   * @param field field name. must not be null.\n   * @param polygons array of polygons. must not be null or empty\n   * @return query matching points within this polygon\n   * @throws IllegalArgumentException if {@code field} is null, {@code polygons} is null or empty\n   */\n  public static Query newPolygonQuery(String field, Polygon... polygons) {\n    return new LatLonPointInPolygonQuery(field, polygons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newPolygonQuery(String,Polygon...).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newPolygonQuery(String,Polygon...).mjava","sourceNew":"  /** \n   * Create a query for matching one or more polygons.\n   * @param field field name. must not be null.\n   * @param polygons array of polygons. must not be null or empty\n   * @return query matching points within this polygon\n   * @throws IllegalArgumentException if {@code field} is null, {@code polygons} is null or empty\n   * @see Polygon\n   */\n  public static Query newPolygonQuery(String field, Polygon... polygons) {\n    return new LatLonPointInPolygonQuery(field, polygons);\n  }\n\n","sourceOld":"  /** \n   * Create a query for matching a polygon.\n   * <p>\n   * The supplied {@code polygon} must be clockwise or counter-clockwise.\n   * @param field field name. must not be null.\n   * @param polygons array of polygons. must not be null or empty\n   * @return query matching points within this polygon\n   * @throws IllegalArgumentException if {@code field} is null, {@code polygons} is null or empty\n   */\n  public static Query newPolygonQuery(String field, Polygon... polygons) {\n    return new LatLonPointInPolygonQuery(field, polygons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPoint#newPolygonQuery(String,Polygon...).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newPolygonQuery(String,Polygon...).mjava","sourceNew":"  /** \n   * Create a query for matching one or more polygons.\n   * @param field field name. must not be null.\n   * @param polygons array of polygons. must not be null or empty\n   * @return query matching points within this polygon\n   * @throws IllegalArgumentException if {@code field} is null, {@code polygons} is null or empty\n   * @see Polygon\n   */\n  public static Query newPolygonQuery(String field, Polygon... polygons) {\n    return new LatLonPointInPolygonQuery(field, polygons);\n  }\n\n","sourceOld":"  /** \n   * Create a query for matching one or more polygons.\n   * @param field field name. must not be null.\n   * @param polygons array of polygons. must not be null or empty\n   * @return query matching points within this polygon\n   * @throws IllegalArgumentException if {@code field} is null, {@code polygons} is null or empty\n   * @see Polygon\n   */\n  public static Query newPolygonQuery(String field, Polygon... polygons) {\n    return new LatLonPointInPolygonQuery(field, polygons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"352681a18fe6681fcc339d11477454d49f299249":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8","352681a18fe6681fcc339d11477454d49f299249"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["352681a18fe6681fcc339d11477454d49f299249"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"352681a18fe6681fcc339d11477454d49f299249":["09af2c9610ce53a4b25fd99344299b40318a4a1a","88b0212386fe531136816706dc37dc49b9dbf7dc"],"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["352681a18fe6681fcc339d11477454d49f299249","09af2c9610ce53a4b25fd99344299b40318a4a1a"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}