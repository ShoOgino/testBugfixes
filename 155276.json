{"path":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object,float).mjava","commits":[{"id":"20f76525d3996b01b8097ebb3bc088f4ddaa9e3c","date":1425864568,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object,float).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object,float).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20f76525d3996b01b8097ebb3bc088f4ddaa9e3c"],"20f76525d3996b01b8097ebb3bc088f4ddaa9e3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["20f76525d3996b01b8097ebb3bc088f4ddaa9e3c"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f76525d3996b01b8097ebb3bc088f4ddaa9e3c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f76525d3996b01b8097ebb3bc088f4ddaa9e3c"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["acd9883560fd89e6448b2b447302fe543040cd4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}