{"path":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLFormatter#highlightTerm(String,TokenGroup).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLFormatter#highlightTerm(String,TokenGroup).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLFormatter#highlightTerm(String,TokenGroup).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.Formatter#highlightTerm(java.lang.String, org.apache.lucene.search.highlight.TokenGroup)\n\t */\n\tpublic String highlightTerm(String originalText, TokenGroup tokenGroup) {\n\t  if (tokenGroup.getTotalScore() <= 0) {\n\t    return originalText;\n\t  }\n\t  \n\t  // Allocate StringBuilder with the right number of characters from the\n    // beginning, to avoid char[] allocations in the middle of appends.\n\t  StringBuilder returnBuffer = new StringBuilder(preTag.length() + originalText.length() + postTag.length());\n\t  returnBuffer.append(preTag);\n\t  returnBuffer.append(originalText);\n\t  returnBuffer.append(postTag);\n\t  return returnBuffer.toString();\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.Formatter#highlightTerm(java.lang.String, org.apache.lucene.search.highlight.TokenGroup)\n\t */\n\tpublic String highlightTerm(String originalText, TokenGroup tokenGroup) {\n\t  if (tokenGroup.getTotalScore() <= 0) {\n\t    return originalText;\n\t  }\n\t  \n\t  // Allocate StringBuilder with the right number of characters from the\n    // beginning, to avoid char[] allocations in the middle of appends.\n\t  StringBuilder returnBuffer = new StringBuilder(preTag.length() + originalText.length() + postTag.length());\n\t  returnBuffer.append(preTag);\n\t  returnBuffer.append(originalText);\n\t  returnBuffer.append(postTag);\n\t  return returnBuffer.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLFormatter#highlightTerm(String,TokenGroup).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLFormatter#highlightTerm(String,TokenGroup).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.Formatter#highlightTerm(java.lang.String, org.apache.lucene.search.highlight.TokenGroup)\n\t */\n\tpublic String highlightTerm(String originalText, TokenGroup tokenGroup) {\n\t  if (tokenGroup.getTotalScore() <= 0) {\n\t    return originalText;\n\t  }\n\t  \n\t  // Allocate StringBuilder with the right number of characters from the\n    // beginning, to avoid char[] allocations in the middle of appends.\n\t  StringBuilder returnBuffer = new StringBuilder(preTag.length() + originalText.length() + postTag.length());\n\t  returnBuffer.append(preTag);\n\t  returnBuffer.append(originalText);\n\t  returnBuffer.append(postTag);\n\t  return returnBuffer.toString();\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.Formatter#highlightTerm(java.lang.String, org.apache.lucene.search.highlight.TokenGroup)\n\t */\n\tpublic String highlightTerm(String originalText, TokenGroup tokenGroup) {\n\t  if (tokenGroup.getTotalScore() <= 0) {\n\t    return originalText;\n\t  }\n\t  \n\t  // Allocate StringBuilder with the right number of characters from the\n    // beginning, to avoid char[] allocations in the middle of appends.\n\t  StringBuilder returnBuffer = new StringBuilder(preTag.length() + originalText.length() + postTag.length());\n\t  returnBuffer.append(preTag);\n\t  returnBuffer.append(originalText);\n\t  returnBuffer.append(postTag);\n\t  return returnBuffer.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}