{"path":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, DocsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.FLAG_NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator(null);\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b","date":1497408244,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getTerms(r, \"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getTerms(r, \"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getTerms(r, \"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getFields(r).terms(\"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testNextIntoWrongField().mjava","sourceNew":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiTerms.getTerms(r, \"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","sourceOld":"  // flex: test basics of TermsEnum api on non-flex index\n  public void testNextIntoWrongField() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = oldIndexDirs.get(name);\n      IndexReader r = DirectoryReader.open(dir);\n      TermsEnum terms = MultiFields.getTerms(r, \"content\").iterator();\n      BytesRef t = terms.next();\n      assertNotNull(t);\n\n      // content field only has term aaa:\n      assertEquals(\"aaa\", t.utf8ToString());\n      assertNull(terms.next());\n\n      BytesRef aaaTerm = new BytesRef(\"aaa\");\n\n      // should be found exactly\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      // should hit end of field\n      assertEquals(TermsEnum.SeekStatus.END,\n                   terms.seekCeil(new BytesRef(\"bbb\")));\n      assertNull(terms.next());\n\n      // should seek to aaa\n      assertEquals(TermsEnum.SeekStatus.NOT_FOUND,\n                   terms.seekCeil(new BytesRef(\"a\")));\n      assertTrue(terms.term().bytesEquals(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      assertEquals(TermsEnum.SeekStatus.FOUND,\n                   terms.seekCeil(aaaTerm));\n      assertEquals(35, countDocs(TestUtil.docs(random(), terms, null, PostingsEnum.NONE)));\n      assertNull(terms.next());\n\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["28288370235ed02234a64753cdbf0c6ec096304a"],"51f5280f31484820499077f41fcdfe92d527d9dc":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"28288370235ed02234a64753cdbf0c6ec096304a":["0f4464508ee83288c8c4585b533f9faaa93aa314","e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["0f4464508ee83288c8c4585b533f9faaa93aa314","e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"28288370235ed02234a64753cdbf0c6ec096304a":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["51f5280f31484820499077f41fcdfe92d527d9dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}