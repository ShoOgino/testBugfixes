{"path":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","commits":[{"id":"657704b225b01c6ff4bada5b6667f1f60aaaad0f","date":1523436207,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","pathOld":"/dev/null","sourceNew":"  void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","pathOld":"/dev/null","sourceNew":"  void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"165c3432cb3c4fcfc8e859af24323bbbd12084af","date":1532292166,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","sourceNew":"  private void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","sourceOld":"  void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62ba8124694976baa3b03705351de238ec5d4352","date":1532295406,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","sourceNew":"  void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41ebc07bccf12a902ca6a0077910d18ee38b695f","date":1532336521,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","sourceNew":"  private void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","sourceOld":"  void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3b18b7e0f913460bf896d65b6de19fad9cdf6fb","date":1557385218,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","sourceNew":"  private void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE_NO_SCORES, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3760938294331a3fa865f76b09abc9de951da271","date":1597398332,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#checkNoPositionsMatches(Query,String,boolean[]).mjava","sourceNew":"  private void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertTrue(mi.next());\n        assertEquals(-1, mi.startPosition());\n        while (mi.next()) {\n          assertEquals(-1, mi.startPosition());\n        }\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","sourceOld":"  private void checkNoPositionsMatches(Query q, String field, boolean[] expected) throws IOException {\n    Weight w = searcher.createWeight(searcher.rewrite(q), ScoreMode.COMPLETE, 1);\n    for (int i = 0; i < expected.length; i++) {\n      LeafReaderContext ctx = searcher.leafContexts.get(ReaderUtil.subIndex(i, searcher.leafContexts));\n      int doc = i - ctx.docBase;\n      Matches matches = w.matches(ctx, doc);\n      if (expected[i]) {\n        MatchesIterator mi = matches.getMatches(field);\n        assertNull(mi);\n      }\n      else {\n        assertNull(matches);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f3b18b7e0f913460bf896d65b6de19fad9cdf6fb":["41ebc07bccf12a902ca6a0077910d18ee38b695f"],"165c3432cb3c4fcfc8e859af24323bbbd12084af":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"657704b225b01c6ff4bada5b6667f1f60aaaad0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3760938294331a3fa865f76b09abc9de951da271":["f3b18b7e0f913460bf896d65b6de19fad9cdf6fb"],"62ba8124694976baa3b03705351de238ec5d4352":["165c3432cb3c4fcfc8e859af24323bbbd12084af"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","657704b225b01c6ff4bada5b6667f1f60aaaad0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3760938294331a3fa865f76b09abc9de951da271"],"41ebc07bccf12a902ca6a0077910d18ee38b695f":["62ba8124694976baa3b03705351de238ec5d4352"]},"commit2Childs":{"f3b18b7e0f913460bf896d65b6de19fad9cdf6fb":["3760938294331a3fa865f76b09abc9de951da271"],"165c3432cb3c4fcfc8e859af24323bbbd12084af":["62ba8124694976baa3b03705351de238ec5d4352"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["657704b225b01c6ff4bada5b6667f1f60aaaad0f","43345f1452f9510f8aaadae6156fe0c834e7d957"],"657704b225b01c6ff4bada5b6667f1f60aaaad0f":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"3760938294331a3fa865f76b09abc9de951da271":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["165c3432cb3c4fcfc8e859af24323bbbd12084af"],"62ba8124694976baa3b03705351de238ec5d4352":["41ebc07bccf12a902ca6a0077910d18ee38b695f"],"41ebc07bccf12a902ca6a0077910d18ee38b695f":["f3b18b7e0f913460bf896d65b6de19fad9cdf6fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}