{"path":"lucene/core/src/java/org/apache/lucene/index/FreqProxFields.FreqProxPostingsEnum#nextDoc().mjava","commits":[{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxFields.FreqProxPostingsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxFields.FreqProxDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      while (posLeft != 0) {\n        nextPosition();\n      }\n\n      if (reader.eof()) {\n        if (ended) {\n          return NO_MORE_DOCS;\n        } else {\n          ended = true;\n          docID = postingsArray.lastDocIDs[termID];\n          freq = postingsArray.termFreqs[termID];\n        }\n      } else {\n        int code = reader.readVInt();\n        docID += code >>> 1;\n        if ((code & 1) != 0) {\n          freq = 1;\n        } else {\n          freq = reader.readVInt();\n        }\n\n        assert docID != postingsArray.lastDocIDs[termID];\n      }\n\n      posLeft = freq;\n      pos = 0;\n      startOffset = 0;\n      return docID;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      while (posLeft != 0) {\n        nextPosition();\n      }\n\n      if (reader.eof()) {\n        if (ended) {\n          return NO_MORE_DOCS;\n        } else {\n          ended = true;\n          docID = postingsArray.lastDocIDs[termID];\n          freq = postingsArray.termFreqs[termID];\n        }\n      } else {\n        int code = reader.readVInt();\n        docID += code >>> 1;\n        if ((code & 1) != 0) {\n          freq = 1;\n        } else {\n          freq = reader.readVInt();\n        }\n\n        assert docID != postingsArray.lastDocIDs[termID];\n      }\n\n      posLeft = freq;\n      pos = 0;\n      startOffset = 0;\n      return docID;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxFields.FreqProxPostingsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxFields.FreqProxPostingsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      if (docID == -1) {\n        docID = 0;\n      }\n      while (posLeft != 0) {\n        nextPosition();\n      }\n\n      if (reader.eof()) {\n        if (ended) {\n          return NO_MORE_DOCS;\n        } else {\n          ended = true;\n          docID = postingsArray.lastDocIDs[termID];\n          freq = postingsArray.termFreqs[termID];\n        }\n      } else {\n        int code = reader.readVInt();\n        docID += code >>> 1;\n        if ((code & 1) != 0) {\n          freq = 1;\n        } else {\n          freq = reader.readVInt();\n        }\n\n        assert docID != postingsArray.lastDocIDs[termID];\n      }\n\n      posLeft = freq;\n      pos = 0;\n      startOffset = 0;\n      return docID;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      while (posLeft != 0) {\n        nextPosition();\n      }\n\n      if (reader.eof()) {\n        if (ended) {\n          return NO_MORE_DOCS;\n        } else {\n          ended = true;\n          docID = postingsArray.lastDocIDs[termID];\n          freq = postingsArray.termFreqs[termID];\n        }\n      } else {\n        int code = reader.readVInt();\n        docID += code >>> 1;\n        if ((code & 1) != 0) {\n          freq = 1;\n        } else {\n          freq = reader.readVInt();\n        }\n\n        assert docID != postingsArray.lastDocIDs[termID];\n      }\n\n      posLeft = freq;\n      pos = 0;\n      startOffset = 0;\n      return docID;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxFields.FreqProxPostingsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxFields.FreqProxPostingsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      if (docID == -1) {\n        docID = 0;\n      }\n      while (posLeft != 0) {\n        nextPosition();\n      }\n\n      if (reader.eof()) {\n        if (ended) {\n          return NO_MORE_DOCS;\n        } else {\n          ended = true;\n          docID = postingsArray.lastDocIDs[termID];\n          freq = postingsArray.termFreqs[termID];\n        }\n      } else {\n        int code = reader.readVInt();\n        docID += code >>> 1;\n        if ((code & 1) != 0) {\n          freq = 1;\n        } else {\n          freq = reader.readVInt();\n        }\n\n        assert docID != postingsArray.lastDocIDs[termID];\n      }\n\n      posLeft = freq;\n      pos = 0;\n      startOffset = 0;\n      return docID;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      while (posLeft != 0) {\n        nextPosition();\n      }\n\n      if (reader.eof()) {\n        if (ended) {\n          return NO_MORE_DOCS;\n        } else {\n          ended = true;\n          docID = postingsArray.lastDocIDs[termID];\n          freq = postingsArray.termFreqs[termID];\n        }\n      } else {\n        int code = reader.readVInt();\n        docID += code >>> 1;\n        if ((code & 1) != 0) {\n          freq = 1;\n        } else {\n          freq = reader.readVInt();\n        }\n\n        assert docID != postingsArray.lastDocIDs[termID];\n      }\n\n      posLeft = freq;\n      pos = 0;\n      startOffset = 0;\n      return docID;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["51f5280f31484820499077f41fcdfe92d527d9dc","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["51f5280f31484820499077f41fcdfe92d527d9dc"],"51f5280f31484820499077f41fcdfe92d527d9dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e8715d826e588419327562287d5d6a8040d63d6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51f5280f31484820499077f41fcdfe92d527d9dc"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3e8715d826e588419327562287d5d6a8040d63d6":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"51f5280f31484820499077f41fcdfe92d527d9dc":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}