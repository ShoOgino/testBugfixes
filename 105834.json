{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","commits":[{"id":"97f74f84954e9fefbac4cb38b9bf339e1757600d","date":1533750605,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","pathOld":"/dev/null","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return queryContains(t, 0) && queryContains(t, 1) && queryContains(t, 2);\n    }\n    return queryIntersects(t);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e48f589a9604e11db23a025a27efbf3d14ab4e3b","date":1539887418,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return queryContains(aX, aY) && queryContains(bX, bY) && queryContains(cX, cY);\n    }\n    return queryMatches(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return queryContains(t, 0) && queryContains(t, 1) && queryContains(t, 2);\n    }\n    return queryIntersects(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4fccad460342b1af30cb328cc8297751a218d78","date":1541177339,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return bboxContainsTriangle(aX, aY, bX, bY, cX, cY, minX, maxX, minY, maxY);\n    }\n    return queryMatches(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return queryContains(aX, aY) && queryContains(bX, bY) && queryContains(cX, cY);\n    }\n    return queryMatches(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d85f0b2ceb48a48bf5a30d72b477bd21fdf9686d","date":1541178922,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    // decode indexed triangle\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return queryContainsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return queryMatches(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return bboxContainsTriangle(aX, aY, bX, bY, cX, cY, minX, maxX, minY, maxY);\n    }\n    return queryMatches(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9feee35369998c08f5168e0808e67e09857d5bac","date":1544618795,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    // decode indexed triangle\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    // decode indexed triangle\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return queryContainsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return queryMatches(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2aeefba8262036d422d639e48c49d51316bea138","date":1545148224,"type":5,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle) {\n    // decode indexed triangle\n    LatLonShape.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    // decode indexed triangle\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e48f589a9604e11db23a025a27efbf3d14ab4e3b":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"2aeefba8262036d422d639e48c49d51316bea138":["9feee35369998c08f5168e0808e67e09857d5bac"],"9feee35369998c08f5168e0808e67e09857d5bac":["d85f0b2ceb48a48bf5a30d72b477bd21fdf9686d"],"d85f0b2ceb48a48bf5a30d72b477bd21fdf9686d":["e4fccad460342b1af30cb328cc8297751a218d78"],"97f74f84954e9fefbac4cb38b9bf339e1757600d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4fccad460342b1af30cb328cc8297751a218d78":["e48f589a9604e11db23a025a27efbf3d14ab4e3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2aeefba8262036d422d639e48c49d51316bea138"]},"commit2Childs":{"e48f589a9604e11db23a025a27efbf3d14ab4e3b":["e4fccad460342b1af30cb328cc8297751a218d78"],"2aeefba8262036d422d639e48c49d51316bea138":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9feee35369998c08f5168e0808e67e09857d5bac":["2aeefba8262036d422d639e48c49d51316bea138"],"d85f0b2ceb48a48bf5a30d72b477bd21fdf9686d":["9feee35369998c08f5168e0808e67e09857d5bac"],"97f74f84954e9fefbac4cb38b9bf339e1757600d":["e48f589a9604e11db23a025a27efbf3d14ab4e3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"e4fccad460342b1af30cb328cc8297751a218d78":["d85f0b2ceb48a48bf5a30d72b477bd21fdf9686d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}