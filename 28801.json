{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","commits":[{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean,float).mjava","sourceNew":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.scoreMode = scoreMode;\n    this.similarity = searcher.getSimilarity(scoreMode.needsScores());\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), c.isScoring() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, boost);\n      weights.add(w);\n    }\n  }\n\n","sourceOld":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = needsScores;\n    this.similarity = searcher.getSimilarity(needsScores);\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), needsScores && c.isScoring(), boost);\n      weights.add(w);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean,float).mjava","sourceNew":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.scoreMode = scoreMode;\n    this.similarity = searcher.getSimilarity(scoreMode.needsScores());\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), c.isScoring() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, boost);\n      weights.add(w);\n    }\n  }\n\n","sourceOld":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = needsScores;\n    this.similarity = searcher.getSimilarity(needsScores);\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), needsScores && c.isScoring(), boost);\n      weights.add(w);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","sourceNew":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.scoreMode = scoreMode;\n    this.similarity = searcher.getSimilarity();\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), c.isScoring() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, boost);\n      weights.add(w);\n    }\n  }\n\n","sourceOld":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.scoreMode = scoreMode;\n    this.similarity = searcher.getSimilarity(scoreMode.needsScores());\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), c.isScoring() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, boost);\n      weights.add(w);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","sourceNew":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.scoreMode = scoreMode;\n    this.similarity = searcher.getSimilarity();\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), c.isScoring() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, boost);\n      weights.add(w);\n    }\n  }\n\n","sourceOld":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.scoreMode = scoreMode;\n    this.similarity = searcher.getSimilarity(scoreMode.needsScores());\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), c.isScoring() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, boost);\n      weights.add(w);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a13f208db1e7d2e6004f070428b8dc9f533a14c","date":1561708237,"type":3,"author":"Sven Amann","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,ScoreMode,float).mjava","sourceNew":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.scoreMode = scoreMode;\n    this.similarity = searcher.getSimilarity();\n    weightedClauses = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), c.isScoring() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, boost);\n      weightedClauses.add(new WeightedBooleanClause(c, w));\n    }\n  }\n\n","sourceOld":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.scoreMode = scoreMode;\n    this.similarity = searcher.getSimilarity();\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), c.isScoring() ? scoreMode : ScoreMode.COMPLETE_NO_SCORES, boost);\n      weights.add(w);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["417142ff08fda9cf0b72d5133e63097a166c6458","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a13f208db1e7d2e6004f070428b8dc9f533a14c":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a13f208db1e7d2e6004f070428b8dc9f533a14c"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["3a13f208db1e7d2e6004f070428b8dc9f533a14c"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"3a13f208db1e7d2e6004f070428b8dc9f533a14c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"417142ff08fda9cf0b72d5133e63097a166c6458":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}