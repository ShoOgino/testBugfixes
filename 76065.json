{"path":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#humanReadableUnits(long,DecimalFormat).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#humanReadableUnits(long,DecimalFormat).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/RamUsageEstimator#humanReadableUnits(long,DecimalFormat).mjava","sourceNew":"  /**\n   * Return good default units based on byte size.\n   */\n  public static String humanReadableUnits(long bytes, DecimalFormat df) {\n    String newSizeAndUnits;\n\n    if (bytes / ONE_GB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_GB))\n          + \" GB\";\n    } else if (bytes / ONE_MB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_MB))\n          + \" MB\";\n    } else if (bytes / ONE_KB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_KB))\n          + \" KB\";\n    } else {\n      newSizeAndUnits = String.valueOf(bytes) + \" bytes\";\n    }\n\n    return newSizeAndUnits;\n  }\n\n","sourceOld":"  /**\n   * Return good default units based on byte size.\n   */\n  public static String humanReadableUnits(long bytes, DecimalFormat df) {\n    String newSizeAndUnits;\n\n    if (bytes / ONE_GB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_GB))\n          + \" GB\";\n    } else if (bytes / ONE_MB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_MB))\n          + \" MB\";\n    } else if (bytes / ONE_KB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_KB))\n          + \" KB\";\n    } else {\n      newSizeAndUnits = String.valueOf(bytes) + \" bytes\";\n    }\n\n    return newSizeAndUnits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd6c9e9b1251473f465b0443b56046b2658402da","date":1332082750,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#humanReadableUnits(long,DecimalFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#humanReadableUnits(long,DecimalFormat).mjava","sourceNew":"  /**\n   * Returns <code>size</code> in human-readable units (GB, MB, KB or bytes). \n   */\n  public static String humanReadableUnits(long bytes, DecimalFormat df) {\n    if (bytes / ONE_GB > 0) {\n      return df.format((float) bytes / ONE_GB) + \" GB\";\n    } else if (bytes / ONE_MB > 0) {\n      return df.format((float) bytes / ONE_MB) + \" MB\";\n    } else if (bytes / ONE_KB > 0) {\n      return df.format((float) bytes / ONE_KB) + \" KB\";\n    } else {\n      return bytes + \" bytes\";\n    }\n  }\n\n","sourceOld":"  /**\n   * Return good default units based on byte size.\n   */\n  public static String humanReadableUnits(long bytes, DecimalFormat df) {\n    String newSizeAndUnits;\n\n    if (bytes / ONE_GB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_GB))\n          + \" GB\";\n    } else if (bytes / ONE_MB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_MB))\n          + \" MB\";\n    } else if (bytes / ONE_KB > 0) {\n      newSizeAndUnits = String.valueOf(df.format((float) bytes / ONE_KB))\n          + \" KB\";\n    } else {\n      newSizeAndUnits = String.valueOf(bytes) + \" bytes\";\n    }\n\n    return newSizeAndUnits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd6c9e9b1251473f465b0443b56046b2658402da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd6c9e9b1251473f465b0443b56046b2658402da"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["dd6c9e9b1251473f465b0443b56046b2658402da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"dd6c9e9b1251473f465b0443b56046b2658402da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}