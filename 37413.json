{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEnglishLowerCase().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEnglishLowerCase().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEnglishLowerCase().mjava","sourceNew":"  /**\n   * Test english lowercasing. Test both cases (pre-3.1 and post-3.1) to ensure\n   * we lowercase I correct for non-Turkish languages in either case.\n   */\n  public void testEnglishLowerCase() throws Exception {\n    Analyzer a = new SnowballAnalyzer(TEST_VERSION_CURRENT, \"English\");\n    assertAnalyzesTo(a, \"cryogenic\", new String[] { \"cryogen\" });\n    assertAnalyzesTo(a, \"CRYOGENIC\", new String[] { \"cryogen\" });\n    \n    Analyzer b = new SnowballAnalyzer(Version.LUCENE_30, \"English\");\n    assertAnalyzesTo(b, \"cryogenic\", new String[] { \"cryogen\" });\n    assertAnalyzesTo(b, \"CRYOGENIC\", new String[] { \"cryogen\" });\n  }\n\n","sourceOld":"  /**\n   * Test english lowercasing. Test both cases (pre-3.1 and post-3.1) to ensure\n   * we lowercase I correct for non-Turkish languages in either case.\n   */\n  public void testEnglishLowerCase() throws Exception {\n    Analyzer a = new SnowballAnalyzer(TEST_VERSION_CURRENT, \"English\");\n    assertAnalyzesTo(a, \"cryogenic\", new String[] { \"cryogen\" });\n    assertAnalyzesTo(a, \"CRYOGENIC\", new String[] { \"cryogen\" });\n    \n    Analyzer b = new SnowballAnalyzer(Version.LUCENE_30, \"English\");\n    assertAnalyzesTo(b, \"cryogenic\", new String[] { \"cryogen\" });\n    assertAnalyzesTo(b, \"CRYOGENIC\", new String[] { \"cryogen\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEnglishLowerCase().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testEnglishLowerCase().mjava","sourceNew":"  /**\n   * Test english lowercasing. Test both cases (pre-3.1 and post-3.1) to ensure\n   * we lowercase I correct for non-Turkish languages in either case.\n   */\n  public void testEnglishLowerCase() throws Exception {\n    Analyzer a = new SnowballAnalyzer(TEST_VERSION_CURRENT, \"English\");\n    assertAnalyzesTo(a, \"cryogenic\", new String[] { \"cryogen\" });\n    assertAnalyzesTo(a, \"CRYOGENIC\", new String[] { \"cryogen\" });\n    \n    Analyzer b = new SnowballAnalyzer(Version.LUCENE_30, \"English\");\n    assertAnalyzesTo(b, \"cryogenic\", new String[] { \"cryogen\" });\n    assertAnalyzesTo(b, \"CRYOGENIC\", new String[] { \"cryogen\" });\n  }\n\n","sourceOld":"  /**\n   * Test english lowercasing. Test both cases (pre-3.1 and post-3.1) to ensure\n   * we lowercase I correct for non-Turkish languages in either case.\n   */\n  public void testEnglishLowerCase() throws Exception {\n    Analyzer a = new SnowballAnalyzer(TEST_VERSION_CURRENT, \"English\");\n    assertAnalyzesTo(a, \"cryogenic\", new String[] { \"cryogen\" });\n    assertAnalyzesTo(a, \"CRYOGENIC\", new String[] { \"cryogen\" });\n    \n    Analyzer b = new SnowballAnalyzer(Version.LUCENE_30, \"English\");\n    assertAnalyzesTo(b, \"cryogenic\", new String[] { \"cryogen\" });\n    assertAnalyzesTo(b, \"CRYOGENIC\", new String[] { \"cryogen\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}