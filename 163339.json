{"path":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,Term...).mjava","commits":[{"id":"f8ac81480868d6bcd251ab080a87395b9e23d7c7","date":1429050381,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,Term...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,int,Term...).mjava","sourceNew":"    public PostingsAndFreq(PostingsEnum postings, int position, Term... terms) {\n      this.postings = postings;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","sourceOld":"    public PostingsAndFreq(PostingsEnum postings, int docFreq, int position, Term... terms) {\n      this.postings = postings;\n      this.docFreq = docFreq;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d5e43895c6f1bdbf4f7260372c0526309ea78ee","date":1429052573,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,int,Term...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,Term...).mjava","sourceNew":"    public PostingsAndFreq(PostingsEnum postings, int docFreq, int position, Term... terms) {\n      this.postings = postings;\n      this.docFreq = docFreq;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","sourceOld":"    public PostingsAndFreq(PostingsEnum postings, int position, Term... terms) {\n      this.postings = postings;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c74000f48f15dd52e66dc2f279abd04cb226ed2","date":1429059243,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,Term...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,int,Term...).mjava","sourceNew":"    public PostingsAndFreq(PostingsEnum postings, int position, Term... terms) {\n      this.postings = postings;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","sourceOld":"    public PostingsAndFreq(PostingsEnum postings, int docFreq, int position, Term... terms) {\n      this.postings = postings;\n      this.docFreq = docFreq;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8dd25829321d66cd54ea7d40a4130e0d2a29bec","date":1562680889,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,ImpactsEnum,int,Term...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,Term...).mjava","sourceNew":"    public PostingsAndFreq(PostingsEnum postings, ImpactsEnum impacts, int position, Term... terms) {\n      this.postings = postings;\n      this.impacts = impacts;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","sourceOld":"    public PostingsAndFreq(PostingsEnum postings, int position, Term... terms) {\n      this.postings = postings;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d5e43895c6f1bdbf4f7260372c0526309ea78ee":["f8ac81480868d6bcd251ab080a87395b9e23d7c7"],"f8dd25829321d66cd54ea7d40a4130e0d2a29bec":["4c74000f48f15dd52e66dc2f279abd04cb226ed2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8ac81480868d6bcd251ab080a87395b9e23d7c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4c74000f48f15dd52e66dc2f279abd04cb226ed2":["6d5e43895c6f1bdbf4f7260372c0526309ea78ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8dd25829321d66cd54ea7d40a4130e0d2a29bec"]},"commit2Childs":{"6d5e43895c6f1bdbf4f7260372c0526309ea78ee":["4c74000f48f15dd52e66dc2f279abd04cb226ed2"],"f8dd25829321d66cd54ea7d40a4130e0d2a29bec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f8ac81480868d6bcd251ab080a87395b9e23d7c7"],"f8ac81480868d6bcd251ab080a87395b9e23d7c7":["6d5e43895c6f1bdbf4f7260372c0526309ea78ee"],"4c74000f48f15dd52e66dc2f279abd04cb226ed2":["f8dd25829321d66cd54ea7d40a4130e0d2a29bec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}