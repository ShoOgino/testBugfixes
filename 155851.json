{"path":"solr/core/src/java/org/apache/solr/SolrLogFormatter#format(LogRecord).mjava","commits":[{"id":"f8f7907798e0c730e9ab37681c6e8dfbde0e4173","date":1330361299,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/SolrLogFormatter#format(LogRecord).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String format(LogRecord record) {\n    try {\n      return _format(record);\n    } catch (Throwable th) {\n      // logging swallows exceptions, so if we hit an exception we need to convert it to a string to see it\n      return \"ERROR IN SolrLogFormatter! original message:\" + record.getMessage() + \"\\n\\tException: \" + SolrException.toStr(th);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/SolrLogFormatter#format(LogRecord).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String format(LogRecord record) {\n    try {\n      return _format(record);\n    } catch (Throwable th) {\n      // logging swallows exceptions, so if we hit an exception we need to convert it to a string to see it\n      return \"ERROR IN SolrLogFormatter! original message:\" + record.getMessage() + \"\\n\\tException: \" + SolrException.toStr(th);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2","date":1389633998,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/SolrLogFormatter#format(LogRecord).mjava","pathOld":"solr/core/src/java/org/apache/solr/SolrLogFormatter#format(LogRecord).mjava","sourceNew":"  @Override\n  public String format(LogRecord record) {\n    try {\n      return _format(record);\n    } catch (Exception e) {\n      // logging swallows exceptions, so if we hit an exception we need to convert it to a string to see it\n      return \"ERROR IN SolrLogFormatter! original message:\" + record.getMessage() + \"\\n\\tException: \" + SolrException.toStr(e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public String format(LogRecord record) {\n    try {\n      return _format(record);\n    } catch (Throwable th) {\n      // logging swallows exceptions, so if we hit an exception we need to convert it to a string to see it\n      return \"ERROR IN SolrLogFormatter! original message:\" + record.getMessage() + \"\\n\\tException: \" + SolrException.toStr(th);\n    }\n  }\n\n","bugFix":["f8f7907798e0c730e9ab37681c6e8dfbde0e4173"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"439c63ae5d22132fca810a0029a854e97d2c1a3e","date":1432733612,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/SolrLogFormatter#format(LogRecord).mjava","sourceNew":null,"sourceOld":"  @Override\n  public String format(LogRecord record) {\n    try {\n      return _format(record);\n    } catch (Exception e) {\n      // logging swallows exceptions, so if we hit an exception we need to convert it to a string to see it\n      return \"ERROR IN SolrLogFormatter! original message:\" + record.getMessage() + \"\\n\\tException: \" + SolrException.toStr(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f8f7907798e0c730e9ab37681c6e8dfbde0e4173":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8f7907798e0c730e9ab37681c6e8dfbde0e4173"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["f8f7907798e0c730e9ab37681c6e8dfbde0e4173"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["439c63ae5d22132fca810a0029a854e97d2c1a3e"],"439c63ae5d22132fca810a0029a854e97d2c1a3e":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"]},"commit2Childs":{"f8f7907798e0c730e9ab37681c6e8dfbde0e4173":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f8f7907798e0c730e9ab37681c6e8dfbde0e4173","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["439c63ae5d22132fca810a0029a854e97d2c1a3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"439c63ae5d22132fca810a0029a854e97d2c1a3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}