{"path":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredTopScorer(AtomicReaderContext,Weight,boolean,DocIdSet).mjava","commits":[{"id":"f5a7a379c47cb10a09ea1ff0b2460819a73c5988","date":1394142503,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredTopScorer(AtomicReaderContext,Weight,boolean,DocIdSet).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public TopScorer filteredTopScorer(final AtomicReaderContext context,\n        Weight weight,\n        boolean scoreDocsInOrder, // ignored (we always top-score in order)\n        DocIdSet docIdSet) throws IOException {\n      Bits filterAcceptDocs = docIdSet.bits();\n      if (filterAcceptDocs == null) {\n        // Filter does not provide random-access Bits; we\n        // must fallback to leapfrog:\n        return LEAP_FROG_QUERY_FIRST_STRATEGY.filteredTopScorer(context, weight, scoreDocsInOrder, docIdSet);\n      }\n      final Scorer scorer = weight.scorer(context, null);\n      return scorer == null ? null : new QueryFirstTopScorer(scorer, filterAcceptDocs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5794e5c995c57444b154b01a9f3c837cd530a77","date":1394190201,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredBulkScorer(AtomicReaderContext,Weight,boolean,DocIdSet).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredTopScorer(AtomicReaderContext,Weight,boolean,DocIdSet).mjava","sourceNew":"    @Override\n    public BulkScorer filteredBulkScorer(final AtomicReaderContext context,\n        Weight weight,\n        boolean scoreDocsInOrder, // ignored (we always top-score in order)\n        DocIdSet docIdSet) throws IOException {\n      Bits filterAcceptDocs = docIdSet.bits();\n      if (filterAcceptDocs == null) {\n        // Filter does not provide random-access Bits; we\n        // must fallback to leapfrog:\n        return LEAP_FROG_QUERY_FIRST_STRATEGY.filteredBulkScorer(context, weight, scoreDocsInOrder, docIdSet);\n      }\n      final Scorer scorer = weight.scorer(context, null);\n      return scorer == null ? null : new QueryFirstBulkScorer(scorer, filterAcceptDocs);\n    }\n\n","sourceOld":"    @Override\n    public TopScorer filteredTopScorer(final AtomicReaderContext context,\n        Weight weight,\n        boolean scoreDocsInOrder, // ignored (we always top-score in order)\n        DocIdSet docIdSet) throws IOException {\n      Bits filterAcceptDocs = docIdSet.bits();\n      if (filterAcceptDocs == null) {\n        // Filter does not provide random-access Bits; we\n        // must fallback to leapfrog:\n        return LEAP_FROG_QUERY_FIRST_STRATEGY.filteredTopScorer(context, weight, scoreDocsInOrder, docIdSet);\n      }\n      final Scorer scorer = weight.scorer(context, null);\n      return scorer == null ? null : new QueryFirstTopScorer(scorer, filterAcceptDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f5a7a379c47cb10a09ea1ff0b2460819a73c5988":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5794e5c995c57444b154b01a9f3c837cd530a77":["f5a7a379c47cb10a09ea1ff0b2460819a73c5988"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f5a7a379c47cb10a09ea1ff0b2460819a73c5988":["a5794e5c995c57444b154b01a9f3c837cd530a77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f5a7a379c47cb10a09ea1ff0b2460819a73c5988","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5794e5c995c57444b154b01a9f3c837cd530a77":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a5794e5c995c57444b154b01a9f3c837cd530a77","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}