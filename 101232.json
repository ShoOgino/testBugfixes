{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","commits":[{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a9a95db9416e75497c862dda290648d8dfdc83f","date":1252550690,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, new Object[]{BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())}), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08","date":1254612983,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, new Object[]{BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())}), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/BooleanQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = booleanNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, getModifierValue(child));\n\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, BooleanQuery\n                    .getMaxClauseCount(), queryNode\n                    .toQueryString(new EscapeQuerySyntaxImpl())), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a9a95db9416e75497c862dda290648d8dfdc83f":["e8a848e758754282137f42bf85793c278e250390"],"e8a848e758754282137f42bf85793c278e250390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08":["9a9a95db9416e75497c862dda290648d8dfdc83f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08"]},"commit2Childs":{"9a9a95db9416e75497c862dda290648d8dfdc83f":["c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08"],"e8a848e758754282137f42bf85793c278e250390":["9a9a95db9416e75497c862dda290648d8dfdc83f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8a848e758754282137f42bf85793c278e250390"],"c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}