{"path":"src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#close().mjava","commits":[{"id":"d34c8b8a760c050d0e5c4b802584b3de2002e431","date":1220117586,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#close().mjava","pathOld":"/dev/null","sourceNew":"    public void close() throws IOException {\n      if (!isClone && file.isOpen) {\n        // Close the channel & file\n        try {\n          channel.close();\n        } finally {\n          file.close();\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#close().mjava","pathOld":"src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!isClone && file.isOpen) {\n        // Close the channel & file\n        try {\n          channel.close();\n        } finally {\n          file.close();\n        }\n      }\n    }\n\n","sourceOld":"    public void close() throws IOException {\n      if (!isClone && file.isOpen) {\n        // Close the channel & file\n        try {\n          channel.close();\n        } finally {\n          file.close();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#close().mjava","pathOld":"src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!isClone && file.isOpen) {\n        // Close the channel & file\n        try {\n          channel.close();\n        } finally {\n          file.close();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!isClone && file.isOpen) {\n        // Close the channel & file\n        try {\n          channel.close();\n        } finally {\n          file.close();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a9e385641d717e641408d8fbbc62be8fc766357":["d34c8b8a760c050d0e5c4b802584b3de2002e431"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d34c8b8a760c050d0e5c4b802584b3de2002e431":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d34c8b8a760c050d0e5c4b802584b3de2002e431"],"d34c8b8a760c050d0e5c4b802584b3de2002e431":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}