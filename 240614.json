{"path":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","commits":[{"id":"fb141d31bad018fca450f2166f0981b8f4c16e89","date":1419362004,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","pathOld":"/dev/null","sourceNew":"  private static String getSortDescription(LeafReader reader)  {\n    if (reader instanceof SegmentReader) {\n      final SegmentReader segReader = (SegmentReader) reader;\n      final Map<String, String> diagnostics = segReader.getSegmentInfo().info.getDiagnostics();\n      if (diagnostics != null) {\n        return diagnostics.get(SORTER_ID_PROP);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff0a9c7bbae145588b269529bb55009dec1bb733","date":1438605556,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","sourceNew":"  private static String getSortDescription(LeafReader reader)  {\n    if (reader instanceof SegmentReader) {\n      final SegmentReader segReader = (SegmentReader) reader;\n      final Map<String, String> diagnostics = segReader.getSegmentInfo().info.getDiagnostics();\n      if (diagnostics != null) {\n        return diagnostics.get(SORTER_ID_PROP);\n      }\n    } else if (reader instanceof FilterLeafReader) {\n      return getSortDescription(FilterLeafReader.unwrap(reader));\n    }\n    return null;\n  }\n\n","sourceOld":"  private static String getSortDescription(LeafReader reader)  {\n    if (reader instanceof SegmentReader) {\n      final SegmentReader segReader = (SegmentReader) reader;\n      final Map<String, String> diagnostics = segReader.getSegmentInfo().info.getDiagnostics();\n      if (diagnostics != null) {\n        return diagnostics.get(SORTER_ID_PROP);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","sourceNew":null,"sourceOld":"  private static String getSortDescription(LeafReader reader)  {\n    if (reader instanceof SegmentReader) {\n      final SegmentReader segReader = (SegmentReader) reader;\n      final Map<String, String> diagnostics = segReader.getSegmentInfo().info.getDiagnostics();\n      if (diagnostics != null) {\n        return diagnostics.get(SORTER_ID_PROP);\n      }\n    } else if (reader instanceof FilterLeafReader) {\n      return getSortDescription(FilterLeafReader.unwrap(reader));\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":4,"author":"Mike McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","sourceNew":null,"sourceOld":"  private static String getSortDescription(LeafReader reader)  {\n    if (reader instanceof SegmentReader) {\n      final SegmentReader segReader = (SegmentReader) reader;\n      final Map<String, String> diagnostics = segReader.getSegmentInfo().info.getDiagnostics();\n      if (diagnostics != null) {\n        return diagnostics.get(SORTER_ID_PROP);\n      }\n    } else if (reader instanceof FilterLeafReader) {\n      return getSortDescription(FilterLeafReader.unwrap(reader));\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","sourceNew":null,"sourceOld":"  private static String getSortDescription(LeafReader reader)  {\n    if (reader instanceof SegmentReader) {\n      final SegmentReader segReader = (SegmentReader) reader;\n      final Map<String, String> diagnostics = segReader.getSegmentInfo().info.getDiagnostics();\n      if (diagnostics != null) {\n        return diagnostics.get(SORTER_ID_PROP);\n      }\n    } else if (reader instanceof FilterLeafReader) {\n      return getSortDescription(FilterLeafReader.unwrap(reader));\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","sourceNew":null,"sourceOld":"  private static String getSortDescription(LeafReader reader)  {\n    if (reader instanceof SegmentReader) {\n      final SegmentReader segReader = (SegmentReader) reader;\n      final Map<String, String> diagnostics = segReader.getSegmentInfo().info.getDiagnostics();\n      if (diagnostics != null) {\n        return diagnostics.get(SORTER_ID_PROP);\n      }\n    } else if (reader instanceof FilterLeafReader) {\n      return getSortDescription(FilterLeafReader.unwrap(reader));\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#getSortDescription(LeafReader).mjava","sourceNew":null,"sourceOld":"  private static String getSortDescription(LeafReader reader)  {\n    if (reader instanceof SegmentReader) {\n      final SegmentReader segReader = (SegmentReader) reader;\n      final Map<String, String> diagnostics = segReader.getSegmentInfo().info.getDiagnostics();\n      if (diagnostics != null) {\n        return diagnostics.get(SORTER_ID_PROP);\n      }\n    } else if (reader instanceof FilterLeafReader) {\n      return getSortDescription(FilterLeafReader.unwrap(reader));\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb141d31bad018fca450f2166f0981b8f4c16e89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["ff0a9c7bbae145588b269529bb55009dec1bb733"],"ff0a9c7bbae145588b269529bb55009dec1bb733":["fb141d31bad018fca450f2166f0981b8f4c16e89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["ff0a9c7bbae145588b269529bb55009dec1bb733","3d33e731a93d4b57e662ff094f64f94a745422d4"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["ff0a9c7bbae145588b269529bb55009dec1bb733","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ff0a9c7bbae145588b269529bb55009dec1bb733","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["ff0a9c7bbae145588b269529bb55009dec1bb733","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"fb141d31bad018fca450f2166f0981b8f4c16e89":["ff0a9c7bbae145588b269529bb55009dec1bb733"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"ff0a9c7bbae145588b269529bb55009dec1bb733":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70","0ad30c6a479e764150a3316e57263319775f1df2","3d33e731a93d4b57e662ff094f64f94a745422d4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb141d31bad018fca450f2166f0981b8f4c16e89"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}