{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacetsWithTz(String,boolean).mjava","commits":[{"id":"b3c7501e15f71c01b69ba22749b192827fa2019b","date":1335285341,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacetsWithTz(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void helpTestDateFacetsWithTz(final String fieldName,\n                                        final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    final String TZ = \"America/Los_Angeles\";\n    assumeTrue(\"Test requires JVM to know about about TZ: \" + TZ,\n               TimeZoneUtils.KNOWN_TIMEZONE_IDS.contains(TZ)); \n\n    assertQ(\"checking facet counts for fixed now, using TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"205078333000\" // 1976-07-01T14:12:13.000Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 15 : 18)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-04T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-05T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-06T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T07:00:00Z'][.='1'  ]\"\n            //\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='7']\"\n            );\n\n    // NOTE: the counts should all be zero, what we really care about\n    // is that the computed lower bounds take into account DST change\n    assertQ(\"checking facet counts arround DST change for TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"1288606136000\" // 2010-11-01T10:08:56.235Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 15 : 18)+\"]\"\n            ,pre+\"/int[@name='2010-11-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-03T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-04T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-05T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-06T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-08T08:00:00Z'][.='0']\" // BOOM!\n            ,pre+\"/int[@name='2010-11-09T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-10T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-11T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-12T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-13T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-14T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-15T08:00:00Z'][.='0']\"\n            );\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15cb24c5fa70ba12290e43b3aa0feab5582863ee","date":1457033685,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateRangeFacetsWithTz(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacetsWithTz(String,boolean).mjava","sourceNew":"  private void helpTestDateRangeFacetsWithTz(final String fieldName) {\n    final String p = \"facet.range\";\n    final String b = \"facet_ranges\";\n    final String f = fieldName;\n    final String c = \"/lst[@name='counts']\";\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + \"/../\";\n\n    final String TZ = \"America/Los_Angeles\";\n    assumeTrue(\"Test requires JVM to know about about TZ: \" + TZ,\n               TimeZoneUtils.KNOWN_TIMEZONE_IDS.contains(TZ)); \n\n    assertQ(\"checking facet counts for fixed now, using TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"205078333000\" // 1976-07-01T14:12:13.000Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=15]\"\n            ,pre+\"/int[@name='1976-07-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-04T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-05T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-06T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T07:00:00Z'][.='1'  ]\"\n            //\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='7']\"\n            );\n\n    // NOTE: the counts should all be zero, what we really care about\n    // is that the computed lower bounds take into account DST change\n    assertQ(\"checking facet counts arround DST change for TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"1288606136000\" // 2010-11-01T10:08:56.235Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=15]\"\n            ,pre+\"/int[@name='2010-11-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-03T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-04T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-05T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-06T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-08T08:00:00Z'][.='0']\" // BOOM!\n            ,pre+\"/int[@name='2010-11-09T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-10T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-11T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-12T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-13T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-14T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-15T08:00:00Z'][.='0']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacetsWithTz(final String fieldName,\n                                        final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    final String TZ = \"America/Los_Angeles\";\n    assumeTrue(\"Test requires JVM to know about about TZ: \" + TZ,\n               TimeZoneUtils.KNOWN_TIMEZONE_IDS.contains(TZ)); \n\n    assertQ(\"checking facet counts for fixed now, using TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"205078333000\" // 1976-07-01T14:12:13.000Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 15 : 18)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-04T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-05T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-06T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T07:00:00Z'][.='1'  ]\"\n            //\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='7']\"\n            );\n\n    // NOTE: the counts should all be zero, what we really care about\n    // is that the computed lower bounds take into account DST change\n    assertQ(\"checking facet counts arround DST change for TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"1288606136000\" // 2010-11-01T10:08:56.235Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 15 : 18)+\"]\"\n            ,pre+\"/int[@name='2010-11-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-03T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-04T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-05T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-06T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-08T08:00:00Z'][.='0']\" // BOOM!\n            ,pre+\"/int[@name='2010-11-09T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-10T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-11T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-12T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-13T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-14T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-15T08:00:00Z'][.='0']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateRangeFacetsWithTz(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacetsWithTz(String,boolean).mjava","sourceNew":"  private void helpTestDateRangeFacetsWithTz(final String fieldName) {\n    final String p = \"facet.range\";\n    final String b = \"facet_ranges\";\n    final String f = fieldName;\n    final String c = \"/lst[@name='counts']\";\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + \"/../\";\n\n    final String TZ = \"America/Los_Angeles\";\n    assumeTrue(\"Test requires JVM to know about about TZ: \" + TZ,\n               TimeZoneUtils.KNOWN_TIMEZONE_IDS.contains(TZ)); \n\n    assertQ(\"checking facet counts for fixed now, using TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"205078333000\" // 1976-07-01T14:12:13.000Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=15]\"\n            ,pre+\"/int[@name='1976-07-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-04T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-05T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-06T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T07:00:00Z'][.='1'  ]\"\n            //\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='7']\"\n            );\n\n    // NOTE: the counts should all be zero, what we really care about\n    // is that the computed lower bounds take into account DST change\n    assertQ(\"checking facet counts arround DST change for TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"1288606136000\" // 2010-11-01T10:08:56.235Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=15]\"\n            ,pre+\"/int[@name='2010-11-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-03T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-04T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-05T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-06T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-08T08:00:00Z'][.='0']\" // BOOM!\n            ,pre+\"/int[@name='2010-11-09T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-10T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-11T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-12T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-13T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-14T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-15T08:00:00Z'][.='0']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacetsWithTz(final String fieldName,\n                                        final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    final String TZ = \"America/Los_Angeles\";\n    assumeTrue(\"Test requires JVM to know about about TZ: \" + TZ,\n               TimeZoneUtils.KNOWN_TIMEZONE_IDS.contains(TZ)); \n\n    assertQ(\"checking facet counts for fixed now, using TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"205078333000\" // 1976-07-01T14:12:13.000Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 15 : 18)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-04T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-05T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-06T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T07:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T07:00:00Z'][.='1'  ]\"\n            //\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='7']\"\n            );\n\n    // NOTE: the counts should all be zero, what we really care about\n    // is that the computed lower bounds take into account DST change\n    assertQ(\"checking facet counts arround DST change for TZ: \" + TZ,\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,\"NOW\", \"1288606136000\" // 2010-11-01T10:08:56.235Z\n                ,\"TZ\", TZ\n                ,p, f\n                ,p+\".start\", \"NOW/MONTH\"\n                ,p+\".end\",   \"NOW/MONTH+15DAYS\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".include\", \"lower\"\n                )\n            // 15 days + pre+post+inner = 18\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 15 : 18)+\"]\"\n            ,pre+\"/int[@name='2010-11-01T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-02T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-03T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-04T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-05T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-06T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-07T07:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-08T08:00:00Z'][.='0']\" // BOOM!\n            ,pre+\"/int[@name='2010-11-09T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-10T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-11T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-12T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-13T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-14T08:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='2010-11-15T08:00:00Z'][.='0']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15cb24c5fa70ba12290e43b3aa0feab5582863ee":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["b3c7501e15f71c01b69ba22749b192827fa2019b","15cb24c5fa70ba12290e43b3aa0feab5582863ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"15cb24c5fa70ba12290e43b3aa0feab5582863ee":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["15cb24c5fa70ba12290e43b3aa0feab5582863ee","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}