{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene49/Lucene49NormsConsumer#close().mjava","commits":[{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene49/Lucene49NormsConsumer#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n        CodecUtil.writeFooter(meta); // write checksum\n      }\n      if (data != null) {\n        CodecUtil.writeFooter(data); // write checksum\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n      meta = data = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n        CodecUtil.writeFooter(meta); // write checksum\n      }\n      if (data != null) {\n        CodecUtil.writeFooter(data); // write checksum\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n      meta = data = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene49/Lucene49NormsConsumer#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n        CodecUtil.writeFooter(meta); // write checksum\n      }\n      if (data != null) {\n        CodecUtil.writeFooter(data); // write checksum\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n      meta = data = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n        CodecUtil.writeFooter(meta); // write checksum\n      }\n      if (data != null) {\n        CodecUtil.writeFooter(data); // write checksum\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n      meta = data = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene49/Lucene49NormsConsumer#close().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n        CodecUtil.writeFooter(meta); // write checksum\n      }\n      if (data != null) {\n        CodecUtil.writeFooter(data); // write checksum\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n      meta = data = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc8f80fee115148a0e4a0574560be06b494de821":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bc8f80fee115148a0e4a0574560be06b494de821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71387d8cb6923eb831b17a8b734608ba2e21c653":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}