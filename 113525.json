{"path":"solr/core/src/test/org/apache/solr/cloud/DistribDocExpirationUpdateProcessorTest#setupCluster(boolean).mjava","commits":[{"id":"c92ac83d1c2f8811300bb0df797465cca0aa8e92","date":1579710745,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DistribDocExpirationUpdateProcessorTest#setupCluster(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void setupCluster(boolean security) throws Exception {\n    // we want at most one core per node to force lots of network traffic to try and tickle distributed bugs\n    final Builder b = configureCluster(4)\n      .addConfig(\"conf\", TEST_PATH().resolve(\"configsets\").resolve(\"doc-expiry\").resolve(\"conf\"));\n\n    COLLECTION = \"expiring\";\n    if (security) {\n      USER = \"solr\";\n      PASS = \"SolrRocksAgain\";\n      COLLECTION += \"_secure\";\n      \n      final String SECURITY_JSON = Utils.toJSONString\n        (Utils.makeMap(\"authorization\",\n                       Utils.makeMap(\"class\", RuleBasedAuthorizationPlugin.class.getName(),\n                                     \"user-role\", singletonMap(USER,\"admin\"),\n                                     \"permissions\", singletonList(Utils.makeMap(\"name\",\"all\",\n                                                                                \"role\",\"admin\"))),\n                       \"authentication\",\n                       Utils.makeMap(\"class\", BasicAuthPlugin.class.getName(),\n                                     \"blockUnknown\",true,\n                                     \"credentials\", singletonMap(USER, getSaltedHashedValue(PASS)))));\n      b.withSecurityJson(SECURITY_JSON);\n    }\n    b.configure();\n\n    setAuthIfNeeded(CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 2))\n      .process(cluster.getSolrClient());\n\n    cluster.getSolrClient().waitForState(COLLECTION, DEFAULT_TIMEOUT, TimeUnit.SECONDS,\n        (n, c) -> DocCollection.isFullyActive(n, c, 2, 2));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c92ac83d1c2f8811300bb0df797465cca0aa8e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c92ac83d1c2f8811300bb0df797465cca0aa8e92"]},"commit2Childs":{"c92ac83d1c2f8811300bb0df797465cca0aa8e92":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c92ac83d1c2f8811300bb0df797465cca0aa8e92"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}