{"path":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","sourceNew":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true);\n  }\n\n","sourceOld":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","sourceNew":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true, null);\n  }\n\n","sourceOld":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","sourceNew":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true, null);\n  }\n\n","sourceOld":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","sourceNew":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true, null);\n  }\n\n","sourceOld":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3a0403b45dfe384fae4a1b6e96c3265d000c498","date":1321445981,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(Directory,boolean).mjava","sourceNew":null,"sourceOld":"  /** Creates a searcher searching the index in the named\n   *  directory.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the underlying IndexReader.\n   * @param path directory where IndexReader will be opened\n   * @param readOnly if true, the underlying IndexReader\n   * will be opened readOnly\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public IndexSearcher(Directory path, boolean readOnly) throws CorruptIndexException, IOException {\n    this(IndexReader.open(path, readOnly), true, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","a3a0403b45dfe384fae4a1b6e96c3265d000c498","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}