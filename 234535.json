{"path":"lucene/core/src/test/org/apache/lucene/util/packed/TestDirectPacked#testNotEnoughValues().mjava","commits":[{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestDirectPacked#testNotEnoughValues().mjava","pathOld":"/dev/null","sourceNew":"  /** test exception is delivered if you add the wrong number of values */\n  public void testNotEnoughValues() throws Exception {\n    Directory dir = newDirectory();\n    int bitsPerValue = DirectWriter.bitsRequired(2);\n    IndexOutput output = dir.createOutput(\"foo\", IOContext.DEFAULT);\n    DirectWriter writer = DirectWriter.getInstance(output, 5, bitsPerValue);\n    writer.add(1);\n    writer.add(0);\n    writer.add(2);\n    writer.add(1);\n    try {\n      writer.finish();\n      fail(\"didn't get expected exception\");\n    } catch (IllegalStateException expected) {\n      assertTrue(expected.getMessage().startsWith(\"Wrong number of values added\"));\n    }\n    output.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestDirectPacked#testNotEnoughValues().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/packed/TestDirectPacked#testNotEnoughValues().mjava","sourceNew":"  /** test exception is delivered if you add the wrong number of values */\n  public void testNotEnoughValues() throws Exception {\n    Directory dir = newDirectory();\n    int bitsPerValue = DirectWriter.bitsRequired(2);\n    IndexOutput output = dir.createOutput(\"foo\", IOContext.DEFAULT);\n    DirectWriter writer = DirectWriter.getInstance(output, 5, bitsPerValue);\n    writer.add(1);\n    writer.add(0);\n    writer.add(2);\n    writer.add(1);\n    IllegalStateException expected = expectThrows(IllegalStateException.class, () -> {\n      writer.finish();\n    });\n    assertTrue(expected.getMessage().startsWith(\"Wrong number of values added\"));\n\n    output.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** test exception is delivered if you add the wrong number of values */\n  public void testNotEnoughValues() throws Exception {\n    Directory dir = newDirectory();\n    int bitsPerValue = DirectWriter.bitsRequired(2);\n    IndexOutput output = dir.createOutput(\"foo\", IOContext.DEFAULT);\n    DirectWriter writer = DirectWriter.getInstance(output, 5, bitsPerValue);\n    writer.add(1);\n    writer.add(0);\n    writer.add(2);\n    writer.add(1);\n    try {\n      writer.finish();\n      fail(\"didn't get expected exception\");\n    } catch (IllegalStateException expected) {\n      assertTrue(expected.getMessage().startsWith(\"Wrong number of values added\"));\n    }\n    output.close();\n    dir.close();\n  }\n\n","bugFix":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}