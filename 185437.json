{"path":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","commits":[{"id":"1b7910b51406c081814c946331386da674f26aa5","date":1421770778,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","pathOld":"/dev/null","sourceNew":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    Set<String> currentFiles = new HashSet<>();\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    for (SegmentCommitInfo info : infos.asList()) {\n      Set<String> files = info.info.files(); // All files that belong to this segment\n      currentFiles.addAll(files);\n    }\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file)) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0611bd3086f3f95342bf2e9b9cd79d9236d095d","date":1421932365,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","sourceNew":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    Set<String> currentFiles = new HashSet<>();\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    for (SegmentCommitInfo info : infos.asList()) {\n      Set<String> files = info.info.files(); // All files that belong to this segment\n      currentFiles.addAll(files);\n    }\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    Set<String> currentFiles = new HashSet<>();\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    for (SegmentCommitInfo info : infos.asList()) {\n      Set<String> files = info.info.files(); // All files that belong to this segment\n      currentFiles.addAll(files);\n    }\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file)) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402007051e713da16b3b825a214950411c12866c","date":1422946501,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","sourceNew":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    Set<String> currentFiles = new HashSet<>(infos.files(indexDir, true));\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    Set<String> currentFiles = new HashSet<>();\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    for (SegmentCommitInfo info : infos.asList()) {\n      Set<String> files = info.info.files(); // All files that belong to this segment\n      currentFiles.addAll(files);\n    }\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba839b7548159227edcb740033d0f814b323d8d","date":1424455904,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","sourceNew":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    Set<String> currentFiles = new HashSet<>(infos.files(true));\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    Set<String> currentFiles = new HashSet<>(infos.files(indexDir, true));\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":5,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#hasUnusedFiles(Directory,IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","sourceNew":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    Set<String> currentFiles = new HashSet<>(infos.files(true));\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    Set<String> currentFiles = new HashSet<>(infos.files(true));\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#hasUnusedFiles(Directory,IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#hasUnusedFiles(Directory,IndexCommit).mjava","sourceNew":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    Set<String> currentFiles = new HashSet<>(infos.files(true));\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  private boolean hasUnusedFiles(Directory indexDir, IndexCommit commit) throws IOException {\n    String segmentsFileName = commit.getSegmentsFileName();\n    SegmentInfos infos = SegmentInfos.readCommit(indexDir, segmentsFileName);\n    Set<String> currentFiles = new HashSet<>(infos.files(true));\n    String[] allFiles = indexDir.listAll();\n    for (String file : allFiles) {\n      if (!file.equals(segmentsFileName) && !currentFiles.contains(file) && !file.endsWith(\".lock\")) {\n        LOG.info(\"Found unused file: \" + file);\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fba839b7548159227edcb740033d0f814b323d8d","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["fba839b7548159227edcb740033d0f814b323d8d"],"402007051e713da16b3b825a214950411c12866c":["f0611bd3086f3f95342bf2e9b9cd79d9236d095d"],"fba839b7548159227edcb740033d0f814b323d8d":["402007051e713da16b3b825a214950411c12866c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1b7910b51406c081814c946331386da674f26aa5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0611bd3086f3f95342bf2e9b9cd79d9236d095d":["1b7910b51406c081814c946331386da674f26aa5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"402007051e713da16b3b825a214950411c12866c":["fba839b7548159227edcb740033d0f814b323d8d"],"fba839b7548159227edcb740033d0f814b323d8d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1b7910b51406c081814c946331386da674f26aa5"],"1b7910b51406c081814c946331386da674f26aa5":["f0611bd3086f3f95342bf2e9b9cd79d9236d095d"],"f0611bd3086f3f95342bf2e9b9cd79d9236d095d":["402007051e713da16b3b825a214950411c12866c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}