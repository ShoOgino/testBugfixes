{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer#PatternTokenizer(Reader,Pattern,int).mjava","commits":[{"id":"540f57ba7d9d46ccc6f0157e8b8021a4c969770d","date":1272974241,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer#PatternTokenizer(Reader,Pattern,int).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/PatternTokenizer#PatternTokenizer(Reader,Pattern,int).mjava","sourceNew":"  /** creates a new PatternTokenizer returning tokens from group (-1 for split functionality) */\n  public PatternTokenizer(Reader input, Pattern pattern, int group) throws IOException {\n    super(input);\n    this.pattern = pattern;\n    this.group = group;\n    fillBuffer(str, input);\n    matcher = pattern.matcher(str);\n    index = 0;\n  }\n\n","sourceOld":"  /** creates a new PatternTokenizer returning tokens from group (-1 for split functionality) */\n  public PatternTokenizer(Reader input, Pattern pattern, int group) throws IOException {\n    super(input);\n    this.pattern = pattern;\n    this.group = group;\n    str = IOUtils.toString(input);\n    matcher = pattern.matcher(str);\n    index = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer#PatternTokenizer(Reader,Pattern,int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/pattern/PatternTokenizer#PatternTokenizer(Reader,Pattern,int).mjava","sourceNew":"  /** creates a new PatternTokenizer returning tokens from group (-1 for split functionality) */\n  public PatternTokenizer(Reader input, Pattern pattern, int group) throws IOException {\n    super(input);\n    this.pattern = pattern;\n    this.group = group;\n    fillBuffer(str, input);\n    matcher = pattern.matcher(str);\n    index = 0;\n  }\n\n","sourceOld":"  /** creates a new PatternTokenizer returning tokens from group (-1 for split functionality) */\n  public PatternTokenizer(Reader input, Pattern pattern, int group) throws IOException {\n    super(input);\n    this.pattern = pattern;\n    this.group = group;\n    fillBuffer(str, input);\n    matcher = pattern.matcher(str);\n    index = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"540f57ba7d9d46ccc6f0157e8b8021a4c969770d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["540f57ba7d9d46ccc6f0157e8b8021a4c969770d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["540f57ba7d9d46ccc6f0157e8b8021a4c969770d"],"540f57ba7d9d46ccc6f0157e8b8021a4c969770d":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}