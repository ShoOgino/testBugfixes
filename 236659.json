{"path":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","commits":[{"id":"027bee21e09164c9ee230395405076d1e0034b30","date":1401521821,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo).mjava","sourceNew":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.getDocCount();\n      return (info.info.getDocCount() - (long)delCount);\n    } else {\n      return info.info.getDocCount();\n    }\n  }\n\n","sourceOld":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.get().numDeletedDocs(info);\n      assert delCount <= info.info.getDocCount();\n      return (info.info.getDocCount() - (long)delCount);\n    } else {\n      return info.info.getDocCount();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.maxDoc();\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","sourceOld":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.getDocCount();\n      return (info.info.getDocCount() - (long)delCount);\n    } else {\n      return info.info.getDocCount();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.maxDoc();\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","sourceOld":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.getDocCount();\n      return (info.info.getDocCount() - (long)delCount);\n    } else {\n      return info.info.getDocCount();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.maxDoc();\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","sourceOld":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.getDocCount();\n      return (info.info.getDocCount() - (long)delCount);\n    } else {\n      return info.info.getDocCount();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72","date":1523453225,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletesToMerge(info);\n      assert delCount <= info.info.maxDoc();\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","sourceOld":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.maxDoc();\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletesToMerge(info);\n      assert delCount <= info.info.maxDoc();\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","sourceOld":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletedDocs(info);\n      assert delCount <= info.info.maxDoc();\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d28f215464f76024caf026606f8ea51a5319c53","date":1527226629,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,MergeContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#sizeDocs(SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, MergeContext mergeContext) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = mergeContext.numDeletesToMerge(info);\n      assert assertDelCount(delCount, info);\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","sourceOld":"  /** Return the number of documents in the provided {@link\n   *  SegmentCommitInfo}, pro-rated by percentage of\n   *  non-deleted documents if {@link\n   *  #setCalibrateSizeByDeletes} is set. */\n  protected long sizeDocs(SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    if (calibrateSizeByDeletes) {\n      int delCount = writer.numDeletesToMerge(info);\n      assert delCount <= info.info.maxDoc();\n      return (info.info.maxDoc() - (long)delCount);\n    } else {\n      return info.info.maxDoc();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["027bee21e09164c9ee230395405076d1e0034b30","b0267c69e2456a3477a1ad785723f2135da3117e"],"b06445ae1731e049327712db0454e5643ca9b7fe":["027bee21e09164c9ee230395405076d1e0034b30","b0267c69e2456a3477a1ad785723f2135da3117e"],"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72":["b0267c69e2456a3477a1ad785723f2135da3117e"],"b0267c69e2456a3477a1ad785723f2135da3117e":["027bee21e09164c9ee230395405076d1e0034b30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d28f215464f76024caf026606f8ea51a5319c53":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["b0267c69e2456a3477a1ad785723f2135da3117e","9ae87c7be37e537f40fa3bb2c35fa4a368d12a72"],"027bee21e09164c9ee230395405076d1e0034b30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d28f215464f76024caf026606f8ea51a5319c53"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"b0267c69e2456a3477a1ad785723f2135da3117e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","9ae87c7be37e537f40fa3bb2c35fa4a368d12a72","43345f1452f9510f8aaadae6156fe0c834e7d957"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["027bee21e09164c9ee230395405076d1e0034b30"],"1d28f215464f76024caf026606f8ea51a5319c53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["1d28f215464f76024caf026606f8ea51a5319c53"],"027bee21e09164c9ee230395405076d1e0034b30":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","b0267c69e2456a3477a1ad785723f2135da3117e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}