{"path":"src/java/org/apache/lucene/index/SegmentReader#checkDeletedCounts().mjava","commits":[{"id":"1ee41a444cd904f922cebbaa1d52c166447e46d7","date":1260989504,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#checkDeletedCounts().mjava","pathOld":"/dev/null","sourceNew":"  private boolean checkDeletedCounts() throws IOException {\n    final int recomputedCount = deletedDocs.getRecomputedCount();\n     \n    assert deletedDocs.count() == recomputedCount : \"deleted count=\" + deletedDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n    assert si.getDelCount() == recomputedCount : \n    \"delete count mismatch: info=\" + si.getDelCount() + \" vs BitVector=\" + recomputedCount;\n\n    // Verify # deletes does not exceed maxDoc for this\n    // segment:\n    assert si.getDelCount() <= maxDoc() : \n    \"delete count mismatch: \" + recomputedCount + \") exceeds max doc (\" + maxDoc() + \") for segment \" + si.name;\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkDeletedCounts().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#checkDeletedCounts().mjava","sourceNew":"  private boolean checkDeletedCounts() throws IOException {\n    final int recomputedCount = deletedDocs.getRecomputedCount();\n     \n    assert deletedDocs.count() == recomputedCount : \"deleted count=\" + deletedDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n    assert si.getDelCount() == recomputedCount : \n    \"delete count mismatch: info=\" + si.getDelCount() + \" vs BitVector=\" + recomputedCount;\n\n    // Verify # deletes does not exceed maxDoc for this\n    // segment:\n    assert si.getDelCount() <= maxDoc() : \n    \"delete count mismatch: \" + recomputedCount + \") exceeds max doc (\" + maxDoc() + \") for segment \" + si.name;\n\n    return true;\n  }\n\n","sourceOld":"  private boolean checkDeletedCounts() throws IOException {\n    final int recomputedCount = deletedDocs.getRecomputedCount();\n     \n    assert deletedDocs.count() == recomputedCount : \"deleted count=\" + deletedDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n    assert si.getDelCount() == recomputedCount : \n    \"delete count mismatch: info=\" + si.getDelCount() + \" vs BitVector=\" + recomputedCount;\n\n    // Verify # deletes does not exceed maxDoc for this\n    // segment:\n    assert si.getDelCount() <= maxDoc() : \n    \"delete count mismatch: \" + recomputedCount + \") exceeds max doc (\" + maxDoc() + \") for segment \" + si.name;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ee41a444cd904f922cebbaa1d52c166447e46d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1ee41a444cd904f922cebbaa1d52c166447e46d7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ee41a444cd904f922cebbaa1d52c166447e46d7"],"1ee41a444cd904f922cebbaa1d52c166447e46d7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}