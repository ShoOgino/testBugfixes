{"path":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","commits":[{"id":"7ad1376d356a33e10b3b9b95708ddc83252499a6","date":1353008654,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    for (int i = 0; i < valuesOff; ++i) {\n      bytesUsed += values[i].ramBytesUsed();\n    }\n    return bytesUsed;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a8b3f4209c6b8919a25d2a047a3d9f5172b715c","date":1353076805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","sourceNew":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    for (int i = 0; i < valuesOff; ++i) {\n      if (values[i] != null) {\n        bytesUsed += values[i].ramBytesUsed();\n      }\n    }\n    return bytesUsed;\n  }\n\n","sourceOld":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    for (int i = 0; i < valuesOff; ++i) {\n      bytesUsed += values[i].ramBytesUsed();\n    }\n    return bytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7571dd1e018a14f1536c64e4f6d17a3f0bb30fa7","date":1359470824,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","sourceNew":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    return bytesUsed + valuesBytes;\n  }\n\n","sourceOld":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    for (int i = 0; i < valuesOff; ++i) {\n      if (values[i] != null) {\n        bytesUsed += values[i].ramBytesUsed();\n      }\n    }\n    return bytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f97c39211d887a0b86b688a73eee533f943a694c","date":1359471161,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","sourceNew":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    // TODO: this is called per-doc-per-norms/dv-field, can we optimize this?\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    return bytesUsed + valuesBytes;\n  }\n\n","sourceOld":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    return bytesUsed + valuesBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fcc88ae889d062a142c679fa7a73cdeff55eb96","date":1359474937,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","sourceNew":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    // TODO: this is called per-doc-per-norms/dv-field, can we optimize this?\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.NUM_BYTES_LONG // valuesBytes\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    return bytesUsed + valuesBytes;\n  }\n\n","sourceOld":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    // TODO: this is called per-doc-per-norms/dv-field, can we optimize this?\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    return bytesUsed + valuesBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    // TODO: this is called per-doc-per-norms/dv-field, can we optimize this?\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.NUM_BYTES_LONG // valuesBytes\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    return bytesUsed + valuesBytes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae3be3418aea9954be27a83315087f67c0c2201e","date":1361023362,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","sourceNew":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    // TODO: this is called per-doc-per-norms/dv-field, can we optimize this?\n    long bytesUsed = RamUsageEstimator.alignObjectSize(baseRamBytesUsed())\n        + RamUsageEstimator.NUM_BYTES_LONG // valuesBytes\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * deltas.length); // values\n\n    return bytesUsed + deltasBytes;\n  }\n\n","sourceOld":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    // TODO: this is called per-doc-per-norms/dv-field, can we optimize this?\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.NUM_BYTES_LONG // valuesBytes\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    return bytesUsed + valuesBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AppendingLongBuffer#ramBytesUsed().mjava","sourceNew":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    // TODO: this is called per-doc-per-norms/dv-field, can we optimize this?\n    long bytesUsed = RamUsageEstimator.alignObjectSize(baseRamBytesUsed())\n        + RamUsageEstimator.NUM_BYTES_LONG // valuesBytes\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * deltas.length); // values\n\n    return bytesUsed + deltasBytes;\n  }\n\n","sourceOld":"  /**\n   * Return the number of bytes used by this instance.\n   */\n  public long ramBytesUsed() {\n    // TODO: this is called per-doc-per-norms/dv-field, can we optimize this?\n    long bytesUsed = RamUsageEstimator.alignObjectSize(\n        RamUsageEstimator.NUM_BYTES_OBJECT_HEADER\n        + 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF // the 3 arrays\n        + 2 * RamUsageEstimator.NUM_BYTES_INT) // the 2 offsets\n        + RamUsageEstimator.NUM_BYTES_LONG // valuesBytes\n        + RamUsageEstimator.sizeOf(pending)\n        + RamUsageEstimator.sizeOf(minValues)\n        + RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (long) RamUsageEstimator.NUM_BYTES_OBJECT_REF * values.length); // values\n\n    return bytesUsed + valuesBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7571dd1e018a14f1536c64e4f6d17a3f0bb30fa7":["9a8b3f4209c6b8919a25d2a047a3d9f5172b715c"],"7ad1376d356a33e10b3b9b95708ddc83252499a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9a8b3f4209c6b8919a25d2a047a3d9f5172b715c":["7ad1376d356a33e10b3b9b95708ddc83252499a6"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2fcc88ae889d062a142c679fa7a73cdeff55eb96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f97c39211d887a0b86b688a73eee533f943a694c":["7571dd1e018a14f1536c64e4f6d17a3f0bb30fa7"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["d4d69c535930b5cce125cff868d40f6373dc27d4","ae3be3418aea9954be27a83315087f67c0c2201e"],"ae3be3418aea9954be27a83315087f67c0c2201e":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"2fcc88ae889d062a142c679fa7a73cdeff55eb96":["f97c39211d887a0b86b688a73eee533f943a694c"]},"commit2Childs":{"7571dd1e018a14f1536c64e4f6d17a3f0bb30fa7":["f97c39211d887a0b86b688a73eee533f943a694c"],"7ad1376d356a33e10b3b9b95708ddc83252499a6":["9a8b3f4209c6b8919a25d2a047a3d9f5172b715c"],"9a8b3f4209c6b8919a25d2a047a3d9f5172b715c":["7571dd1e018a14f1536c64e4f6d17a3f0bb30fa7"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["ddbb72a33557d2b5bc22ee95daf3281c43560502","ae3be3418aea9954be27a83315087f67c0c2201e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ad1376d356a33e10b3b9b95708ddc83252499a6","d4d69c535930b5cce125cff868d40f6373dc27d4"],"f97c39211d887a0b86b688a73eee533f943a694c":["2fcc88ae889d062a142c679fa7a73cdeff55eb96"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae3be3418aea9954be27a83315087f67c0c2201e":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"2fcc88ae889d062a142c679fa7a73cdeff55eb96":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}