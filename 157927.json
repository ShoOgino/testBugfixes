{"path":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","commits":[{"id":"2fcfd8b392582391d5804daa94c05f917c7fbdc7","date":1370873427,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(FastInputStream).mjava","sourceNew":"  public String readStr(DataInputInputStream dis) throws IOException {\n    int sz = readSize(dis);\n    if (bytes == null || bytes.length < sz) bytes = new byte[sz];\n    dis.readFully(bytes, 0, sz);\n\n    arr.reset();\n    ByteUtils.UTF8toUTF16(bytes, 0, sz, arr);\n    return arr.toString();\n  }\n\n","sourceOld":"  public String readStr(FastInputStream dis) throws IOException {\n    int sz = readSize(dis);\n    if (bytes == null || bytes.length < sz) bytes = new byte[sz];\n    dis.readFully(bytes, 0, sz);\n\n    arr.reset();\n    ByteUtils.UTF8toUTF16(bytes, 0, sz, arr);\n    return arr.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","sourceNew":"  public String readStr(DataInputInputStream dis) throws IOException {\n    int sz = readSize(dis);\n    if (bytes == null || bytes.length < sz) bytes = new byte[sz];\n    dis.readFully(bytes, 0, sz);\n\n    arr.reset();\n    ByteUtils.UTF8toUTF16(bytes, 0, sz, arr);\n    return arr.toString();\n  }\n\n","sourceOld":"  public String readStr(DataInputInputStream dis) throws IOException {\n    int sz = readSize(dis);\n    if (bytes == null || bytes.length < sz) bytes = new byte[sz];\n    dis.readFully(bytes, 0, sz);\n\n    arr.reset();\n    ByteUtils.UTF8toUTF16(bytes, 0, sz, arr);\n    return arr.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","sourceNew":"  public String readStr(DataInputInputStream dis) throws IOException {\n    int sz = readSize(dis);\n    if (bytes == null || bytes.length < sz) bytes = new byte[sz];\n    dis.readFully(bytes, 0, sz);\n\n    arr.reset();\n    ByteUtils.UTF8toUTF16(bytes, 0, sz, arr);\n    return arr.toString();\n  }\n\n","sourceOld":"  public String readStr(DataInputInputStream dis) throws IOException {\n    int sz = readSize(dis);\n    if (bytes == null || bytes.length < sz) bytes = new byte[sz];\n    dis.readFully(bytes, 0, sz);\n\n    arr.reset();\n    ByteUtils.UTF8toUTF16(bytes, 0, sz, arr);\n    return arr.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca83400a04ed1cbfa09560d2e7184f93f5d75363","date":1428921124,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","sourceNew":"  public String readStr(DataInputInputStream dis) throws IOException {\n    return readStr(dis,null);\n  }\n\n","sourceOld":"  public String readStr(DataInputInputStream dis) throws IOException {\n    int sz = readSize(dis);\n    if (bytes == null || bytes.length < sz) bytes = new byte[sz];\n    dis.readFully(bytes, 0, sz);\n\n    arr.reset();\n    ByteUtils.UTF8toUTF16(bytes, 0, sz, arr);\n    return arr.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b2ba7b58bce0f80c97a5eb2f11febac26681566","date":1542686312,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","sourceNew":"  public CharSequence readStr(DataInputInputStream dis) throws IOException {\n    return readStr(dis,null);\n  }\n\n","sourceOld":"  public String readStr(DataInputInputStream dis) throws IOException {\n    return readStr(dis,null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7b5b9bd55a953275a0efc3c5272ed76129541fb","date":1546921668,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readStr(DataInputInputStream).mjava","sourceNew":"  public CharSequence readStr(DataInputInputStream dis) throws IOException {\n    return readStr(dis, null, readStringAsCharSeq);\n  }\n\n","sourceOld":"  public CharSequence readStr(DataInputInputStream dis) throws IOException {\n    return readStr(dis,null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b7b5b9bd55a953275a0efc3c5272ed76129541fb":["0b2ba7b58bce0f80c97a5eb2f11febac26681566"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["2fcfd8b392582391d5804daa94c05f917c7fbdc7","19275ba31e621f6da1b83bf13af75233876fd3d4"],"ca83400a04ed1cbfa09560d2e7184f93f5d75363":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"0b2ba7b58bce0f80c97a5eb2f11febac26681566":["ca83400a04ed1cbfa09560d2e7184f93f5d75363"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2fcfd8b392582391d5804daa94c05f917c7fbdc7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b7b5b9bd55a953275a0efc3c5272ed76129541fb"],"2fcfd8b392582391d5804daa94c05f917c7fbdc7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b7b5b9bd55a953275a0efc3c5272ed76129541fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"ca83400a04ed1cbfa09560d2e7184f93f5d75363":["0b2ba7b58bce0f80c97a5eb2f11febac26681566"],"0b2ba7b58bce0f80c97a5eb2f11febac26681566":["b7b5b9bd55a953275a0efc3c5272ed76129541fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2fcfd8b392582391d5804daa94c05f917c7fbdc7"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","ca83400a04ed1cbfa09560d2e7184f93f5d75363"],"2fcfd8b392582391d5804daa94c05f917c7fbdc7":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}