{"path":"src/java/org/apache/solr/request/SpellCheckerRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"845c0c503e4869bb364412f3b53a6e9477cf9480","date":1174073327,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SpellCheckerRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n            throws Exception {\n        SolrParams p = req.getParams();\n        String words = p.get(\"q\");\n\n        System.out.println(getDescription());\n        int numSug = 5;\n        String[] suggestions = spellChecker.suggestSimilar(words, numSug,\n                reader, restrictToField, onlyMorePopular);\n\n        rsp.add(\"suggestions\", Arrays.asList(suggestions));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00240b59ec034c06028d11a4cfc9725767ecb61a","date":1174078123,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SpellCheckerRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/SpellCheckerRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n            throws Exception {\n        SolrParams p = req.getParams();\n        String words = p.get(\"q\");\n        String cmd = p.get(\"cmd\");\n        if (cmd != null && cmd.equals(\"rebuild\"))\n            rebuild(req);\n\n        Float accuracy;\n        int numSug;\n        try {\n            accuracy = p.getFloat(\"accuracy\", DEFAULT_ACCURACY);\n            spellChecker.setAccuracy(accuracy);\n        } catch (NumberFormatException e) {\n            throw new RuntimeException(\"Accuracy must be a valid positive float\", e);\n        }\n        try {\n            numSug = p.getInt(\"suggestionCount\", DEFAULT_NUM_SUGGESTIONS);\n        } catch (NumberFormatException e) {\n            throw new RuntimeException(\"Spelling suggestion count must be a valid positive integer\", e);\n        }\n\n        String[] suggestions = spellChecker.suggestSimilar(words, numSug,\n                reader, restrictToField, onlyMorePopular);\n\n        rsp.add(\"suggestions\", Arrays.asList(suggestions));\n    }\n\n","sourceOld":"    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n            throws Exception {\n        SolrParams p = req.getParams();\n        String words = p.get(\"q\");\n\n        System.out.println(getDescription());\n        int numSug = 5;\n        String[] suggestions = spellChecker.suggestSimilar(words, numSug,\n                reader, restrictToField, onlyMorePopular);\n\n        rsp.add(\"suggestions\", Arrays.asList(suggestions));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"583cdb620dea20ef2bfafd8639a73b29de305103","date":1174543740,"type":5,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SpellCheckerRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/SpellCheckerRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n            throws Exception {\n        SolrParams p = req.getParams();\n        String words = p.get(\"q\");\n        String cmd = p.get(\"cmd\");\n        if (cmd != null && cmd.equals(\"rebuild\"))\n            rebuild(req);\n\n        Float accuracy;\n        int numSug;\n        try {\n            accuracy = p.getFloat(\"accuracy\", DEFAULT_ACCURACY);\n            spellChecker.setAccuracy(accuracy);\n        } catch (NumberFormatException e) {\n            throw new RuntimeException(\"Accuracy must be a valid positive float\", e);\n        }\n        try {\n            numSug = p.getInt(\"suggestionCount\", DEFAULT_NUM_SUGGESTIONS);\n        } catch (NumberFormatException e) {\n            throw new RuntimeException(\"Spelling suggestion count must be a valid positive integer\", e);\n        }\n\n        String[] suggestions = spellChecker.suggestSimilar(words, numSug,\n                reader, restrictToField, onlyMorePopular);\n\n        rsp.add(\"suggestions\", Arrays.asList(suggestions));\n    }\n\n","sourceOld":"    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n            throws Exception {\n        SolrParams p = req.getParams();\n        String words = p.get(\"q\");\n        String cmd = p.get(\"cmd\");\n        if (cmd != null && cmd.equals(\"rebuild\"))\n            rebuild(req);\n\n        Float accuracy;\n        int numSug;\n        try {\n            accuracy = p.getFloat(\"accuracy\", DEFAULT_ACCURACY);\n            spellChecker.setAccuracy(accuracy);\n        } catch (NumberFormatException e) {\n            throw new RuntimeException(\"Accuracy must be a valid positive float\", e);\n        }\n        try {\n            numSug = p.getInt(\"suggestionCount\", DEFAULT_NUM_SUGGESTIONS);\n        } catch (NumberFormatException e) {\n            throw new RuntimeException(\"Spelling suggestion count must be a valid positive integer\", e);\n        }\n\n        String[] suggestions = spellChecker.suggestSimilar(words, numSug,\n                reader, restrictToField, onlyMorePopular);\n\n        rsp.add(\"suggestions\", Arrays.asList(suggestions));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"583cdb620dea20ef2bfafd8639a73b29de305103":["00240b59ec034c06028d11a4cfc9725767ecb61a"],"00240b59ec034c06028d11a4cfc9725767ecb61a":["845c0c503e4869bb364412f3b53a6e9477cf9480"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"845c0c503e4869bb364412f3b53a6e9477cf9480":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"583cdb620dea20ef2bfafd8639a73b29de305103":[],"00240b59ec034c06028d11a4cfc9725767ecb61a":["583cdb620dea20ef2bfafd8639a73b29de305103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["845c0c503e4869bb364412f3b53a6e9477cf9480"],"845c0c503e4869bb364412f3b53a6e9477cf9480":["00240b59ec034c06028d11a4cfc9725767ecb61a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["583cdb620dea20ef2bfafd8639a73b29de305103","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}