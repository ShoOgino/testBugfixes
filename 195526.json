{"path":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","1f653cfcf159baeaafe5d01682a911e95bba4012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}