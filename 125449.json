{"path":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","commits":[{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return curBuf.getLong((int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71f8255d67554b78ea0a26a5cdb916a759261aab","date":1471024473,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","sourceNew":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return guard.getLong(curBuf, (int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return curBuf.getLong((int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","sourceNew":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return guard.getLong(curBuf, (int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return curBuf.getLong((int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","sourceNew":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return guard.getLong(curBuf, (int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return curBuf.getLong((int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput.SingleBufferImpl#readLong(long).mjava","sourceNew":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return guard.getLong(curBuf, (int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long readLong(long pos) throws IOException {\n      try {\n        return curBuf.getLong((int) pos);\n      } catch (IllegalArgumentException e) {\n        if (pos < 0) {\n          throw new IllegalArgumentException(\"Seeking to negative position: \" + this, e);\n        } else {\n          throw new EOFException(\"seek past EOF: \" + this);\n        }\n      } catch (NullPointerException npe) {\n        throw new AlreadyClosedException(\"Already closed: \" + this);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534","71f8255d67554b78ea0a26a5cdb916a759261aab"],"71f8255d67554b78ea0a26a5cdb916a759261aab":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","71f8255d67554b78ea0a26a5cdb916a759261aab","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"71f8255d67554b78ea0a26a5cdb916a759261aab":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}