{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) throws IOException {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArray.TEMPLATES.get(valueType);\n    }\n\n","sourceOld":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) throws IOException {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArray.TEMPLATES.get(valueType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de5bbadeb3abac0f650298bff584bd4317bd75aa","date":1331116004,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) throws IOException {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArraySource.forType(valueType);\n    }\n\n","sourceOld":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) throws IOException {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArray.TEMPLATES.get(valueType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) throws IOException {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArraySource.forType(valueType);\n    }\n\n","sourceOld":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) throws IOException {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArray.TEMPLATES.get(valueType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArraySource.forType(valueType);\n    }\n\n","sourceOld":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) throws IOException {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArraySource.forType(valueType);\n    }\n\n","bugFix":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArraySource.forType(valueType);\n    }\n\n","sourceOld":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) throws IOException {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArraySource.forType(valueType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":null,"sourceOld":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArraySource.forType(valueType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Ints.IntsWriter#IntsWriter(Directory,String,String,int,Counter,IOContext,Type).mjava","sourceNew":null,"sourceOld":"    protected IntsWriter(Directory dir, String id, String codecName,\n        int version, Counter bytesUsed, IOContext context, Type valueType) {\n      super(dir, id, codecName, version, bytesUsed, context);\n      size = typeToSize(valueType);\n      this.bytesRef = new BytesRef(size);\n      bytesRef.length = size;\n      template = DocValuesArraySource.forType(valueType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","0837ab0472feecb3a54260729d845f839e1cbd72"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["de5bbadeb3abac0f650298bff584bd4317bd75aa","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["de5bbadeb3abac0f650298bff584bd4317bd75aa"],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["38e3b736c7ca086d61b7dbb841c905ee115490da","fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["d4d69c535930b5cce125cff868d40f6373dc27d4","fe33227f6805edab2036cbb80645cc4e2d1fa424","0837ab0472feecb3a54260729d845f839e1cbd72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}