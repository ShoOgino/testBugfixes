{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testCollatedRange().mjava","commits":[{"id":"b5629050969c1e696c5dc14e8639f3e733e8e33c","date":1313606044,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testCollatedRange().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testCollatedRange().mjava","sourceNew":"  public void testCollatedRange() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockCollationAnalyzer());\n    qp.setAnalyzeRangeTerms(true);\n    Query expected = TermRangeQuery.newStringRange(\"field\", \"collatedabc\", \"collateddef\", true, true);\n    Query actual = qp.parse(\"[abc TO def]\");\n    assertEquals(expected, actual);\n  }\n\n","sourceOld":"  public void testCollatedRange() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockCollationAnalyzer());\n    qp.setAnalyzeRangeTerms(true);\n    Query expected = TermRangeQuery.newStringRange(\"field\", \"collatedabc\", \"collateddef\", true, true);\n    Query actual = qp.parse(\"[abc TO def]\");\n    assertEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testCollatedRange().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testCollatedRange().mjava","sourceNew":"  public void testCollatedRange() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockCollationAnalyzer());\n    qp.setAnalyzeRangeTerms(true);\n    Query expected = TermRangeQuery.newStringRange(\"field\", \"collatedabc\", \"collateddef\", true, true);\n    Query actual = qp.parse(\"[abc TO def]\");\n    assertEquals(expected, actual);\n  }\n\n","sourceOld":"  public void testCollatedRange() throws Exception {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"field\", new MockCollationAnalyzer());\n    qp.setAnalyzeRangeTerms(true);\n    Query expected = TermRangeQuery.newStringRange(\"field\", \"collatedabc\", \"collateddef\", true, true);\n    Query actual = qp.parse(\"[abc TO def]\");\n    assertEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b5629050969c1e696c5dc14e8639f3e733e8e33c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5629050969c1e696c5dc14e8639f3e733e8e33c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5629050969c1e696c5dc14e8639f3e733e8e33c"],"b5629050969c1e696c5dc14e8639f3e733e8e33c":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}