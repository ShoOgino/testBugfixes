{"path":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","commits":[{"id":"902ea008241c4805c9032c481c739c1611c94e12","date":1282654655,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"useCompoundDocStore=\").append(useCompoundDocStore);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"257da767277782760db0814096b999899995b2b1","date":1289498882,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"useCompoundDocStore=\").append(useCompoundDocStore);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"useCompoundDocStore=\").append(useCompoundDocStore);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"useCompoundDocStore=\").append(useCompoundDocStore);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"useCompoundDocStore=\").append(useCompoundDocStore);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"useCompoundDocStore=\").append(useCompoundDocStore);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"useCompoundDocStore=\").append(useCompoundDocStore);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bcd63cc99c783b21344aeeebc8c04db29770205","date":1295239623,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae31c2e5298b269d50b60961fe85afc5fbe873c3","date":1295256360,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69a6d2d525aeab53c867ed26934185e5bb627d0e","date":1296516902,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"requireContiguousMerge=\").append(requireContiguousMerge);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForOptimize=\").append(maxMergeSizeForOptimize).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"8bcd63cc99c783b21344aeeebc8c04db29770205":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"85a883878c0af761245ab048babc63d099f835f3":["902ea008241c4805c9032c481c739c1611c94e12","257da767277782760db0814096b999899995b2b1"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","01e5948db9a07144112d2f08f28ca2e3cd880348"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["85a883878c0af761245ab048babc63d099f835f3","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"c19f985e36a65cc969e8e564fe337a0d41512075":["8bcd63cc99c783b21344aeeebc8c04db29770205"],"902ea008241c4805c9032c481c739c1611c94e12":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["69a6d2d525aeab53c867ed26934185e5bb627d0e"],"ae31c2e5298b269d50b60961fe85afc5fbe873c3":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8bcd63cc99c783b21344aeeebc8c04db29770205"],"257da767277782760db0814096b999899995b2b1":["902ea008241c4805c9032c481c739c1611c94e12"],"a3776dccca01c11e7046323cfad46a3b4a471233":["69a6d2d525aeab53c867ed26934185e5bb627d0e","01e5948db9a07144112d2f08f28ca2e3cd880348"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","69a6d2d525aeab53c867ed26934185e5bb627d0e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"69a6d2d525aeab53c867ed26934185e5bb627d0e":["c19f985e36a65cc969e8e564fe337a0d41512075"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["257da767277782760db0814096b999899995b2b1"],"45669a651c970812a680841b97a77cce06af559f":["bde51b089eb7f86171eb3406e38a274743f9b7ac","01e5948db9a07144112d2f08f28ca2e3cd880348"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["ae31c2e5298b269d50b60961fe85afc5fbe873c3","69a6d2d525aeab53c867ed26934185e5bb627d0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8bcd63cc99c783b21344aeeebc8c04db29770205":["c19f985e36a65cc969e8e564fe337a0d41512075","ae31c2e5298b269d50b60961fe85afc5fbe873c3"],"85a883878c0af761245ab048babc63d099f835f3":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ae31c2e5298b269d50b60961fe85afc5fbe873c3"],"c19f985e36a65cc969e8e564fe337a0d41512075":["69a6d2d525aeab53c867ed26934185e5bb627d0e"],"902ea008241c4805c9032c481c739c1611c94e12":["85a883878c0af761245ab048babc63d099f835f3","257da767277782760db0814096b999899995b2b1"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d14e8d18c0e3970c20354dbeeb49da11bd587fbd","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f"],"ae31c2e5298b269d50b60961fe85afc5fbe873c3":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"257da767277782760db0814096b999899995b2b1":["85a883878c0af761245ab048babc63d099f835f3","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","902ea008241c4805c9032c481c739c1611c94e12"],"69a6d2d525aeab53c867ed26934185e5bb627d0e":["01e5948db9a07144112d2f08f28ca2e3cd880348","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["8bcd63cc99c783b21344aeeebc8c04db29770205","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"45669a651c970812a680841b97a77cce06af559f":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["45669a651c970812a680841b97a77cce06af559f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}