{"path":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.CompareByMergeDocCount#compare(MergeThread,MergeThread).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.CompareByMergeDocCount#compare(MergeThread,MergeThread).mjava","pathOld":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler.CompareByMergeDocCount#compare(MergeThread,MergeThread).mjava","sourceNew":"    public int compare(MergeThread t1, MergeThread t2) {\n      final MergePolicy.OneMerge m1 = t1.getCurrentMerge();\n      final MergePolicy.OneMerge m2 = t2.getCurrentMerge();\n      \n      final int c1 = m1 == null ? Integer.MAX_VALUE : m1.segments.totalDocCount();\n      final int c2 = m2 == null ? Integer.MAX_VALUE : m2.segments.totalDocCount();\n\n      return c2 - c1;\n    }\n\n","sourceOld":"    public int compare(MergeThread t1, MergeThread t2) {\n      final MergePolicy.OneMerge m1 = t1.getCurrentMerge();\n      final MergePolicy.OneMerge m2 = t2.getCurrentMerge();\n      \n      final int c1 = m1 == null ? Integer.MAX_VALUE : m1.segments.totalDocCount();\n      final int c2 = m2 == null ? Integer.MAX_VALUE : m2.segments.totalDocCount();\n\n      return c2 - c1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b","date":1288192616,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.CompareByMergeDocCount#compare(MergeThread,MergeThread).mjava","sourceNew":null,"sourceOld":"    public int compare(MergeThread t1, MergeThread t2) {\n      final MergePolicy.OneMerge m1 = t1.getCurrentMerge();\n      final MergePolicy.OneMerge m2 = t2.getCurrentMerge();\n      \n      final int c1 = m1 == null ? Integer.MAX_VALUE : m1.segments.totalDocCount();\n      final int c2 = m2 == null ? Integer.MAX_VALUE : m2.segments.totalDocCount();\n\n      return c2 - c1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","date":1288424244,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.CompareByMergeDocCount#compare(MergeThread,MergeThread).mjava","sourceNew":null,"sourceOld":"    public int compare(MergeThread t1, MergeThread t2) {\n      final MergePolicy.OneMerge m1 = t1.getCurrentMerge();\n      final MergePolicy.OneMerge m2 = t2.getCurrentMerge();\n      \n      final int c1 = m1 == null ? Integer.MAX_VALUE : m1.segments.totalDocCount();\n      final int c2 = m2 == null ? Integer.MAX_VALUE : m2.segments.totalDocCount();\n\n      return c2 - c1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.CompareByMergeDocCount#compare(MergeThread,MergeThread).mjava","sourceNew":null,"sourceOld":"    public int compare(MergeThread t1, MergeThread t2) {\n      final MergePolicy.OneMerge m1 = t1.getCurrentMerge();\n      final MergePolicy.OneMerge m2 = t2.getCurrentMerge();\n      \n      final int c1 = m1 == null ? Integer.MAX_VALUE : m1.segments.totalDocCount();\n      final int c2 = m2 == null ? Integer.MAX_VALUE : m2.segments.totalDocCount();\n\n      return c2 - c1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["9454a6510e2db155fb01faa5c049b06ece95fab9","ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}