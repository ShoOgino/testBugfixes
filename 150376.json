{"path":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testCopy().mjava","commits":[{"id":"041e97cfeed9d3ba8d0489a197b6fac699527190","date":1320175423,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testCopy().mjava","pathOld":"/dev/null","sourceNew":"  public void testCopy() {\n    int numIters = atLeast(10);\n    for (int i = 0; i < numIters; i++) {\n      CharsRef ref = new CharsRef();\n      char[] charArray = _TestUtil.randomRealisticUnicodeString(random, 1, 100).toCharArray();\n      int offset = random.nextInt(charArray.length);\n      int length = charArray.length - offset;\n      String str = new String(charArray, offset, length);\n      ref.copy(charArray, offset, length);\n      assertEquals(str, ref.toString());  \n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e6e919043fa85ee891123768dd655a98edbbf63c","date":1322225413,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testCopy().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testCopy().mjava","sourceNew":"  public void testCopy() {\n    int numIters = atLeast(10);\n    for (int i = 0; i < numIters; i++) {\n      CharsRef ref = new CharsRef();\n      char[] charArray = _TestUtil.randomRealisticUnicodeString(random, 1, 100).toCharArray();\n      int offset = random.nextInt(charArray.length);\n      int length = charArray.length - offset;\n      String str = new String(charArray, offset, length);\n      ref.copyChars(charArray, offset, length);\n      assertEquals(str, ref.toString());  \n    }\n    \n  }\n\n","sourceOld":"  public void testCopy() {\n    int numIters = atLeast(10);\n    for (int i = 0; i < numIters; i++) {\n      CharsRef ref = new CharsRef();\n      char[] charArray = _TestUtil.randomRealisticUnicodeString(random, 1, 100).toCharArray();\n      int offset = random.nextInt(charArray.length);\n      int length = charArray.length - offset;\n      String str = new String(charArray, offset, length);\n      ref.copy(charArray, offset, length);\n      assertEquals(str, ref.toString());  \n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testCopy().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testCopy().mjava","sourceNew":"  public void testCopy() {\n    int numIters = atLeast(10);\n    for (int i = 0; i < numIters; i++) {\n      CharsRef ref = new CharsRef();\n      char[] charArray = _TestUtil.randomRealisticUnicodeString(random, 1, 100).toCharArray();\n      int offset = random.nextInt(charArray.length);\n      int length = charArray.length - offset;\n      String str = new String(charArray, offset, length);\n      ref.copyChars(charArray, offset, length);\n      assertEquals(str, ref.toString());  \n    }\n    \n  }\n\n","sourceOld":"  public void testCopy() {\n    int numIters = atLeast(10);\n    for (int i = 0; i < numIters; i++) {\n      CharsRef ref = new CharsRef();\n      char[] charArray = _TestUtil.randomRealisticUnicodeString(random, 1, 100).toCharArray();\n      int offset = random.nextInt(charArray.length);\n      int length = charArray.length - offset;\n      String str = new String(charArray, offset, length);\n      ref.copyChars(charArray, offset, length);\n      assertEquals(str, ref.toString());  \n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"041e97cfeed9d3ba8d0489a197b6fac699527190":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e6e919043fa85ee891123768dd655a98edbbf63c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6e919043fa85ee891123768dd655a98edbbf63c":["041e97cfeed9d3ba8d0489a197b6fac699527190"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"041e97cfeed9d3ba8d0489a197b6fac699527190":["e6e919043fa85ee891123768dd655a98edbbf63c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["041e97cfeed9d3ba8d0489a197b6fac699527190"],"e6e919043fa85ee891123768dd655a98edbbf63c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}