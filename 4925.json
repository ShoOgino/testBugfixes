{"path":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#testQuery().mjava","commits":[{"id":"fa4f1b5e611afe6cb170951e0a9202ff95dc9156","date":1250976267,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#testQuery().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/BoostingFunctionTermQueryTest#testQuery().mjava","sourceNew":"  public void testQuery() {\n    PayloadTermQuery boostingFuncTermQuery = new PayloadTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"),\n        new MaxPayloadFunction());\n    QueryUtils.check(boostingFuncTermQuery);\n    \n    SpanTermQuery spanTermQuery = new SpanTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"));\n\n    assertTrue(boostingFuncTermQuery.equals(spanTermQuery) == spanTermQuery.equals(boostingFuncTermQuery));\n    \n    PayloadTermQuery boostingFuncTermQuery2 = new PayloadTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"),\n        new AveragePayloadFunction());\n    \n    QueryUtils.checkUnequal(boostingFuncTermQuery, boostingFuncTermQuery2);\n  }\n\n","sourceOld":"  public void testQuery() {\n    BoostingFunctionTermQuery boostingFuncTermQuery = new BoostingFunctionTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"),\n        new MaxPayloadFunction());\n    QueryUtils.check(boostingFuncTermQuery);\n    \n    SpanTermQuery spanTermQuery = new SpanTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"));\n\n    assertTrue(boostingFuncTermQuery.equals(spanTermQuery) == spanTermQuery.equals(boostingFuncTermQuery));\n    \n    BoostingFunctionTermQuery boostingFuncTermQuery2 = new BoostingFunctionTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"),\n        new AveragePayloadFunction());\n    \n    QueryUtils.checkUnequal(boostingFuncTermQuery, boostingFuncTermQuery2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#testQuery().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery#testQuery().mjava","sourceNew":"  public void testQuery() {\n    PayloadTermQuery boostingFuncTermQuery = new PayloadTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"),\n        new MaxPayloadFunction());\n    QueryUtils.check(boostingFuncTermQuery);\n    \n    SpanTermQuery spanTermQuery = new SpanTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"));\n\n    assertTrue(boostingFuncTermQuery.equals(spanTermQuery) == spanTermQuery.equals(boostingFuncTermQuery));\n    \n    PayloadTermQuery boostingFuncTermQuery2 = new PayloadTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"),\n        new AveragePayloadFunction());\n    \n    QueryUtils.checkUnequal(boostingFuncTermQuery, boostingFuncTermQuery2);\n  }\n\n","sourceOld":"  public void testQuery() {\n    PayloadTermQuery boostingFuncTermQuery = new PayloadTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"),\n        new MaxPayloadFunction());\n    QueryUtils.check(boostingFuncTermQuery);\n    \n    SpanTermQuery spanTermQuery = new SpanTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"));\n\n    assertTrue(boostingFuncTermQuery.equals(spanTermQuery) == spanTermQuery.equals(boostingFuncTermQuery));\n    \n    PayloadTermQuery boostingFuncTermQuery2 = new PayloadTermQuery(new Term(PayloadHelper.MULTI_FIELD, \"seventy\"),\n        new AveragePayloadFunction());\n    \n    QueryUtils.checkUnequal(boostingFuncTermQuery, boostingFuncTermQuery2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}