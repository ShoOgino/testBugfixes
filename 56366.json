{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#getCountArr(int,int).mjava","commits":[{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":2,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#getCountArr(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#getCountArr(int).mjava","sourceNew":"  private int[] getCountArr(int maxNeeded, int idx) {\n    if (idx >= reuse.length) {\n      reuse = Arrays.copyOf(reuse, idx + 1);\n    }\n    if (reuse[idx] == null) {\n      // make the count array large enough for any segment\n      // FUTURE: (optionally) directly use the array of the CountAcc for an optimized index..\n      reuse[idx] = new int[(int) si.getValueCount() + 1];\n    } else {\n      Arrays.fill(reuse[idx], 0, maxNeeded, 0);\n    }\n    return reuse[idx];\n  }\n\n","sourceOld":"  private int[] getCountArr(int maxNeeded) {\n    if (reuse == null) {\n      // make the count array large enough for any segment\n      // FUTURE: (optionally) directly use the array of the CountAcc for an optimized index..\n      reuse = new int[(int) si.getValueCount() + 1];\n    } else {\n      Arrays.fill(reuse, 0, maxNeeded, 0);\n    }\n    return reuse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}