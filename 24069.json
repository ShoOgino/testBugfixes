{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","sourceNew":"    protected HashMap<String,Analyzer> analyzerCache() {\n      HashMap<String,Analyzer> cache = new HashMap<String,Analyzer>();\n       for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","sourceOld":"    protected HashMap<String,Analyzer> analyzerCache() {\n      HashMap<String,Analyzer> cache = new HashMap<String,Analyzer>();\n       for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","sourceNew":"    protected HashMap<String,Analyzer> analyzerCache() {\n      HashMap<String,Analyzer> cache = new HashMap<String,Analyzer>();\n       for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","sourceOld":"    protected HashMap<String,Analyzer> analyzerCache() {\n      HashMap<String,Analyzer> cache = new HashMap<String,Analyzer>();\n       for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","sourceNew":"    protected HashMap<String,Analyzer> analyzerCache() {\n      HashMap<String,Analyzer> cache = new HashMap<String,Analyzer>();\n       for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","sourceOld":"    protected HashMap<String,Analyzer> analyzerCache() {\n      HashMap<String,Analyzer> cache = new HashMap<String,Analyzer>();\n       for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f49143da0a5d278a72f741432047fcfa6da996e","date":1316927425,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","sourceNew":"    protected HashMap<String, Analyzer> analyzerCache() {\n      HashMap<String, Analyzer> cache = new HashMap<String, Analyzer>();\n      for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","sourceOld":"    protected HashMap<String,Analyzer> analyzerCache() {\n      HashMap<String,Analyzer> cache = new HashMap<String,Analyzer>();\n       for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","sourceNew":"    protected HashMap<String, Analyzer> analyzerCache() {\n      HashMap<String, Analyzer> cache = new HashMap<>();\n      for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","sourceOld":"    protected HashMap<String, Analyzer> analyzerCache() {\n      HashMap<String, Analyzer> cache = new HashMap<String, Analyzer>();\n      for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"123698fbe83b595f9e084f0019cd35ab4a01d7f7","date":1399070065,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema.SolrIndexAnalyzer#analyzerCache().mjava","sourceNew":"    protected HashMap<String, Analyzer> analyzerCache() {\n      HashMap<String, Analyzer> cache = new HashMap<>();\n      for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getIndexAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","sourceOld":"    protected HashMap<String, Analyzer> analyzerCache() {\n      HashMap<String, Analyzer> cache = new HashMap<>();\n      for (SchemaField f : getFields().values()) {\n        Analyzer analyzer = f.getType().getAnalyzer();\n        cache.put(f.getName(), analyzer);\n      }\n      return cache;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2f49143da0a5d278a72f741432047fcfa6da996e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"123698fbe83b595f9e084f0019cd35ab4a01d7f7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f49143da0a5d278a72f741432047fcfa6da996e":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["123698fbe83b595f9e084f0019cd35ab4a01d7f7"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["123698fbe83b595f9e084f0019cd35ab4a01d7f7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["2f49143da0a5d278a72f741432047fcfa6da996e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"123698fbe83b595f9e084f0019cd35ab4a01d7f7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2f49143da0a5d278a72f741432047fcfa6da996e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}