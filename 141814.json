{"path":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    if (storedHighlightFieldNames == null) {\n      storedHighlightFieldNames = new LinkedList<String>();\n      for (String fieldName : fieldNames) {\n        try {\n          SchemaField field = schema.getField(fieldName);\n          if (field.stored() &&\n                  ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                  (field.getType() instanceof org.apache.solr.schema.StrField))) {\n            storedHighlightFieldNames.add(fieldName);\n          }\n        } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n        }\n      }\n    }\n    return storedHighlightFieldNames;\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    if (storedHighlightFieldNames == null) {\n      storedHighlightFieldNames = new LinkedList<String>();\n      for (String fieldName : fieldNames) {\n        try {\n          SchemaField field = schema.getField(fieldName);\n          if (field.stored() &&\n                  ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                  (field.getType() instanceof org.apache.solr.schema.StrField))) {\n            storedHighlightFieldNames.add(fieldName);\n          }\n        } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n        }\n      }\n    }\n    return storedHighlightFieldNames;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    if (storedHighlightFieldNames == null) {\n      storedHighlightFieldNames = new LinkedList<String>();\n      for (String fieldName : fieldNames) {\n        try {\n          SchemaField field = schema.getField(fieldName);\n          if (field.stored() &&\n                  ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                  (field.getType() instanceof org.apache.solr.schema.StrField))) {\n            storedHighlightFieldNames.add(fieldName);\n          }\n        } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n        }\n      }\n    }\n    return storedHighlightFieldNames;\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    if (storedHighlightFieldNames == null) {\n      storedHighlightFieldNames = new LinkedList<String>();\n      for (String fieldName : fieldNames) {\n        try {\n          SchemaField field = schema.getField(fieldName);\n          if (field.stored() &&\n                  ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                  (field.getType() instanceof org.apache.solr.schema.StrField))) {\n            storedHighlightFieldNames.add(fieldName);\n          }\n        } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n        }\n      }\n    }\n    return storedHighlightFieldNames;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    if (storedHighlightFieldNames == null) {\n      storedHighlightFieldNames = new LinkedList<String>();\n      for (String fieldName : fieldNames) {\n        try {\n          SchemaField field = schema.getField(fieldName);\n          if (field.stored() &&\n                  ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                  (field.getType() instanceof org.apache.solr.schema.StrField))) {\n            storedHighlightFieldNames.add(fieldName);\n          }\n        } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n        }\n      }\n    }\n    return storedHighlightFieldNames;\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    if (storedHighlightFieldNames == null) {\n      storedHighlightFieldNames = new LinkedList<String>();\n      for (String fieldName : fieldNames) {\n        try {\n          SchemaField field = schema.getField(fieldName);\n          if (field.stored() &&\n                  ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                  (field.getType() instanceof org.apache.solr.schema.StrField))) {\n            storedHighlightFieldNames.add(fieldName);\n          }\n        } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n        }\n      }\n    }\n    return storedHighlightFieldNames;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf06d824eb0005a1863f5003d17920cb8d8d5193","date":1326591035,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<String>();\n        for (String fieldName : fieldNames) {\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() &&\n                ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                    (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    if (storedHighlightFieldNames == null) {\n      storedHighlightFieldNames = new LinkedList<String>();\n      for (String fieldName : fieldNames) {\n        try {\n          SchemaField field = schema.getField(fieldName);\n          if (field.stored() &&\n                  ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                  (field.getType() instanceof org.apache.solr.schema.StrField))) {\n            storedHighlightFieldNames.add(fieldName);\n          }\n        } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n        }\n      }\n    }\n    return storedHighlightFieldNames;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (String fieldName : fieldNames) {\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() &&\n                ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                    (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<String>();\n        for (String fieldName : fieldNames) {\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() &&\n                ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                    (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac9de183adbc9483681f275ac1e2d92ed19f52e1","date":1452414626,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : fieldInfos) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be\n   * highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (String fieldName : fieldNames) {\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() &&\n                ((field.getType() instanceof org.apache.solr.schema.TextField) ||\n                    (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field \\\"\" + fieldName + \"\\\" found in index, but not defined in schema.\");\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a9344cff6a72bc4c1ef080c69e10ad0635b811","date":1490410892,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : searcher.getFieldInfos()) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = searcher.getSchema().getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : fieldInfos) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de548de3ce5405595899f548152d4b93ac9eb9cc","date":1490594650,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher#getStoredHighlightFieldNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getStoredHighlightFieldNames().mjava","sourceNew":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : searcher.getFieldInfos()) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = searcher.getSchema().getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a collection of the names of all stored fields which can be highlighted the index reader knows about.\n   */\n  public Collection<String> getStoredHighlightFieldNames() {\n    synchronized (this) {\n      if (storedHighlightFieldNames == null) {\n        storedHighlightFieldNames = new LinkedList<>();\n        for (FieldInfo fieldInfo : fieldInfos) {\n          final String fieldName = fieldInfo.name;\n          try {\n            SchemaField field = schema.getField(fieldName);\n            if (field.stored() && ((field.getType() instanceof org.apache.solr.schema.TextField)\n                || (field.getType() instanceof org.apache.solr.schema.StrField))) {\n              storedHighlightFieldNames.add(fieldName);\n            }\n          } catch (RuntimeException e) { // getField() throws a SolrException, but it arrives as a RuntimeException\n            log.warn(\"Field [{}] found in index, but not defined in schema.\", fieldName);\n          }\n        }\n      }\n      return storedHighlightFieldNames;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cf06d824eb0005a1863f5003d17920cb8d8d5193"],"de548de3ce5405595899f548152d4b93ac9eb9cc":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"63a9344cff6a72bc4c1ef080c69e10ad0635b811":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"cf06d824eb0005a1863f5003d17920cb8d8d5193":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["63a9344cff6a72bc4c1ef080c69e10ad0635b811"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"de548de3ce5405595899f548152d4b93ac9eb9cc":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"cf06d824eb0005a1863f5003d17920cb8d8d5193":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"63a9344cff6a72bc4c1ef080c69e10ad0635b811":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c26f00b574427b55127e869b935845554afde1fa":["cf06d824eb0005a1863f5003d17920cb8d8d5193"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["de548de3ce5405595899f548152d4b93ac9eb9cc","63a9344cff6a72bc4c1ef080c69e10ad0635b811"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de548de3ce5405595899f548152d4b93ac9eb9cc","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}