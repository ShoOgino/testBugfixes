{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PrefixTreeIterator#hasNext().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PrefixTreeIterator#hasNext().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PrefixTreeIterator#hasNext().mjava","sourceNew":"    @Override\n    public boolean hasNext() {\n      if (nextCell != null) {\n        return true;\n      }\n      SpatialRelation rel;\n      // loop until we're at the end of the quad tree or we hit a relation\n      while (thisCell != null) {\n        rel = thisCell.getShape().relate(shape);\n        if (rel == SpatialRelation.DISJOINT) {\n          thisCell = thisCell.nextCell(false);\n        } else { // within || intersects || contains\n          thisCell.setShapeRel(rel);\n          nextCell = thisCell;\n          if (rel == SpatialRelation.WITHIN) {\n            thisCell.setLeaf();\n            thisCell = thisCell.nextCell(false);\n          } else {  // intersects || contains\n            level = (short) (thisCell.getLevel());\n            if (level == detailLevel || pruned(rel)) {\n              thisCell.setLeaf();\n              if (shape instanceof Point) {\n                thisCell.setShapeRel(SpatialRelation.WITHIN);\n                thisCell = null;\n              } else {\n                thisCell = thisCell.nextCell(false);\n              }\n              break;\n            }\n            thisCell = thisCell.nextCell(true);\n          }\n          break;\n        }\n      }\n      return nextCell != null;\n    }\n\n","sourceOld":"    @Override\n    public boolean hasNext() {\n      if (nextCell != null) {\n        return true;\n      }\n      SpatialRelation rel;\n      // loop until we're at the end of the quad tree or we hit a relation\n      while (thisCell != null) {\n        rel = thisCell.getShape().relate(shape);\n        if (rel == SpatialRelation.DISJOINT) {\n          thisCell = thisCell.nextCell(false);\n        } else { // within || intersects || contains\n          thisCell.setShapeRel(rel);\n          nextCell = thisCell;\n          if (rel == SpatialRelation.WITHIN) {\n            thisCell.setLeaf();\n            thisCell = thisCell.nextCell(false);\n          } else {  // intersects || contains\n            level = (short) (thisCell.getLevel());\n            if (level == detailLevel || pruned(rel)) {\n              thisCell.setLeaf();\n              if (shape instanceof Point) {\n                thisCell.setShapeRel(SpatialRelation.WITHIN);\n                thisCell = null;\n              } else {\n                thisCell = thisCell.nextCell(false);\n              }\n              break;\n            }\n            thisCell = thisCell.nextCell(true);\n          }\n          break;\n        }\n      }\n      return nextCell != null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PrefixTreeIterator#hasNext().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PrefixTreeIterator#hasNext().mjava","sourceNew":"    @Override\n    public boolean hasNext() {\n      if (nextCell != null) {\n        return true;\n      }\n      SpatialRelation rel;\n      // loop until we're at the end of the quad tree or we hit a relation\n      while (thisCell != null) {\n        rel = thisCell.getShape().relate(shape);\n        if (rel == SpatialRelation.DISJOINT) {\n          thisCell = thisCell.nextCell(false);\n        } else { // within || intersects || contains\n          thisCell.setShapeRel(rel);\n          nextCell = thisCell;\n          if (rel == SpatialRelation.WITHIN) {\n            thisCell.setLeaf();\n            thisCell = thisCell.nextCell(false);\n          } else {  // intersects || contains\n            level = (short) (thisCell.getLevel());\n            if (level == detailLevel || pruned(rel)) {\n              thisCell.setLeaf();\n              if (shape instanceof Point) {\n                thisCell.setShapeRel(SpatialRelation.WITHIN);\n                thisCell = null;\n              } else {\n                thisCell = thisCell.nextCell(false);\n              }\n              break;\n            }\n            thisCell = thisCell.nextCell(true);\n          }\n          break;\n        }\n      }\n      return nextCell != null;\n    }\n\n","sourceOld":"    @Override\n    public boolean hasNext() {\n      if (nextCell != null) {\n        return true;\n      }\n      SpatialRelation rel;\n      // loop until we're at the end of the quad tree or we hit a relation\n      while (thisCell != null) {\n        rel = thisCell.getShape().relate(shape);\n        if (rel == SpatialRelation.DISJOINT) {\n          thisCell = thisCell.nextCell(false);\n        } else { // within || intersects || contains\n          thisCell.setShapeRel(rel);\n          nextCell = thisCell;\n          if (rel == SpatialRelation.WITHIN) {\n            thisCell.setLeaf();\n            thisCell = thisCell.nextCell(false);\n          } else {  // intersects || contains\n            level = (short) (thisCell.getLevel());\n            if (level == detailLevel || pruned(rel)) {\n              thisCell.setLeaf();\n              if (shape instanceof Point) {\n                thisCell.setShapeRel(SpatialRelation.WITHIN);\n                thisCell = null;\n              } else {\n                thisCell = thisCell.nextCell(false);\n              }\n              break;\n            }\n            thisCell = thisCell.nextCell(true);\n          }\n          break;\n        }\n      }\n      return nextCell != null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}