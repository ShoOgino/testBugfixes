{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","commits":[{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton#createState().mjava","sourceNew":"  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    return state;\n  }\n\n","sourceOld":"  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    return state;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bab620c8ab32bb77a62753eca4afb8e47efa87c","date":1402997861,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","sourceNew":"  /** Create a new state. */\n  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    return state;\n  }\n\n","sourceOld":"  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    return state;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a546f0e920177e9588c7ac5e8c46ce22c43f8ee0","date":1403106109,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","sourceNew":"  /** Create a new state. */\n  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    if (state >= isAccept.length()) {\n      FixedBitSet newBits = new FixedBitSet(ArrayUtil.oversize(state+1, 1));\n      newBits.or(isAccept);\n      isAccept = newBits;\n    }\n    return state;\n  }\n\n","sourceOld":"  /** Create a new state. */\n  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    return state;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6950511e8508a30eaacc2f8469121cf32be2ef6d","date":1403109868,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","sourceNew":"  /** Create a new state. */\n  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    return state;\n  }\n\n","sourceOld":"  /** Create a new state. */\n  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    if (state >= isAccept.length()) {\n      FixedBitSet newBits = new FixedBitSet(ArrayUtil.oversize(state+1, 1));\n      newBits.or(isAccept);\n      isAccept = newBits;\n    }\n    return state;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#createState().mjava","pathOld":"/dev/null","sourceNew":"  /** Create a new state. */\n  public int createState() {\n    growStates();\n    int state = nextState/2;\n    states[nextState] = -1;\n    nextState += 2;\n    return state;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a546f0e920177e9588c7ac5e8c46ce22c43f8ee0":["6bab620c8ab32bb77a62753eca4afb8e47efa87c"],"6bab620c8ab32bb77a62753eca4afb8e47efa87c":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6950511e8508a30eaacc2f8469121cf32be2ef6d":["a546f0e920177e9588c7ac5e8c46ce22c43f8ee0"],"5c84485629d80d203608e8975a1139de9933cc38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6950511e8508a30eaacc2f8469121cf32be2ef6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"a546f0e920177e9588c7ac5e8c46ce22c43f8ee0":["6950511e8508a30eaacc2f8469121cf32be2ef6d"],"6bab620c8ab32bb77a62753eca4afb8e47efa87c":["a546f0e920177e9588c7ac5e8c46ce22c43f8ee0"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["6bab620c8ab32bb77a62753eca4afb8e47efa87c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"6950511e8508a30eaacc2f8469121cf32be2ef6d":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}