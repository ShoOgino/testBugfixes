{"path":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","commits":[{"id":"fbe8b2974b783dfe1b0160f39e4de0315fa51adb","date":1382029739,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = new File(TEMP_DIR, this.getClass().getName() + \"testSplitByRouteKey\");\n    if (indexDir.exists())  {\n      FileUtils.deleteDirectory(indexDir);\n    }\n    indexDir.mkdirs();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","sourceNew":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = new File(TEMP_DIR, this.getClass().getName() + \"testSplitByRouteKey\");\n    if (indexDir.exists())  {\n      FileUtils.deleteDirectory(indexDir);\n    }\n    indexDir.mkdirs();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","sourceNew":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = new File(dataDir, this.getClass().getName() + \"testSplitByRouteKey\");\n    if (indexDir.exists())  {\n      FileUtils.deleteDirectory(indexDir);\n    }\n    indexDir.mkdirs();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = new File(TEMP_DIR, this.getClass().getName() + \"testSplitByRouteKey\");\n    if (indexDir.exists())  {\n      FileUtils.deleteDirectory(indexDir);\n    }\n    indexDir.mkdirs();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","sourceNew":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = createTempDir();\n    if (indexDir.exists())  {\n      FileUtils.deleteDirectory(indexDir);\n    }\n    indexDir.mkdirs();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","sourceNew":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = createTempDir();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = createTempDir();\n    if (indexDir.exists())  {\n      FileUtils.deleteDirectory(indexDir);\n    }\n    indexDir.mkdirs();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","sourceNew":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = createTempDir();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = new File(dataDir, this.getClass().getName() + \"testSplitByRouteKey\");\n    if (indexDir.exists())  {\n      FileUtils.deleteDirectory(indexDir);\n    }\n    indexDir.mkdirs();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","sourceNew":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = createTempDir().toFile();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = createTempDir();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20c968c14aace7cf49843bf2c1fafc7fd3845659","date":1533133859,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitByRouteKey().mjava","sourceNew":"  @Test\n  public void testSplitByRouteKey() throws Exception {\n    doTestSplitByRouteKey(SolrIndexSplitter.SplitMethod.REWRITE);\n  }\n\n","sourceOld":"  @Test\n  public void testSplitByRouteKey() throws Exception  {\n    File indexDir = createTempDir().toFile();\n\n    CompositeIdRouter r1 = new CompositeIdRouter();\n    String splitKey = \"sea-line!\";\n    String key2 = \"soul-raising!\";\n\n    // murmur2 has a collision on the above two keys\n    assertEquals(r1.keyHashRange(splitKey), r1.keyHashRange(key2));\n\n    /*\n    More strings with collisions on murmur2 for future reference:\n    \"Drava\" \"dessert spoon\"\n    \"Bighorn\" \"pleasure lover\"\n    \"attributable to\" \"second edition\"\n    \"sea-line\" \"soul-raising\"\n    \"lift direction\" \"testimony meeting\"\n     */\n\n    for (int i=0; i<10; i++)  {\n      assertU(adoc(\"id\", splitKey + i));\n      assertU(adoc(\"id\", key2 + i));\n    }\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==20\");\n\n    DocRouter.Range splitKeyRange = r1.keyHashRange(splitKey);\n\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir.getAbsolutePath()), null, Lists.newArrayList(splitKeyRange), new CompositeIdRouter(), null, splitKey);\n      new SolrIndexSplitter(command).split();\n      directory = h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index has wrong number of documents\", 10, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null)  {\n        request.close();\n      }\n      if (directory != null)  {\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fbe8b2974b783dfe1b0160f39e4de0315fa51adb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["fbe8b2974b783dfe1b0160f39e4de0315fa51adb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"d0d579490a72f2e6297eaa648940611234c57cf1":["fbe8b2974b783dfe1b0160f39e4de0315fa51adb"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20c968c14aace7cf49843bf2c1fafc7fd3845659"]},"commit2Childs":{"fbe8b2974b783dfe1b0160f39e4de0315fa51adb":["1416f9d09d016a6894cd17e1caac137dad2bba59","d0d579490a72f2e6297eaa648940611234c57cf1"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fbe8b2974b783dfe1b0160f39e4de0315fa51adb"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"f4abec28b874149a7223e32cc7a01704c27790de":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}