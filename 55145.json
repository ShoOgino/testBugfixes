{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (IOException ignored) {}\n    IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (IOException ignored) {}\n    IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc834f3412d287003cc04691da380b69ab983239","date":1337276089,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (IOException ignored) {\n    }\n    IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (IOException ignored) {}\n    IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (IOException ignored) {\n    }\n    IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (IOException ignored) {}\n    IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bf819846fb54a635eb297e36e7c6196d67f8273","date":1349447995,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","sourceNew":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (Throwable t) {\n      // ignore\n    } finally {\n      // TODO: why the inconsistency here? we do this, but not SimpleText (which says IFD\n      // will do it).\n      // TODO: check that IFD really does this always, even if codec abort() throws a \n      // RuntimeException (e.g. ThreadInterruptedException)\n      IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (IOException ignored) {\n    }\n    IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (Throwable t) {\n      // ignore\n    } finally {\n      // TODO: why the inconsistency here? we do this, but not SimpleText (which says IFD\n      // will do it).\n      // TODO: check that IFD really does this always, even if codec abort() throws a \n      // RuntimeException (e.g. ThreadInterruptedException)\n      IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesConsumer#abort().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void abort() {\n    try {\n      close();\n    } catch (Throwable t) {\n      // ignore\n    } finally {\n      // TODO: why the inconsistency here? we do this, but not SimpleText (which says IFD\n      // will do it).\n      // TODO: check that IFD really does this always, even if codec abort() throws a \n      // RuntimeException (e.g. ThreadInterruptedException)\n      IOUtils.deleteFilesIgnoringExceptions(mainDirectory, IndexFileNames.segmentFileName(\n        segmentName, segmentSuffix, IndexFileNames.COMPOUND_FILE_EXTENSION),\n        IndexFileNames.segmentFileName(segmentName, segmentSuffix,\n            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fc834f3412d287003cc04691da380b69ab983239"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["1bf819846fb54a635eb297e36e7c6196d67f8273","0837ab0472feecb3a54260729d845f839e1cbd72"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["1bf819846fb54a635eb297e36e7c6196d67f8273"],"fc834f3412d287003cc04691da380b69ab983239":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1bf819846fb54a635eb297e36e7c6196d67f8273":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["1bf819846fb54a635eb297e36e7c6196d67f8273"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","fc834f3412d287003cc04691da380b69ab983239"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"fc834f3412d287003cc04691da380b69ab983239":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"1bf819846fb54a635eb297e36e7c6196d67f8273":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}