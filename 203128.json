{"path":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","commits":[{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"/dev/null","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir, true);\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66b12ba4967665216eeb706b58d424c51fb3641a","date":1169160423,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir, true);\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b97548d27406e9f33187836e1de98d473a63f5d","date":1196088721,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8","date":1254593002,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexReader.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexReader.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0eb5b0b5b98c777dad412afbfb347d2c0889327","date":1259094367,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = \"target/test\";\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = System.getProperty(\"tempDir\");\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = \"target/test\";\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = \"target/test\";\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = \"target/test\";\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = \"target/test\";\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        String tempDir = \"target/test\";\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException\n    {\n        String tempDir = \"target/test\";\n        if (tempDir == null)\n            throw new IOException(\"tempDir undefined, cannot run test\");\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        String tempDir = \"target/test\";\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        String tempDir = \"target/test\";\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        String tempDir = \"target/test\";\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        String tempDir = \"target/test\";\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        String tempDir = \"target/test\";\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        String tempDir = \"target/test\";\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1abce5aeaacde7e027ec6cc4d58b3eea5f5b40b3","date":1268498920,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        File indexDir = new File(System.getProperty(\"tempDir\"), \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        String tempDir = \"target/test\";\n\n        File indexDir = new File(tempDir, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d16275d75dfe0b780ed62df4c811d083187c71a","date":1268583591,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        File indexDir = new File(TEMP_DIR, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        File indexDir = new File(System.getProperty(\"tempDir\"), \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testWritingNorms().mjava","sourceNew":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        File indexDir = new File(TEMP_DIR, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit even if a reader\n    // is open against the index:\n    public void testWritingNorms() throws IOException {\n        File indexDir = new File(TEMP_DIR, \"lucenetestnormwriter\");\n        Directory dir = FSDirectory.open(indexDir);\n        IndexWriter writer;\n        IndexReader reader;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n\n        // we should be holding the write lock now:\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.commit();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        // open a 2nd reader:\n        IndexReader reader2 = IndexReader.open(dir, false);\n\n        // set norm again for doc 0\n        reader.setNorm(0, \"content\", (float) 3.0);\n        assertTrue(\"locked\", IndexWriter.isLocked(dir));\n\n        reader.close();\n\n        // we should not be holding the write lock now:\n        assertTrue(\"not locked\", !IndexWriter.isLocked(dir));\n\n        reader2.close();\n        dir.close();\n\n        rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1abce5aeaacde7e027ec6cc4d58b3eea5f5b40b3":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["8b97548d27406e9f33187836e1de98d473a63f5d"],"b0eb5b0b5b98c777dad412afbfb347d2c0889327":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"66b12ba4967665216eeb706b58d424c51fb3641a":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["b0eb5b0b5b98c777dad412afbfb347d2c0889327"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["0a046c0c310bc77931fc8441bd920053b607dd14"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["1abce5aeaacde7e027ec6cc4d58b3eea5f5b40b3"],"8b97548d27406e9f33187836e1de98d473a63f5d":["66b12ba4967665216eeb706b58d424c51fb3641a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1d16275d75dfe0b780ed62df4c811d083187c71a"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"0a046c0c310bc77931fc8441bd920053b607dd14":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"1abce5aeaacde7e027ec6cc4d58b3eea5f5b40b3":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"b0eb5b0b5b98c777dad412afbfb347d2c0889327":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["1abce5aeaacde7e027ec6cc4d58b3eea5f5b40b3"],"66b12ba4967665216eeb706b58d424c51fb3641a":["8b97548d27406e9f33187836e1de98d473a63f5d"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["66b12ba4967665216eeb706b58d424c51fb3641a"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["b0eb5b0b5b98c777dad412afbfb347d2c0889327"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8b97548d27406e9f33187836e1de98d473a63f5d":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}