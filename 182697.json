{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","commits":[{"id":"94ee361295fb38310ac4d53cb4773d1622423d68","date":1456833885,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/PointDistanceQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/PointDistanceQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = classHash();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = classHash();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = classHash();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = classHash();\n    result = prime * result + field.hashCode();\n    long temp;\n    temp = Double.doubleToLongBits(latitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(longitude);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    temp = Double.doubleToLongBits(radiusMeters);\n    result = prime * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["0e7bc21595222ae4f75509300fbb7726691f387f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94ee361295fb38310ac4d53cb4773d1622423d68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e7bc21595222ae4f75509300fbb7726691f387f":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94ee361295fb38310ac4d53cb4773d1622423d68"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94ee361295fb38310ac4d53cb4773d1622423d68","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"94ee361295fb38310ac4d53cb4773d1622423d68":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"0e7bc21595222ae4f75509300fbb7726691f387f":["88b0212386fe531136816706dc37dc49b9dbf7dc","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}