{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV);\n    doc.add(new Field(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new Field(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV);\n    doc.add(new Field(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new Field(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV);\n    doc.add(new Field(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new Field(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV);\n    doc.add(new Field(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new Field(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV);\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random textual data\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV);\n    doc.add(new Field(\"content\", \"some random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"some more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new Field(\"content\", \"random blob\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new Field(\"content\", \"random word stuck in alot of other text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97d4692d0c601ff773f0a2231967312428a904e4","date":1366026608,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = true;\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\", canUseIDV);\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\", canUseIDV);\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\", canUseIDV);\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField, canUseIDV);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.shutdown();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.shutdown();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.shutdown();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.shutdown();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.close();\n\n    AllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupsCollectorTest#testTotalGroupCount().mjava","sourceNew":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.close();\n\n    AllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTotalGroupCount() throws Exception {\n\n    final String groupField = \"author\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"1\", customType));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random text blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"2\", customType));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"author1\");\n    doc.add(new TextField(\"content\", \"some more random textual data\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"3\", customType));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"author2\");\n    doc.add(new TextField(\"content\", \"some random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"4\", customType));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"some more random text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"5\", customType));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"author3\");\n    doc.add(new TextField(\"content\", \"random blob\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    // 6 -- no author field\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"random word stuck in alot of other text\", Field.Store.YES));\n    doc.add(new Field(\"id\", \"6\", customType));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n    w.close();\n\n    AbstractAllGroupsCollector<?> allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"random\")), allGroupsCollector);\n    assertEquals(4, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"some\")), allGroupsCollector);\n    assertEquals(3, allGroupsCollector.getGroupCount());\n\n    allGroupsCollector = createRandomCollector(groupField);\n    indexSearcher.search(new TermQuery(new Term(\"content\", \"blob\")), allGroupsCollector);\n    assertEquals(2, allGroupsCollector.getGroupCount());\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"20e94e61fe5291647346b70437617e6b6c370408":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"97d4692d0c601ff773f0a2231967312428a904e4":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["d0ef034a4f10871667ae75181537775ddcf8ade4","20e94e61fe5291647346b70437617e6b6c370408"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["97d4692d0c601ff773f0a2231967312428a904e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["97d4692d0c601ff773f0a2231967312428a904e4"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"20e94e61fe5291647346b70437617e6b6c370408":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"97d4692d0c601ff773f0a2231967312428a904e4":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}