{"path":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#main(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#main(String[]).mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#main(String[]).mjava","sourceNew":"    /** Main for running test case by itself. */\n    public static void main(String args[]) {\n        TestRunner.run (new TestSuite(TestCompoundFile.class));\n//        TestRunner.run (new TestCompoundFile(\"testSingleFile\"));\n//        TestRunner.run (new TestCompoundFile(\"testTwoFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testClonedStreamsClosing\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadAfterClose\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccess\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccessClones\"));\n//        TestRunner.run (new TestCompoundFile(\"testFileNotFound\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadPastEOF\"));\n\n//        TestRunner.run (new TestCompoundFile(\"testIWCreate\"));\n\n    }\n\n","sourceOld":"    /** Main for running test case by itself. */\n    public static void main(String args[]) {\n        TestRunner.run (new TestSuite(TestCompoundFile.class));\n//        TestRunner.run (new TestCompoundFile(\"testSingleFile\"));\n//        TestRunner.run (new TestCompoundFile(\"testTwoFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testClonedStreamsClosing\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadAfterClose\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccess\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccessClones\"));\n//        TestRunner.run (new TestCompoundFile(\"testFileNotFound\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadPastEOF\"));\n\n//        TestRunner.run (new TestCompoundFile(\"testIWCreate\"));\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64d8c4b572c9d5e49a6f831e8d4ebc203b770272","date":1310038257,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#main(String[]).mjava","sourceNew":null,"sourceOld":"    /** Main for running test case by itself. */\n    public static void main(String args[]) {\n        TestRunner.run (new TestSuite(TestCompoundFile.class));\n//        TestRunner.run (new TestCompoundFile(\"testSingleFile\"));\n//        TestRunner.run (new TestCompoundFile(\"testTwoFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testClonedStreamsClosing\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadAfterClose\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccess\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccessClones\"));\n//        TestRunner.run (new TestCompoundFile(\"testFileNotFound\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadPastEOF\"));\n\n//        TestRunner.run (new TestCompoundFile(\"testIWCreate\"));\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#main(String[]).mjava","sourceNew":null,"sourceOld":"    /** Main for running test case by itself. */\n    public static void main(String args[]) {\n        TestRunner.run (new TestSuite(TestCompoundFile.class));\n//        TestRunner.run (new TestCompoundFile(\"testSingleFile\"));\n//        TestRunner.run (new TestCompoundFile(\"testTwoFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testClonedStreamsClosing\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadAfterClose\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccess\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccessClones\"));\n//        TestRunner.run (new TestCompoundFile(\"testFileNotFound\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadPastEOF\"));\n\n//        TestRunner.run (new TestCompoundFile(\"testIWCreate\"));\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#main(String[]).mjava","sourceNew":null,"sourceOld":"    /** Main for running test case by itself. */\n    public static void main(String args[]) {\n        TestRunner.run (new TestSuite(TestCompoundFile.class));\n//        TestRunner.run (new TestCompoundFile(\"testSingleFile\"));\n//        TestRunner.run (new TestCompoundFile(\"testTwoFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomFiles\"));\n//        TestRunner.run (new TestCompoundFile(\"testClonedStreamsClosing\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadAfterClose\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccess\"));\n//        TestRunner.run (new TestCompoundFile(\"testRandomAccessClones\"));\n//        TestRunner.run (new TestCompoundFile(\"testFileNotFound\"));\n//        TestRunner.run (new TestCompoundFile(\"testReadPastEOF\"));\n\n//        TestRunner.run (new TestCompoundFile(\"testIWCreate\"));\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["9454a6510e2db155fb01faa5c049b06ece95fab9","64d8c4b572c9d5e49a6f831e8d4ebc203b770272"],"64d8c4b572c9d5e49a6f831e8d4ebc203b770272":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["9454a6510e2db155fb01faa5c049b06ece95fab9","64d8c4b572c9d5e49a6f831e8d4ebc203b770272"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64d8c4b572c9d5e49a6f831e8d4ebc203b770272"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"64d8c4b572c9d5e49a6f831e8d4ebc203b770272":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1291e4568eb7d9463d751627596ef14baf4c1603","64d8c4b572c9d5e49a6f831e8d4ebc203b770272","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}