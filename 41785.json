{"path":"lucene/src/java/org/apache/lucene/document/Field#Field(String,String,Store,Index).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":2,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#Field(String,String,Store,Index).mjava","pathOld":"backwards/src/java/org/apache/lucene/document/Field#Field(String,String,Store,Index).mjava","sourceNew":"  /**\n   * Create a field by specifying its name, value and how it will\n   * be saved in the index. Term vectors will not be stored in the index.\n   * \n   * @param name The name of the field\n   * @param value The string to process\n   * @param store Whether <code>value</code> should be stored in the index\n   * @param index Whether the field should be indexed, and if so, if it should\n   *  be tokenized before indexing \n   * @throws NullPointerException if name or value is <code>null</code>\n   * @throws IllegalArgumentException if the field is neither stored nor indexed \n   */\n  public Field(String name, String value, Store store, Index index) {\n    this(name, value, store, index, TermVector.NO);\n  }\n\n","sourceOld":"  /**\n   * Create a field by specifying its name, value and how it will\n   * be saved in the index. Term vectors will not be stored in the index.\n   * \n   * @param name The name of the field\n   * @param value The string to process\n   * @param store Whether <code>value</code> should be stored in the index\n   * @param index Whether the field should be indexed, and if so, if it should\n   *  be tokenized before indexing \n   * @throws NullPointerException if name or value is <code>null</code>\n   * @throws IllegalArgumentException if the field is neither stored nor indexed \n   */\n  public Field(String name, String value, Store store, Index index) {\n    this(name, value, store, index, TermVector.NO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/document/Field#Field(String,String,Store,Index).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a field by specifying its name, value and how it will\n   * be saved in the index. Term vectors will not be stored in the index.\n   * \n   * @param name The name of the field\n   * @param value The string to process\n   * @param store Whether <code>value</code> should be stored in the index\n   * @param index Whether the field should be indexed, and if so, if it should\n   *  be tokenized before indexing \n   * @throws NullPointerException if name or value is <code>null</code>\n   * @throws IllegalArgumentException if the field is neither stored nor indexed \n   */\n  public Field(String name, String value, Store store, Index index) {\n    this(name, value, store, index, TermVector.NO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#Field(String,String,Store,Index).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a field by specifying its name, value and how it will\n   * be saved in the index. Term vectors will not be stored in the index.\n   * \n   * @param name The name of the field\n   * @param value The string to process\n   * @param store Whether <code>value</code> should be stored in the index\n   * @param index Whether the field should be indexed, and if so, if it should\n   *  be tokenized before indexing \n   * @throws NullPointerException if name or value is <code>null</code>\n   * @throws IllegalArgumentException if the field is neither stored nor indexed \n   *\n   * @deprecated Use {@link StringField}, {@link TextField} instead. */\n  @Deprecated\n  public Field(String name, String value, Store store, Index index) {\n    this(name, value, translateFieldType(store, index, TermVector.NO));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#Field(String,String,Store,Index).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#Field(String,String,Store,Index).mjava","sourceNew":"  /**\n   * Create a field by specifying its name, value and how it will\n   * be saved in the index. Term vectors will not be stored in the index.\n   * \n   * @param name The name of the field\n   * @param value The string to process\n   * @param store Whether <code>value</code> should be stored in the index\n   * @param index Whether the field should be indexed, and if so, if it should\n   *  be tokenized before indexing \n   * @throws NullPointerException if name or value is <code>null</code>\n   * @throws IllegalArgumentException if the field is neither stored nor indexed \n   *\n   * @deprecated Use {@link StringField}, {@link TextField} instead. */\n  @Deprecated\n  public Field(String name, String value, Store store, Index index) {\n    this(name, value, translateFieldType(store, index, TermVector.NO));\n  }\n\n","sourceOld":"  /**\n   * Create a field by specifying its name, value and how it will\n   * be saved in the index. Term vectors will not be stored in the index.\n   * \n   * @param name The name of the field\n   * @param value The string to process\n   * @param store Whether <code>value</code> should be stored in the index\n   * @param index Whether the field should be indexed, and if so, if it should\n   *  be tokenized before indexing \n   * @throws NullPointerException if name or value is <code>null</code>\n   * @throws IllegalArgumentException if the field is neither stored nor indexed \n   *\n   * @deprecated Use {@link StringField}, {@link TextField} instead. */\n  @Deprecated\n  public Field(String name, String value, Store store, Index index) {\n    this(name, value, translateFieldType(store, index, TermVector.NO));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa0f44f887719e97183771e977cfc4bfb485b766"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fa0f44f887719e97183771e977cfc4bfb485b766":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["fa0f44f887719e97183771e977cfc4bfb485b766"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}