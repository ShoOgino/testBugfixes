{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    assert !rollbackSegmentInfos.hasExternalSegments(directory);\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"545bb327f3b017d351cf2bf7a9c09f97163f68fa","date":1296069950,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n  }\n\n","sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n    rollbackSegments = new HashMap<SegmentInfo,Integer>();\n    final int size = rollbackSegmentInfos.size();\n    for(int i=0;i<size;i++)\n      rollbackSegments.put(rollbackSegmentInfos.info(i), Integer.valueOf(i));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"786a4d25ca958a1f315a9d6a74f0441fdafcd522","date":1305734256,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":null,"sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":null,"sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setRollbackSegmentInfos(SegmentInfos).mjava","sourceNew":null,"sourceOld":"  private synchronized void setRollbackSegmentInfos(SegmentInfos infos) {\n    rollbackSegmentInfos = (SegmentInfos) infos.clone();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["545bb327f3b017d351cf2bf7a9c09f97163f68fa"],"545bb327f3b017d351cf2bf7a9c09f97163f68fa":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["29ef99d61cda9641b6250bf9567329a6e65f901d","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"a3776dccca01c11e7046323cfad46a3b4a471233":["545bb327f3b017d351cf2bf7a9c09f97163f68fa","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","545bb327f3b017d351cf2bf7a9c09f97163f68fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","545bb327f3b017d351cf2bf7a9c09f97163f68fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"545bb327f3b017d351cf2bf7a9c09f97163f68fa":["786a4d25ca958a1f315a9d6a74f0441fdafcd522","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["545bb327f3b017d351cf2bf7a9c09f97163f68fa","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}