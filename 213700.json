{"path":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.shutdown();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.shutdown();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermRangeQuery#initializeIndex(String[],Analyzer).mjava","sourceNew":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  private void initializeIndex(String[] values, Analyzer analyzer) throws IOException {\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(analyzer).setOpenMode(OpenMode.CREATE));\n    for (int i = 0; i < values.length; i++) {\n      insertDoc(writer, values[i]);\n    }\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}