{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/SegmentTermDocs#next().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/SegmentTermDocs#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermDocs#next().mjava","sourceNew":"  public boolean next() throws IOException {\n    while (true) {\n      if (count == df)\n        return false;\n      final int docCode = freqStream.readVInt();\n      \n      if (indexOptions == IndexOptions.DOCS_ONLY) {\n        doc += docCode;\n      } else {\n        doc += docCode >>> 1;       // shift off low bit\n        if ((docCode & 1) != 0)       // if low bit is set\n          freq = 1;         // freq is one\n        else {\n          freq = freqStream.readVInt();     // else read freq\n          assert freq != 1;\n        }\n      }\n      \n      count++;\n\n      if (liveDocs == null || liveDocs.get(doc)) {\n        break;\n      }\n      skippingDoc();\n    }\n    return true;\n  }\n\n","sourceOld":"  public boolean next() throws IOException {\n    while (true) {\n      if (count == df)\n        return false;\n      final int docCode = freqStream.readVInt();\n      \n      if (indexOptions == IndexOptions.DOCS_ONLY) {\n        doc += docCode;\n      } else {\n        doc += docCode >>> 1;       // shift off low bit\n        if ((docCode & 1) != 0)       // if low bit is set\n          freq = 1;         // freq is one\n        else {\n          freq = freqStream.readVInt();     // else read freq\n          assert freq != 1;\n        }\n      }\n      \n      count++;\n\n      if (liveDocs == null || liveDocs.get(doc)) {\n        break;\n      }\n      skippingDoc();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/SegmentTermDocs#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/SegmentTermDocs#next().mjava","sourceNew":"  public boolean next() throws IOException {\n    while (true) {\n      if (count == df)\n        return false;\n      final int docCode = freqStream.readVInt();\n      \n      if (indexOptions == IndexOptions.DOCS_ONLY) {\n        doc += docCode;\n      } else {\n        doc += docCode >>> 1;       // shift off low bit\n        if ((docCode & 1) != 0)       // if low bit is set\n          freq = 1;         // freq is one\n        else {\n          freq = freqStream.readVInt();     // else read freq\n          assert freq != 1;\n        }\n      }\n      \n      count++;\n\n      if (liveDocs == null || liveDocs.get(doc)) {\n        break;\n      }\n      skippingDoc();\n    }\n    return true;\n  }\n\n","sourceOld":"  public boolean next() throws IOException {\n    while (true) {\n      if (count == df)\n        return false;\n      final int docCode = freqStream.readVInt();\n      \n      if (indexOptions == IndexOptions.DOCS_ONLY) {\n        doc += docCode;\n      } else {\n        doc += docCode >>> 1;       // shift off low bit\n        if ((docCode & 1) != 0)       // if low bit is set\n          freq = 1;         // freq is one\n        else {\n          freq = freqStream.readVInt();     // else read freq\n          assert freq != 1;\n        }\n      }\n      \n      count++;\n\n      if (liveDocs == null || liveDocs.get(doc)) {\n        break;\n      }\n      skippingDoc();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}