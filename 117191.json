{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestTermScorer#testSkipTo().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestTermScorer#testSkipTo().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestTermScorer#testSkipTo().mjava","sourceNew":"    public void testSkipTo() throws Exception {\n\n        Term allTerm = new Term(FIELD, \"all\");\n        TermQuery termQuery = new TermQuery(allTerm);\n\n        Weight weight = termQuery.weight(indexSearcher);\n\n        TermScorer ts = new TermScorer(weight,\n                                       indexReader.termDocs(allTerm), indexSearcher.getSimilarity(),\n                                       indexReader.norms(FIELD));\n        assertTrue(\"Didn't skip\", ts.advance(3) != DocIdSetIterator.NO_MORE_DOCS);\n        //The next doc should be doc 5\n        assertTrue(\"doc should be number 5\", ts.docID() == 5);\n    }\n\n","sourceOld":"    public void testSkipTo() throws Exception {\n\n        Term allTerm = new Term(FIELD, \"all\");\n        TermQuery termQuery = new TermQuery(allTerm);\n\n        Weight weight = termQuery.weight(indexSearcher);\n\n        TermScorer ts = new TermScorer(weight,\n                                       indexReader.termDocs(allTerm), indexSearcher.getSimilarity(),\n                                       indexReader.norms(FIELD));\n        assertTrue(\"Didn't skip\", ts.advance(3) != DocIdSetIterator.NO_MORE_DOCS);\n        //The next doc should be doc 5\n        assertTrue(\"doc should be number 5\", ts.docID() == 5);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestTermScorer#testSkipTo().mjava","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestTermScorer#testSkipTo().mjava","sourceNew":"    public void testSkipTo() throws Exception {\n\n        Term allTerm = new Term(FIELD, \"all\");\n        TermQuery termQuery = new TermQuery(allTerm);\n\n        Weight weight = termQuery.weight(indexSearcher);\n\n        Scorer ts = weight.scorer(indexSearcher.getIndexReader(),\n                                  true, true);\n\n        assertTrue(\"Didn't skip\", ts.advance(3) != DocIdSetIterator.NO_MORE_DOCS);\n        //The next doc should be doc 5\n        assertTrue(\"doc should be number 5\", ts.docID() == 5);\n    }\n\n","sourceOld":"    public void testSkipTo() throws Exception {\n\n        Term allTerm = new Term(FIELD, \"all\");\n        TermQuery termQuery = new TermQuery(allTerm);\n\n        Weight weight = termQuery.weight(indexSearcher);\n\n        TermScorer ts = new TermScorer(weight,\n                                       indexReader.termDocs(allTerm), indexSearcher.getSimilarity(),\n                                       indexReader.norms(FIELD));\n        assertTrue(\"Didn't skip\", ts.advance(3) != DocIdSetIterator.NO_MORE_DOCS);\n        //The next doc should be doc 5\n        assertTrue(\"doc should be number 5\", ts.docID() == 5);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestTermScorer#testSkipTo().mjava","sourceNew":null,"sourceOld":"    public void testSkipTo() throws Exception {\n\n        Term allTerm = new Term(FIELD, \"all\");\n        TermQuery termQuery = new TermQuery(allTerm);\n\n        Weight weight = termQuery.weight(indexSearcher);\n\n        Scorer ts = weight.scorer(indexSearcher.getIndexReader(),\n                                  true, true);\n\n        assertTrue(\"Didn't skip\", ts.advance(3) != DocIdSetIterator.NO_MORE_DOCS);\n        //The next doc should be doc 5\n        assertTrue(\"doc should be number 5\", ts.docID() == 5);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}