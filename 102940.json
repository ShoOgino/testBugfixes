{"path":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","commits":[{"id":"0c0427a35a68b16ec73d3bf5f27e57719915f166","date":1155449527,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public FieldForMerge(Object value, FieldInfo fi, boolean binary, boolean compressed, boolean tokenize) {\n      this.isStored = true;  \n      this.fieldsData = value;\n      this.isCompressed = compressed;\n      this.isBinary = binary;\n      this.isTokenized = tokenize;\n\n      this.name = fi.name.intern();\n      this.isIndexed = fi.isIndexed;\n      this.omitNorms = fi.omitNorms;          \n      this.storeOffsetWithTermVector = fi.storeOffsetWithTermVector;\n      this.storePositionWithTermVector = fi.storePositionWithTermVector;\n      this.storeTermVector = fi.storeTermVector;            \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64fce9fc6afb6b5650eb2bb2e733eb68bead08be","date":1226656964,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","sourceNew":"    public FieldForMerge(Object value, FieldInfo fi, boolean binary, boolean compressed, boolean tokenize) {\n      this.isStored = true;  \n      this.fieldsData = value;\n      this.isCompressed = compressed;\n      this.isBinary = binary;\n      if (binary)\n        binaryLength = ((byte[]) value).length;\n\n      this.isTokenized = tokenize;\n\n      this.name = fi.name.intern();\n      this.isIndexed = fi.isIndexed;\n      this.omitNorms = fi.omitNorms;          \n      this.storeOffsetWithTermVector = fi.storeOffsetWithTermVector;\n      this.storePositionWithTermVector = fi.storePositionWithTermVector;\n      this.storeTermVector = fi.storeTermVector;            \n    }\n\n","sourceOld":"    public FieldForMerge(Object value, FieldInfo fi, boolean binary, boolean compressed, boolean tokenize) {\n      this.isStored = true;  \n      this.fieldsData = value;\n      this.isCompressed = compressed;\n      this.isBinary = binary;\n      this.isTokenized = tokenize;\n\n      this.name = fi.name.intern();\n      this.isIndexed = fi.isIndexed;\n      this.omitNorms = fi.omitNorms;          \n      this.storeOffsetWithTermVector = fi.storeOffsetWithTermVector;\n      this.storePositionWithTermVector = fi.storePositionWithTermVector;\n      this.storeTermVector = fi.storeTermVector;            \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f6b4065cdaf7d1be530c926dc327494bee4ffa","date":1239273470,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","sourceNew":"    public FieldForMerge(Object value, FieldInfo fi, boolean binary, boolean compressed, boolean tokenize) {\n      this.isStored = true;  \n      this.fieldsData = value;\n      this.isCompressed = compressed;\n      this.isBinary = binary;\n      if (binary)\n        binaryLength = ((byte[]) value).length;\n\n      this.isTokenized = tokenize;\n\n      this.name = fi.name.intern();\n      this.isIndexed = fi.isIndexed;\n      this.omitNorms = fi.omitNorms;          \n      this.omitTermFreqAndPositions = fi.omitTermFreqAndPositions;\n      this.storeOffsetWithTermVector = fi.storeOffsetWithTermVector;\n      this.storePositionWithTermVector = fi.storePositionWithTermVector;\n      this.storeTermVector = fi.storeTermVector;            \n    }\n\n","sourceOld":"    public FieldForMerge(Object value, FieldInfo fi, boolean binary, boolean compressed, boolean tokenize) {\n      this.isStored = true;  \n      this.fieldsData = value;\n      this.isCompressed = compressed;\n      this.isBinary = binary;\n      if (binary)\n        binaryLength = ((byte[]) value).length;\n\n      this.isTokenized = tokenize;\n\n      this.name = fi.name.intern();\n      this.isIndexed = fi.isIndexed;\n      this.omitNorms = fi.omitNorms;          \n      this.storeOffsetWithTermVector = fi.storeOffsetWithTermVector;\n      this.storePositionWithTermVector = fi.storePositionWithTermVector;\n      this.storeTermVector = fi.storeTermVector;            \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf93f7a278746d4746fa3ebb3d53267b22fd040f","date":1249495506,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","sourceNew":"    public FieldForMerge(Object value, FieldInfo fi, boolean binary, boolean compressed, boolean tokenize) {\n      this.isStored = true;  \n      this.fieldsData = value;\n      this.isCompressed = compressed;\n      this.isBinary = binary;\n      if (binary)\n        binaryLength = ((byte[]) value).length;\n\n      this.isTokenized = tokenize;\n\n      this.name = StringHelper.intern(fi.name);\n      this.isIndexed = fi.isIndexed;\n      this.omitNorms = fi.omitNorms;          \n      this.omitTermFreqAndPositions = fi.omitTermFreqAndPositions;\n      this.storeOffsetWithTermVector = fi.storeOffsetWithTermVector;\n      this.storePositionWithTermVector = fi.storePositionWithTermVector;\n      this.storeTermVector = fi.storeTermVector;            \n    }\n\n","sourceOld":"    public FieldForMerge(Object value, FieldInfo fi, boolean binary, boolean compressed, boolean tokenize) {\n      this.isStored = true;  \n      this.fieldsData = value;\n      this.isCompressed = compressed;\n      this.isBinary = binary;\n      if (binary)\n        binaryLength = ((byte[]) value).length;\n\n      this.isTokenized = tokenize;\n\n      this.name = fi.name.intern();\n      this.isIndexed = fi.isIndexed;\n      this.omitNorms = fi.omitNorms;          \n      this.omitTermFreqAndPositions = fi.omitTermFreqAndPositions;\n      this.storeOffsetWithTermVector = fi.storeOffsetWithTermVector;\n      this.storePositionWithTermVector = fi.storePositionWithTermVector;\n      this.storeTermVector = fi.storeTermVector;            \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0c804f7aa477229414a7e12882af490c241f64d","date":1254963299,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/FieldsReader.FieldForMerge#FieldForMerge(Object,FieldInfo,boolean,boolean,boolean).mjava","sourceNew":null,"sourceOld":"    public FieldForMerge(Object value, FieldInfo fi, boolean binary, boolean compressed, boolean tokenize) {\n      this.isStored = true;  \n      this.fieldsData = value;\n      this.isCompressed = compressed;\n      this.isBinary = binary;\n      if (binary)\n        binaryLength = ((byte[]) value).length;\n\n      this.isTokenized = tokenize;\n\n      this.name = StringHelper.intern(fi.name);\n      this.isIndexed = fi.isIndexed;\n      this.omitNorms = fi.omitNorms;          \n      this.omitTermFreqAndPositions = fi.omitTermFreqAndPositions;\n      this.storeOffsetWithTermVector = fi.storeOffsetWithTermVector;\n      this.storePositionWithTermVector = fi.storePositionWithTermVector;\n      this.storeTermVector = fi.storeTermVector;            \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cf93f7a278746d4746fa3ebb3d53267b22fd040f":["42f6b4065cdaf7d1be530c926dc327494bee4ffa"],"0c0427a35a68b16ec73d3bf5f27e57719915f166":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42f6b4065cdaf7d1be530c926dc327494bee4ffa":["64fce9fc6afb6b5650eb2bb2e733eb68bead08be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"64fce9fc6afb6b5650eb2bb2e733eb68bead08be":["0c0427a35a68b16ec73d3bf5f27e57719915f166"],"e0c804f7aa477229414a7e12882af490c241f64d":["cf93f7a278746d4746fa3ebb3d53267b22fd040f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e0c804f7aa477229414a7e12882af490c241f64d"]},"commit2Childs":{"cf93f7a278746d4746fa3ebb3d53267b22fd040f":["e0c804f7aa477229414a7e12882af490c241f64d"],"0c0427a35a68b16ec73d3bf5f27e57719915f166":["64fce9fc6afb6b5650eb2bb2e733eb68bead08be"],"42f6b4065cdaf7d1be530c926dc327494bee4ffa":["cf93f7a278746d4746fa3ebb3d53267b22fd040f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0c0427a35a68b16ec73d3bf5f27e57719915f166"],"64fce9fc6afb6b5650eb2bb2e733eb68bead08be":["42f6b4065cdaf7d1be530c926dc327494bee4ffa"],"e0c804f7aa477229414a7e12882af490c241f64d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}