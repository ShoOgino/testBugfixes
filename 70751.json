{"path":"src/java/org/apache/lucene/index/SegmentReader.Norm#closeInput().mjava","commits":[{"id":"6db660b56f04fdb2853d25cdee8ee0d36559a521","date":1233313968,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader.Norm#closeInput().mjava","pathOld":"/dev/null","sourceNew":"    private void closeInput() throws IOException {\n      if (in != null) {\n        if (in != singleNormStream) {\n          // It's private to us -- just close it\n          in.close();\n        } else {\n          // We are sharing this with others -- decRef and\n          // maybe close the shared norm stream\n          if (singleNormRef.decRef() == 0) {\n            singleNormStream.close();\n            singleNormStream = null;\n          }\n        }\n\n        in = null;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8514024f885b40613b5ec91876ce5e9d2167d89","date":1260313529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader.Norm#closeInput().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader.Norm#closeInput().mjava","sourceNew":"    private void closeInput() throws IOException {\n      if (in != null) {\n        if (in != singleNormStream) {\n          // It's private to us -- just close it\n          in.close();\n        } else {\n          // We are sharing this with others -- decRef and\n          // maybe close the shared norm stream\n          if (singleNormRef.decrementAndGet() == 0) {\n            singleNormStream.close();\n            singleNormStream = null;\n          }\n        }\n\n        in = null;\n      }\n    }\n\n","sourceOld":"    private void closeInput() throws IOException {\n      if (in != null) {\n        if (in != singleNormStream) {\n          // It's private to us -- just close it\n          in.close();\n        } else {\n          // We are sharing this with others -- decRef and\n          // maybe close the shared norm stream\n          if (singleNormRef.decRef() == 0) {\n            singleNormStream.close();\n            singleNormStream = null;\n          }\n        }\n\n        in = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader.Norm#closeInput().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader.Norm#closeInput().mjava","sourceNew":"    private void closeInput() throws IOException {\n      if (in != null) {\n        if (in != singleNormStream) {\n          // It's private to us -- just close it\n          in.close();\n        } else {\n          // We are sharing this with others -- decRef and\n          // maybe close the shared norm stream\n          if (singleNormRef.decrementAndGet() == 0) {\n            singleNormStream.close();\n            singleNormStream = null;\n          }\n        }\n\n        in = null;\n      }\n    }\n\n","sourceOld":"    private void closeInput() throws IOException {\n      if (in != null) {\n        if (in != singleNormStream) {\n          // It's private to us -- just close it\n          in.close();\n        } else {\n          // We are sharing this with others -- decRef and\n          // maybe close the shared norm stream\n          if (singleNormRef.decrementAndGet() == 0) {\n            singleNormStream.close();\n            singleNormStream = null;\n          }\n        }\n\n        in = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6db660b56f04fdb2853d25cdee8ee0d36559a521":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8514024f885b40613b5ec91876ce5e9d2167d89":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d8514024f885b40613b5ec91876ce5e9d2167d89"]},"commit2Childs":{"6db660b56f04fdb2853d25cdee8ee0d36559a521":["d8514024f885b40613b5ec91876ce5e9d2167d89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"d8514024f885b40613b5ec91876ce5e9d2167d89":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}