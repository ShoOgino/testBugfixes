{"path":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","commits":[{"id":"0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2","date":1289765998,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","pathOld":"/dev/null","sourceNew":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","pathOld":"/dev/null","sourceNew":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","pathOld":"/dev/null","sourceNew":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","sourceNew":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","sourceOld":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","sourceNew":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","sourceOld":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,SolrParams,String).mjava","sourceNew":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","sourceOld":"  public String request(String path, SolrParams params, String body) throws Exception\n  {\n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        if (params == null)\n          params = new MapSolrParams( new HashMap<String, String>() );        \n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n\n    return request(handler, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"c26f00b574427b55127e869b935845554afde1fa":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2","9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}