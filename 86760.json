{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simRemoveNode(String,boolean).mjava","commits":[{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simRemoveNode(String,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simRemoveNode(String,boolean).mjava","sourceNew":"  /**\n   * Remove a node from the cluster. This simulates a node lost scenario.\n   * Node id is removed from the /live_nodes list.\n   * @param nodeId node id\n   * @param withValues when true, remove also simulated node values. If false\n   *                   then node values are retained to later simulate\n   *                   a node that comes back up\n   */\n  public void simRemoveNode(String nodeId, boolean withValues) throws Exception {\n    clusterStateProvider.simRemoveNode(nodeId);\n    if (withValues) {\n      nodeStateProvider.simRemoveNodeValues(nodeId);\n    }\n    if (liveNodesSet.isEmpty()) {\n      // remove handlers\n      if (metricsHistoryHandler != null) {\n        IOUtils.closeQuietly(metricsHistoryHandler);\n        metricsHistoryHandler = null;\n      }\n      if (metricsHandler != null) {\n        metricsHandler = null;\n      }\n    }\n    log.trace(\"-- removed node \" + nodeId);\n  }\n\n","sourceOld":"  /**\n   * Remove a node from the cluster. This simulates a node lost scenario.\n   * Node id is removed from the /live_nodes list.\n   * @param nodeId node id\n   * @param withValues when true, remove also simulated node values. If false\n   *                   then node values are retained to later simulate\n   *                   a node that comes back up\n   */\n  public void simRemoveNode(String nodeId, boolean withValues) throws Exception {\n    clusterStateProvider.simRemoveNode(nodeId);\n    if (withValues) {\n      nodeStateProvider.simRemoveNodeValues(nodeId);\n    }\n    if (liveNodesSet.isEmpty()) {\n      // remove handlers\n      if (metricsHistoryHandler != null) {\n        IOUtils.closeQuietly(metricsHistoryHandler);\n        metricsHistoryHandler = null;\n      }\n      if (metricsHandler != null) {\n        metricsHandler = null;\n      }\n    }\n    log.trace(\"-- removed node \" + nodeId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e35f2dde06b35aa9904949a3a93fabd090371077","date":1587906921,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simRemoveNode(String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simRemoveNode(String,boolean).mjava","sourceNew":"  /**\n   * Remove a node from the cluster. This simulates a node lost scenario.\n   * Node id is removed from the /live_nodes list.\n   * @param nodeId node id\n   * @param withValues when true, remove also simulated node values. If false\n   *                   then node values are retained to later simulate\n   *                   a node that comes back up\n   */\n  public void simRemoveNode(String nodeId, boolean withValues) throws Exception {\n    clusterStateProvider.simRemoveNode(nodeId);\n    if (withValues) {\n      nodeStateProvider.simRemoveNodeValues(nodeId);\n    }\n    if (liveNodesSet.isEmpty()) {\n      // remove handlers\n      if (metricsHistoryHandler != null) {\n        IOUtils.closeQuietly(metricsHistoryHandler);\n        metricsHistoryHandler = null;\n      }\n      if (metricsHandler != null) {\n        metricsHandler = null;\n      }\n    }\n    log.trace(\"-- removed node {}\", nodeId);\n  }\n\n","sourceOld":"  /**\n   * Remove a node from the cluster. This simulates a node lost scenario.\n   * Node id is removed from the /live_nodes list.\n   * @param nodeId node id\n   * @param withValues when true, remove also simulated node values. If false\n   *                   then node values are retained to later simulate\n   *                   a node that comes back up\n   */\n  public void simRemoveNode(String nodeId, boolean withValues) throws Exception {\n    clusterStateProvider.simRemoveNode(nodeId);\n    if (withValues) {\n      nodeStateProvider.simRemoveNodeValues(nodeId);\n    }\n    if (liveNodesSet.isEmpty()) {\n      // remove handlers\n      if (metricsHistoryHandler != null) {\n        IOUtils.closeQuietly(metricsHistoryHandler);\n        metricsHistoryHandler = null;\n      }\n      if (metricsHandler != null) {\n        metricsHandler = null;\n      }\n    }\n    log.trace(\"-- removed node \" + nodeId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simRemoveNode(String,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Remove a node from the cluster. This simulates a node lost scenario.\n   * Node id is removed from the /live_nodes list.\n   * @param nodeId node id\n   * @param withValues when true, remove also simulated node values. If false\n   *                   then node values are retained to later simulate\n   *                   a node that comes back up\n   */\n  public void simRemoveNode(String nodeId, boolean withValues) throws Exception {\n    clusterStateProvider.simRemoveNode(nodeId);\n    if (withValues) {\n      nodeStateProvider.simRemoveNodeValues(nodeId);\n    }\n    if (liveNodesSet.isEmpty()) {\n      // remove handlers\n      if (metricsHistoryHandler != null) {\n        IOUtils.closeQuietly(metricsHistoryHandler);\n        metricsHistoryHandler = null;\n      }\n      if (metricsHandler != null) {\n        metricsHandler = null;\n      }\n    }\n    log.trace(\"-- removed node {}\", nodeId);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["e35f2dde06b35aa9904949a3a93fabd090371077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e35f2dde06b35aa9904949a3a93fabd090371077":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"e35f2dde06b35aa9904949a3a93fabd090371077":["3f504512a03d978990cbff30db0522b354e846db"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["e35f2dde06b35aa9904949a3a93fabd090371077"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}