{"path":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToFloatMap#prvt_put(int,float).mjava","commits":[{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToFloatMap#prvt_put(int,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}.\n   * \n   * New pairs are always inserted to baseHash, and are followed by the old\n   * colliding pair.\n   * \n   * @param key\n   *            integer which maps the given Object\n   * @param v\n   *            float value which is being mapped using the given key\n   */\n  private void prvt_put(int key, float v) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = v;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToFloatMap#prvt_put(int,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}.\n   * \n   * New pairs are always inserted to baseHash, and are followed by the old\n   * colliding pair.\n   * \n   * @param key\n   *            integer which maps the given Object\n   * @param v\n   *            float value which is being mapped using the given key\n   */\n  private void prvt_put(int key, float v) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = v;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntToFloatMap#prvt_put(int,float).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToFloatMap#prvt_put(int,float).mjava","sourceNew":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}.\n   * \n   * New pairs are always inserted to baseHash, and are followed by the old\n   * colliding pair.\n   * \n   * @param key\n   *            integer which maps the given Object\n   * @param v\n   *            float value which is being mapped using the given key\n   */\n  private void prvt_put(int key, float v) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = v;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","sourceOld":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}.\n   * \n   * New pairs are always inserted to baseHash, and are followed by the old\n   * colliding pair.\n   * \n   * @param key\n   *            integer which maps the given Object\n   * @param v\n   *            float value which is being mapped using the given key\n   */\n  private void prvt_put(int key, float v) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = v;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"607428da722dcb3e86bbd11c63de8986e6275c36":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","607428da722dcb3e86bbd11c63de8986e6275c36"],"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}