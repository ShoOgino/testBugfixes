{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getMaxScore(int).mjava","commits":[{"id":"523cc6563c99a55527ef7993efc5413c6648852d","date":1518704038,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getMaxScore(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public float getMaxScore(int upTo) throws IOException {\n    assert upTo >= lastShallowTarget : \"uTo = \" + upTo + \" < last target = \" + lastShallowTarget;\n    float maxScore = in.getMaxScore(upTo);\n    return maxScore;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a692be6c8e120ef6dbfcd5dde3de42815813cd2","date":1525265372,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getMaxScore(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getMaxScore(int).mjava","sourceNew":"  @Override\n  public float getMaxScore(int upTo) throws IOException {\n    assert upTo >= lastShallowTarget : \"uTo = \" + upTo + \" < last target = \" + lastShallowTarget;\n    assert docID() >= 0 || lastShallowTarget >= 0 : \"Cannot get max scores until the iterator is positioned or advanceShallow has been called\";\n    float maxScore = in.getMaxScore(upTo);\n    return maxScore;\n  }\n\n","sourceOld":"  @Override\n  public float getMaxScore(int upTo) throws IOException {\n    assert upTo >= lastShallowTarget : \"uTo = \" + upTo + \" < last target = \" + lastShallowTarget;\n    float maxScore = in.getMaxScore(upTo);\n    return maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ca059a1802d561df3c5d3abac663d4e6284f33a","date":1526486059,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getMaxScore(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getMaxScore(int).mjava","sourceNew":"  @Override\n  public float getMaxScore(int upTo) throws IOException {\n    assert scoreMode.needsScores();\n    assert upTo >= lastShallowTarget : \"uTo = \" + upTo + \" < last target = \" + lastShallowTarget;\n    assert docID() >= 0 || lastShallowTarget >= 0 : \"Cannot get max scores until the iterator is positioned or advanceShallow has been called\";\n    float maxScore = in.getMaxScore(upTo);\n    return maxScore;\n  }\n\n","sourceOld":"  @Override\n  public float getMaxScore(int upTo) throws IOException {\n    assert upTo >= lastShallowTarget : \"uTo = \" + upTo + \" < last target = \" + lastShallowTarget;\n    assert docID() >= 0 || lastShallowTarget >= 0 : \"Cannot get max scores until the iterator is positioned or advanceShallow has been called\";\n    float maxScore = in.getMaxScore(upTo);\n    return maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ca059a1802d561df3c5d3abac663d4e6284f33a":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["523cc6563c99a55527ef7993efc5413c6648852d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"523cc6563c99a55527ef7993efc5413c6648852d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ca059a1802d561df3c5d3abac663d4e6284f33a"]},"commit2Childs":{"9ca059a1802d561df3c5d3abac663d4e6284f33a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["9ca059a1802d561df3c5d3abac663d4e6284f33a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["523cc6563c99a55527ef7993efc5413c6648852d"],"523cc6563c99a55527ef7993efc5413c6648852d":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}