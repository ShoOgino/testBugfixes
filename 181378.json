{"path":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#testInvalidArguments().mjava","commits":[{"id":"45ccb604e99f21f1c05722c0e28bcfa64b94a861","date":1423735816,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#testInvalidArguments().mjava","pathOld":"/dev/null","sourceNew":"  public void testInvalidArguments() throws Exception {\n    int numResults = 5;\n    DiversifiedTopDocsCollector tdc = doDiversifiedSearch(numResults, 15);\n\n    // start < 0\n    assertEquals(0, tdc.topDocs(-1).scoreDocs.length);\n\n    // start > pq.size()\n    assertEquals(0, tdc.topDocs(numResults + 1).scoreDocs.length);\n\n    // start == pq.size()\n    assertEquals(0, tdc.topDocs(numResults).scoreDocs.length);\n\n    // howMany < 0\n    assertEquals(0, tdc.topDocs(0, -1).scoreDocs.length);\n\n    // howMany == 0\n    assertEquals(0, tdc.topDocs(0, 0).scoreDocs.length);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cde32d7e66d64ba51a45660d3f66daf89f57d0df","date":1567704670,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#testInvalidArguments().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#testInvalidArguments().mjava","sourceNew":"  public void testInvalidArguments() throws Exception {\n    int numResults = 5;\n    DiversifiedTopDocsCollector tdc = doDiversifiedSearch(numResults, 15);\n\n    // start < 0\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tdc.topDocs(-1);\n    });\n\n    assertEquals(\"Expected value of starting position is between 0 and 5, got -1\", expected.getMessage());\n\n    // start > pq.size()\n    assertEquals(0, tdc.topDocs(numResults + 1).scoreDocs.length);\n\n    // start == pq.size()\n    assertEquals(0, tdc.topDocs(numResults).scoreDocs.length);\n\n    // howMany < 0\n    expected = expectThrows(IllegalArgumentException.class, () -> {\n      tdc.topDocs(0, -1);\n    });\n\n    assertEquals(\"Number of hits requested must be greater than 0 but value was -1\", expected.getMessage());\n\n    // howMany == 0\n    assertEquals(0, tdc.topDocs(0, 0).scoreDocs.length);\n\n  }\n\n","sourceOld":"  public void testInvalidArguments() throws Exception {\n    int numResults = 5;\n    DiversifiedTopDocsCollector tdc = doDiversifiedSearch(numResults, 15);\n\n    // start < 0\n    assertEquals(0, tdc.topDocs(-1).scoreDocs.length);\n\n    // start > pq.size()\n    assertEquals(0, tdc.topDocs(numResults + 1).scoreDocs.length);\n\n    // start == pq.size()\n    assertEquals(0, tdc.topDocs(numResults).scoreDocs.length);\n\n    // howMany < 0\n    assertEquals(0, tdc.topDocs(0, -1).scoreDocs.length);\n\n    // howMany == 0\n    assertEquals(0, tdc.topDocs(0, 0).scoreDocs.length);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"45ccb604e99f21f1c05722c0e28bcfa64b94a861":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cde32d7e66d64ba51a45660d3f66daf89f57d0df":["45ccb604e99f21f1c05722c0e28bcfa64b94a861"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cde32d7e66d64ba51a45660d3f66daf89f57d0df"]},"commit2Childs":{"45ccb604e99f21f1c05722c0e28bcfa64b94a861":["cde32d7e66d64ba51a45660d3f66daf89f57d0df"],"cde32d7e66d64ba51a45660d3f66daf89f57d0df":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["45ccb604e99f21f1c05722c0e28bcfa64b94a861"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}