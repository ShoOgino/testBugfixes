{"path":"src/common/org/apache/solr/common/util/Base64#byteArrayToBase64(byte[],int,int).mjava","commits":[{"id":"8281d815c10235e2dab9ded85615ebe920dd3c22","date":1243323879,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/Base64#byteArrayToBase64(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  public static String byteArrayToBase64(byte[] a, int offset, int len) {\n    int aLen = len;\n    int numFullGroups = aLen / 3;\n    int numBytesInPartialGroup = aLen - 3 * numFullGroups;\n    int resultLen = 4 * ((aLen + 2) / 3);\n    StringBuffer result = new StringBuffer(resultLen);\n    char[] intToAlpha = intToBase64;\n\n    // Translate all full groups from byte array elements to Base64\n    int inCursor = offset;\n    for (int i = 0; i < numFullGroups; i++) {\n      int byte0 = a[inCursor++] & 0xff;\n      int byte1 = a[inCursor++] & 0xff;\n      int byte2 = a[inCursor++] & 0xff;\n      result.append(intToAlpha[byte0 >> 2]);\n      result.append(intToAlpha[(byte0 << 4) & 0x3f | (byte1 >> 4)]);\n      result.append(intToAlpha[(byte1 << 2) & 0x3f | (byte2 >> 6)]);\n      result.append(intToAlpha[byte2 & 0x3f]);\n    }\n\n    // Translate partial group if present\n    if (numBytesInPartialGroup != 0) {\n      int byte0 = a[inCursor++] & 0xff;\n      result.append(intToAlpha[byte0 >> 2]);\n      if (numBytesInPartialGroup == 1) {\n        result.append(intToAlpha[(byte0 << 4) & 0x3f]);\n        result.append(\"==\");\n      } else {\n        // assert numBytesInPartialGroup == 2;\n        int byte1 = a[inCursor++] & 0xff;\n        result.append(intToAlpha[(byte0 << 4) & 0x3f | (byte1 >> 4)]);\n        result.append(intToAlpha[(byte1 << 2) & 0x3f]);\n        result.append('=');\n      }\n    }\n    return result.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d06343967a29132f5d782f74e8d0988400278a02","d06343967a29132f5d782f74e8d0988400278a02","d06343967a29132f5d782f74e8d0988400278a02"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/util/Base64#byteArrayToBase64(byte[],int,int).mjava","pathOld":"src/common/org/apache/solr/common/util/Base64#byteArrayToBase64(byte[],int,int).mjava","sourceNew":"  public static String byteArrayToBase64(byte[] a, int offset, int len) {\n    int aLen = len;\n    int numFullGroups = aLen / 3;\n    int numBytesInPartialGroup = aLen - 3 * numFullGroups;\n    int resultLen = 4 * ((aLen + 2) / 3);\n    StringBuffer result = new StringBuffer(resultLen);\n    char[] intToAlpha = intToBase64;\n\n    // Translate all full groups from byte array elements to Base64\n    int inCursor = offset;\n    for (int i = 0; i < numFullGroups; i++) {\n      int byte0 = a[inCursor++] & 0xff;\n      int byte1 = a[inCursor++] & 0xff;\n      int byte2 = a[inCursor++] & 0xff;\n      result.append(intToAlpha[byte0 >> 2]);\n      result.append(intToAlpha[(byte0 << 4) & 0x3f | (byte1 >> 4)]);\n      result.append(intToAlpha[(byte1 << 2) & 0x3f | (byte2 >> 6)]);\n      result.append(intToAlpha[byte2 & 0x3f]);\n    }\n\n    // Translate partial group if present\n    if (numBytesInPartialGroup != 0) {\n      int byte0 = a[inCursor++] & 0xff;\n      result.append(intToAlpha[byte0 >> 2]);\n      if (numBytesInPartialGroup == 1) {\n        result.append(intToAlpha[(byte0 << 4) & 0x3f]);\n        result.append(\"==\");\n      } else {\n        // assert numBytesInPartialGroup == 2;\n        int byte1 = a[inCursor++] & 0xff;\n        result.append(intToAlpha[(byte0 << 4) & 0x3f | (byte1 >> 4)]);\n        result.append(intToAlpha[(byte1 << 2) & 0x3f]);\n        result.append('=');\n      }\n    }\n    return result.toString();\n  }\n\n","sourceOld":"  public static String byteArrayToBase64(byte[] a, int offset, int len) {\n    int aLen = len;\n    int numFullGroups = aLen / 3;\n    int numBytesInPartialGroup = aLen - 3 * numFullGroups;\n    int resultLen = 4 * ((aLen + 2) / 3);\n    StringBuffer result = new StringBuffer(resultLen);\n    char[] intToAlpha = intToBase64;\n\n    // Translate all full groups from byte array elements to Base64\n    int inCursor = offset;\n    for (int i = 0; i < numFullGroups; i++) {\n      int byte0 = a[inCursor++] & 0xff;\n      int byte1 = a[inCursor++] & 0xff;\n      int byte2 = a[inCursor++] & 0xff;\n      result.append(intToAlpha[byte0 >> 2]);\n      result.append(intToAlpha[(byte0 << 4) & 0x3f | (byte1 >> 4)]);\n      result.append(intToAlpha[(byte1 << 2) & 0x3f | (byte2 >> 6)]);\n      result.append(intToAlpha[byte2 & 0x3f]);\n    }\n\n    // Translate partial group if present\n    if (numBytesInPartialGroup != 0) {\n      int byte0 = a[inCursor++] & 0xff;\n      result.append(intToAlpha[byte0 >> 2]);\n      if (numBytesInPartialGroup == 1) {\n        result.append(intToAlpha[(byte0 << 4) & 0x3f]);\n        result.append(\"==\");\n      } else {\n        // assert numBytesInPartialGroup == 2;\n        int byte1 = a[inCursor++] & 0xff;\n        result.append(intToAlpha[(byte0 << 4) & 0x3f | (byte1 >> 4)]);\n        result.append(intToAlpha[(byte1 << 2) & 0x3f]);\n        result.append('=');\n      }\n    }\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8281d815c10235e2dab9ded85615ebe920dd3c22":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["8281d815c10235e2dab9ded85615ebe920dd3c22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8281d815c10235e2dab9ded85615ebe920dd3c22"],"8281d815c10235e2dab9ded85615ebe920dd3c22":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}