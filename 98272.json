{"path":"lucene/classification/src/java/org/apache/lucene/classification/utils/NearestFuzzyQuery.FieldVals#equals(Object).mjava","commits":[{"id":"b9626938d906e220bc834fca668189e7cdf4985d","date":1498723309,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/NearestFuzzyQuery.FieldVals#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      FieldVals other = (FieldVals) obj;\n      if (fieldName == null) {\n        if (other.fieldName != null)\n          return false;\n      } else if (!fieldName.equals(other.fieldName))\n        return false;\n      if (maxEdits != other.maxEdits) {\n        return false;\n      }\n      if (prefixLength != other.prefixLength)\n        return false;\n      if (queryString == null) {\n        if (other.queryString != null)\n          return false;\n      } else if (!queryString.equals(other.queryString))\n        return false;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/NearestFuzzyQuery.FieldVals#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      FieldVals other = (FieldVals) obj;\n      if (fieldName == null) {\n        if (other.fieldName != null)\n          return false;\n      } else if (!fieldName.equals(other.fieldName))\n        return false;\n      if (maxEdits != other.maxEdits) {\n        return false;\n      }\n      if (prefixLength != other.prefixLength)\n        return false;\n      if (queryString == null) {\n        if (other.queryString != null)\n          return false;\n      } else if (!queryString.equals(other.queryString))\n        return false;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/NearestFuzzyQuery.FieldVals#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      FieldVals other = (FieldVals) obj;\n      if (fieldName == null) {\n        if (other.fieldName != null)\n          return false;\n      } else if (!fieldName.equals(other.fieldName))\n        return false;\n      if (maxEdits != other.maxEdits) {\n        return false;\n      }\n      if (prefixLength != other.prefixLength)\n        return false;\n      if (queryString == null) {\n        if (other.queryString != null)\n          return false;\n      } else if (!queryString.equals(other.queryString))\n        return false;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33bfee30277584028170135002def66f9d57732b","date":1547842233,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/NearestFuzzyQuery.FieldVals#equals(Object).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/utils/NearestFuzzyQuery.FieldVals#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      FieldVals other = (FieldVals) obj;\n      if (fieldName == null) {\n        if (other.fieldName != null)\n          return false;\n      } else if (!fieldName.equals(other.fieldName))\n        return false;\n      if (maxEdits != other.maxEdits) {\n        return false;\n      }\n      if (prefixLength != other.prefixLength)\n        return false;\n      if (queryString == null) {\n        return other.queryString == null;\n      } else return queryString.equals(other.queryString);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      FieldVals other = (FieldVals) obj;\n      if (fieldName == null) {\n        if (other.fieldName != null)\n          return false;\n      } else if (!fieldName.equals(other.fieldName))\n        return false;\n      if (maxEdits != other.maxEdits) {\n        return false;\n      }\n      if (prefixLength != other.prefixLength)\n        return false;\n      if (queryString == null) {\n        if (other.queryString != null)\n          return false;\n      } else if (!queryString.equals(other.queryString))\n        return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52ec154a31cf63bc47d2cc0b49e171a4e75aa99d","date":1548322018,"type":3,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/NearestFuzzyQuery.FieldVals#equals(Object).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/utils/NearestFuzzyQuery.FieldVals#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      FieldVals other = (FieldVals) obj;\n      if (fieldName == null) {\n        if (other.fieldName != null)\n          return false;\n      } else if (!fieldName.equals(other.fieldName))\n        return false;\n      if (maxEdits != other.maxEdits) {\n        return false;\n      }\n      if (prefixLength != other.prefixLength)\n        return false;\n      if (queryString == null) {\n        return other.queryString == null;\n      } else return queryString.equals(other.queryString);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj)\n        return true;\n      if (obj == null)\n        return false;\n      if (getClass() != obj.getClass())\n        return false;\n      FieldVals other = (FieldVals) obj;\n      if (fieldName == null) {\n        if (other.fieldName != null)\n          return false;\n      } else if (!fieldName.equals(other.fieldName))\n        return false;\n      if (maxEdits != other.maxEdits) {\n        return false;\n      }\n      if (prefixLength != other.prefixLength)\n        return false;\n      if (queryString == null) {\n        if (other.queryString != null)\n          return false;\n      } else if (!queryString.equals(other.queryString))\n        return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b9626938d906e220bc834fca668189e7cdf4985d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"52ec154a31cf63bc47d2cc0b49e171a4e75aa99d":["28288370235ed02234a64753cdbf0c6ec096304a","33bfee30277584028170135002def66f9d57732b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28288370235ed02234a64753cdbf0c6ec096304a"],"33bfee30277584028170135002def66f9d57732b":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b9626938d906e220bc834fca668189e7cdf4985d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52ec154a31cf63bc47d2cc0b49e171a4e75aa99d"]},"commit2Childs":{"b9626938d906e220bc834fca668189e7cdf4985d":["28288370235ed02234a64753cdbf0c6ec096304a"],"52ec154a31cf63bc47d2cc0b49e171a4e75aa99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b9626938d906e220bc834fca668189e7cdf4985d","30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"33bfee30277584028170135002def66f9d57732b":["52ec154a31cf63bc47d2cc0b49e171a4e75aa99d"],"28288370235ed02234a64753cdbf0c6ec096304a":["52ec154a31cf63bc47d2cc0b49e171a4e75aa99d","30c8e5574b55d57947e989443dfde611646530ee","33bfee30277584028170135002def66f9d57732b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}