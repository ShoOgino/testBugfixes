{"path":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","commits":[{"id":"918dc6e0012887379516499555f2c1660a6418eb","date":1164067790,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public Query rewrite(IndexReader reader) throws IOException {\n      if (this.termContainsWildcard) {\n          return super.rewrite(reader);\n      }\n      \n      return new TermQuery(getTerm());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f7a11eba51d213f09b96054111cf56a1e5796a3","date":1226364000,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","sourceNew":"  public Query rewrite(IndexReader reader) throws IOException {\n    if (!termContainsWildcard)\n      return new TermQuery(getTerm());\n    else\n      return super.rewrite(reader);\n  }\n\n","sourceOld":"  public Query rewrite(IndexReader reader) throws IOException {\n      if (this.termContainsWildcard) {\n          return super.rewrite(reader);\n      }\n      \n      return new TermQuery(getTerm());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"105155c00cbd8195407715ef8d1e5bc0189f04c0","date":1255035571,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","sourceNew":"  public Query rewrite(IndexReader reader) throws IOException {\n    if (termIsPrefix) {\n      MultiTermQuery rewritten = new PrefixQuery(term.createTerm(term.text()\n          .substring(0, term.text().indexOf('*'))));\n      rewritten.setBoost(getBoost());\n      rewritten.setRewriteMethod(getRewriteMethod());\n      return rewritten;\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","sourceOld":"  public Query rewrite(IndexReader reader) throws IOException {\n    if (!termContainsWildcard)\n      return new TermQuery(getTerm());\n    else\n      return super.rewrite(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3","date":1255442836,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    if (termIsPrefix) {\n      MultiTermQuery rewritten = new PrefixQuery(term.createTerm(term.text()\n          .substring(0, term.text().indexOf('*'))));\n      rewritten.setBoost(getBoost());\n      rewritten.setRewriteMethod(getRewriteMethod());\n      return rewritten;\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","sourceOld":"  public Query rewrite(IndexReader reader) throws IOException {\n    if (termIsPrefix) {\n      MultiTermQuery rewritten = new PrefixQuery(term.createTerm(term.text()\n          .substring(0, term.text().indexOf('*'))));\n      rewritten.setBoost(getBoost());\n      rewritten.setRewriteMethod(getRewriteMethod());\n      return rewritten;\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/WildcardQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    if (termIsPrefix) {\n      MultiTermQuery rewritten = new PrefixQuery(term.createTerm(term.text()\n          .substring(0, term.text().indexOf('*'))));\n      rewritten.setBoost(getBoost());\n      rewritten.setRewriteMethod(getRewriteMethod());\n      return rewritten;\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    if (termIsPrefix) {\n      MultiTermQuery rewritten = new PrefixQuery(term.createTerm(term.text()\n          .substring(0, term.text().indexOf('*'))));\n      rewritten.setBoost(getBoost());\n      rewritten.setRewriteMethod(getRewriteMethod());\n      return rewritten;\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"918dc6e0012887379516499555f2c1660a6418eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3":["105155c00cbd8195407715ef8d1e5bc0189f04c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"105155c00cbd8195407715ef8d1e5bc0189f04c0":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["322d95cfb0c59ace7533e19e5cec7f359ce6d6d3"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["918dc6e0012887379516499555f2c1660a6418eb"]},"commit2Childs":{"918dc6e0012887379516499555f2c1660a6418eb":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["918dc6e0012887379516499555f2c1660a6418eb"],"105155c00cbd8195407715ef8d1e5bc0189f04c0":["322d95cfb0c59ace7533e19e5cec7f359ce6d6d3"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["105155c00cbd8195407715ef8d1e5bc0189f04c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}