{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoPath#distance(DistanceStyle,double,double,double).mjava","commits":[{"id":"9908748d960ccb7706a20e81289a656237780b6c","date":1435716223,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoPath#distance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoPath#computeLinearDistance(GeoPoint).mjava","sourceNew":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","sourceOld":"  /**\n   * Compute a linear distance to the point.\n   */\n  @Override\n  public double computeLinearDistance(final GeoPoint point) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathLinearDistance(point);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullLinearDistance;\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathLinearDistance(point);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullLinearDistance;\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoPath#distance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoPath#distance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","sourceOld":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["9908748d960ccb7706a20e81289a656237780b6c"],"9908748d960ccb7706a20e81289a656237780b6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9908748d960ccb7706a20e81289a656237780b6c"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9908748d960ccb7706a20e81289a656237780b6c":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}