{"path":"lucene/misc/src/test/org/apache/lucene/search/TestDocValuesStatsCollector#testNoDocsWithField().mjava","commits":[{"id":"12a6ecf587e83c0ee8d10b6f612d4f29b3c1fed1","date":1481713492,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestDocValuesStatsCollector#testNoDocsWithField().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoDocsWithField() throws IOException {\n    try (Directory dir = newDirectory();\n        IndexWriter indexWriter = new IndexWriter(dir, newIndexWriterConfig())) {\n      int numDocs = TestUtil.nextInt(random(), 1, 100);\n      for (int i = 0; i < numDocs; i++) {\n        indexWriter.addDocument(new Document());\n      }\n\n      try (DirectoryReader reader = DirectoryReader.open(indexWriter)) {\n        IndexSearcher searcher = new IndexSearcher(reader);\n        LongDocValuesStats stats = new LongDocValuesStats(\"foo\");\n        searcher.search(new MatchAllDocsQuery(), new DocValuesStatsCollector(stats));\n\n        assertEquals(0, stats.count());\n        assertEquals(numDocs, stats.missing());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestDocValuesStatsCollector#testNoDocsWithField().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoDocsWithField() throws IOException {\n    try (Directory dir = newDirectory();\n        IndexWriter indexWriter = new IndexWriter(dir, newIndexWriterConfig())) {\n      int numDocs = TestUtil.nextInt(random(), 1, 100);\n      for (int i = 0; i < numDocs; i++) {\n        indexWriter.addDocument(new Document());\n      }\n\n      try (DirectoryReader reader = DirectoryReader.open(indexWriter)) {\n        IndexSearcher searcher = new IndexSearcher(reader);\n        LongDocValuesStats stats = new LongDocValuesStats(\"foo\");\n        searcher.search(new MatchAllDocsQuery(), new DocValuesStatsCollector(stats));\n\n        assertEquals(0, stats.count());\n        assertEquals(numDocs, stats.missing());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12a6ecf587e83c0ee8d10b6f612d4f29b3c1fed1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","12a6ecf587e83c0ee8d10b6f612d4f29b3c1fed1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12a6ecf587e83c0ee8d10b6f612d4f29b3c1fed1"]},"commit2Childs":{"12a6ecf587e83c0ee8d10b6f612d4f29b3c1fed1":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12a6ecf587e83c0ee8d10b6f612d4f29b3c1fed1","9856095f7afb5a607bf5e65077615ed91273508c"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}