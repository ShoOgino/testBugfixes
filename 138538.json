{"path":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","commits":[{"id":"63a1a94d02abb8cde5dd6ea0defbbc751ce71603","date":1521902895,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSwapUnexpectedFailuresResultIn500SolrException() {\n    final Throwable cause = new NullPointerException();\n    whenUnexpectedErrorOccursDuringCoreAdminOp(cause);\n    \n    try {\n      CoreAdminOperation.SWAP_OP.execute(callInfo);\n      fail(\"Expected core-swap execution to fail with exception.\");\n    } catch  (Exception thrown) {\n      assertSolrExceptionWithCodeAndCause(thrown, ErrorCode.SERVER_ERROR.code, cause);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fa95fb629298e03fe5e3d71a0ce792f1256f711","date":1521903809,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSwapUnexpectedFailuresResultIn500SolrException() {\n    final Throwable cause = new NullPointerException();\n    whenUnexpectedErrorOccursDuringCoreAdminOp(cause);\n    \n    try {\n      CoreAdminOperation.SWAP_OP.execute(callInfo);\n      fail(\"Expected core-swap execution to fail with exception.\");\n    } catch  (Exception thrown) {\n      assertSolrExceptionWithCodeAndCause(thrown, ErrorCode.SERVER_ERROR.code, cause);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","sourceNew":"  @Test\n  public void testSwapUnexpectedFailuresResultIn500SolrException() {\n    final Throwable cause = new NullPointerException();\n    whenUnexpectedErrorOccursDuringCoreAdminOp(cause);\n\n    Exception ex = expectThrows(Exception.class, () ->  CoreAdminOperation.SWAP_OP.execute(callInfo));\n    assertSolrExceptionWithCodeAndCause(ex, ErrorCode.SERVER_ERROR.code, cause);\n  }\n\n","sourceOld":"  @Test\n  public void testSwapUnexpectedFailuresResultIn500SolrException() {\n    final Throwable cause = new NullPointerException();\n    whenUnexpectedErrorOccursDuringCoreAdminOp(cause);\n    \n    try {\n      CoreAdminOperation.SWAP_OP.execute(callInfo);\n      fail(\"Expected core-swap execution to fail with exception.\");\n    } catch  (Exception thrown) {\n      assertSolrExceptionWithCodeAndCause(thrown, ErrorCode.SERVER_ERROR.code, cause);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","sourceNew":"  @Test\n  public void testSwapUnexpectedFailuresResultIn500SolrException() {\n    final Throwable cause = new NullPointerException();\n    whenUnexpectedErrorOccursDuringCoreAdminOp(cause);\n\n    Exception ex = expectThrows(Exception.class, () ->  CoreAdminOperation.SWAP_OP.execute(callInfo));\n    assertSolrExceptionWithCodeAndCause(ex, ErrorCode.SERVER_ERROR.code, cause);\n  }\n\n","sourceOld":"  @Test\n  public void testSwapUnexpectedFailuresResultIn500SolrException() {\n    final Throwable cause = new NullPointerException();\n    whenUnexpectedErrorOccursDuringCoreAdminOp(cause);\n    \n    try {\n      CoreAdminOperation.SWAP_OP.execute(callInfo);\n      fail(\"Expected core-swap execution to fail with exception.\");\n    } catch  (Exception thrown) {\n      assertSolrExceptionWithCodeAndCause(thrown, ErrorCode.SERVER_ERROR.code, cause);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminOperationTest#testSwapUnexpectedFailuresResultIn500SolrException().mjava","sourceNew":"  @Test\n  public void testSwapUnexpectedFailuresResultIn500SolrException() {\n    final Throwable cause = new NullPointerException();\n    whenUnexpectedErrorOccursDuringCoreAdminOp(cause);\n\n    Exception ex = expectThrows(Exception.class, () ->  CoreAdminOperation.SWAP_OP.execute(callInfo));\n    assertSolrExceptionWithCodeAndCause(ex, ErrorCode.SERVER_ERROR.code, cause);\n  }\n\n","sourceOld":"  @Test\n  public void testSwapUnexpectedFailuresResultIn500SolrException() {\n    final Throwable cause = new NullPointerException();\n    whenUnexpectedErrorOccursDuringCoreAdminOp(cause);\n    \n    try {\n      CoreAdminOperation.SWAP_OP.execute(callInfo);\n      fail(\"Expected core-swap execution to fail with exception.\");\n    } catch  (Exception thrown) {\n      assertSolrExceptionWithCodeAndCause(thrown, ErrorCode.SERVER_ERROR.code, cause);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3fa95fb629298e03fe5e3d71a0ce792f1256f711":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["3fa95fb629298e03fe5e3d71a0ce792f1256f711"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"63a1a94d02abb8cde5dd6ea0defbbc751ce71603":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3fa95fb629298e03fe5e3d71a0ce792f1256f711":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"63a1a94d02abb8cde5dd6ea0defbbc751ce71603":["3fa95fb629298e03fe5e3d71a0ce792f1256f711"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}