{"path":"src/java/org/apache/solr/handler/SpellCheckerRequestHandler#reopen().mjava","commits":[{"id":"c51a4de58ddc877061c374826b0232414b06c08b","date":1174943473,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SpellCheckerRequestHandler#reopen().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Reopens the SpellChecker index directory.\n     * Useful if an external process is responsible for building\n     * the spell checker index.\n     */\n    private void reopen() throws IOException {\n        spellChecker.setSpellIndex(spellcheckerIndexDir);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6855049ff6427dd05716183aaeb715f5c84abf44","date":1174943640,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SpellCheckerRequestHandler#reopen().mjava","pathOld":"src/java/org/apache/solr/handler/SpellCheckerRequestHandler#reopen().mjava","sourceNew":"  /**\n   * Reopens the SpellChecker index directory.\n   * Useful if an external process is responsible for building\n   * the spell checker index.\n   */\n  private void reopen() throws IOException {\n    spellChecker.setSpellIndex(spellcheckerIndexDir);\n  }\n\n","sourceOld":"    /**\n     * Reopens the SpellChecker index directory.\n     * Useful if an external process is responsible for building\n     * the spell checker index.\n     */\n    private void reopen() throws IOException {\n        spellChecker.setSpellIndex(spellcheckerIndexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/SpellCheckerRequestHandler#reopen().mjava","pathOld":"src/java/org/apache/solr/handler/SpellCheckerRequestHandler#reopen().mjava","sourceNew":"  /**\n   * Reopens the SpellChecker index directory.\n   * Useful if an external process is responsible for building\n   * the spell checker index.\n   */\n  private void reopen() throws IOException {\n    spellChecker.setSpellIndex(spellcheckerIndexDir);\n  }\n\n","sourceOld":"  /**\n   * Reopens the SpellChecker index directory.\n   * Useful if an external process is responsible for building\n   * the spell checker index.\n   */\n  private void reopen() throws IOException {\n    spellChecker.setSpellIndex(spellcheckerIndexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c51a4de58ddc877061c374826b0232414b06c08b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6855049ff6427dd05716183aaeb715f5c84abf44":["c51a4de58ddc877061c374826b0232414b06c08b"],"ad94625fb8d088209f46650c8097196fec67f00c":["6855049ff6427dd05716183aaeb715f5c84abf44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c51a4de58ddc877061c374826b0232414b06c08b":["6855049ff6427dd05716183aaeb715f5c84abf44"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c51a4de58ddc877061c374826b0232414b06c08b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6855049ff6427dd05716183aaeb715f5c84abf44":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}