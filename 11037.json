{"path":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","commits":[{"id":"2bceb2cdf01c012aaa9fd1132529159bd7c2fe82","date":1355878858,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"/dev/null","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39","date":1355888669,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    startCloudJetty(collection, \"shardA\");\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"/dev/null","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    startCloudJetty(collection, \"shardA\");\n\n    printLayout();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86f07b14846d608cf6ccc6c216b1ce7b656c3eac","date":1432848552,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    startCloudJetty(collection, \"shardA\");\n\n    printLayout();\n  }\n\n","bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9b4296bd51ca61b482138791478afdd0f7d3a3d","date":1498058739,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"197bbedf08450ade98a11f4a0001448059666bec","date":1498534625,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, \"conf1\", 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","date":1498540685,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, \"conf1\", 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, \"conf1\", 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n  \n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    j.start();\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, \"conf1\", 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    waitForActiveReplicaCount(cloudClient, DEFAULT_COLLECTION, 1);\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    int totalReplicas = getTotalReplicas(collection);\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, \"conf1\", 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","bugFix":["86f07b14846d608cf6ccc6c216b1ce7b656c3eac"],"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardRoutingCustomTest#doCustomSharding().mjava","sourceNew":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    j.start();\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, \"conf1\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    waitForActiveReplicaCount(cloudClient, DEFAULT_COLLECTION, 1);\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","sourceOld":"  private void doCustomSharding() throws Exception {\n    printLayout();\n\n  \n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, createTempDir().toFile().getAbsolutePath(), \"shardA\", \"solrconfig.xml\", null);\n    j.start();\n    assertEquals(0, CollectionAdminRequest\n        .createCollection(DEFAULT_COLLECTION, \"conf1\", 1, 1)\n        .setStateFormat(Integer.parseInt(getStateFormat()))\n        .setCreateNodeSet(\"\")\n        .process(cloudClient).getStatus());\n    assertTrue(CollectionAdminRequest\n        .addReplicaToShard(collection,\"shard1\")\n        .setNode(j.getNodeName())\n        .setType(useTlogReplicas()? Replica.Type.TLOG: Replica.Type.NRT)\n        .process(cloudClient).isSuccess());\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    waitForActiveReplicaCount(cloudClient, DEFAULT_COLLECTION, 1);\n\n    updateMappingsFromZk(this.jettys, this.clients);\n\n    printLayout();\n  }\n\n","bugFix":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","86f07b14846d608cf6ccc6c216b1ce7b656c3eac","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39":["2bceb2cdf01c012aaa9fd1132529159bd7c2fe82"],"197bbedf08450ade98a11f4a0001448059666bec":["a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["86f07b14846d608cf6ccc6c216b1ce7b656c3eac"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["86f07b14846d608cf6ccc6c216b1ce7b656c3eac","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"86f07b14846d608cf6ccc6c216b1ce7b656c3eac":["7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"28288370235ed02234a64753cdbf0c6ec096304a":["86f07b14846d608cf6ccc6c216b1ce7b656c3eac","197bbedf08450ade98a11f4a0001448059666bec"],"2bceb2cdf01c012aaa9fd1132529159bd7c2fe82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","197bbedf08450ade98a11f4a0001448059666bec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","86f07b14846d608cf6ccc6c216b1ce7b656c3eac"],"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"197bbedf08450ade98a11f4a0001448059666bec":["28288370235ed02234a64753cdbf0c6ec096304a","fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["197bbedf08450ade98a11f4a0001448059666bec","b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4"],"86f07b14846d608cf6ccc6c216b1ce7b656c3eac":["a9b4296bd51ca61b482138791478afdd0f7d3a3d","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"2bceb2cdf01c012aaa9fd1132529159bd7c2fe82":["7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2bceb2cdf01c012aaa9fd1132529159bd7c2fe82"],"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}