{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#rectContainsPoint(GeoRect,double,double).mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#rectContainsPoint(GeoRect,double,double).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/BaseGeoPointTestCase#rectContainsPoint(GeoRect,double,double).mjava","sourceNew":"  /** Returns null if it's borderline case */\n  protected abstract Boolean rectContainsPoint(GeoRect rect, double pointLat, double pointLon);\n\n","sourceOld":"  /** Returns null if it's borderline case */\n  protected abstract Boolean rectContainsPoint(GeoRect rect, double pointLat, double pointLon);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#rectContainsPoint(GeoRect,double,double).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/BaseGeoPointTestCase#rectContainsPoint(GeoRect,double,double).mjava","sourceNew":"  /** Returns null if it's borderline case */\n  protected abstract Boolean rectContainsPoint(GeoRect rect, double pointLat, double pointLon);\n\n","sourceOld":"  /** Returns null if it's borderline case */\n  protected abstract Boolean rectContainsPoint(GeoRect rect, double pointLat, double pointLon);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3","date":1458680048,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#rectContainsPoint(GeoRect,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#rectContainsPoint(GeoRect,double,double).mjava","sourceNew":"  static final boolean rectContainsPoint(GeoRect rect, double pointLat, double pointLon) {\n    assert Double.isNaN(pointLat) == false;\n\n    if (rect.minLon < rect.maxLon) {\n      return GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, rect.minLon, rect.maxLon);\n    } else {\n      // Rect crosses dateline:\n      return GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, -180.0, rect.maxLon)\n        || GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, rect.minLon, 180.0);\n    }\n  }\n\n","sourceOld":"  /** Returns null if it's borderline case */\n  protected abstract Boolean rectContainsPoint(GeoRect rect, double pointLat, double pointLon);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#rectContainsPoint(Rectangle,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#rectContainsPoint(GeoRect,double,double).mjava","sourceNew":"  static final boolean rectContainsPoint(Rectangle rect, double pointLat, double pointLon) {\n    assert Double.isNaN(pointLat) == false;\n\n    if (rect.minLon < rect.maxLon) {\n      return GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, rect.minLon, rect.maxLon);\n    } else {\n      // Rect crosses dateline:\n      return GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, -180.0, rect.maxLon)\n        || GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, rect.minLon, 180.0);\n    }\n  }\n\n","sourceOld":"  static final boolean rectContainsPoint(GeoRect rect, double pointLat, double pointLon) {\n    assert Double.isNaN(pointLat) == false;\n\n    if (rect.minLon < rect.maxLon) {\n      return GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, rect.minLon, rect.maxLon);\n    } else {\n      // Rect crosses dateline:\n      return GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, -180.0, rect.maxLon)\n        || GeoRelationUtils.pointInRectPrecise(pointLat, pointLon, rect.minLat, rect.maxLat, rect.minLon, 180.0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","937923083e4d137932336fc80f3d78758ff698a6"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}