{"path":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","commits":[{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ecd298fdc085e7eba27afa7fae58df1ba1a2808","date":1295102557,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (!field.fieldInfo.omitTermFreqAndPositions) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16843358872ed92ba92888ab99df297550b9a36a","date":1295144724,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (!field.fieldInfo.omitTermFreqAndPositions) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (!field.fieldInfo.omitTermFreqAndPositions) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (!field.fieldInfo.omitTermFreqAndPositions) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      \n      int nonZeroCount = 0;\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          nonZeroCount++;\n        }\n      }\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeVInt(nonZeroCount);\n      for(TermsWriter field : fields) {\n        if (field.numTerms > 0) {\n          out.writeVInt(field.fieldInfo.number);\n          out.writeVLong(field.numTerms);\n          out.writeVLong(field.termsStartPointer);\n          if (!field.fieldInfo.omitTermFreqAndPositions) {\n            out.writeVLong(field.sumTotalTermFreq);\n          }\n        }\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["99cf56f3a650b908f7017a72f9d23940418f8a52","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16843358872ed92ba92888ab99df297550b9a36a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","99cf56f3a650b908f7017a72f9d23940418f8a52"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["16843358872ed92ba92888ab99df297550b9a36a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1add9ddc0005b07550d4350720aac22dc9886b3"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"16843358872ed92ba92888ab99df297550b9a36a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["16843358872ed92ba92888ab99df297550b9a36a"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"99cf56f3a650b908f7017a72f9d23940418f8a52":["29ef99d61cda9641b6250bf9567329a6e65f901d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["16843358872ed92ba92888ab99df297550b9a36a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}