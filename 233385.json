{"path":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","commits":[{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","sourceNew":"  private NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":"  private NodeConfig loadConfigSolr(SolrResourceLoader loader) {\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      SolrZkClient zkClient = new SolrZkClient(zkHost, 30000);\n      try {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      } finally {\n        zkClient.close();\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","pathOld":"/dev/null","sourceNew":"  private NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd8d3dcf0f5f4803166a6c7d4312acfaae7f9fe2","date":1431990699,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":"  private NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"896e12033d56085efdb7b88bd289beb2645361dc","date":1434214735,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from {}\", zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f9bf0405a1117d91d112b095f83c2df500c7b3c","date":1437869727,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from {}\", zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9bc766d645fa848f86c381c7f6acf2c881c99399"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["0f9bf0405a1117d91d112b095f83c2df500c7b3c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f9bf0405a1117d91d112b095f83c2df500c7b3c":["896e12033d56085efdb7b88bd289beb2645361dc"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"896e12033d56085efdb7b88bd289beb2645361dc":["cd8d3dcf0f5f4803166a6c7d4312acfaae7f9fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"cd8d3dcf0f5f4803166a6c7d4312acfaae7f9fe2":["9bc766d645fa848f86c381c7f6acf2c881c99399"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a626ec4d1c92e59fe390724d6220081047b03ce7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9bc766d645fa848f86c381c7f6acf2c881c99399"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd8d3dcf0f5f4803166a6c7d4312acfaae7f9fe2"],"0f9bf0405a1117d91d112b095f83c2df500c7b3c":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"896e12033d56085efdb7b88bd289beb2645361dc":["0f9bf0405a1117d91d112b095f83c2df500c7b3c"],"cd8d3dcf0f5f4803166a6c7d4312acfaae7f9fe2":["896e12033d56085efdb7b88bd289beb2645361dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}