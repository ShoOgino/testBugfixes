{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      server.add( doc[i] );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( server );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( server );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      server.add( doc[i] );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( server );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( server );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      server.add( doc[i] );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( server );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( server );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      server.add( doc[i] );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( server );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( server );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      server.add( doc[i] );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( server );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( server );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      server.add( doc[i] );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( server );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( server );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      server.add( doc[i] );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( server );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( server );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b73eedcd7ad1b598ca856676f3b3609efbc9e08","date":1475228954,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n\n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n\n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n\n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7e0c9c309a906dacb9ed97bcfa4c884c5912394","date":1479257880,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    assertNull( rsp.getDynamicFieldInfo() );\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n    assertNotNull( rsp.getDynamicFieldInfo() );\n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1ef55e1fff7ff44354432770ad8bc19be1fcc75","date":1479266056,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    assertNull( rsp.getDynamicFieldInfo() );\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n    assertNotNull( rsp.getDynamicFieldInfo() );\n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testLukeHandler().mjava","sourceNew":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    assertNull( rsp.getDynamicFieldInfo() );\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n    assertNotNull( rsp.getDynamicFieldInfo() );\n  }\n\n","sourceOld":" @Test\n public void testLukeHandler() throws Exception\n  {    \n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[5];\n    for( int i=0; i<doc.length; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", \"ID\"+i, 1.0f );\n      client.add(doc[i]);\n    }\n    client.commit();\n    assertNumFound( \"*:*\", doc.length ); // make sure it got in\n    \n    LukeRequest luke = new LukeRequest();\n    luke.setShowSchema( false );\n    LukeResponse rsp = luke.process( client );\n    assertNull( rsp.getFieldTypeInfo() ); // if you don't ask for it, the schema is null\n    assertNull( rsp.getDynamicFieldInfo() );\n    \n    luke.setShowSchema( true );\n    rsp = luke.process( client );\n    assertNotNull( rsp.getFieldTypeInfo() );\n    assertNotNull(rsp.getFieldInfo().get(\"id\").getSchemaFlags());\n    assertTrue(rsp.getFieldInfo().get(\"id\").getSchemaFlags().contains(FieldFlag.INDEXED));\n    assertNotNull( rsp.getDynamicFieldInfo() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6b73eedcd7ad1b598ca856676f3b3609efbc9e08":["bafca15d8e408346a67f4282ad1143b88023893b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["bafca15d8e408346a67f4282ad1143b88023893b","6b73eedcd7ad1b598ca856676f3b3609efbc9e08"],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c7e0c9c309a906dacb9ed97bcfa4c884c5912394"],"bafca15d8e408346a67f4282ad1143b88023893b":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acd9883560fd89e6448b2b447302fe543040cd4f":["c7e0c9c309a906dacb9ed97bcfa4c884c5912394"],"c7e0c9c309a906dacb9ed97bcfa4c884c5912394":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["bafca15d8e408346a67f4282ad1143b88023893b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"6b73eedcd7ad1b598ca856676f3b3609efbc9e08":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c7e0c9c309a906dacb9ed97bcfa4c884c5912394","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":[],"bafca15d8e408346a67f4282ad1143b88023893b":["6b73eedcd7ad1b598ca856676f3b3609efbc9e08","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"c7e0c9c309a906dacb9ed97bcfa4c884c5912394":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}