{"path":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","commits":[{"id":"2899ae5069a2533466ac842042478e67263e1f43","date":1354624628,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","pathOld":"/dev/null","sourceNew":"    private FieldsReader(FieldsReader other) {\n\n      Map<SimpleDVProducer,SimpleDVProducer> oldToNew = new IdentityHashMap<SimpleDVProducer,SimpleDVProducer>();\n      // First clone all formats\n      for(Map.Entry<String,SimpleDVProducer> ent : other.formats.entrySet()) {\n        SimpleDVProducer values = ent.getValue().clone();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,SimpleDVProducer> ent : other.fields.entrySet()) {\n        SimpleDVProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed00c8118962f490744732ab611c595c91b80d1c","date":1356020966,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","sourceNew":"    private FieldsReader(FieldsReader other) {\n\n      Map<SimpleDVProducer,SimpleDVProducer> oldToNew = new IdentityHashMap<SimpleDVProducer,SimpleDVProducer>();\n      // First clone all formats\n      for(Map.Entry<String,SimpleDVProducer> ent : other.formats.entrySet()) {\n        SimpleDVProducer values = ent.getValue();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,SimpleDVProducer> ent : other.fields.entrySet()) {\n        SimpleDVProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","sourceOld":"    private FieldsReader(FieldsReader other) {\n\n      Map<SimpleDVProducer,SimpleDVProducer> oldToNew = new IdentityHashMap<SimpleDVProducer,SimpleDVProducer>();\n      // First clone all formats\n      for(Map.Entry<String,SimpleDVProducer> ent : other.formats.entrySet()) {\n        SimpleDVProducer values = ent.getValue().clone();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,SimpleDVProducer> ent : other.fields.entrySet()) {\n        SimpleDVProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","date":1358521790,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","sourceNew":"    private FieldsReader(FieldsReader other) {\n\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<DocValuesProducer,DocValuesProducer>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","sourceOld":"    private FieldsReader(FieldsReader other) {\n\n      Map<SimpleDVProducer,SimpleDVProducer> oldToNew = new IdentityHashMap<SimpleDVProducer,SimpleDVProducer>();\n      // First clone all formats\n      for(Map.Entry<String,SimpleDVProducer> ent : other.formats.entrySet()) {\n        SimpleDVProducer values = ent.getValue();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,SimpleDVProducer> ent : other.fields.entrySet()) {\n        SimpleDVProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","pathOld":"/dev/null","sourceNew":"    private FieldsReader(FieldsReader other) {\n\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<DocValuesProducer,DocValuesProducer>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","sourceNew":"    private FieldsReader(FieldsReader other) {\n\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","sourceOld":"    private FieldsReader(FieldsReader other) {\n\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<DocValuesProducer,DocValuesProducer>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","sourceNew":"    // clone for merge\n    FieldsReader(FieldsReader other) throws IOException {\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue().getMergeInstance();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","sourceOld":"    private FieldsReader(FieldsReader other) {\n\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","sourceNew":"    // clone for merge\n    FieldsReader(FieldsReader other) throws IOException {\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue().getMergeInstance();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","sourceOld":"    private FieldsReader(FieldsReader other) {\n\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbc046116d49cd3d0c50f7169cabaa295bc23a4a","date":1552989114,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldDocValuesFormat.FieldsReader#FieldsReader(FieldsReader).mjava","sourceNew":"    // clone for merge\n    FieldsReader(FieldsReader other) {\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue().getMergeInstance();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","sourceOld":"    // clone for merge\n    FieldsReader(FieldsReader other) throws IOException {\n      Map<DocValuesProducer,DocValuesProducer> oldToNew = new IdentityHashMap<>();\n      // First clone all formats\n      for(Map.Entry<String,DocValuesProducer> ent : other.formats.entrySet()) {\n        DocValuesProducer values = ent.getValue().getMergeInstance();\n        formats.put(ent.getKey(), values);\n        oldToNew.put(ent.getValue(), values);\n      }\n\n      // Then rebuild fields:\n      for(Map.Entry<String,DocValuesProducer> ent : other.fields.entrySet()) {\n        DocValuesProducer producer = oldToNew.get(ent.getValue());\n        assert producer != null;\n        fields.put(ent.getKey(), producer);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["ed00c8118962f490744732ab611c595c91b80d1c"],"bc8f80fee115148a0e4a0574560be06b494de821":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"ed00c8118962f490744732ab611c595c91b80d1c":["2899ae5069a2533466ac842042478e67263e1f43"],"2899ae5069a2533466ac842042478e67263e1f43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","bc8f80fee115148a0e4a0574560be06b494de821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"ed00c8118962f490744732ab611c595c91b80d1c":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"2899ae5069a2533466ac842042478e67263e1f43":["ed00c8118962f490744732ab611c595c91b80d1c"],"9bb9a29a5e71a90295f175df8919802993142c9a":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","2899ae5069a2533466ac842042478e67263e1f43"],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}