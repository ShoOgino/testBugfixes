{"path":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setEqualsToMax(String).mjava","commits":[{"id":"84f20f331d8001864545c7021812d8c6509c7593","date":1517216128,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setEqualsToMax(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setEqualsToMax(String coreNodeName) {\r\n      long maxTerm;\r\n      try {\r\n        maxTerm = Collections.max(values.values());\r\n      } catch (NoSuchElementException e){\r\n        maxTerm = 0;\r\n      }\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94","date":1520143025,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setEqualsToMax(String).mjava","sourceNew":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setTermEqualsToLeader(String coreNodeName) {\r\n      long maxTerm = getMaxTerm();\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","sourceOld":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setEqualsToMax(String coreNodeName) {\r\n      long maxTerm;\r\n      try {\r\n        maxTerm = Collections.max(values.values());\r\n      } catch (NoSuchElementException e){\r\n        maxTerm = 0;\r\n      }\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84f20f331d8001864545c7021812d8c6509c7593":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94":["84f20f331d8001864545c7021812d8c6509c7593"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["84f20f331d8001864545c7021812d8c6509c7593"],"84f20f331d8001864545c7021812d8c6509c7593":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"],"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}