{"path":"solr/test-framework/src/java/org/apache/solr/cloud/IpTables.ThreadPumper#start(InputStream,OutputStream,boolean).mjava","commits":[{"id":"3b28f0928f1f17bf5af380ad693363268fbb7b91","date":1385935125,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/IpTables.ThreadPumper#start(InputStream,OutputStream,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public static Thread start(final InputStream from, final OutputStream to, final boolean verbose) {\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            byte [] buffer = new byte [1024];\n            int len;\n            while ((len = from.read(buffer)) != -1) {\n              if (verbose) {\n                to.write(buffer, 0, len);\n              }\n            }\n          } catch (IOException e) {\n            System.err.println(\"Couldn't pipe from the forked process: \" + e.toString());\n          }\n        }\n      };\n      t.start();\n      return t;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/IpTables.ThreadPumper#start(InputStream,OutputStream,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public static Thread start(final InputStream from, final OutputStream to, final boolean verbose) {\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            byte [] buffer = new byte [1024];\n            int len;\n            while ((len = from.read(buffer)) != -1) {\n              if (verbose) {\n                to.write(buffer, 0, len);\n              }\n            }\n          } catch (IOException e) {\n            System.err.println(\"Couldn't pipe from the forked process: \" + e.toString());\n          }\n        }\n      };\n      t.start();\n      return t;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efa0ddc8716305bc4a06f27f9ae99fe5e23fc87d","date":1433692150,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/IpTables.ThreadPumper#start(InputStream,OutputStream,boolean).mjava","sourceNew":null,"sourceOld":"    public static Thread start(final InputStream from, final OutputStream to, final boolean verbose) {\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            byte [] buffer = new byte [1024];\n            int len;\n            while ((len = from.read(buffer)) != -1) {\n              if (verbose) {\n                to.write(buffer, 0, len);\n              }\n            }\n          } catch (IOException e) {\n            System.err.println(\"Couldn't pipe from the forked process: \" + e.toString());\n          }\n        }\n      };\n      t.start();\n      return t;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b28f0928f1f17bf5af380ad693363268fbb7b91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"efa0ddc8716305bc4a06f27f9ae99fe5e23fc87d":["3b28f0928f1f17bf5af380ad693363268fbb7b91"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3b28f0928f1f17bf5af380ad693363268fbb7b91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["efa0ddc8716305bc4a06f27f9ae99fe5e23fc87d"]},"commit2Childs":{"3b28f0928f1f17bf5af380ad693363268fbb7b91":["efa0ddc8716305bc4a06f27f9ae99fe5e23fc87d","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b28f0928f1f17bf5af380ad693363268fbb7b91","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"efa0ddc8716305bc4a06f27f9ae99fe5e23fc87d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}