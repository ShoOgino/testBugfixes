{"path":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#BytesStore(DataInput,int,int).mjava","commits":[{"id":"87e78f3c129251e74ecc2ff73a32de0f27cf09d5","date":1358006150,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#BytesStore(DataInput,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Pulls bytes from the provided IndexInput.  */\n  public BytesStore(DataInput in, int numBytes, int maxBlockSize) throws IOException {\n    int blockSize = 2;\n    int blockBits = 1;\n    while(blockSize < numBytes && blockSize < maxBlockSize) {\n      blockSize *= 2;\n      blockBits++;\n    }\n    this.blockBits = blockBits;\n    this.blockSize = blockSize;\n    this.blockMask = blockSize-1;\n    int left = numBytes;\n    while(left > 0) {\n      final int chunk = Math.min(blockSize, left);\n      byte[] block = new byte[chunk];\n      in.readBytes(block, 0, block.length);\n      blocks.add(block);\n      left -= chunk;\n    }\n\n    // So .getPosition still works\n    nextWrite = blocks.get(blocks.size()-1).length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#BytesStore(DataInput,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Pulls bytes from the provided IndexInput.  */\n  public BytesStore(DataInput in, int numBytes, int maxBlockSize) throws IOException {\n    int blockSize = 2;\n    int blockBits = 1;\n    while(blockSize < numBytes && blockSize < maxBlockSize) {\n      blockSize *= 2;\n      blockBits++;\n    }\n    this.blockBits = blockBits;\n    this.blockSize = blockSize;\n    this.blockMask = blockSize-1;\n    int left = numBytes;\n    while(left > 0) {\n      final int chunk = Math.min(blockSize, left);\n      byte[] block = new byte[chunk];\n      in.readBytes(block, 0, block.length);\n      blocks.add(block);\n      left -= chunk;\n    }\n\n    // So .getPosition still works\n    nextWrite = blocks.get(blocks.size()-1).length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"651a27b35167c2ea81f87f4749722e52b7d5b750","date":1359669118,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#BytesStore(DataInput,long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#BytesStore(DataInput,int,int).mjava","sourceNew":"  /** Pulls bytes from the provided IndexInput.  */\n  public BytesStore(DataInput in, long numBytes, int maxBlockSize) throws IOException {\n    int blockSize = 2;\n    int blockBits = 1;\n    while(blockSize < numBytes && blockSize < maxBlockSize) {\n      blockSize *= 2;\n      blockBits++;\n    }\n    this.blockBits = blockBits;\n    this.blockSize = blockSize;\n    this.blockMask = blockSize-1;\n    long left = numBytes;\n    while(left > 0) {\n      final int chunk = (int) Math.min(blockSize, left);\n      byte[] block = new byte[chunk];\n      in.readBytes(block, 0, block.length);\n      blocks.add(block);\n      left -= chunk;\n    }\n\n    // So .getPosition still works\n    nextWrite = blocks.get(blocks.size()-1).length;\n  }\n\n","sourceOld":"  /** Pulls bytes from the provided IndexInput.  */\n  public BytesStore(DataInput in, int numBytes, int maxBlockSize) throws IOException {\n    int blockSize = 2;\n    int blockBits = 1;\n    while(blockSize < numBytes && blockSize < maxBlockSize) {\n      blockSize *= 2;\n      blockBits++;\n    }\n    this.blockBits = blockBits;\n    this.blockSize = blockSize;\n    this.blockMask = blockSize-1;\n    int left = numBytes;\n    while(left > 0) {\n      final int chunk = Math.min(blockSize, left);\n      byte[] block = new byte[chunk];\n      in.readBytes(block, 0, block.length);\n      blocks.add(block);\n      left -= chunk;\n    }\n\n    // So .getPosition still works\n    nextWrite = blocks.get(blocks.size()-1).length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","date":1359670147,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#BytesStore(DataInput,long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#BytesStore(DataInput,int,int).mjava","sourceNew":"  /** Pulls bytes from the provided IndexInput.  */\n  public BytesStore(DataInput in, long numBytes, int maxBlockSize) throws IOException {\n    int blockSize = 2;\n    int blockBits = 1;\n    while(blockSize < numBytes && blockSize < maxBlockSize) {\n      blockSize *= 2;\n      blockBits++;\n    }\n    this.blockBits = blockBits;\n    this.blockSize = blockSize;\n    this.blockMask = blockSize-1;\n    long left = numBytes;\n    while(left > 0) {\n      final int chunk = (int) Math.min(blockSize, left);\n      byte[] block = new byte[chunk];\n      in.readBytes(block, 0, block.length);\n      blocks.add(block);\n      left -= chunk;\n    }\n\n    // So .getPosition still works\n    nextWrite = blocks.get(blocks.size()-1).length;\n  }\n\n","sourceOld":"  /** Pulls bytes from the provided IndexInput.  */\n  public BytesStore(DataInput in, int numBytes, int maxBlockSize) throws IOException {\n    int blockSize = 2;\n    int blockBits = 1;\n    while(blockSize < numBytes && blockSize < maxBlockSize) {\n      blockSize *= 2;\n      blockBits++;\n    }\n    this.blockBits = blockBits;\n    this.blockSize = blockSize;\n    this.blockMask = blockSize-1;\n    int left = numBytes;\n    while(left > 0) {\n      final int chunk = Math.min(blockSize, left);\n      byte[] block = new byte[chunk];\n      in.readBytes(block, 0, block.length);\n      blocks.add(block);\n      left -= chunk;\n    }\n\n    // So .getPosition still works\n    nextWrite = blocks.get(blocks.size()-1).length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86":["8917bfede3b4ca30f4305c1e391e9218959cd723","651a27b35167c2ea81f87f4749722e52b7d5b750"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"651a27b35167c2ea81f87f4749722e52b7d5b750":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["651a27b35167c2ea81f87f4749722e52b7d5b750"]},"commit2Childs":{"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86":[],"8917bfede3b4ca30f4305c1e391e9218959cd723":["b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8917bfede3b4ca30f4305c1e391e9218959cd723","87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["8917bfede3b4ca30f4305c1e391e9218959cd723","651a27b35167c2ea81f87f4749722e52b7d5b750"],"651a27b35167c2ea81f87f4749722e52b7d5b750":["b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}