{"path":"lucene/backwards/src/test/org/apache/lucene/analysis/TestStopFilter#testStopPositons().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/analysis/TestStopFilter#testStopPositons().mjava","pathOld":"backwards/src/test/org/apache/lucene/analysis/TestStopFilter#testStopPositons().mjava","sourceNew":"  /**\n   * Test Position increments applied by StopFilter with and without enabling this option.\n   */\n  public void testStopPositons() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    ArrayList a = new ArrayList();\n    for (int i=0; i<20; i++) {\n      String w = English.intToEnglish(i).trim();\n      sb.append(w).append(\" \");\n      if (i%3 != 0) a.add(w);\n    }\n    log(sb.toString());\n    String stopWords[] = (String[]) a.toArray(new String[0]);\n    for (int i=0; i<a.size(); i++) log(\"Stop: \"+stopWords[i]);\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    // with increments\n    StringReader reader = new StringReader(sb.toString());\n    StopFilter stpf = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    doTestStopPositons(stpf,true);\n    // without increments\n    reader = new StringReader(sb.toString());\n    stpf = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    doTestStopPositons(stpf,false);\n    // with increments, concatenating two stop filters\n    ArrayList a0 = new ArrayList();\n    ArrayList a1 = new ArrayList();\n    for (int i=0; i<a.size(); i++) {\n      if (i%2==0) { \n        a0.add(a.get(i));\n      } else {\n        a1.add(a.get(i));\n      }\n    }\n    String stopWords0[] = (String[]) a0.toArray(new String[0]);\n    for (int i=0; i<a0.size(); i++) log(\"Stop0: \"+stopWords0[i]);\n    String stopWords1[] = (String[]) a1.toArray(new String[0]);\n    for (int i=0; i<a1.size(); i++) log(\"Stop1: \"+stopWords1[i]);\n    Set stopSet0 = StopFilter.makeStopSet(stopWords0);\n    Set stopSet1 = StopFilter.makeStopSet(stopWords1);\n    reader = new StringReader(sb.toString());\n    StopFilter stpf0 = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet0); // first part of the set\n    stpf0.setEnablePositionIncrements(true);\n    StopFilter stpf01 = new StopFilter(false, stpf0, stopSet1); // two stop filters concatenated!\n    doTestStopPositons(stpf01,true);\n  }\n\n","sourceOld":"  /**\n   * Test Position increments applied by StopFilter with and without enabling this option.\n   */\n  public void testStopPositons() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    ArrayList a = new ArrayList();\n    for (int i=0; i<20; i++) {\n      String w = English.intToEnglish(i).trim();\n      sb.append(w).append(\" \");\n      if (i%3 != 0) a.add(w);\n    }\n    log(sb.toString());\n    String stopWords[] = (String[]) a.toArray(new String[0]);\n    for (int i=0; i<a.size(); i++) log(\"Stop: \"+stopWords[i]);\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    // with increments\n    StringReader reader = new StringReader(sb.toString());\n    StopFilter stpf = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    doTestStopPositons(stpf,true);\n    // without increments\n    reader = new StringReader(sb.toString());\n    stpf = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    doTestStopPositons(stpf,false);\n    // with increments, concatenating two stop filters\n    ArrayList a0 = new ArrayList();\n    ArrayList a1 = new ArrayList();\n    for (int i=0; i<a.size(); i++) {\n      if (i%2==0) { \n        a0.add(a.get(i));\n      } else {\n        a1.add(a.get(i));\n      }\n    }\n    String stopWords0[] = (String[]) a0.toArray(new String[0]);\n    for (int i=0; i<a0.size(); i++) log(\"Stop0: \"+stopWords0[i]);\n    String stopWords1[] = (String[]) a1.toArray(new String[0]);\n    for (int i=0; i<a1.size(); i++) log(\"Stop1: \"+stopWords1[i]);\n    Set stopSet0 = StopFilter.makeStopSet(stopWords0);\n    Set stopSet1 = StopFilter.makeStopSet(stopWords1);\n    reader = new StringReader(sb.toString());\n    StopFilter stpf0 = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet0); // first part of the set\n    stpf0.setEnablePositionIncrements(true);\n    StopFilter stpf01 = new StopFilter(false, stpf0, stopSet1); // two stop filters concatenated!\n    doTestStopPositons(stpf01,true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/analysis/TestStopFilter#testStopPositons().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test Position increments applied by StopFilter with and without enabling this option.\n   */\n  public void testStopPositons() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    ArrayList a = new ArrayList();\n    for (int i=0; i<20; i++) {\n      String w = English.intToEnglish(i).trim();\n      sb.append(w).append(\" \");\n      if (i%3 != 0) a.add(w);\n    }\n    log(sb.toString());\n    String stopWords[] = (String[]) a.toArray(new String[0]);\n    for (int i=0; i<a.size(); i++) log(\"Stop: \"+stopWords[i]);\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    // with increments\n    StringReader reader = new StringReader(sb.toString());\n    StopFilter stpf = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    doTestStopPositons(stpf,true);\n    // without increments\n    reader = new StringReader(sb.toString());\n    stpf = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    doTestStopPositons(stpf,false);\n    // with increments, concatenating two stop filters\n    ArrayList a0 = new ArrayList();\n    ArrayList a1 = new ArrayList();\n    for (int i=0; i<a.size(); i++) {\n      if (i%2==0) { \n        a0.add(a.get(i));\n      } else {\n        a1.add(a.get(i));\n      }\n    }\n    String stopWords0[] = (String[]) a0.toArray(new String[0]);\n    for (int i=0; i<a0.size(); i++) log(\"Stop0: \"+stopWords0[i]);\n    String stopWords1[] = (String[]) a1.toArray(new String[0]);\n    for (int i=0; i<a1.size(); i++) log(\"Stop1: \"+stopWords1[i]);\n    Set stopSet0 = StopFilter.makeStopSet(stopWords0);\n    Set stopSet1 = StopFilter.makeStopSet(stopWords1);\n    reader = new StringReader(sb.toString());\n    StopFilter stpf0 = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet0); // first part of the set\n    stpf0.setEnablePositionIncrements(true);\n    StopFilter stpf01 = new StopFilter(false, stpf0, stopSet1); // two stop filters concatenated!\n    doTestStopPositons(stpf01,true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}