{"path":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","sourceNew":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = DistanceUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeoHashUtils.encode(latLon[0], latLon[1]);\n  }\n\n","sourceOld":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = DistanceUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeoHashUtils.encode(latLon[0], latLon[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","sourceNew":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = DistanceUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeoHashUtils.encode(latLon[0], latLon[1]);\n  }\n\n","sourceOld":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = DistanceUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeoHashUtils.encode(latLon[0], latLon[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","sourceNew":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = DistanceUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeoHashUtils.encode(latLon[0], latLon[1]);\n  }\n\n","sourceOld":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = DistanceUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeoHashUtils.encode(latLon[0], latLon[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3859e567816d5987602f2a7ae2469fcdf17f745e","date":1329895924,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","sourceNew":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = ParseUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidShapeException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeohashUtils.encodeLatLon(latLon[0], latLon[1]);\n  }\n\n","sourceOld":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = DistanceUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeoHashUtils.encode(latLon[0], latLon[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","sourceNew":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = ParseUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidShapeException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeohashUtils.encodeLatLon(latLon[0], latLon[1]);\n  }\n\n","sourceOld":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = DistanceUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeoHashUtils.encode(latLon[0], latLon[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","date":1390592414,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/GeoHashField#toInternal(String).mjava","sourceNew":"  @Override\n  public String toInternal(String val) {\n    Point point = SpatialUtils.parsePointSolrException(val, SpatialContext.GEO);\n    return GeohashUtils.encodeLatLon(point.getY(), point.getX());\n  }\n\n","sourceOld":"  @Override\n  public String toInternal(String val) {\n    // validate that the string is of the form\n    // latitude, longitude\n    double[] latLon = new double[0];\n    try {\n      latLon = ParseUtils.parseLatitudeLongitude(null, val);\n    } catch (InvalidShapeException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    return GeohashUtils.encodeLatLon(latLon[0], latLon[1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["e47768b261c28e7e6032060e8331475c81057953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e47768b261c28e7e6032060e8331475c81057953":["c26f00b574427b55127e869b935845554afde1fa","3859e567816d5987602f2a7ae2469fcdf17f745e"],"3859e567816d5987602f2a7ae2469fcdf17f745e":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e47768b261c28e7e6032060e8331475c81057953","3859e567816d5987602f2a7ae2469fcdf17f745e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"e47768b261c28e7e6032060e8331475c81057953":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"3859e567816d5987602f2a7ae2469fcdf17f745e":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}