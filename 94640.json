{"path":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","commits":[{"id":"30b6ad849a21206db510322a3f583ca70ae20a2f","date":1399996150,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    assert !reader.getClass().getSimpleName().startsWith(\"Uninverting\"); // nocommit\n    return UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["98a04f56464afdffd4c430d6c47a0c868a38354e","9274621789ce990dbfef455dabdf026bb3184821"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader));\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    assert !reader.getClass().getSimpleName().startsWith(\"Uninverting\"); // nocommit\n    return UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader));\n  }\n\n","bugFix":["30b6ad849a21206db510322a3f583ca70ae20a2f"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","date":1411674127,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","date":1411744836,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98b44240f64a2d6935543ff25faee750b29204eb","date":1424972040,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98a04f56464afdffd4c430d6c47a0c868a38354e","date":1424985833,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","bugFix":["30b6ad849a21206db510322a3f583ca70ae20a2f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac9de183adbc9483681f275ac1e2d92ed19f52e1","date":1452414626,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap(\n        UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)),\n        SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap\n        (UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)), \n         SolrQueryTimeoutImpl.getInstance());\n  }\n\n","bugFix":null,"bugIntro":["83c8471489eeb663dabdc354a41bea707f560bc9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"83c8471489eeb663dabdc354a41bea707f560bc9","date":1492417766,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap(\n        wrapUninvertingReaderPerSegment(core, reader),\n        SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap(\n        UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)),\n        SolrQueryTimeoutImpl.getInstance());\n  }\n\n","bugFix":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap(\n        wrapUninvertingReaderPerSegment(core, reader),\n        SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap(\n        UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMap(reader)),\n        SolrQueryTimeoutImpl.getInstance());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a07eeba66d4090af0095b50cbd1795a3d6182c1d","date":1538797239,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#wrapReader(SolrCore,DirectoryReader).mjava","sourceNew":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap(\n        UninvertingReader.wrap(reader, core.getLatestSchema().getUninversionMapper()),\n        SolrQueryTimeoutImpl.getInstance());\n  }\n\n","sourceOld":"  // TODO: wrap elsewhere and return a \"map\" from the schema that overrides get() ?\n  // this reader supports reopen\n  private static DirectoryReader wrapReader(SolrCore core, DirectoryReader reader) throws IOException {\n    assert reader != null;\n    return ExitableDirectoryReader.wrap(\n        wrapUninvertingReaderPerSegment(core, reader),\n        SolrQueryTimeoutImpl.getInstance());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"98a04f56464afdffd4c430d6c47a0c868a38354e":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","98b44240f64a2d6935543ff25faee750b29204eb"],"9274621789ce990dbfef455dabdf026bb3184821":["30b6ad849a21206db510322a3f583ca70ae20a2f"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","98a04f56464afdffd4c430d6c47a0c868a38354e"],"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1":["93dd449115a9247533e44bab47e8429e5dccbc6d","eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9274621789ce990dbfef455dabdf026bb3184821"],"83c8471489eeb663dabdc354a41bea707f560bc9":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a07eeba66d4090af0095b50cbd1795a3d6182c1d":["83c8471489eeb663dabdc354a41bea707f560bc9"],"30b6ad849a21206db510322a3f583ca70ae20a2f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"98b44240f64a2d6935543ff25faee750b29204eb":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a07eeba66d4090af0095b50cbd1795a3d6182c1d"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e":["98a04f56464afdffd4c430d6c47a0c868a38354e","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","98b44240f64a2d6935543ff25faee750b29204eb"],"98a04f56464afdffd4c430d6c47a0c868a38354e":["ac9de183adbc9483681f275ac1e2d92ed19f52e1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","83c8471489eeb663dabdc354a41bea707f560bc9"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1":[],"93dd449115a9247533e44bab47e8429e5dccbc6d":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","56572ec06f1407c066d6b7399413178b33176cd8","da951a24a6a87d5ba7e1820f8c28a1e2beea76c1"],"83c8471489eeb663dabdc354a41bea707f560bc9":["a07eeba66d4090af0095b50cbd1795a3d6182c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d","30b6ad849a21206db510322a3f583ca70ae20a2f"],"a07eeba66d4090af0095b50cbd1795a3d6182c1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30b6ad849a21206db510322a3f583ca70ae20a2f":["9274621789ce990dbfef455dabdf026bb3184821"],"98b44240f64a2d6935543ff25faee750b29204eb":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","56572ec06f1407c066d6b7399413178b33176cd8","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}