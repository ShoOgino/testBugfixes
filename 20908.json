{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/StopKeywordFilter#makeStopSet(Version,String[],boolean).mjava","commits":[{"id":"33ba398fa7984fdcb45fd76b87504d5adf7ca5e3","date":1373907993,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/StopKeywordFilter#makeStopSet(Version,String[],boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a stopword set from the given stopword array.\n   * \n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static CharArraySet makeStopSet(Version matchVersion, String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/StopKeywordFilter#makeStopSet(Version,String[],boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a stopword set from the given stopword array.\n   * \n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static CharArraySet makeStopSet(Version matchVersion, String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7acd952b8ec320606434716bd02faaec540c885","date":1376495743,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/StopKeywordFilter#makeStopSet(Version,String[],boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a stopword set from the given stopword array.\n   * \n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static CharArraySet makeStopSet(Version matchVersion, String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/StopKeywordFilter#makeStopSet(Version,String[],boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a stopword set from the given stopword array.\n   * \n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static CharArraySet makeStopSet(Version matchVersion, String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b7acd952b8ec320606434716bd02faaec540c885":["33ba398fa7984fdcb45fd76b87504d5adf7ca5e3"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","33ba398fa7984fdcb45fd76b87504d5adf7ca5e3"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["37a0f60745e53927c4c876cfe5b5a58170f0646c","b7acd952b8ec320606434716bd02faaec540c885"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ba398fa7984fdcb45fd76b87504d5adf7ca5e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b7acd952b8ec320606434716bd02faaec540c885"]},"commit2Childs":{"b7acd952b8ec320606434716bd02faaec540c885":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","33ba398fa7984fdcb45fd76b87504d5adf7ca5e3"],"33ba398fa7984fdcb45fd76b87504d5adf7ca5e3":["b7acd952b8ec320606434716bd02faaec540c885","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}