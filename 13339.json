{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(Version,List[#],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static final Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static final Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static final Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static final Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static final Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static CharArraySet makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static Set<Object> makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","bugFix":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#makeStopSet(Version,List[#],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static CharArraySet makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * Creates a stopword set from the given stopword list.\n   * @param matchVersion Lucene version to enable correct Unicode 4.0 behavior in the returned set if Version > 3.0\n   * @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords\n   * @param ignoreCase if true, all words are lower cased first\n   * @return A Set ({@link CharArraySet}) containing the words\n   */\n  public static CharArraySet makeStopSet(Version matchVersion, List<?> stopWords, boolean ignoreCase){\n    CharArraySet stopSet = new CharArraySet(matchVersion, stopWords.size(), ignoreCase);\n    stopSet.addAll(stopWords);\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}