{"path":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","commits":[{"id":"9e2656623e57ced6c16aae473bab02019c951802","date":1342126181,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      public void customize(ScriptEngine engine) {\n        engine.put(\"testCase\", StatelessScriptUpdateProcessorFactoryTest.this);\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      public void customize(ScriptEngine engine) {\n        engine.put(\"testCase\", StatelessScriptUpdateProcessorFactoryTest.this);\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      public void customize(ScriptEngine engine) {\n        engine.put(\"testCase\", StatelessScriptUpdateProcessorFactoryTest.this);\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"testCase\", StatelessScriptUpdateProcessorFactoryTest.this);\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      public void customize(ScriptEngine engine) {\n        engine.put(\"testCase\", StatelessScriptUpdateProcessorFactoryTest.this);\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"testCase\", StatelessScriptUpdateProcessorFactoryTest.this);\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      public void customize(ScriptEngine engine) {\n        engine.put(\"testCase\", StatelessScriptUpdateProcessorFactoryTest.this);\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e","date":1364000005,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"testCase\", StatelessScriptUpdateProcessorFactoryTest.this);\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","bugFix":["9e2656623e57ced6c16aae473bab02019c951802"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<String>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"733eaf468f18297b1bcc51031353bdfdd1913bdf","date":1456928540,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getProcessors().get(0));\n    final List<String> functionMessages = new ArrayList<>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest#testSingleScript().mjava","sourceNew":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getProcessors().get(0));\n    final List<String> functionMessages = new ArrayList<>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","sourceOld":"  public void testSingleScript() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\"single-script\");\n    final StatelessScriptUpdateProcessorFactory factory = ((StatelessScriptUpdateProcessorFactory) chained.getFactories()[0]);\n    final List<String> functionMessages = new ArrayList<>();\n    factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {\n      @Override\n      public void customize(ScriptEngine engine) {\n        engine.put(\"functionMessages\", functionMessages);\n      }\n    });\n    assertNotNull(chained);\n\n    SolrInputDocument d = processAdd(\"single-script\",\n        doc(f(\"id\", \"1\"),\n            f(\"name\", \" foo \"),\n            f(\"subject\", \"bar\")));\n\n    processCommit(\"run-no-scripts\");\n\n    assertQ(\"couldn't find doc by id\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=1]\");\n\n    processDeleteById(\"single-script\",\"1\");\n    processCommit(\"single-script\");\n    \n    assertQ(\"found deleted doc\",\n            req(\"q\",\"id:1\")\n            , \"//result[@numFound=0]\");\n\n\n    assertEquals(3, functionMessages.size());\n\n    assertTrue(functionMessages.contains(\"processAdd0\"));\n    assertTrue(functionMessages.contains(\"processDelete0\"));\n    assertTrue(functionMessages.contains(\"processCommit0\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["9e2656623e57ced6c16aae473bab02019c951802","7530de27b87b961b51f01bd1299b7004d46e8823"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e"],"9e2656623e57ced6c16aae473bab02019c951802":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"7530de27b87b961b51f01bd1299b7004d46e8823":["9e2656623e57ced6c16aae473bab02019c951802"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"9e2656623e57ced6c16aae473bab02019c951802":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e2656623e57ced6c16aae473bab02019c951802","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}