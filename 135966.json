{"path":"src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","commits":[{"id":"401b0b7bbdbac0027e5b44890c4131d808ec2c9d","date":1260774382,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["072f211dfa8387028bb978d128c35bf9a450bbbf","072f211dfa8387028bb978d128c35bf9a450bbbf","072f211dfa8387028bb978d128c35bf9a450bbbf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","pathOld":"src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"401b0b7bbdbac0027e5b44890c4131d808ec2c9d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["401b0b7bbdbac0027e5b44890c4131d808ec2c9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"401b0b7bbdbac0027e5b44890c4131d808ec2c9d":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["401b0b7bbdbac0027e5b44890c4131d808ec2c9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}