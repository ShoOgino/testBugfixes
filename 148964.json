{"path":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399d5903979ca52514d2bc7e3a362e1c45885c94","date":1333042474,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313cc75cfda913662a8f84d1db14aeff256747b4","date":1337282187,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb","date":1411653326,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","sourceNew":null,"sourceOld":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","sourceNew":null,"sourceOld":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["399d5903979ca52514d2bc7e3a362e1c45885c94","313cc75cfda913662a8f84d1db14aeff256747b4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"313cc75cfda913662a8f84d1db14aeff256747b4":["399d5903979ca52514d2bc7e3a362e1c45885c94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"399d5903979ca52514d2bc7e3a362e1c45885c94":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["5f6bd27530a2846413fe2d00030493c0e2d3a072","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"313cc75cfda913662a8f84d1db14aeff256747b4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["399d5903979ca52514d2bc7e3a362e1c45885c94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"399d5903979ca52514d2bc7e3a362e1c45885c94":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","313cc75cfda913662a8f84d1db14aeff256747b4"],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}