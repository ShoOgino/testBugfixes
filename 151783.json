{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new FileReader(algFile));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new FileReader(algFile));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58b927ebb36b8784b0b3f719b1ef2752336a2e77","date":1341499263,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new FileReader(algFile));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new FileReader(algFile));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", TestUtil.createTempFile(\"linefile\", \".txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        throw new AssertionError(\"Could not parse sample file: \" + algFile, t);\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", TestUtil.createTempFile(\"linefile\", \".txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        throw new AssertionError(\"Could not parse sample file: \" + algFile, t);\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), \"UTF-8\"));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", TestUtil.createTempFile(\"linefile\", \".txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        throw new AssertionError(\"Could not parse sample file: \" + algFile, t);\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        throw new AssertionError(\"Could not parse sample file: \" + algFile, t);\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", TestUtil.createTempFile(\"linefile\", \".txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        throw new AssertionError(\"Could not parse sample file: \" + algFile, t);\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        throw new AssertionError(\"Could not parse sample file: \" + algFile, t);\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", new File(TEMP_DIR,\"work\").getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", new File(TEMP_DIR,\"o.txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        t.printStackTrace();\n        fail(\"Could not parse sample file: \" + algFile + \" reason:\"\n            + t.getClass() + \":\" + t.getMessage());\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(ConfLoader.class.getResource(\".\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final File examplesDir = new File(ConfLoader.class.getResource(\".\").toURI());\n    for (File algFile : examplesDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File pathname) { return pathname.isFile() && pathname.getName().endsWith(\".alg\"); }\n    })) {\n      try {\n        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").getAbsolutePath());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n      } catch (Throwable t) {\n        throw new AssertionError(\"Could not parse sample file: \" + algFile, t);\n      }\n      foundFiles = true;\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb2839332b7bb0f9fed0d5659222ca3f396190ca","date":1410693021,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(ConfLoader.class.getResource(\".\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(ConfLoader.class.getResource(\".\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        new Algorithm(data);\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecd15afeb65a92902a1b19737cd98f86c084ea16","date":1420045831,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  @SuppressWarnings(\"try\")\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(ConfLoader.class.getResource(\".\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(ConfLoader.class.getResource(\".\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a4dd0cf5eba38160571729281408036f1a9d05","date":1518391782,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  @SuppressWarnings(\"try\")\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(getClass().getResource(\"/conf\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  @SuppressWarnings(\"try\")\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(ConfLoader.class.getResource(\".\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  @SuppressWarnings(\"try\")\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(getClass().getResource(\"/conf\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  @SuppressWarnings(\"try\")\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(ConfLoader.class.getResource(\".\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse#testParseExamples().mjava","sourceNew":"  /** Test the parsing of example scripts **/\n  @SuppressWarnings(\"try\")\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(getClass().getResource(\"/conf\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", \"ByteBuffersDirectory\");\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","sourceOld":"  /** Test the parsing of example scripts **/\n  @SuppressWarnings(\"try\")\n  public void testParseExamples() throws Exception {\n    // hackedy-hack-hack\n    boolean foundFiles = false;\n    final Path examplesDir = Paths.get(getClass().getResource(\"/conf\").toURI());\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(examplesDir, \"*.alg\")) {\n      for (Path path : stream) {\n        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));\n        String contentSource = config.get(\"content.source\", null);\n        if (contentSource != null) { Class.forName(contentSource); }\n        config.set(\"work.dir\", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());\n        config.set(\"content.source\", MockContentSource.class.getName());\n        String dir = config.get(\"content.source\", null);\n        if (dir != null) { Class.forName(dir); }\n        config.set(\"directory\", RAMDirectory.class.getName());\n        if (config.get(\"line.file.out\", null) != null) {\n          config.set(\"line.file.out\", createTempFile(\"linefile\", \".txt\").toAbsolutePath().toString());\n        }\n        if (config.get(\"query.maker\", null) != null) {\n          Class.forName(config.get(\"query.maker\", null));\n          config.set(\"query.maker\", MockQueryMaker.class.getName());\n        }\n        PerfRunData data = new PerfRunData(config);\n        try (Algorithm algo = new Algorithm(data)) {}\n        foundFiles = true;\n      }\n    }\n    if (!foundFiles) {\n      fail(\"could not find any .alg files!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["d0d579490a72f2e6297eaa648940611234c57cf1","7d89d7e4e5101347833eea558851bf4209218619"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["58b927ebb36b8784b0b3f719b1ef2752336a2e77","7530de27b87b961b51f01bd1299b7004d46e8823"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["7d89d7e4e5101347833eea558851bf4209218619","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"ecd15afeb65a92902a1b19737cd98f86c084ea16":["cb2839332b7bb0f9fed0d5659222ca3f396190ca"],"d77dafd89756a5161d244985903e3487ca109182":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["7530de27b87b961b51f01bd1299b7004d46e8823"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"7d89d7e4e5101347833eea558851bf4209218619":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"d0d579490a72f2e6297eaa648940611234c57cf1":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["ecd15afeb65a92902a1b19737cd98f86c084ea16","30a4dd0cf5eba38160571729281408036f1a9d05"],"58b927ebb36b8784b0b3f719b1ef2752336a2e77":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30a4dd0cf5eba38160571729281408036f1a9d05":["ecd15afeb65a92902a1b19737cd98f86c084ea16"],"cb2839332b7bb0f9fed0d5659222ca3f396190ca":["f4abec28b874149a7223e32cc7a01704c27790de"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["5eb2511ababf862ea11e10761c70ee560cd84510"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","58b927ebb36b8784b0b3f719b1ef2752336a2e77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["58b927ebb36b8784b0b3f719b1ef2752336a2e77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"ecd15afeb65a92902a1b19737cd98f86c084ea16":["bfcdec9fcf0409223f35c5ec3bc14094314941b4","30a4dd0cf5eba38160571729281408036f1a9d05"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["7d89d7e4e5101347833eea558851bf4209218619","d0d579490a72f2e6297eaa648940611234c57cf1"],"d0d579490a72f2e6297eaa648940611234c57cf1":["5eb2511ababf862ea11e10761c70ee560cd84510"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["d77dafd89756a5161d244985903e3487ca109182"],"f4abec28b874149a7223e32cc7a01704c27790de":["cb2839332b7bb0f9fed0d5659222ca3f396190ca"],"58b927ebb36b8784b0b3f719b1ef2752336a2e77":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["58b927ebb36b8784b0b3f719b1ef2752336a2e77","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"30a4dd0cf5eba38160571729281408036f1a9d05":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"cb2839332b7bb0f9fed0d5659222ca3f396190ca":["ecd15afeb65a92902a1b19737cd98f86c084ea16"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","19275ba31e621f6da1b83bf13af75233876fd3d4","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}