{"path":"solr/core/src/test/org/apache/solr/cloud/TestCloudRecovery2#setupCluster().mjava","commits":[{"id":"ce70cdb9511a671e0e15d4dc93b8334c86b6e681","date":1542017422,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudRecovery2#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n\n    configureCluster(2)\n        .addConfig(\"config\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-minimal\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, \"config\", 1,2)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, 30);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudRecovery2#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudRecovery2#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n\n    configureCluster(2)\n        .addConfig(\"config\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-minimal\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, \"config\", 1,2)\n        .process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, 30);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n\n    configureCluster(2)\n        .addConfig(\"config\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-minimal\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, \"config\", 1,2)\n        .setMaxShardsPerNode(2)\n        .process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, 30);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce70cdb9511a671e0e15d4dc93b8334c86b6e681":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["ce70cdb9511a671e0e15d4dc93b8334c86b6e681"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"ce70cdb9511a671e0e15d4dc93b8334c86b6e681":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce70cdb9511a671e0e15d4dc93b8334c86b6e681"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}