{"path":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#assertFuncEquals(SolrQueryRequest,String...).mjava","commits":[{"id":"69227e655c7a72315c68e596f0a899f339b1ec2b","date":1340137626,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#assertFuncEquals(SolrQueryRequest,String...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * the function name for val parser coverage checking is extracted from\n   * the first input\n   * @see #assertQueryEquals\n   * @see #testParserCoverage\n   */\n  protected void assertFuncEquals(final SolrQueryRequest req,\n                                  final String... inputs) throws Exception {\n    // pull out the function name\n    final String funcName = (new QueryParsing.StrParser(inputs[0])).getId();\n    valParsersTested.add(funcName);\n\n    assertQueryEquals(FunctionQParserPlugin.NAME, req, inputs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"051c3069a96e986b8fa0435398a73a922ce85418","date":1447853599,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#assertFuncEquals(SolrQueryRequest,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#assertFuncEquals(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * the function name for val parser coverage checking is extracted from\n   * the first input\n   * @see #assertQueryEquals\n   * @see #testParserCoverage\n   */\n  protected void assertFuncEquals(final SolrQueryRequest req,\n                                  final String... inputs) throws Exception {\n    // pull out the function name\n    final String funcName = (new StrParser(inputs[0])).getId();\n    valParsersTested.add(funcName);\n\n    assertQueryEquals(FunctionQParserPlugin.NAME, req, inputs);\n  }\n\n","sourceOld":"  /**\n   * the function name for val parser coverage checking is extracted from\n   * the first input\n   * @see #assertQueryEquals\n   * @see #testParserCoverage\n   */\n  protected void assertFuncEquals(final SolrQueryRequest req,\n                                  final String... inputs) throws Exception {\n    // pull out the function name\n    final String funcName = (new QueryParsing.StrParser(inputs[0])).getId();\n    valParsersTested.add(funcName);\n\n    assertQueryEquals(FunctionQParserPlugin.NAME, req, inputs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"69227e655c7a72315c68e596f0a899f339b1ec2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"051c3069a96e986b8fa0435398a73a922ce85418":["69227e655c7a72315c68e596f0a899f339b1ec2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["051c3069a96e986b8fa0435398a73a922ce85418"]},"commit2Childs":{"69227e655c7a72315c68e596f0a899f339b1ec2b":["051c3069a96e986b8fa0435398a73a922ce85418"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["69227e655c7a72315c68e596f0a899f339b1ec2b"],"051c3069a96e986b8fa0435398a73a922ce85418":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}