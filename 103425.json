{"path":"lucene/src/java/org/apache/lucene/messages/NLS#load(Class[#-extends-NLS]).mjava","commits":[{"id":"dcdea6104bd783a8aca4fe5078060b7b4a80897a","date":1287369691,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/messages/NLS#load(Class[#-extends-NLS]).mjava","pathOld":"lucene/src/java/org/apache/lucene/messages/NLS#load(Class[Object]).mjava","sourceNew":"  /**\n   * @param clazz\n   */\n  private static void load(Class<? extends NLS> clazz) {\n    final Field[] fieldArray = clazz.getDeclaredFields();\n\n    boolean isFieldAccessible = (clazz.getModifiers() & Modifier.PUBLIC) != 0;\n\n    // build a map of field names to Field objects\n    final int len = fieldArray.length;\n    Map<String, Field> fields = new HashMap<String, Field>(len * 2);\n    for (int i = 0; i < len; i++) {\n      fields.put(fieldArray[i].getName(), fieldArray[i]);\n      loadfieldValue(fieldArray[i], isFieldAccessible, clazz);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param clazz\n   */\n  private static void load(Class<Object> clazz) {\n    final Field[] fieldArray = clazz.getDeclaredFields();\n\n    boolean isFieldAccessible = (clazz.getModifiers() & Modifier.PUBLIC) != 0;\n\n    // build a map of field names to Field objects\n    final int len = fieldArray.length;\n    Map<String, Field> fields = new HashMap<String, Field>(len * 2);\n    for (int i = 0; i < len; i++) {\n      fields.put(fieldArray[i].getName(), fieldArray[i]);\n      loadfieldValue(fieldArray[i], isFieldAccessible, clazz);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/messages/NLS#load(Class[#-extends-NLS]).mjava","pathOld":"lucene/src/java/org/apache/lucene/messages/NLS#load(Class[Object]).mjava","sourceNew":"  /**\n   * @param clazz\n   */\n  private static void load(Class<? extends NLS> clazz) {\n    final Field[] fieldArray = clazz.getDeclaredFields();\n\n    boolean isFieldAccessible = (clazz.getModifiers() & Modifier.PUBLIC) != 0;\n\n    // build a map of field names to Field objects\n    final int len = fieldArray.length;\n    Map<String, Field> fields = new HashMap<String, Field>(len * 2);\n    for (int i = 0; i < len; i++) {\n      fields.put(fieldArray[i].getName(), fieldArray[i]);\n      loadfieldValue(fieldArray[i], isFieldAccessible, clazz);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param clazz\n   */\n  private static void load(Class<Object> clazz) {\n    final Field[] fieldArray = clazz.getDeclaredFields();\n\n    boolean isFieldAccessible = (clazz.getModifiers() & Modifier.PUBLIC) != 0;\n\n    // build a map of field names to Field objects\n    final int len = fieldArray.length;\n    Map<String, Field> fields = new HashMap<String, Field>(len * 2);\n    for (int i = 0; i < len; i++) {\n      fields.put(fieldArray[i].getName(), fieldArray[i]);\n      loadfieldValue(fieldArray[i], isFieldAccessible, clazz);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/messages/NLS#load(Class[#-extends-NLS]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param clazz\n   */\n  private static void load(Class<? extends NLS> clazz) {\n    final Field[] fieldArray = clazz.getDeclaredFields();\n\n    boolean isFieldAccessible = (clazz.getModifiers() & Modifier.PUBLIC) != 0;\n\n    // build a map of field names to Field objects\n    final int len = fieldArray.length;\n    Map<String, Field> fields = new HashMap<String, Field>(len * 2);\n    for (int i = 0; i < len; i++) {\n      fields.put(fieldArray[i].getName(), fieldArray[i]);\n      loadfieldValue(fieldArray[i], isFieldAccessible, clazz);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8e9ca52d792af7d9298486a1b8448e909c203d5b","date":1324126661,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/messages/NLS#load(Class[#-extends-NLS]).mjava","pathOld":"lucene/src/java/org/apache/lucene/messages/NLS#load(Class[#-extends-NLS]).mjava","sourceNew":"  /**\n   * @param clazz\n   */\n  private static void load(Class<? extends NLS> clazz) {\n    final Field[] fieldArray = clazz.getDeclaredFields();\n\n    boolean isFieldAccessible = (clazz.getModifiers() & Modifier.PUBLIC) != 0;\n\n    // build a map of field names to Field objects\n    final int len = fieldArray.length;\n    Map<String, Field> fields = new HashMap<String, Field>(len * 2);\n    for (int i = 0; i < len; i++) {\n      fields.put(fieldArray[i].getName(), fieldArray[i]);\n      loadfieldValue(fieldArray[i], isFieldAccessible, clazz);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param clazz\n   */\n  private static void load(Class<? extends NLS> clazz) {\n    final Field[] fieldArray = clazz.getDeclaredFields();\n\n    boolean isFieldAccessible = (clazz.getModifiers() & Modifier.PUBLIC) != 0;\n\n    // build a map of field names to Field objects\n    final int len = fieldArray.length;\n    Map<String, Field> fields = new HashMap<String, Field>(len * 2);\n    for (int i = 0; i < len; i++) {\n      fields.put(fieldArray[i].getName(), fieldArray[i]);\n      loadfieldValue(fieldArray[i], isFieldAccessible, clazz);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8e9ca52d792af7d9298486a1b8448e909c203d5b":["dcdea6104bd783a8aca4fe5078060b7b4a80897a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dcdea6104bd783a8aca4fe5078060b7b4a80897a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dcdea6104bd783a8aca4fe5078060b7b4a80897a"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dcdea6104bd783a8aca4fe5078060b7b4a80897a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8e9ca52d792af7d9298486a1b8448e909c203d5b"]},"commit2Childs":{"8e9ca52d792af7d9298486a1b8448e909c203d5b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dcdea6104bd783a8aca4fe5078060b7b4a80897a","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"dcdea6104bd783a8aca4fe5078060b7b4a80897a":["8e9ca52d792af7d9298486a1b8448e909c203d5b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}