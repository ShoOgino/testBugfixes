{"path":"solr/core/src/java/org/apache/solr/packagemanager/DefaultPackageRepository#download(String).mjava","commits":[{"id":"120bc33d5cbe83eca2e5fce597baf4fef208d579","date":1573735895,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/DefaultPackageRepository#download(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Path download(String artifactName) throws SolrException, IOException {\n    Path tmpDirectory = Files.createTempDirectory(\"solr-packages\");\n    tmpDirectory.toFile().deleteOnExit();\n    URL url = new URL(new URL(repositoryURL), artifactName);\n    String fileName = url.getPath().substring(url.getPath().lastIndexOf('/') + 1);\n    Path destination = tmpDirectory.resolve(fileName);\n\n    switch (url.getProtocol()) {\n      case \"http\":\n      case \"https\":\n      case \"ftp\":\n        FileUtils.copyURLToFile(url, destination.toFile());\n        break;\n      default:\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"URL protocol \" + url.getProtocol() + \" not supported\");\n    }\n    \n    return destination;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62d55718cd611235e975fa73a6bdf263fbd58859","date":1576386842,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/DefaultPackageRepository#download(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/packagemanager/DefaultPackageRepository#download(String).mjava","sourceNew":"  @Override\n  public Path download(String artifactName) throws SolrException, IOException {\n    Path tmpDirectory = Files.createTempDirectory(\"solr-packages\");\n    tmpDirectory.toFile().deleteOnExit();\n    URL url = new URL(new URL(repositoryURL.endsWith(\"/\")? repositoryURL: repositoryURL+\"/\"), artifactName);\n    String fileName = FilenameUtils.getName(url.getPath());\n    Path destination = tmpDirectory.resolve(fileName);\n\n    switch (url.getProtocol()) {\n      case \"http\":\n      case \"https\":\n      case \"ftp\":\n        FileUtils.copyURLToFile(url, destination.toFile());\n        break;\n      default:\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"URL protocol \" + url.getProtocol() + \" not supported\");\n    }\n    \n    return destination;\n  }\n\n","sourceOld":"  @Override\n  public Path download(String artifactName) throws SolrException, IOException {\n    Path tmpDirectory = Files.createTempDirectory(\"solr-packages\");\n    tmpDirectory.toFile().deleteOnExit();\n    URL url = new URL(new URL(repositoryURL), artifactName);\n    String fileName = url.getPath().substring(url.getPath().lastIndexOf('/') + 1);\n    Path destination = tmpDirectory.resolve(fileName);\n\n    switch (url.getProtocol()) {\n      case \"http\":\n      case \"https\":\n      case \"ftp\":\n        FileUtils.copyURLToFile(url, destination.toFile());\n        break;\n      default:\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"URL protocol \" + url.getProtocol() + \" not supported\");\n    }\n    \n    return destination;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06595b0c22c7d3075c4104d3820cccf95d9d8a43","date":1576491645,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/DefaultPackageRepository#download(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/packagemanager/DefaultPackageRepository#download(String).mjava","sourceNew":"  @Override\n  public Path download(String artifactName) throws SolrException, IOException {\n    Path tmpDirectory = Files.createTempDirectory(\"solr-packages\");\n    tmpDirectory.toFile().deleteOnExit();\n    URL url = new URL(new URL(repositoryURL.endsWith(\"/\")? repositoryURL: repositoryURL+\"/\"), artifactName);\n    String fileName = FilenameUtils.getName(url.getPath());\n    Path destination = tmpDirectory.resolve(fileName);\n\n    switch (url.getProtocol()) {\n      case \"http\":\n      case \"https\":\n      case \"ftp\":\n        FileUtils.copyURLToFile(url, destination.toFile());\n        break;\n      default:\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"URL protocol \" + url.getProtocol() + \" not supported\");\n    }\n    \n    return destination;\n  }\n\n","sourceOld":"  @Override\n  public Path download(String artifactName) throws SolrException, IOException {\n    Path tmpDirectory = Files.createTempDirectory(\"solr-packages\");\n    tmpDirectory.toFile().deleteOnExit();\n    URL url = new URL(new URL(repositoryURL), artifactName);\n    String fileName = url.getPath().substring(url.getPath().lastIndexOf('/') + 1);\n    Path destination = tmpDirectory.resolve(fileName);\n\n    switch (url.getProtocol()) {\n      case \"http\":\n      case \"https\":\n      case \"ftp\":\n        FileUtils.copyURLToFile(url, destination.toFile());\n        break;\n      default:\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"URL protocol \" + url.getProtocol() + \" not supported\");\n    }\n    \n    return destination;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06595b0c22c7d3075c4104d3820cccf95d9d8a43":["120bc33d5cbe83eca2e5fce597baf4fef208d579","62d55718cd611235e975fa73a6bdf263fbd58859"],"62d55718cd611235e975fa73a6bdf263fbd58859":["120bc33d5cbe83eca2e5fce597baf4fef208d579"],"120bc33d5cbe83eca2e5fce597baf4fef208d579":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["62d55718cd611235e975fa73a6bdf263fbd58859"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["120bc33d5cbe83eca2e5fce597baf4fef208d579"],"06595b0c22c7d3075c4104d3820cccf95d9d8a43":[],"62d55718cd611235e975fa73a6bdf263fbd58859":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"120bc33d5cbe83eca2e5fce597baf4fef208d579":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","62d55718cd611235e975fa73a6bdf263fbd58859"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}