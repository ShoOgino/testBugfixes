{"path":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","commits":[{"id":"fd5947db4de866f035b932f219674c03562d904e","date":1219248396,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","pathOld":"/dev/null","sourceNew":"  // TODO: Remove warning after API has been finalized\n  public Collection/*<byte[]>*/ getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b00d44ccb616bf40482a9ba5302cb256c26c6e4c","date":1249308735,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","sourceNew":"  // TODO: Remove warning after API has been finalized\n  // TODO: Would be nice to be able to lazy load payloads\n  public Collection/*<byte[]>*/ getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","sourceOld":"  // TODO: Remove warning after API has been finalized\n  public Collection/*<byte[]>*/ getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","sourceNew":"  // TODO: Remove warning after API has been finalized\n  // TODO: Would be nice to be able to lazy load payloads\n  public Collection<byte[]> getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","sourceOld":"  // TODO: Remove warning after API has been finalized\n  // TODO: Would be nice to be able to lazy load payloads\n  public Collection/*<byte[]>*/ getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","sourceNew":"  // TODO: Remove warning after API has been finalized\n  // TODO: Would be nice to be able to lazy load payloads\n  @Override\n  public Collection<byte[]> getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","sourceOld":"  // TODO: Remove warning after API has been finalized\n  // TODO: Would be nice to be able to lazy load payloads\n  public Collection<byte[]> getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#getPayload().mjava","sourceNew":"  // TODO: Remove warning after API has been finalized\n  // TODO: Would be nice to be able to lazy load payloads\n  @Override\n  public Collection<byte[]> getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","sourceOld":"  // TODO: Remove warning after API has been finalized\n  // TODO: Would be nice to be able to lazy load payloads\n  @Override\n  public Collection<byte[]> getPayload() throws IOException {\n    return matchPayload;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b00d44ccb616bf40482a9ba5302cb256c26c6e4c":["fd5947db4de866f035b932f219674c03562d904e"],"8a9e385641d717e641408d8fbbc62be8fc766357":["ef82ff03e4016c705811b2658e81471a645c0e49"],"ef82ff03e4016c705811b2658e81471a645c0e49":["b00d44ccb616bf40482a9ba5302cb256c26c6e4c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd5947db4de866f035b932f219674c03562d904e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"b00d44ccb616bf40482a9ba5302cb256c26c6e4c":["ef82ff03e4016c705811b2658e81471a645c0e49"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ef82ff03e4016c705811b2658e81471a645c0e49":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd5947db4de866f035b932f219674c03562d904e"],"fd5947db4de866f035b932f219674c03562d904e":["b00d44ccb616bf40482a9ba5302cb256c26c6e4c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}