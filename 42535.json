{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedSizeInBytes().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedSizeInBytes().mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedSizeInBytes().mjava","sourceNew":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() throws IOException {\n    if (!(delegate instanceof RAMDirectory))\n      return sizeInBytes();\n    long size = 0;\n    for(final RAMFile file: ((RAMDirectory)delegate).fileMap.values()) {\n      size += file.getSizeInBytes();\n    }\n    return size;\n  }\n\n","sourceOld":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() throws IOException {\n    if (!(delegate instanceof RAMDirectory))\n      return sizeInBytes();\n    long size = 0;\n    for(final RAMFile file: ((RAMDirectory)delegate).fileMap.values()) {\n      size += file.getSizeInBytes();\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399ef3ff6c22f0627c82ac65f32726f3587a2aa1","date":1379005174,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedSizeInBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedSizeInBytes().mjava","sourceNew":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() throws IOException {\n    if (!(in instanceof RAMDirectory))\n      return sizeInBytes();\n    long size = 0;\n    for(final RAMFile file: ((RAMDirectory)in).fileMap.values()) {\n      size += file.getSizeInBytes();\n    }\n    return size;\n  }\n\n","sourceOld":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() throws IOException {\n    if (!(delegate instanceof RAMDirectory))\n      return sizeInBytes();\n    long size = 0;\n    for(final RAMFile file: ((RAMDirectory)delegate).fileMap.values()) {\n      size += file.getSizeInBytes();\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8405d98acebb7e287bf7ac40e937ba05b8661285","date":1401433291,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedSizeInBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedSizeInBytes().mjava","sourceNew":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() throws IOException {\n    if (!(in instanceof RAMDirectory))\n      return sizeInBytes();\n    long size = 0;\n    for(final RAMFile file: ((RAMDirectory)in).fileMap.values()) {\n      size += file.ramBytesUsed();\n    }\n    return size;\n  }\n\n","sourceOld":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() throws IOException {\n    if (!(in instanceof RAMDirectory))\n      return sizeInBytes();\n    long size = 0;\n    for(final RAMFile file: ((RAMDirectory)in).fileMap.values()) {\n      size += file.getSizeInBytes();\n    }\n    return size;\n  }\n\n","bugFix":["a05409176bd65129d67a785ee70e881e238a9aef"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#getRecomputedSizeInBytes().mjava","sourceNew":null,"sourceOld":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() throws IOException {\n    if (!(in instanceof RAMDirectory))\n      return sizeInBytes();\n    long size = 0;\n    for(final RAMFile file: ((RAMDirectory)in).fileMap.values()) {\n      size += file.ramBytesUsed();\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["8405d98acebb7e287bf7ac40e937ba05b8661285"],"8405d98acebb7e287bf7ac40e937ba05b8661285":["399ef3ff6c22f0627c82ac65f32726f3587a2aa1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"399ef3ff6c22f0627c82ac65f32726f3587a2aa1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["409da428f28953cf35fddd5c9ff5c7e4f5439863"]},"commit2Childs":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8405d98acebb7e287bf7ac40e937ba05b8661285":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["399ef3ff6c22f0627c82ac65f32726f3587a2aa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"399ef3ff6c22f0627c82ac65f32726f3587a2aa1":["8405d98acebb7e287bf7ac40e937ba05b8661285"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}