{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","commits":[{"id":"c5c2a995d2724688c1fd4f80bf8f9d6c56c8df3b","date":1269463784,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","pathOld":"/dev/null","sourceNew":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return (String[]) a.toArray(new String[a.size()]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4881303d8a0667d9865d91f1d7b7a91e001cd5f5","date":1286123254,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","sourceNew":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return a.toArray(new String[a.size()]);\n  }\n\n","sourceOld":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return (String[]) a.toArray(new String[a.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","sourceNew":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return a.toArray(new String[a.size()]);\n  }\n\n","sourceOld":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return (String[]) a.toArray(new String[a.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","sourceNew":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return a.toArray(new String[a.size()]);\n  }\n\n","sourceOld":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return a.toArray(new String[a.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","sourceNew":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return a.toArray(new String[a.size()]);\n  }\n\n","sourceOld":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return a.toArray(new String[a.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#propToStringArray(String).mjava","sourceNew":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return a.toArray(new String[a.size()]);\n  }\n\n","sourceOld":"  private String[] propToStringArray(String s) {\n    if (s.indexOf(\":\") < 0) {\n      return new String[]{s};\n    }\n\n    ArrayList<String> a = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, \":\");\n    while (st.hasMoreTokens()) {\n      String t = st.nextToken();\n      a.add(t);\n    }\n    return a.toArray(new String[a.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["4881303d8a0667d9865d91f1d7b7a91e001cd5f5","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["4881303d8a0667d9865d91f1d7b7a91e001cd5f5"],"4881303d8a0667d9865d91f1d7b7a91e001cd5f5":["c5c2a995d2724688c1fd4f80bf8f9d6c56c8df3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5c2a995d2724688c1fd4f80bf8f9d6c56c8df3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c5c2a995d2724688c1fd4f80bf8f9d6c56c8df3b","4881303d8a0667d9865d91f1d7b7a91e001cd5f5"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"4881303d8a0667d9865d91f1d7b7a91e001cd5f5":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5c2a995d2724688c1fd4f80bf8f9d6c56c8df3b"],"c5c2a995d2724688c1fd4f80bf8f9d6c56c8df3b":["4881303d8a0667d9865d91f1d7b7a91e001cd5f5","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}