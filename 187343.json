{"path":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","commits":[{"id":"4cc2a5e90b34bfc6bb00b6261a7956c2c022c275","date":1364946285,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(\"_classLoaderHierarchy\");\n    try {\n      cc.setPersistent(false);\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a4da96826f502cf1a56a096929b37ce73e523a","date":1374584011,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(\"_classLoaderHierarchy\");\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(\"_classLoaderHierarchy\");\n    try {\n      cc.setPersistent(false);\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(\"_classLoaderHierarchy\");\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(\"_classLoaderHierarchy\");\n    try {\n      cc.setPersistent(false);\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85032ab568b3f50eabd577aaa994ba197db93758","date":1404157267,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(\"_classLoaderHierarchy\");\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(\"_classLoaderHierarchy\");\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\", \"configSet\", \"minimal\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(\"_classLoaderHierarchy\");\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      SolrCore core1 = cc.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\", \"configSet\", \"minimal\");\n      SolrCore core1 = cc.create(descriptor1);\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a2748831fb25b0e9d5a4c315047bf877c887460","date":1498155650,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader baseLoader = SolrResourceLoader.class.getClassLoader();\n      assertSame(baseLoader, sharedLoader.getParent());\n\n      SolrCore core1 = cc.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      SolrCore core1 = cc.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader baseLoader = SolrResourceLoader.class.getClassLoader();\n      assertSame(baseLoader, sharedLoader.getParent());\n\n      SolrCore core1 = cc.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      SolrCore core1 = cc.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testClassLoaderHierarchy().mjava","sourceNew":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader baseLoader = SolrResourceLoader.class.getClassLoader();\n      assertSame(baseLoader, sharedLoader.getParent());\n\n      SolrCore core1 = cc.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testClassLoaderHierarchy() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    try {\n      ClassLoader sharedLoader = cc.loader.getClassLoader();\n      ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();\n      assertSame(contextLoader, sharedLoader.getParent());\n\n      SolrCore core1 = cc.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      ClassLoader coreLoader = core1.getResourceLoader().getClassLoader();\n      assertSame(sharedLoader, coreLoader.getParent());\n\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["4cc2a5e90b34bfc6bb00b6261a7956c2c022c275","92a4da96826f502cf1a56a096929b37ce73e523a"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"4cc2a5e90b34bfc6bb00b6261a7956c2c022c275":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a2748831fb25b0e9d5a4c315047bf877c887460":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"92a4da96826f502cf1a56a096929b37ce73e523a":["4cc2a5e90b34bfc6bb00b6261a7956c2c022c275"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["85032ab568b3f50eabd577aaa994ba197db93758"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","5a2748831fb25b0e9d5a4c315047bf877c887460"],"85032ab568b3f50eabd577aaa994ba197db93758":["92a4da96826f502cf1a56a096929b37ce73e523a"],"28288370235ed02234a64753cdbf0c6ec096304a":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","5a2748831fb25b0e9d5a4c315047bf877c887460"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["5a2748831fb25b0e9d5a4c315047bf877c887460","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"4cc2a5e90b34bfc6bb00b6261a7956c2c022c275":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","92a4da96826f502cf1a56a096929b37ce73e523a"],"5a2748831fb25b0e9d5a4c315047bf877c887460":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"92a4da96826f502cf1a56a096929b37ce73e523a":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","85032ab568b3f50eabd577aaa994ba197db93758"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc2a5e90b34bfc6bb00b6261a7956c2c022c275"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"85032ab568b3f50eabd577aaa994ba197db93758":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}