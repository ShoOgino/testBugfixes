{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestQueryParserWrapper#assertWildcardQueryEquals(String,boolean,String,boolean).mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestQueryParserWrapper#assertWildcardQueryEquals(String,boolean,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void assertWildcardQueryEquals(String query, boolean lowercase,\n      String result, boolean allowLeadingWildcard) throws Exception {\n    QueryParserWrapper qp = getParser(null);\n    qp.setLowercaseExpandedTerms(lowercase);\n    qp.setAllowLeadingWildcard(allowLeadingWildcard);\n    Query q = qp.parse(query);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"WildcardQuery /\" + query + \"/ yielded /\" + s + \"/, expecting /\"\n          + result + \"/\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQueryParserWrapper#assertWildcardQueryEquals(String,boolean,String,boolean).mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestQueryParserWrapper#assertWildcardQueryEquals(String,boolean,String,boolean).mjava","sourceNew":"  public void assertWildcardQueryEquals(String query, boolean lowercase,\n      String result, boolean allowLeadingWildcard) throws Exception {\n    QueryParserWrapper qp = getParser(null);\n    qp.setLowercaseExpandedTerms(lowercase);\n    qp.setAllowLeadingWildcard(allowLeadingWildcard);\n    Query q = qp.parse(query);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"WildcardQuery /\" + query + \"/ yielded /\" + s + \"/, expecting /\"\n          + result + \"/\");\n    }\n  }\n\n","sourceOld":"  public void assertWildcardQueryEquals(String query, boolean lowercase,\n      String result, boolean allowLeadingWildcard) throws Exception {\n    QueryParserWrapper qp = getParser(null);\n    qp.setLowercaseExpandedTerms(lowercase);\n    qp.setAllowLeadingWildcard(allowLeadingWildcard);\n    Query q = qp.parse(query);\n    String s = q.toString(\"field\");\n    if (!s.equals(result)) {\n      fail(\"WildcardQuery /\" + query + \"/ yielded /\" + s + \"/, expecting /\"\n          + result + \"/\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}