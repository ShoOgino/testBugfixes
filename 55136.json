{"path":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","commits":[{"id":"fbbdd469796c4f57b306728d94c2e230a08453e0","date":1128461437,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"/dev/null","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    Hits hits = is.search(q);\n    assertEquals(1, hits.length());\n    is.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    Hits hits = is.search(q);\n    assertEquals(1, hits.length());\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    Hits hits = is.search(q);\n    assertEquals(1, hits.length());\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    Hits hits = is.search(q);\n    assertEquals(1, hits.length());\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(Version.LUCENE_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(Version.LUCENE_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(analyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(analyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw =  new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n    \n    MultiFieldQueryParser mfqp = \n      new MultiFieldQueryParser(TEST_VERSION_CURRENT, new String[] {\"body\"}, analyzer);\n    mfqp.setDefaultOperator(QueryParser.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fbbdd469796c4f57b306728d94c2e230a08453e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["ba1116b3450a9c1642c89445d131b37344055245"],"0a046c0c310bc77931fc8441bd920053b607dd14":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["fbbdd469796c4f57b306728d94c2e230a08453e0"],"ba1116b3450a9c1642c89445d131b37344055245":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"fbbdd469796c4f57b306728d94c2e230a08453e0":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"ba1116b3450a9c1642c89445d131b37344055245":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fbbdd469796c4f57b306728d94c2e230a08453e0"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["ba1116b3450a9c1642c89445d131b37344055245"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}