{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getTotalReplicas(DocCollection,String).mjava","commits":[{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":1,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getTotalReplicas(DocCollection,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getTotalReplicas(String).mjava","sourceNew":"  /* Total number of replicas (number of cores serving an index to the collection) shown by the cluster state */\n  protected int getTotalReplicas(DocCollection c, String collection) {\n    if (c == null) return 0;  // support for when collection hasn't been created yet\n    int cnt = 0;\n    for (Slice slices : c.getSlices()) {\n      cnt += slices.getReplicas().size();\n    }\n    return cnt;\n  }\n\n","sourceOld":"  /* Total number of replicas (number of cores serving an index to the collection) shown by the cluster state */\n  protected int getTotalReplicas(String collection) {\n    ZkStateReader zkStateReader = cloudClient.getZkStateReader();\n    DocCollection coll = zkStateReader.getClusterState().getCollectionOrNull(collection);\n    if (coll == null) return 0;  // support for when collection hasn't been created yet\n    int cnt = 0;\n    for (Slice slices : coll.getSlices()) {\n      cnt += slices.getReplicas().size();\n    }\n    return cnt;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8c738236bd9fd6a12493d60844585ce125af35c","date":1564506878,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getTotalReplicas(DocCollection,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getTotalReplicas(DocCollection,String).mjava","sourceNew":"  /** \n   * Total number of replicas for all shards as indicated by the cluster state, regardless of status.\n   *\n   * @deprecated This method is virtually useless as it does not consider the status of either\n   *             the shard or replica, nor wether the node hosting each replica is alive.\n   */\n  @Deprecated\n  protected int getTotalReplicas(DocCollection c, String collection) {\n    if (c == null) return 0;  // support for when collection hasn't been created yet\n    int cnt = 0;\n    for (Slice slices : c.getSlices()) {\n      cnt += slices.getReplicas().size();\n    }\n    return cnt;\n  }\n\n","sourceOld":"  /* Total number of replicas (number of cores serving an index to the collection) shown by the cluster state */\n  protected int getTotalReplicas(DocCollection c, String collection) {\n    if (c == null) return 0;  // support for when collection hasn't been created yet\n    int cnt = 0;\n    for (Slice slices : c.getSlices()) {\n      cnt += slices.getReplicas().size();\n    }\n    return cnt;\n  }\n\n","bugFix":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getTotalReplicas(DocCollection,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getTotalReplicas(DocCollection,String).mjava","sourceNew":"  /** \n   * Total number of replicas for all shards as indicated by the cluster state, regardless of status.\n   *\n   * @deprecated This method is virtually useless as it does not consider the status of either\n   *             the shard or replica, nor wether the node hosting each replica is alive.\n   */\n  @Deprecated\n  protected int getTotalReplicas(DocCollection c, String collection) {\n    if (c == null) return 0;  // support for when collection hasn't been created yet\n    int cnt = 0;\n    for (Slice slices : c.getSlices()) {\n      cnt += slices.getReplicas().size();\n    }\n    return cnt;\n  }\n\n","sourceOld":"  /* Total number of replicas (number of cores serving an index to the collection) shown by the cluster state */\n  protected int getTotalReplicas(DocCollection c, String collection) {\n    if (c == null) return 0;  // support for when collection hasn't been created yet\n    int cnt = 0;\n    for (Slice slices : c.getSlices()) {\n      cnt += slices.getReplicas().size();\n    }\n    return cnt;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e8c738236bd9fd6a12493d60844585ce125af35c":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"f8061ddd97f3352007d927dae445884a6f3d857b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","e8c738236bd9fd6a12493d60844585ce125af35c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8c738236bd9fd6a12493d60844585ce125af35c"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e8c738236bd9fd6a12493d60844585ce125af35c","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"e8c738236bd9fd6a12493d60844585ce125af35c":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}