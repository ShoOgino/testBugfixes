{"path":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failure=th.toString();\n        fail(failure);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failure=th.toString();\n        fail(failure);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34aad2b15e35959ef2a8c4b991feea4c497936b7","date":1294423355,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failed.set(true);\n        throw new RuntimeException(th);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failure=th.toString();\n        fail(failure);\n      }\n    }\n\n","bugFix":["1ab51a69d46b495c00b86cf406ed599035e94d70","a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failed.set(true);\n        throw new RuntimeException(th);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failure=th.toString();\n        fail(failure);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failed.set(true);\n        throw new RuntimeException(th);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failure=th.toString();\n        fail(failure);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#run().mjava","sourceNew":"    @Override\n      public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n          ***/\n\n          switch(rand.nextInt(1)) {\n          case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failed.set(true);\n        throw new RuntimeException(th);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        for (int i=0; i<iter; i++) {\n          /*** future\n           // pick a random index reader... a shared one, or create your own\n           IndexReader ir;\n           ***/\n\n          switch(rand.nextInt(1)) {\n            case 0: loadDoc(ir1); break;\n          }\n\n        }\n      } catch (Throwable th) {\n        failed.set(true);\n        throw new RuntimeException(th);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","34aad2b15e35959ef2a8c4b991feea4c497936b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["34aad2b15e35959ef2a8c4b991feea4c497936b7"],"34aad2b15e35959ef2a8c4b991feea4c497936b7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","34aad2b15e35959ef2a8c4b991feea4c497936b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"34aad2b15e35959ef2a8c4b991feea4c497936b7":["29ef99d61cda9641b6250bf9567329a6e65f901d","1509f151d7692d84fae414b2b799ac06ba60fcb4","868da859b43505d9d2a023bfeae6dd0c795f5295"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["29ef99d61cda9641b6250bf9567329a6e65f901d","34aad2b15e35959ef2a8c4b991feea4c497936b7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}