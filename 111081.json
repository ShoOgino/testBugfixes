{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#buildRequest(String,boolean,String,boolean,String...).mjava","commits":[{"id":"9f53e30d1a17e72299f6e7a149cd1ca6d90b554c","date":1364838207,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#buildRequest(String,boolean,String,boolean,String...).mjava","pathOld":"/dev/null","sourceNew":"  private Object[] buildRequest(String q, boolean useSpellcheckQ, String handlerName, boolean useGrouping, String... addlParams) {\n    List<Object> params = new ArrayList<Object>();\n    \n    params.add(\"q\");\n    params.add(useSpellcheckQ ? \"*:*\" : q);\n    \n    if(useSpellcheckQ) {\n      params.add(\"spellcheck.q\");\n      params.add(q);\n    }\n    \n    params.add(\"fl\");\n    params.add(\"id,lowerfilt\");\n    \n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    params.add(\"spellcheck\");\n    params.add(\"true\");\n    \n    if(useGrouping) {\n      params.add(\"group\");\n      params.add(\"true\");\n      \n      params.add(\"group.field\");\n      params.add(\"id\");\n    }\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#buildRequest(String,boolean,String,boolean,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#buildRequest(String,boolean,String,boolean,String...).mjava","sourceNew":"  private Object[] buildRequest(String q, boolean useSpellcheckQ, String handlerName, boolean useGrouping, String... addlParams) {\n    List<Object> params = new ArrayList<>();\n    \n    params.add(\"q\");\n    params.add(useSpellcheckQ ? \"*:*\" : q);\n    \n    if(useSpellcheckQ) {\n      params.add(\"spellcheck.q\");\n      params.add(q);\n    }\n    \n    params.add(\"fl\");\n    params.add(\"id,lowerfilt\");\n    \n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    params.add(\"spellcheck\");\n    params.add(\"true\");\n    \n    if(useGrouping) {\n      params.add(\"group\");\n      params.add(\"true\");\n      \n      params.add(\"group.field\");\n      params.add(\"id\");\n    }\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n\n","sourceOld":"  private Object[] buildRequest(String q, boolean useSpellcheckQ, String handlerName, boolean useGrouping, String... addlParams) {\n    List<Object> params = new ArrayList<Object>();\n    \n    params.add(\"q\");\n    params.add(useSpellcheckQ ? \"*:*\" : q);\n    \n    if(useSpellcheckQ) {\n      params.add(\"spellcheck.q\");\n      params.add(q);\n    }\n    \n    params.add(\"fl\");\n    params.add(\"id,lowerfilt\");\n    \n    params.add(\"qt\");\n    params.add(handlerName);\n    \n    params.add(\"shards.qt\");\n    params.add(handlerName);\n    \n    params.add(\"spellcheck\");\n    params.add(\"true\");\n    \n    if(useGrouping) {\n      params.add(\"group\");\n      params.add(\"true\");\n      \n      params.add(\"group.field\");\n      params.add(\"id\");\n    }\n    \n    if(addlParams!=null) {\n      params.addAll(Arrays.asList(addlParams));\n    }\n    return params.toArray(new Object[params.size()]);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["9f53e30d1a17e72299f6e7a149cd1ca6d90b554c"],"9f53e30d1a17e72299f6e7a149cd1ca6d90b554c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9f53e30d1a17e72299f6e7a149cd1ca6d90b554c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f53e30d1a17e72299f6e7a149cd1ca6d90b554c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}