{"path":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTest#testCurrencySchema().mjava","commits":[{"id":"c2635332d49f7c5a0b484950462a01775512628e","date":1331332806,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTest#testCurrencySchema().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getSchema();\n\n    SchemaField amount = schema.getField(\"amount\");\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_CURRENCY)) {\n        seenCurrency = true;\n      }\n\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_AMOUNT_RAW)) {\n        seenAmount = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field\", seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field\", seenAmount);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTest#testCurrencySchema().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getSchema();\n\n    SchemaField amount = schema.getField(\"amount\");\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_CURRENCY)) {\n        seenCurrency = true;\n      }\n\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_AMOUNT_RAW)) {\n        seenAmount = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field\", seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field\", seenAmount);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ce5a0276b8637186ae6adfa516e332132d197ad","date":1362165863,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testCurrencySchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTest#testCurrencySchema().mjava","sourceNew":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getSchema();\n\n    SchemaField amount = schema.getField(field());\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_CURRENCY)) {\n        seenCurrency = true;\n      }\n\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_AMOUNT_RAW)) {\n        seenAmount = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field\", seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field\", seenAmount);\n  }\n\n","sourceOld":"  @Test\n  public void testCurrencySchema() throws Exception {\n    IndexSchema schema = h.getCore().getSchema();\n\n    SchemaField amount = schema.getField(\"amount\");\n    assertNotNull(amount);\n    assertTrue(amount.isPolyField());\n\n    SchemaField[] dynFields = schema.getDynamicFieldPrototypes();\n    boolean seenCurrency = false;\n    boolean seenAmount = false;\n\n    for (SchemaField dynField : dynFields) {\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_CURRENCY)) {\n        seenCurrency = true;\n      }\n\n      if (dynField.getName().equals(\"*\" + FieldType.POLY_FIELD_SEPARATOR + CurrencyField.FIELD_SUFFIX_AMOUNT_RAW)) {\n        seenAmount = true;\n      }\n    }\n\n    assertTrue(\"Didn't find the expected currency code dynamic field\", seenCurrency);\n    assertTrue(\"Didn't find the expected value dynamic field\", seenAmount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2635332d49f7c5a0b484950462a01775512628e"],"4ce5a0276b8637186ae6adfa516e332132d197ad":["c2635332d49f7c5a0b484950462a01775512628e"],"c2635332d49f7c5a0b484950462a01775512628e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ce5a0276b8637186ae6adfa516e332132d197ad"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"4ce5a0276b8637186ae6adfa516e332132d197ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","c2635332d49f7c5a0b484950462a01775512628e"],"c2635332d49f7c5a0b484950462a01775512628e":["38e3b736c7ca086d61b7dbb841c905ee115490da","4ce5a0276b8637186ae6adfa516e332132d197ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}