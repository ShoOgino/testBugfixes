{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","commits":[{"id":"b5a70f7ff0756e3668447bffbbf8bce8e7c361b9","date":1420028708,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#inform(SolrCore).mjava","sourceNew":"  /**This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if( ! (resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if(zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getListener(this, zkSolrResourceLoader));\n\n  }\n\n","sourceOld":"  @Override\n  public void inform(final SolrCore core) {\n    if( ! (core.getResourceLoader() instanceof  ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) core.getResourceLoader();\n    if(zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          core,\n          getListener(core, zkSolrResourceLoader));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe289aecdaeb2c4bd0886f7ba8ba52c00e4b6fad","date":1423651273,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","sourceNew":"  /**This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if (!(resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if (zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getListener(this, zkSolrResourceLoader));\n\n  }\n\n","sourceOld":"  /**This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if( ! (resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if(zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getListener(this, zkSolrResourceLoader));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"389d072b64597cdcf75c2d536aaec3e8afe3393f","date":1427818698,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","sourceNew":"  /**This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if (!(resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if (zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getConfListener(this, zkSolrResourceLoader));\n\n  }\n\n","sourceOld":"  /**This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if (!(resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if (zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getListener(this, zkSolrResourceLoader));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","sourceNew":"  /**This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if (!(resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if (zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getConfListener(this, zkSolrResourceLoader));\n\n  }\n\n","sourceOld":"  /**This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if (!(resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if (zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getListener(this, zkSolrResourceLoader));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerConfListener().mjava","sourceNew":"  /**\n   * This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if (!(resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if (zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getConfListener(this, zkSolrResourceLoader));\n\n  }\n\n","sourceOld":"  /**This registers one listener for the entire conf directory. In zookeeper\n   * there is no event fired when children are modified. So , we expect everyone\n   * to 'touch' the /conf directory by setting some data  so that events are triggered.\n   */\n  private void registerConfListener() {\n    if (!(resourceLoader instanceof ZkSolrResourceLoader)) return;\n    final ZkSolrResourceLoader zkSolrResourceLoader = (ZkSolrResourceLoader) resourceLoader;\n    if (zkSolrResourceLoader != null)\n      zkSolrResourceLoader.getZkController().registerConfListenerForCore(\n          zkSolrResourceLoader.getConfigSetZkPath(),\n          this,\n          getConfListener(this, zkSolrResourceLoader));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"389d072b64597cdcf75c2d536aaec3e8afe3393f":["fe289aecdaeb2c4bd0886f7ba8ba52c00e4b6fad"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["389d072b64597cdcf75c2d536aaec3e8afe3393f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5a70f7ff0756e3668447bffbbf8bce8e7c361b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fab172655716b96f7e42376116235017a922de3a":["fe289aecdaeb2c4bd0886f7ba8ba52c00e4b6fad","389d072b64597cdcf75c2d536aaec3e8afe3393f"],"fe289aecdaeb2c4bd0886f7ba8ba52c00e4b6fad":["b5a70f7ff0756e3668447bffbbf8bce8e7c361b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"389d072b64597cdcf75c2d536aaec3e8afe3393f":["2668c99990e4c94a78bac005aa682b7c5986d23a","fab172655716b96f7e42376116235017a922de3a"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5a70f7ff0756e3668447bffbbf8bce8e7c361b9"],"b5a70f7ff0756e3668447bffbbf8bce8e7c361b9":["fe289aecdaeb2c4bd0886f7ba8ba52c00e4b6fad"],"fab172655716b96f7e42376116235017a922de3a":[],"fe289aecdaeb2c4bd0886f7ba8ba52c00e4b6fad":["389d072b64597cdcf75c2d536aaec3e8afe3393f","fab172655716b96f7e42376116235017a922de3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}