{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5d78730ab190ff8c3ec8984b6e7170f7b35de8","date":1284910806,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"683d3f90dda2bbb999c3ce855706d74563a53680","date":1285654576,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f","date":1287243791,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  Assume.assumeTrue(ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"351c452f1c3ded97338e6d3db2b585c5f89b0410","date":1291733593,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8c4bb144102e537495ae5b321f77a9898f7b0b8","date":1291834816,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy&z\", \"คุย\", \"กับ\", \"xyz@demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf703a22c95bad237d2d787a15bfbbc329df81c0","date":1323380832,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  assumeTrue(\"JRE does not support Thai dictionary-based BreakIterator\", ThaiWordFilter.DBBI_AVAILABLE);\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d47f1eb3c3b8adc62b915f0609e62634a9c9e8","date":1328702872,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer#testReusableTokenStream().mjava","sourceNew":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","sourceOld":"\tpublic void testReusableTokenStream() throws Exception {\n\t  ThaiAnalyzer analyzer = new ThaiAnalyzer(TEST_VERSION_CURRENT, CharArraySet.EMPTY_SET);\n\t  assertAnalyzesToReuse(analyzer, \"\", new String[] {});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"การที่ได้ต้องแสดงว่างานดี\",\n          new String[] { \"การ\", \"ที่\", \"ได้\", \"ต้อง\", \"แสดง\", \"ว่า\", \"งาน\", \"ดี\"});\n\n      assertAnalyzesToReuse(\n          analyzer,\n          \"บริษัทชื่อ XY&Z - คุยกับ xyz@demo.com\",\n          new String[] { \"บริษัท\", \"ชื่อ\", \"xy\", \"z\", \"คุย\", \"กับ\", \"xyz\", \"demo.com\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d47f1eb3c3b8adc62b915f0609e62634a9c9e8":["bf703a22c95bad237d2d787a15bfbbc329df81c0"],"683d3f90dda2bbb999c3ce855706d74563a53680":["3b5d78730ab190ff8c3ec8984b6e7170f7b35de8"],"351c452f1c3ded97338e6d3db2b585c5f89b0410":["e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["351c452f1c3ded97338e6d3db2b585c5f89b0410","bf703a22c95bad237d2d787a15bfbbc329df81c0"],"3b5d78730ab190ff8c3ec8984b6e7170f7b35de8":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["0f080986da691a3bba7b757f43ab72cdc82b57ce","351c452f1c3ded97338e6d3db2b585c5f89b0410"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["56d47f1eb3c3b8adc62b915f0609e62634a9c9e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bf703a22c95bad237d2d787a15bfbbc329df81c0":["351c452f1c3ded97338e6d3db2b585c5f89b0410"],"d8c4bb144102e537495ae5b321f77a9898f7b0b8":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","351c452f1c3ded97338e6d3db2b585c5f89b0410"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["683d3f90dda2bbb999c3ce855706d74563a53680","e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f"],"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f":["683d3f90dda2bbb999c3ce855706d74563a53680"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"56d47f1eb3c3b8adc62b915f0609e62634a9c9e8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"683d3f90dda2bbb999c3ce855706d74563a53680":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f"],"351c452f1c3ded97338e6d3db2b585c5f89b0410":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","bf703a22c95bad237d2d787a15bfbbc329df81c0","d8c4bb144102e537495ae5b321f77a9898f7b0b8"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3b5d78730ab190ff8c3ec8984b6e7170f7b35de8":["683d3f90dda2bbb999c3ce855706d74563a53680"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["3b5d78730ab190ff8c3ec8984b6e7170f7b35de8","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"bf703a22c95bad237d2d787a15bfbbc329df81c0":["56d47f1eb3c3b8adc62b915f0609e62634a9c9e8","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"d8c4bb144102e537495ae5b321f77a9898f7b0b8":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["d8c4bb144102e537495ae5b321f77a9898f7b0b8"],"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f":["351c452f1c3ded97338e6d3db2b585c5f89b0410","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d8c4bb144102e537495ae5b321f77a9898f7b0b8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}