{"path":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#doTest().mjava","commits":[{"id":"4a0429d772811db4118d0e6578bfd5d18f0e27db","date":1402412928,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n\n    index_specific(0,\"id\",\"1\", \"sort_i\", \"5\");\n    index_specific(0,\"id\",\"2\", \"sort_i\", \"50\");\n    index_specific(1,\"id\",\"5\", \"sort_i\", \"4\");\n    index_specific(1,\"id\",\"6\", \"sort_i\", \"10\");\n    index_specific(0,\"id\",\"7\", \"sort_i\", \"1\");\n    index_specific(1,\"id\",\"8\", \"sort_i\", \"2\");\n    index_specific(2,\"id\",\"9\", \"sort_i\", \"1000\");\n    index_specific(2,\"id\",\"10\", \"sort_i\", \"1500\");\n    index_specific(2,\"id\",\"11\", \"sort_i\", \"1300\");\n    index_specific(1,\"id\",\"12\", \"sort_i\", \"15\");\n    index_specific(1,\"id\",\"13\", \"sort_i\", \"16\");\n\n    commit();\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!count}\");\n    setDistributedParams(params);\n    QueryResponse rsp = queryServer(params);\n    assertCount(rsp, 11);\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"id:(1 2 5 6)\");\n    params.add(\"fq\", \"{!count}\");\n    setDistributedParams(params);\n    rsp = queryServer(params);\n    assertCount(rsp, 4);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest#doTest().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 3)\n  public void test() throws Exception {\n    del(\"*:*\");\n\n    index_specific(0,\"id\",\"1\", \"sort_i\", \"5\");\n    index_specific(0,\"id\",\"2\", \"sort_i\", \"50\");\n    index_specific(1,\"id\",\"5\", \"sort_i\", \"4\");\n    index_specific(1,\"id\",\"6\", \"sort_i\", \"10\");\n    index_specific(0,\"id\",\"7\", \"sort_i\", \"1\");\n    index_specific(1,\"id\",\"8\", \"sort_i\", \"2\");\n    index_specific(2,\"id\",\"9\", \"sort_i\", \"1000\");\n    index_specific(2,\"id\",\"10\", \"sort_i\", \"1500\");\n    index_specific(2,\"id\",\"11\", \"sort_i\", \"1300\");\n    index_specific(1,\"id\",\"12\", \"sort_i\", \"15\");\n    index_specific(1,\"id\",\"13\", \"sort_i\", \"16\");\n\n    commit();\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!count}\");\n    setDistributedParams(params);\n    QueryResponse rsp = queryServer(params);\n    assertCount(rsp, 11);\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"id:(1 2 5 6)\");\n    params.add(\"fq\", \"{!count}\");\n    setDistributedParams(params);\n    rsp = queryServer(params);\n    assertCount(rsp, 4);\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n\n    index_specific(0,\"id\",\"1\", \"sort_i\", \"5\");\n    index_specific(0,\"id\",\"2\", \"sort_i\", \"50\");\n    index_specific(1,\"id\",\"5\", \"sort_i\", \"4\");\n    index_specific(1,\"id\",\"6\", \"sort_i\", \"10\");\n    index_specific(0,\"id\",\"7\", \"sort_i\", \"1\");\n    index_specific(1,\"id\",\"8\", \"sort_i\", \"2\");\n    index_specific(2,\"id\",\"9\", \"sort_i\", \"1000\");\n    index_specific(2,\"id\",\"10\", \"sort_i\", \"1500\");\n    index_specific(2,\"id\",\"11\", \"sort_i\", \"1300\");\n    index_specific(1,\"id\",\"12\", \"sort_i\", \"15\");\n    index_specific(1,\"id\",\"13\", \"sort_i\", \"16\");\n\n    commit();\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!count}\");\n    setDistributedParams(params);\n    QueryResponse rsp = queryServer(params);\n    assertCount(rsp, 11);\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"id:(1 2 5 6)\");\n    params.add(\"fq\", \"{!count}\");\n    setDistributedParams(params);\n    rsp = queryServer(params);\n    assertCount(rsp, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abb23fcc2461782ab204e61213240feb77d355aa":["4a0429d772811db4118d0e6578bfd5d18f0e27db"],"4a0429d772811db4118d0e6578bfd5d18f0e27db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4a0429d772811db4118d0e6578bfd5d18f0e27db":["abb23fcc2461782ab204e61213240feb77d355aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a0429d772811db4118d0e6578bfd5d18f0e27db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}