{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#checkoutAndBlock(DocumentsWriterPerThread).mjava","commits":[{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#checkoutAndBlock(DocumentsWriterPerThread).mjava","pathOld":"/dev/null","sourceNew":"  private void checkoutAndBlock(DocumentsWriterPerThread perThread) {\n    assert perThreadPool.isRegistered(perThread);\n    assert perThread.isHeldByCurrentThread();\n    assert perThread.isFlushPending() : \"can not block non-pending threadstate\";\n    assert fullFlush : \"can not block if fullFlush == false\";\n    numPending--;\n    blockedFlushes.add(perThread);\n    boolean checkedOut = perThreadPool.checkout(perThread);\n    assert checkedOut;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b5d5894c747a735a40a7857f0bb26c3122652c96"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b5d5894c747a735a40a7857f0bb26c3122652c96","date":1597160517,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#checkoutAndBlock(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#checkoutAndBlock(DocumentsWriterPerThread).mjava","sourceNew":"  /**\n   * To be called only by the owner of this object's monitor lock\n   */\n  private void checkoutAndBlock(DocumentsWriterPerThread perThread) {\n    assert Thread.holdsLock(this);\n    assert perThreadPool.isRegistered(perThread);\n    assert perThread.isHeldByCurrentThread();\n    assert perThread.isFlushPending() : \"can not block non-pending threadstate\";\n    assert fullFlush : \"can not block if fullFlush == false\";\n    numPending--; // write access synced\n    blockedFlushes.add(perThread);\n    boolean checkedOut = perThreadPool.checkout(perThread);\n    assert checkedOut;\n  }\n\n","sourceOld":"  private void checkoutAndBlock(DocumentsWriterPerThread perThread) {\n    assert perThreadPool.isRegistered(perThread);\n    assert perThread.isHeldByCurrentThread();\n    assert perThread.isFlushPending() : \"can not block non-pending threadstate\";\n    assert fullFlush : \"can not block if fullFlush == false\";\n    numPending--;\n    blockedFlushes.add(perThread);\n    boolean checkedOut = perThreadPool.checkout(perThread);\n    assert checkedOut;\n  }\n\n","bugFix":["264935965977b4a9e2f3920420647072c9c49176"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5d5894c747a735a40a7857f0bb26c3122652c96":["264935965977b4a9e2f3920420647072c9c49176"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5d5894c747a735a40a7857f0bb26c3122652c96"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["b5d5894c747a735a40a7857f0bb26c3122652c96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["264935965977b4a9e2f3920420647072c9c49176"],"b5d5894c747a735a40a7857f0bb26c3122652c96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}