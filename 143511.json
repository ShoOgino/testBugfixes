{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testEncodeDecodeRoundsDown().mjava","commits":[{"id":"d8da4c29a4aed72a95d20b328cb2140a85621cdd","date":1459513936,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testEncodeDecodeRoundsDown().mjava","pathOld":"/dev/null","sourceNew":"  /** make sure values always go down: this is important for edge case consistency */\n  public void testEncodeDecodeRoundsDown() throws Exception {\n    int iters = atLeast(1000);\n    for(int iter=0;iter<iters;iter++) {\n      double lat = -90 + 180.0 * random().nextDouble();\n      double lon = -180 + 360.0 * random().nextDouble();\n      \n      long enc = GeoEncodingUtils.mortonHash(lat, lon);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n      assertTrue(latEnc <= lat);\n      assertTrue(lonEnc <= lon);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03bffb520caf6e9833c4b9a82ac67d19a1f3fc97","date":1459595815,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testEncodeDecodeRoundsDown().mjava","sourceNew":null,"sourceOld":"  /** make sure values always go down: this is important for edge case consistency */\n  public void testEncodeDecodeRoundsDown() throws Exception {\n    int iters = atLeast(1000);\n    for(int iter=0;iter<iters;iter++) {\n      double lat = -90 + 180.0 * random().nextDouble();\n      double lon = -180 + 360.0 * random().nextDouble();\n      \n      long enc = GeoEncodingUtils.mortonHash(lat, lon);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n      assertTrue(latEnc <= lat);\n      assertTrue(lonEnc <= lon);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8da4c29a4aed72a95d20b328cb2140a85621cdd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"03bffb520caf6e9833c4b9a82ac67d19a1f3fc97":["d8da4c29a4aed72a95d20b328cb2140a85621cdd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03bffb520caf6e9833c4b9a82ac67d19a1f3fc97"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d8da4c29a4aed72a95d20b328cb2140a85621cdd"],"d8da4c29a4aed72a95d20b328cb2140a85621cdd":["03bffb520caf6e9833c4b9a82ac67d19a1f3fc97"],"03bffb520caf6e9833c4b9a82ac67d19a1f3fc97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}