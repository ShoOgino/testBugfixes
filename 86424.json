{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw,\n                          FacetIndexingParams iParams) throws IOException, CorruptIndexException {\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Mark Twain\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Stephen King\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Kurt Vonnegut\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"The Beatles\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Punk\", \"The Ramones\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"U2\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"REM\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"Dave Matthews Band\");\n    FacetTestUtils.add(iParams, iw, tw, \"Composer\", \"Bach\");\n  }\n\n","sourceOld":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw,\n                          FacetIndexingParams iParams) throws IOException, CorruptIndexException {\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Mark Twain\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Stephen King\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Kurt Vonnegut\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"The Beatles\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Punk\", \"The Ramones\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"U2\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"REM\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"Dave Matthews Band\");\n    FacetTestUtils.add(iParams, iw, tw, \"Composer\", \"Bach\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw,\n                          FacetIndexingParams iParams) throws IOException {\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Mark Twain\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Stephen King\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Kurt Vonnegut\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"The Beatles\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Punk\", \"The Ramones\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"U2\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"REM\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"Dave Matthews Band\");\n    FacetTestUtils.add(iParams, iw, tw, \"Composer\", \"Bach\");\n  }\n\n","sourceOld":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw,\n                          FacetIndexingParams iParams) throws IOException, CorruptIndexException {\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Mark Twain\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Stephen King\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Kurt Vonnegut\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"The Beatles\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Punk\", \"The Ramones\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"U2\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"REM\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"Dave Matthews Band\");\n    FacetTestUtils.add(iParams, iw, tw, \"Composer\", \"Bach\");\n  }\n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw,\n                          FacetIndexingParams iParams) throws IOException {\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Mark Twain\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Stephen King\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Kurt Vonnegut\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"The Beatles\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Punk\", \"The Ramones\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"U2\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"REM\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"Dave Matthews Band\");\n    FacetTestUtils.add(iParams, iw, tw, \"Composer\", \"Bach\");\n  }\n\n","sourceOld":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw,\n                          FacetIndexingParams iParams) throws IOException, CorruptIndexException {\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Mark Twain\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Stephen King\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Kurt Vonnegut\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"The Beatles\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Punk\", \"The Ramones\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"U2\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"REM\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"Dave Matthews Band\");\n    FacetTestUtils.add(iParams, iw, tw, \"Composer\", \"Bach\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw, FacetIndexingParams iParams) throws IOException {\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    for (CategoryPath cp : CATEGORIES) {\n      Document doc = new Document();\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      doc.add(new TextField(\"content\", \"alpha\", Field.Store.YES));\n      iw.addDocument(doc);\n    }\n  }\n\n","sourceOld":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw,\n                          FacetIndexingParams iParams) throws IOException {\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Mark Twain\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Stephen King\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Kurt Vonnegut\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"The Beatles\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Punk\", \"The Ramones\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"U2\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"REM\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"Dave Matthews Band\");\n    FacetTestUtils.add(iParams, iw, tw, \"Composer\", \"Bach\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw, FacetIndexingParams iParams) throws IOException {\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    for (CategoryPath cp : CATEGORIES) {\n      Document doc = new Document();\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      doc.add(new TextField(\"content\", \"alpha\", Field.Store.YES));\n      iw.addDocument(doc);\n    }\n  }\n\n","sourceOld":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw,\n                          FacetIndexingParams iParams) throws IOException {\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Mark Twain\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Stephen King\");\n    FacetTestUtils.add(iParams, iw, tw, \"Author\", \"Kurt Vonnegut\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"The Beatles\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Punk\", \"The Ramones\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"U2\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\", \"REM\");\n    FacetTestUtils.add(iParams, iw, tw, \"Band\", \"Rock & Pop\",\n    \"Dave Matthews Band\");\n    FacetTestUtils.add(iParams, iw, tw, \"Composer\", \"Bach\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","sourceNew":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw, FacetIndexingParams iParams) throws IOException {\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    for (FacetLabel cp : CATEGORIES) {\n      Document doc = new Document();\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      doc.add(new TextField(\"content\", \"alpha\", Field.Store.YES));\n      iw.addDocument(doc);\n    }\n  }\n\n","sourceOld":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw, FacetIndexingParams iParams) throws IOException {\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    for (CategoryPath cp : CATEGORIES) {\n      Document doc = new Document();\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      doc.add(new TextField(\"content\", \"alpha\", Field.Store.YES));\n      iw.addDocument(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","sourceNew":null,"sourceOld":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw, FacetIndexingParams iParams) throws IOException {\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    for (FacetLabel cp : CATEGORIES) {\n      Document doc = new Document();\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      doc.add(new TextField(\"content\", \"alpha\", Field.Store.YES));\n      iw.addDocument(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#seedIndex(RandomIndexWriter,TaxonomyWriter,FacetIndexingParams).mjava","sourceNew":null,"sourceOld":"  private void seedIndex(RandomIndexWriter iw, TaxonomyWriter tw, FacetIndexingParams iParams) throws IOException {\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    for (CategoryPath cp : CATEGORIES) {\n      Document doc = new Document();\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      doc.add(new TextField(\"content\", \"alpha\", Field.Store.YES));\n      iw.addDocument(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0","f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["c4015cd39dff8d4dec562d909f9766debac53aa6","fe33227f6805edab2036cbb80645cc4e2d1fa424","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["c4015cd39dff8d4dec562d909f9766debac53aa6","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}