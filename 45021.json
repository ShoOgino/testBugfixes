{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","commits":[{"id":"7f2a93a28913071a0b713be1d4b8a1181388d550","date":1254814948,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","pathOld":"/dev/null","sourceNew":" @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n    try {\n      rr.getAllRecords(new StringReader(malformedXml));\n      Assert.fail(\"A RuntimeException was expected: the input XML is invalid.\");\n      }\n    catch (Exception e) { }\n }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6835a774af2278133828a0e808bd578258b42ed2","date":1254816716,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","sourceNew":" @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     Assert.fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","sourceOld":" @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n    try {\n      rr.getAllRecords(new StringReader(malformedXml));\n      Assert.fail(\"A RuntimeException was expected: the input XML is invalid.\");\n      }\n    catch (Exception e) { }\n }\n\n","bugFix":null,"bugIntro":["8d7153ce425b1e39cf54f2eb61f355874c4f6700","8d7153ce425b1e39cf54f2eb61f355874c4f6700"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","sourceNew":" @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     Assert.fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","sourceOld":" @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     Assert.fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6835a774af2278133828a0e808bd578258b42ed2":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["6835a774af2278133828a0e808bd578258b42ed2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7f2a93a28913071a0b713be1d4b8a1181388d550":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"6835a774af2278133828a0e808bd578258b42ed2":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7f2a93a28913071a0b713be1d4b8a1181388d550":["6835a774af2278133828a0e808bd578258b42ed2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}