{"path":"src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","commits":[{"id":"f66f1826f07774581d2ec661444fc987bdd1a85d","date":1144730206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    h.close();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"810d380561c984370e8bfcbf778486c08f7e2cc0","date":1171644169,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    h.close();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81","date":1254087543,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"810d380561c984370e8bfcbf778486c08f7e2cc0":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f66f1826f07774581d2ec661444fc987bdd1a85d":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"810d380561c984370e8bfcbf778486c08f7e2cc0":["f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81"],"f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}