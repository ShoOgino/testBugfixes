{"path":"src/java/org/apache/solr/util/DOMUtil#substituteSystemProperty(String).mjava","commits":[{"id":"810d380561c984370e8bfcbf778486c08f7e2cc0","date":1171644169,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/solr/util/DOMUtil#substituteSystemProperty(String).mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * This method borrowed from Ant's PropertyHelper.replaceProperties:\n   *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n   */\n  private static String substituteSystemProperty(String value) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<String>();\n    List<String> propertyRefs = new ArrayList<String>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuffer sb = new StringBuffer();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0,colon_index);\n        }\n        fragment = System.getProperty(propertyName,defaultValue);\n        if (fragment == null) {\n          throw new SolrException(500, \"No system property or default value specified for \" + propertyName);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/DOMUtil#substituteSystemProperty(String).mjava","pathOld":"src/java/org/apache/solr/util/DOMUtil#substituteSystemProperty(String).mjava","sourceNew":"  /*\n   * This method borrowed from Ant's PropertyHelper.replaceProperties:\n   *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n   */\n  private static String substituteSystemProperty(String value) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<String>();\n    List<String> propertyRefs = new ArrayList<String>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuffer sb = new StringBuffer();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0,colon_index);\n        }\n        fragment = System.getProperty(propertyName,defaultValue);\n        if (fragment == null) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /*\n   * This method borrowed from Ant's PropertyHelper.replaceProperties:\n   *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n   */\n  private static String substituteSystemProperty(String value) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<String>();\n    List<String> propertyRefs = new ArrayList<String>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuffer sb = new StringBuffer();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0,colon_index);\n        }\n        fragment = System.getProperty(propertyName,defaultValue);\n        if (fragment == null) {\n          throw new SolrException(500, \"No system property or default value specified for \" + propertyName);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":["abad9f9da3e1a25fe52dd31439ed7d11af1440a5","abad9f9da3e1a25fe52dd31439ed7d11af1440a5","abad9f9da3e1a25fe52dd31439ed7d11af1440a5","abad9f9da3e1a25fe52dd31439ed7d11af1440a5","abad9f9da3e1a25fe52dd31439ed7d11af1440a5","abad9f9da3e1a25fe52dd31439ed7d11af1440a5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","date":1181791578,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/DOMUtil#substituteSystemProperty(String).mjava","pathOld":"src/java/org/apache/solr/util/DOMUtil#substituteSystemProperty(String).mjava","sourceNew":"  /*\n   * This method borrowed from Ant's PropertyHelper.replaceProperties:\n   *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n   */\n  private static String substituteSystemProperty(String value) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<String>();\n    List<String> propertyRefs = new ArrayList<String>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuffer sb = new StringBuffer();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0,colon_index);\n        }\n        fragment = System.getProperty(propertyName,defaultValue);\n        if (fragment == null) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /*\n   * This method borrowed from Ant's PropertyHelper.replaceProperties:\n   *   http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/PropertyHelper.java\n   */\n  private static String substituteSystemProperty(String value) {\n    if (value == null || value.indexOf('$') == -1) {\n      return value;\n    }\n\n    List<String> fragments = new ArrayList<String>();\n    List<String> propertyRefs = new ArrayList<String>();\n    parsePropertyString(value, fragments, propertyRefs);\n\n    StringBuffer sb = new StringBuffer();\n    Iterator<String> i = fragments.iterator();\n    Iterator<String> j = propertyRefs.iterator();\n\n    while (i.hasNext()) {\n      String fragment = i.next();\n      if (fragment == null) {\n        String propertyName = j.next();\n        String defaultValue = null;\n        int colon_index = propertyName.indexOf(':');\n        if (colon_index > -1) {\n          defaultValue = propertyName.substring(colon_index + 1);\n          propertyName = propertyName.substring(0,colon_index);\n        }\n        fragment = System.getProperty(propertyName,defaultValue);\n        if (fragment == null) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \"No system property or default value specified for \" + propertyName);\n        }\n      }\n      sb.append(fragment);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"810d380561c984370e8bfcbf778486c08f7e2cc0":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"810d380561c984370e8bfcbf778486c08f7e2cc0":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}