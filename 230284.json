{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","commits":[{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.IntBlockTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.IntBlockTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.IntBlockTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5626bd803178375ddd3b1d121587f4e5d1bcbd8c","date":1350997809,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n      singletonDocID = other.singletonDocID;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e52115b56781006682fd92c6938efaf174304d","date":1351014780,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n      singletonDocID = other.singletonDocID;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n      singletonDocID = other.singletonDocID;\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n      singletonDocID = other.singletonDocID;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"339d0e916669734510414f62912f1fcf120ecf9d","date":1378483491,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter.IntBlockTermState#copyFrom(TermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n      singletonDocID = other.singletonDocID;\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n      singletonDocID = other.singletonDocID;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":5,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter.IntBlockTermState#copyFrom(TermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader.IntBlockTermState#copyFrom(TermState).mjava","sourceNew":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n      singletonDocID = other.singletonDocID;\n    }\n\n","sourceOld":"    @Override\n    public void copyFrom(TermState _other) {\n      super.copyFrom(_other);\n      IntBlockTermState other = (IntBlockTermState) _other;\n      docStartFP = other.docStartFP;\n      posStartFP = other.posStartFP;\n      payStartFP = other.payStartFP;\n      lastPosBlockOffset = other.lastPosBlockOffset;\n      skipOffset = other.skipOffset;\n      singletonDocID = other.singletonDocID;\n\n      // Do not copy bytes, bytesReader (else TermState is\n      // very heavy, ie drags around the entire block's\n      // byte[]).  On seek back, if next() is in fact used\n      // (rare!), they will be re-read from disk.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"339d0e916669734510414f62912f1fcf120ecf9d":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["5626bd803178375ddd3b1d121587f4e5d1bcbd8c"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"5626bd803178375ddd3b1d121587f4e5d1bcbd8c":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"62e52115b56781006682fd92c6938efaf174304d":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","5626bd803178375ddd3b1d121587f4e5d1bcbd8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["5626bd803178375ddd3b1d121587f4e5d1bcbd8c","339d0e916669734510414f62912f1fcf120ecf9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f948dd442d23baa6cbb28daf77c8db78b351329"]},"commit2Childs":{"339d0e916669734510414f62912f1fcf120ecf9d":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["339d0e916669734510414f62912f1fcf120ecf9d"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["5626bd803178375ddd3b1d121587f4e5d1bcbd8c","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"5626bd803178375ddd3b1d121587f4e5d1bcbd8c":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","62e52115b56781006682fd92c6938efaf174304d","2f948dd442d23baa6cbb28daf77c8db78b351329"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"62e52115b56781006682fd92c6938efaf174304d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["62e52115b56781006682fd92c6938efaf174304d"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62e52115b56781006682fd92c6938efaf174304d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}