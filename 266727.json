{"path":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"    @Override\n    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n      assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n      final FixedBitSet set = new FixedBitSet(context.reader().maxDoc());\n      int docBase = context.docBase;\n      final int limit = docBase+context.reader().maxDoc();\n      for (;index < docs.length; index++) {\n        final int docId = docs[index];\n        if(docId > limit)\n          break;\n        if (docId >= docBase) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.cardinality() == 0 ? null:set;\n    }\n\n","sourceOld":"    @Override\n    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n      assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n      final FixedBitSet set = new FixedBitSet(context.reader().maxDoc());\n      int docBase = context.docBase;\n      final int limit = docBase+context.reader().maxDoc();\n      for (;index < docs.length; index++) {\n        final int docId = docs[index];\n        if(docId > limit)\n          break;\n        if (docId >= docBase) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.cardinality() == 0 ? null:set;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2821810e3dd9809a8fd40ee8a49bed97491001d","date":1366918025,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"    @Override\n    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n      assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n      final FixedBitSet set = new FixedBitSet(context.reader().maxDoc());\n      int docBase = context.docBase;\n      final int limit = docBase+context.reader().maxDoc();\n      for (int index=0;index < docs.length; index++) {\n        final int docId = docs[index];\n        if (docId >= docBase && docId < limit) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.cardinality() == 0 ? null:set;\n    }\n\n","sourceOld":"    @Override\n    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n      assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n      final FixedBitSet set = new FixedBitSet(context.reader().maxDoc());\n      int docBase = context.docBase;\n      final int limit = docBase+context.reader().maxDoc();\n      for (;index < docs.length; index++) {\n        final int docId = docs[index];\n        if(docId > limit)\n          break;\n        if (docId >= docBase) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.cardinality() == 0 ? null:set;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"    @Override\n    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) {\n      assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n      final FixedBitSet set = new FixedBitSet(context.reader().maxDoc());\n      int docBase = context.docBase;\n      final int limit = docBase+context.reader().maxDoc();\n      for (int index=0;index < docs.length; index++) {\n        final int docId = docs[index];\n        if (docId >= docBase && docId < limit) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.cardinality() == 0 ? null:set;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c2821810e3dd9809a8fd40ee8a49bed97491001d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["c2821810e3dd9809a8fd40ee8a49bed97491001d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c2821810e3dd9809a8fd40ee8a49bed97491001d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c2821810e3dd9809a8fd40ee8a49bed97491001d":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}