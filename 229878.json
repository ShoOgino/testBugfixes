{"path":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testSingleChar().mjava","commits":[{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testSingleChar().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testSingleChar().mjava","sourceNew":"  // Test some regular expressions as tokenization patterns\n  /** Test a configuration where each character is a term */\n  public void testSingleChar() throws Exception {\n    CharacterRunAutomaton single =\n        new CharacterRunAutomaton(new RegExp(\".\").toAutomaton());\n    Analyzer a = new MockAnalyzer(random(), single, false);\n    assertAnalyzesTo(a, \"foobar\",\n        new String[] { \"f\", \"o\", \"o\", \"b\", \"a\", \"r\" },\n        new int[] { 0, 1, 2, 3, 4, 5 },\n        new int[] { 1, 2, 3, 4, 5, 6 }\n    );\n    checkRandomData(random(), a, 100);\n  }\n\n","sourceOld":"  // Test some regular expressions as tokenization patterns\n  /** Test a configuration where each character is a term */\n  public void testSingleChar() throws Exception {\n    CharacterRunAutomaton single =\n        new CharacterRunAutomaton(new RegExp(\".\").toAutomaton());\n    Analyzer a = new MockAnalyzer(random(), single, false);\n    assertAnalyzesTo(a, \"foobar\",\n        new String[] { \"f\", \"o\", \"o\", \"b\", \"a\", \"r\" },\n        new int[] { 0, 1, 2, 3, 4, 5 },\n        new int[] { 1, 2, 3, 4, 5, 6 }\n    );\n    checkRandomData(random(), a, 100);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}