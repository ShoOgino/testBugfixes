{"path":"src/java/org/apache/solr/search/DocSetBase[DocSet]#getBits().mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DocSetBase[DocSet]#getBits().mjava","pathOld":"/dev/null","sourceNew":"  // Only the inefficient base implementation.  DocSets based on\n  // BitSets will return the actual BitSet without making a copy.\n  public BitSet getBits() {\n    BitSet bits = new BitSet();\n    for (DocIterator iter = iterator(); iter.hasNext();) {\n      bits.set(iter.nextDoc());\n    }\n    return bits;\n  }\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d447dab9352f36e9fc4fe467c8ccf77e5ae83477","date":1148776893,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DocSetBase[DocSet]#getBits().mjava","pathOld":"src/java/org/apache/solr/search/DocSetBase[DocSet]#getBits().mjava","sourceNew":"  /**\n   * Inefficient base implementation.\n   *\n   * @see BitDocSet#getBits\n   */\n  public BitSet getBits() {\n    BitSet bits = new BitSet();\n    for (DocIterator iter = iterator(); iter.hasNext();) {\n      bits.set(iter.nextDoc());\n    }\n    return bits;\n  }\n","sourceOld":"  // Only the inefficient base implementation.  DocSets based on\n  // BitSets will return the actual BitSet without making a copy.\n  public BitSet getBits() {\n    BitSet bits = new BitSet();\n    for (DocIterator iter = iterator(); iter.hasNext();) {\n      bits.set(iter.nextDoc());\n    }\n    return bits;\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21400778a0bf704d187a4848279049f5d90276c8","date":1149955512,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DocSetBase[DocSet]#getBits().mjava","pathOld":"src/java/org/apache/solr/search/DocSetBase[DocSet]#getBits().mjava","sourceNew":"  /**\n   * Inefficient base implementation.\n   *\n   * @see BitDocSet#getBits\n   */\n  public OpenBitSet getBits() {\n    OpenBitSet bits = new OpenBitSet();\n    for (DocIterator iter = iterator(); iter.hasNext();) {\n      bits.set(iter.nextDoc());\n    }\n    return bits;\n  }\n","sourceOld":"  /**\n   * Inefficient base implementation.\n   *\n   * @see BitDocSet#getBits\n   */\n  public BitSet getBits() {\n    BitSet bits = new BitSet();\n    for (DocIterator iter = iterator(); iter.hasNext();) {\n      bits.set(iter.nextDoc());\n    }\n    return bits;\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/DocSetBase[DocSet]#getBits().mjava","pathOld":"src/java/org/apache/solr/search/DocSetBase[DocSet]#getBits().mjava","sourceNew":"  /**\n   * Inefficient base implementation.\n   *\n   * @see BitDocSet#getBits\n   */\n  public OpenBitSet getBits() {\n    OpenBitSet bits = new OpenBitSet();\n    for (DocIterator iter = iterator(); iter.hasNext();) {\n      bits.set(iter.nextDoc());\n    }\n    return bits;\n  }\n","sourceOld":"  /**\n   * Inefficient base implementation.\n   *\n   * @see BitDocSet#getBits\n   */\n  public OpenBitSet getBits() {\n    OpenBitSet bits = new OpenBitSet();\n    for (DocIterator iter = iterator(); iter.hasNext();) {\n      bits.set(iter.nextDoc());\n    }\n    return bits;\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d447dab9352f36e9fc4fe467c8ccf77e5ae83477":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"21400778a0bf704d187a4848279049f5d90276c8":["d447dab9352f36e9fc4fe467c8ccf77e5ae83477"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["21400778a0bf704d187a4848279049f5d90276c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d447dab9352f36e9fc4fe467c8ccf77e5ae83477":["21400778a0bf704d187a4848279049f5d90276c8"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["d447dab9352f36e9fc4fe467c8ccf77e5ae83477"],"21400778a0bf704d187a4848279049f5d90276c8":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}