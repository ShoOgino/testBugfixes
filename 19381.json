{"path":"lucene/facet/src/test/org/apache/lucene/facet/AssertingSubDocsAtOnceCollector#setScorer(Scorable).mjava","commits":[{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/AssertingSubDocsAtOnceCollector#setScorer(Scorable).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/AssertingSubDocsAtOnceCollector#setScorer(Scorer).mjava","sourceNew":"  @Override\n  public void setScorer(Scorable s) throws IOException {\n    // Gathers all scorers, including s and \"under\":\n    allScorers = new ArrayList<>();\n    allScorers.add(s);\n    int upto = 0;\n    while(upto < allScorers.size()) {\n      s = allScorers.get(upto++);\n      for (Scorable.ChildScorable sub : s.getChildren()) {\n        allScorers.add(sub.child);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setScorer(Scorer s) throws IOException {\n    // Gathers all scorers, including s and \"under\":\n    allScorers = new ArrayList<>();\n    allScorers.add(s);\n    int upto = 0;\n    while(upto < allScorers.size()) {\n      s = allScorers.get(upto++);\n      for (ChildScorer sub : s.getChildren()) {\n        allScorers.add(sub.child);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"]},"commit2Childs":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}