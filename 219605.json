{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/OrdinalMappingReaderTest#verifyResults(Directory,Directory).mjava","commits":[{"id":"f10a303448b82b97b180b4a4e863adae596cdfdf","date":1404385107,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/OrdinalMappingReaderTest#verifyResults(Directory,Directory).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/utils/OrdinalMappingReaderTest#verifyResults(Directory,Directory).mjava","sourceNew":"  private void verifyResults(Directory dir, Directory taxDir) throws IOException {\n    DirectoryReader reader1 = DirectoryReader.open(dir);\n    DirectoryTaxonomyReader taxReader = new DirectoryTaxonomyReader(taxDir);\n    IndexSearcher searcher = newSearcher(reader1);\n    \n    FacetsCollector collector = new FacetsCollector();\n    FacetsCollector.search(searcher, new MatchAllDocsQuery(), 10, collector);\n    Facets facets = new FastTaxonomyFacetCounts(taxReader, facetConfig, collector);\n    FacetResult result = facets.getTopChildren(10, \"tag\");\n    \n    for (LabelAndValue lv: result.labelValues) {\n      int weight = lv.value.intValue();\n      String label = lv.label;\n      if (VERBOSE) {\n        System.out.println(label + \": \" + weight);\n      }\n      assertEquals(NUM_DOCS ,weight);\n    }\n    reader1.close();\n    taxReader.close();\n  }\n\n","sourceOld":"  private void verifyResults(Directory dir, Directory taxDir) throws IOException {\n    DirectoryReader reader1 = DirectoryReader.open(dir);\n    DirectoryTaxonomyReader taxReader = new DirectoryTaxonomyReader(taxDir);\n    IndexSearcher searcher = newSearcher(reader1);\n    \n    FacetsCollector collector = new FacetsCollector();\n    FacetsCollector.search(searcher, new MatchAllDocsQuery(), 10, collector);\n    Facets facets = new FastTaxonomyFacetCounts(taxReader, facetConfig, collector);\n    FacetResult result = facets.getTopChildren(10, \"tag\");\n    \n    for (LabelAndValue lv: result.labelValues) {\n      int weight = lv.value.intValue();\n      String label = lv.label;\n      if (VERBOSE) {\n        System.out.println(label + \": \" + weight);\n      }\n      assertEquals(NUM_DOCS ,weight);\n    }\n    reader1.close();\n    taxReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eea8c27c2188d3e8ca3bf2d389f1038806956abd","date":1404444860,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestOrdinalMappingAtomicReader#verifyResults(Directory,Directory).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/OrdinalMappingReaderTest#verifyResults(Directory,Directory).mjava","sourceNew":"  private void verifyResults(Directory indexDir, Directory taxoDir) throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    IndexSearcher searcher = newSearcher(indexReader);\n    \n    FacetsCollector collector = new FacetsCollector();\n    FacetsCollector.search(searcher, new MatchAllDocsQuery(), 10, collector);\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, facetConfig, collector);\n    FacetResult result = facets.getTopChildren(10, \"tag\");\n    \n    for (LabelAndValue lv: result.labelValues) {\n      if (VERBOSE) {\n        System.out.println(lv);\n      }\n      assertEquals(NUM_DOCS, lv.value.intValue());\n    }\n    \n    IOUtils.close(indexReader, taxoReader);\n  }\n\n","sourceOld":"  private void verifyResults(Directory dir, Directory taxDir) throws IOException {\n    DirectoryReader reader1 = DirectoryReader.open(dir);\n    DirectoryTaxonomyReader taxReader = new DirectoryTaxonomyReader(taxDir);\n    IndexSearcher searcher = newSearcher(reader1);\n    \n    FacetsCollector collector = new FacetsCollector();\n    FacetsCollector.search(searcher, new MatchAllDocsQuery(), 10, collector);\n    Facets facets = new FastTaxonomyFacetCounts(taxReader, facetConfig, collector);\n    FacetResult result = facets.getTopChildren(10, \"tag\");\n    \n    for (LabelAndValue lv: result.labelValues) {\n      int weight = lv.value.intValue();\n      String label = lv.label;\n      if (VERBOSE) {\n        System.out.println(label + \": \" + weight);\n      }\n      assertEquals(NUM_DOCS ,weight);\n    }\n    reader1.close();\n    taxReader.close();\n  }\n\n","bugFix":null,"bugIntro":["826915a1a26e283898ce16169b6e05ebeca4287f"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f10a303448b82b97b180b4a4e863adae596cdfdf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eea8c27c2188d3e8ca3bf2d389f1038806956abd":["f10a303448b82b97b180b4a4e863adae596cdfdf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eea8c27c2188d3e8ca3bf2d389f1038806956abd"]},"commit2Childs":{"f10a303448b82b97b180b4a4e863adae596cdfdf":["eea8c27c2188d3e8ca3bf2d389f1038806956abd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f10a303448b82b97b180b4a4e863adae596cdfdf"],"eea8c27c2188d3e8ca3bf2d389f1038806956abd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}