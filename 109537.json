{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator#doWork(Object,Object).mjava","commits":[{"id":"6c06c8eea352c1a2545792116e5f91fa3476e2a7","date":1519086445,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator#doWork(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object first, Object second) throws IOException {\n    if(null == first){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)));\n    }\n    if(null == second){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)));\n    }\n\n    RealMatrix realMatrix1 = getMatrix(first);\n    RealMatrix realMatrix2 = getMatrix(second);\n    RealMatrix realMatrix3 = realMatrix1.multiply(realMatrix2);\n    return new Matrix(realMatrix3.getData());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1832e2a2126bdb6cf9f50b59b7a9add0b0d29ac","date":1523323495,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator#doWork(Object,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator#doWork(Object,Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object first, Object second) throws IOException {\n    if(null == first){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)));\n    }\n    if(null == second){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)));\n    }\n\n    Array2DRowRealMatrix realMatrix1 = getMatrix(first);\n    Array2DRowRealMatrix realMatrix2 = getMatrix(second);\n    Array2DRowRealMatrix realMatrix3 = realMatrix1.multiply(realMatrix2);\n    return new Matrix(realMatrix3.getDataRef());\n\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object first, Object second) throws IOException {\n    if(null == first){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)));\n    }\n    if(null == second){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)));\n    }\n\n    RealMatrix realMatrix1 = getMatrix(first);\n    RealMatrix realMatrix2 = getMatrix(second);\n    RealMatrix realMatrix3 = realMatrix1.multiply(realMatrix2);\n    return new Matrix(realMatrix3.getData());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"431c2627ab600554864fa78f5e76abef81faa42d","date":1523357854,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator#doWork(Object,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator#doWork(Object,Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object first, Object second) throws IOException {\n    if(null == first){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)));\n    }\n    if(null == second){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)));\n    }\n\n    Array2DRowRealMatrix realMatrix1 = getMatrix(first);\n    Array2DRowRealMatrix realMatrix2 = getMatrix(second);\n    Array2DRowRealMatrix realMatrix3 = realMatrix1.multiply(realMatrix2);\n    return new Matrix(realMatrix3.getDataRef());\n\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object first, Object second) throws IOException {\n    if(null == first){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)));\n    }\n    if(null == second){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)));\n    }\n\n    RealMatrix realMatrix1 = getMatrix(first);\n    RealMatrix realMatrix2 = getMatrix(second);\n    RealMatrix realMatrix3 = realMatrix1.multiply(realMatrix2);\n    return new Matrix(realMatrix3.getData());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"431c2627ab600554864fa78f5e76abef81faa42d":["6c06c8eea352c1a2545792116e5f91fa3476e2a7","c1832e2a2126bdb6cf9f50b59b7a9add0b0d29ac"],"6c06c8eea352c1a2545792116e5f91fa3476e2a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["431c2627ab600554864fa78f5e76abef81faa42d"],"c1832e2a2126bdb6cf9f50b59b7a9add0b0d29ac":["6c06c8eea352c1a2545792116e5f91fa3476e2a7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c06c8eea352c1a2545792116e5f91fa3476e2a7"],"431c2627ab600554864fa78f5e76abef81faa42d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6c06c8eea352c1a2545792116e5f91fa3476e2a7":["431c2627ab600554864fa78f5e76abef81faa42d","c1832e2a2126bdb6cf9f50b59b7a9add0b0d29ac"],"c1832e2a2126bdb6cf9f50b59b7a9add0b0d29ac":["431c2627ab600554864fa78f5e76abef81faa42d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}