{"path":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","commits":[{"id":"bd0ef6574805f3cb9880e0983b7548a6aa933508","date":1315345052,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int readWrappedStream(byte[] target, int offset, int len) throws IOException {\n    ByteBuffer bb = ByteBuffer.wrap(target, offset, len);\n    int ret = ch.read(bb, chPosition);\n    if (ret >= 0) {\n      chPosition += ret;\n    }\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc2b6d7a57a856c487f4394618e4742bfa38c500","date":1320707541,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","sourceNew":"  @Override\n  public int readWrappedStream(byte[] target, int offset, int len) throws IOException {\n    ByteBuffer bb = ByteBuffer.wrap(target, offset, len);\n    assert chPosition  < ch.size();\n\n    int ret = ch.read(bb, chPosition);\n    if (ret >= 0) {\n      chPosition += ret;\n    }\n    return ret;\n  }\n\n","sourceOld":"  @Override\n  public int readWrappedStream(byte[] target, int offset, int len) throws IOException {\n    ByteBuffer bb = ByteBuffer.wrap(target, offset, len);\n    int ret = ch.read(bb, chPosition);\n    if (ret >= 0) {\n      chPosition += ret;\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"822b04cc6f0d64420f02a073882916ec89549a48","date":1320709088,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","sourceNew":"  @Override\n  public int readWrappedStream(byte[] target, int offset, int len) throws IOException {\n    ByteBuffer bb = ByteBuffer.wrap(target, offset, len);\n    assert chPosition  < ch.size();\n\n    for (;;) {\n      int ret = ch.read(bb, chPosition);\n      if (ret > 0) {\n        chPosition += ret;\n        return ret;\n      } else if (ret < 0) {\n        return ret;\n      }\n      // a channel read can return 0 - retry if this happens\n    }\n  }\n\n","sourceOld":"  @Override\n  public int readWrappedStream(byte[] target, int offset, int len) throws IOException {\n    ByteBuffer bb = ByteBuffer.wrap(target, offset, len);\n    assert chPosition  < ch.size();\n\n    int ret = ch.read(bb, chPosition);\n    if (ret >= 0) {\n      chPosition += ret;\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int readWrappedStream(byte[] target, int offset, int len) throws IOException {\n    ByteBuffer bb = ByteBuffer.wrap(target, offset, len);\n    assert chPosition  < ch.size();\n\n    for (;;) {\n      int ret = ch.read(bb, chPosition);\n      if (ret > 0) {\n        chPosition += ret;\n        return ret;\n      } else if (ret < 0) {\n        return ret;\n      }\n      // a channel read can return 0 - retry if this happens\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int readWrappedStream(byte[] target, int offset, int len) throws IOException {\n    ByteBuffer bb = ByteBuffer.wrap(target, offset, len);\n    assert chPosition  < ch.size();\n\n    for (;;) {\n      int ret = ch.read(bb, chPosition);\n      if (ret > 0) {\n        chPosition += ret;\n        return ret;\n      } else if (ret < 0) {\n        return ret;\n      }\n      // a channel read can return 0 - retry if this happens\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/ChannelFastInputStream[FSUpdateLog]#readWrappedStream(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int readWrappedStream(byte[] target, int offset, int len) throws IOException {\n    ByteBuffer bb = ByteBuffer.wrap(target, offset, len);\n    assert chPosition  < ch.size();\n\n    for (;;) {\n      int ret = ch.read(bb, chPosition);\n      if (ret > 0) {\n        chPosition += ret;\n        return ret;\n      } else if (ret < 0) {\n        return ret;\n      }\n      // a channel read can return 0 - retry if this happens\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["822b04cc6f0d64420f02a073882916ec89549a48","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"822b04cc6f0d64420f02a073882916ec89549a48":["bc2b6d7a57a856c487f4394618e4742bfa38c500"],"bc2b6d7a57a856c487f4394618e4742bfa38c500":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["822b04cc6f0d64420f02a073882916ec89549a48","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["822b04cc6f0d64420f02a073882916ec89549a48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["bc2b6d7a57a856c487f4394618e4742bfa38c500"],"822b04cc6f0d64420f02a073882916ec89549a48":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"bc2b6d7a57a856c487f4394618e4742bfa38c500":["822b04cc6f0d64420f02a073882916ec89549a48"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}