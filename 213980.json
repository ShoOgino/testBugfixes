{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherGUIController#FetcherGUIController(FetcherMain,FetcherSummaryFrame,String).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherGUIController#FetcherGUIController(FetcherMain,FetcherSummaryFrame,String).mjava","pathOld":"/dev/null","sourceNew":"\tpublic FetcherGUIController(FetcherMain fetcherMainPrg, FetcherSummaryFrame fetcherFrameWin, String defaultStartURL)\n\t{\n\t\tthis.fetcherMain  = fetcherMainPrg;\n\t\tthis.fetcherFrame = fetcherFrameWin;\n\n\t    fetcherFrame.setRestrictTo(fetcherMain.urlScopeFilter.getRexString());\n\t    fetcherFrame.setStartURL(defaultStartURL);\n\n\t\tfetcherMain.fetcher.addThreadPoolObserver(\n\t\t    new ThreadPoolObserver()\n\t\t    {\n\t\t       public void threadUpdate(int threadNr, String action, String info)\n\t\t       {\n\t\t            String status = threadNr + \": \" + action + \": \" + info;\n\t\t            fetcherFrame.setIdleThreadsCount(fetcherMain.fetcher.getIdleThreadsCount());\n\t\t            fetcherFrame.setBusyThreadsCount(fetcherMain.fetcher.getBusyThreadsCount());\n\t\t            fetcherFrame.setWorkingThreadsCount(fetcherMain.fetcher.getWorkingThreadsCount());\n\t\t       }\n\n\t\t       public void queueUpdate(String info, String action)\n\t\t       {\n\t\t            fetcherFrame.setRequestQueueCount(fetcherMain.fetcher.getQueueSize());\n\t\t       }\n\t\t    }\n\t\t);\n\n\t\tfetcherMain.monitor.addObserver(new Observer()\n\t\t{\n\t\t    public void update(Observable o, Object arg)\n\t\t    {\n\t\t        // der ThreadMonitor wurde geupdated\n\t\t        //fetcherFrame.setStalledThreads(fetcherMain.monitor.getStalledThreadCount(10, 500.0));\n\t\t        //fetcherFrame.setBytesPerSecond(fetcherMain.monitor.getAverageReadCount(5));\n\t\t        // fetcherFrame.setDocsPerSecond(fetcherMain.monitor.getDocsPerSecond(5));\n\t\t        // wir nutzen die Gelegenheit, den aktuellen Speicherbestand auszugeben\n\t\t        fetcherFrame.setFreeMem(Runtime.getRuntime().freeMemory());\n\t\t        fetcherFrame.setTotalMem(Runtime.getRuntime().totalMemory());\n\n\t\t    }\n\n\t\t});\n\n\t/*\tfetcherMain.reFilter.addObserver(\n\t\t    new Observer()\n\t\t    {\n\t\t        public void update(Observable o, Object arg)\n\t\t        {\n\t\t            fetcherFrame.setRobotsTxtCount(fetcherMain.reFilter.getExcludingHostsCount());\n\t\t        }\n\t\t    }\n\t\t);*/\n\n        fetcherMain.messageHandler.addMessageQueueObserver(new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    // a message has been added or deleted\n\n                    fetcherFrame.setURLsQueued(fetcherMain.messageHandler.getQueued());\n                }\n\n            }\n        );\n\n\t\t// this observer will be called if a filter has decided to throw a\n\t\t// message away.\n        fetcherMain.messageHandler.addMessageProcessorObserver(new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    if(arg == fetcherMain.urlScopeFilter)\n                    {\n                        fetcherFrame.setScopeFiltered(fetcherMain.urlScopeFilter.getFiltered());\n                    }\n                    else if(arg == fetcherMain.urlVisitedFilter)\n                    {\n                        fetcherFrame.setVisitedFiltered(fetcherMain.urlVisitedFilter.getFiltered());\n                    }\n                    else if(arg == fetcherMain.reFilter)\n                    {\n                        fetcherFrame.setURLsCaughtCount(fetcherMain.reFilter.getFiltered());\n                    }\n\t\t\t\t\telse // it's the fetcher\n\t\t\t\t\t{\n\t\t\t\t\t\tfetcherFrame.setDocsRead(fetcherMain.fetcher.getDocsRead());\n\t\t\t\t\t}\n                }\n            }\n        );\n\n\t\tfetcherFrame.addWindowListener(\n\t\t\tnew WindowAdapter()\n\t\t    {\n\t\t        public void windowClosed(WindowEvent e)\n\t\t        {\n\t\t            System.out.println(\"window Closed\");\n\t\t            System.exit(0);\n\t\t        }\n\n\n\t\t    }\n\t\t);\n\n        fetcherFrame.addStartButtonListener((ActionListener)this);\n \t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21b526e3e9974b2651365fbae52a976e6fc77aa4","date":1022108962,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherGUIController#FetcherGUIController(FetcherMain,FetcherSummaryFrame,String).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherGUIController#FetcherGUIController(FetcherMain,FetcherSummaryFrame,String).mjava","sourceNew":"    public FetcherGUIController(FetcherMain fetcherMainPrg, FetcherSummaryFrame fetcherFrameWin, String defaultStartURL)\n    {\n        this.fetcherMain  = fetcherMainPrg;\n        this.fetcherFrame = fetcherFrameWin;\n\n        fetcherFrame.setRestrictTo(fetcherMain.urlScopeFilter.getRexString());\n        fetcherFrame.setStartURL(defaultStartURL);\n\n        fetcherMain.fetcher.addThreadPoolObserver(\n            new ThreadPoolObserver()\n            {\n               public void threadUpdate(int threadNr, String action, String info)\n               {\n                    String status = threadNr + \": \" + action + \": \" + info;\n                    fetcherFrame.setIdleThreadsCount(fetcherMain.fetcher.getIdleThreadsCount());\n                    fetcherFrame.setBusyThreadsCount(fetcherMain.fetcher.getBusyThreadsCount());\n                    fetcherFrame.setWorkingThreadsCount(fetcherMain.fetcher.getWorkingThreadsCount());\n               }\n\n               public void queueUpdate(String info, String action)\n               {\n                    fetcherFrame.setRequestQueueCount(fetcherMain.fetcher.getQueueSize());\n               }\n            }\n        );\n\n        fetcherMain.monitor.addObserver(new Observer()\n        {\n            public void update(Observable o, Object arg)\n            {\n                // der ThreadMonitor wurde geupdated\n                //fetcherFrame.setStalledThreads(fetcherMain.monitor.getStalledThreadCount(10, 500.0));\n                //fetcherFrame.setBytesPerSecond(fetcherMain.monitor.getAverageReadCount(5));\n                // fetcherFrame.setDocsPerSecond(fetcherMain.monitor.getDocsPerSecond(5));\n                // wir nutzen die Gelegenheit, den aktuellen Speicherbestand auszugeben\n                fetcherFrame.setFreeMem(Runtime.getRuntime().freeMemory());\n                fetcherFrame.setTotalMem(Runtime.getRuntime().totalMemory());\n\n            }\n\n        });\n\n    /*\tfetcherMain.reFilter.addObserver(\n            new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    fetcherFrame.setRobotsTxtCount(fetcherMain.reFilter.getExcludingHostsCount());\n                }\n            }\n        );*/\n\n        fetcherMain.messageHandler.addMessageQueueObserver(new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    // a message has been added or deleted\n\n                    fetcherFrame.setURLsQueued(fetcherMain.messageHandler.getQueued());\n                }\n\n            }\n        );\n\n        // this observer will be called if a filter has decided to throw a\n        // message away.\n        fetcherMain.messageHandler.addMessageProcessorObserver(new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    if(arg == fetcherMain.urlScopeFilter)\n                    {\n                        fetcherFrame.setScopeFiltered(fetcherMain.urlScopeFilter.getFiltered());\n                    }\n                    else if(arg == fetcherMain.urlVisitedFilter)\n                    {\n                        fetcherFrame.setVisitedFiltered(fetcherMain.urlVisitedFilter.getFiltered());\n                    }\n                    else if(arg == fetcherMain.reFilter)\n                    {\n                        fetcherFrame.setURLsCaughtCount(fetcherMain.reFilter.getFiltered());\n                    }\n                    else // it's the fetcher\n                    {\n                        fetcherFrame.setDocsRead(fetcherMain.fetcher.getDocsRead());\n                    }\n                }\n            }\n        );\n\n        fetcherFrame.addWindowListener(\n            new WindowAdapter()\n            {\n                public void windowClosed(WindowEvent e)\n                {\n                    System.out.println(\"window Closed\");\n                    System.exit(0);\n                }\n\n\n            }\n        );\n\n        fetcherFrame.addStartButtonListener((ActionListener)this);\n    }\n\n","sourceOld":"\tpublic FetcherGUIController(FetcherMain fetcherMainPrg, FetcherSummaryFrame fetcherFrameWin, String defaultStartURL)\n\t{\n\t\tthis.fetcherMain  = fetcherMainPrg;\n\t\tthis.fetcherFrame = fetcherFrameWin;\n\n\t    fetcherFrame.setRestrictTo(fetcherMain.urlScopeFilter.getRexString());\n\t    fetcherFrame.setStartURL(defaultStartURL);\n\n\t\tfetcherMain.fetcher.addThreadPoolObserver(\n\t\t    new ThreadPoolObserver()\n\t\t    {\n\t\t       public void threadUpdate(int threadNr, String action, String info)\n\t\t       {\n\t\t            String status = threadNr + \": \" + action + \": \" + info;\n\t\t            fetcherFrame.setIdleThreadsCount(fetcherMain.fetcher.getIdleThreadsCount());\n\t\t            fetcherFrame.setBusyThreadsCount(fetcherMain.fetcher.getBusyThreadsCount());\n\t\t            fetcherFrame.setWorkingThreadsCount(fetcherMain.fetcher.getWorkingThreadsCount());\n\t\t       }\n\n\t\t       public void queueUpdate(String info, String action)\n\t\t       {\n\t\t            fetcherFrame.setRequestQueueCount(fetcherMain.fetcher.getQueueSize());\n\t\t       }\n\t\t    }\n\t\t);\n\n\t\tfetcherMain.monitor.addObserver(new Observer()\n\t\t{\n\t\t    public void update(Observable o, Object arg)\n\t\t    {\n\t\t        // der ThreadMonitor wurde geupdated\n\t\t        //fetcherFrame.setStalledThreads(fetcherMain.monitor.getStalledThreadCount(10, 500.0));\n\t\t        //fetcherFrame.setBytesPerSecond(fetcherMain.monitor.getAverageReadCount(5));\n\t\t        // fetcherFrame.setDocsPerSecond(fetcherMain.monitor.getDocsPerSecond(5));\n\t\t        // wir nutzen die Gelegenheit, den aktuellen Speicherbestand auszugeben\n\t\t        fetcherFrame.setFreeMem(Runtime.getRuntime().freeMemory());\n\t\t        fetcherFrame.setTotalMem(Runtime.getRuntime().totalMemory());\n\n\t\t    }\n\n\t\t});\n\n\t/*\tfetcherMain.reFilter.addObserver(\n\t\t    new Observer()\n\t\t    {\n\t\t        public void update(Observable o, Object arg)\n\t\t        {\n\t\t            fetcherFrame.setRobotsTxtCount(fetcherMain.reFilter.getExcludingHostsCount());\n\t\t        }\n\t\t    }\n\t\t);*/\n\n        fetcherMain.messageHandler.addMessageQueueObserver(new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    // a message has been added or deleted\n\n                    fetcherFrame.setURLsQueued(fetcherMain.messageHandler.getQueued());\n                }\n\n            }\n        );\n\n\t\t// this observer will be called if a filter has decided to throw a\n\t\t// message away.\n        fetcherMain.messageHandler.addMessageProcessorObserver(new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    if(arg == fetcherMain.urlScopeFilter)\n                    {\n                        fetcherFrame.setScopeFiltered(fetcherMain.urlScopeFilter.getFiltered());\n                    }\n                    else if(arg == fetcherMain.urlVisitedFilter)\n                    {\n                        fetcherFrame.setVisitedFiltered(fetcherMain.urlVisitedFilter.getFiltered());\n                    }\n                    else if(arg == fetcherMain.reFilter)\n                    {\n                        fetcherFrame.setURLsCaughtCount(fetcherMain.reFilter.getFiltered());\n                    }\n\t\t\t\t\telse // it's the fetcher\n\t\t\t\t\t{\n\t\t\t\t\t\tfetcherFrame.setDocsRead(fetcherMain.fetcher.getDocsRead());\n\t\t\t\t\t}\n                }\n            }\n        );\n\n\t\tfetcherFrame.addWindowListener(\n\t\t\tnew WindowAdapter()\n\t\t    {\n\t\t        public void windowClosed(WindowEvent e)\n\t\t        {\n\t\t            System.out.println(\"window Closed\");\n\t\t            System.exit(0);\n\t\t        }\n\n\n\t\t    }\n\t\t);\n\n        fetcherFrame.addStartButtonListener((ActionListener)this);\n \t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherGUIController#FetcherGUIController(FetcherMain,FetcherSummaryFrame,String).mjava","sourceNew":null,"sourceOld":"    public FetcherGUIController(FetcherMain fetcherMainPrg, FetcherSummaryFrame fetcherFrameWin, String defaultStartURL)\n    {\n        this.fetcherMain  = fetcherMainPrg;\n        this.fetcherFrame = fetcherFrameWin;\n\n        fetcherFrame.setRestrictTo(fetcherMain.urlScopeFilter.getRexString());\n        fetcherFrame.setStartURL(defaultStartURL);\n\n        fetcherMain.fetcher.addThreadPoolObserver(\n            new ThreadPoolObserver()\n            {\n               public void threadUpdate(int threadNr, String action, String info)\n               {\n                    String status = threadNr + \": \" + action + \": \" + info;\n                    fetcherFrame.setIdleThreadsCount(fetcherMain.fetcher.getIdleThreadsCount());\n                    fetcherFrame.setBusyThreadsCount(fetcherMain.fetcher.getBusyThreadsCount());\n                    fetcherFrame.setWorkingThreadsCount(fetcherMain.fetcher.getWorkingThreadsCount());\n               }\n\n               public void queueUpdate(String info, String action)\n               {\n                    fetcherFrame.setRequestQueueCount(fetcherMain.fetcher.getQueueSize());\n               }\n            }\n        );\n\n        fetcherMain.monitor.addObserver(new Observer()\n        {\n            public void update(Observable o, Object arg)\n            {\n                // der ThreadMonitor wurde geupdated\n                //fetcherFrame.setStalledThreads(fetcherMain.monitor.getStalledThreadCount(10, 500.0));\n                //fetcherFrame.setBytesPerSecond(fetcherMain.monitor.getAverageReadCount(5));\n                // fetcherFrame.setDocsPerSecond(fetcherMain.monitor.getDocsPerSecond(5));\n                // wir nutzen die Gelegenheit, den aktuellen Speicherbestand auszugeben\n                fetcherFrame.setFreeMem(Runtime.getRuntime().freeMemory());\n                fetcherFrame.setTotalMem(Runtime.getRuntime().totalMemory());\n\n            }\n\n        });\n\n    /*\tfetcherMain.reFilter.addObserver(\n            new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    fetcherFrame.setRobotsTxtCount(fetcherMain.reFilter.getExcludingHostsCount());\n                }\n            }\n        );*/\n\n        fetcherMain.messageHandler.addMessageQueueObserver(new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    // a message has been added or deleted\n\n                    fetcherFrame.setURLsQueued(fetcherMain.messageHandler.getQueued());\n                }\n\n            }\n        );\n\n        // this observer will be called if a filter has decided to throw a\n        // message away.\n        fetcherMain.messageHandler.addMessageProcessorObserver(new Observer()\n            {\n                public void update(Observable o, Object arg)\n                {\n                    if(arg == fetcherMain.urlScopeFilter)\n                    {\n                        fetcherFrame.setScopeFiltered(fetcherMain.urlScopeFilter.getFiltered());\n                    }\n                    else if(arg == fetcherMain.urlVisitedFilter)\n                    {\n                        fetcherFrame.setVisitedFiltered(fetcherMain.urlVisitedFilter.getFiltered());\n                    }\n                    else if(arg == fetcherMain.reFilter)\n                    {\n                        fetcherFrame.setURLsCaughtCount(fetcherMain.reFilter.getFiltered());\n                    }\n                    else // it's the fetcher\n                    {\n                        fetcherFrame.setDocsRead(fetcherMain.fetcher.getDocsRead());\n                    }\n                }\n            }\n        );\n\n        fetcherFrame.addWindowListener(\n            new WindowAdapter()\n            {\n                public void windowClosed(WindowEvent e)\n                {\n                    System.out.println(\"window Closed\");\n                    System.exit(0);\n                }\n\n\n            }\n        );\n\n        fetcherFrame.addStartButtonListener((ActionListener)this);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21b526e3e9974b2651365fbae52a976e6fc77aa4":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"21b526e3e9974b2651365fbae52a976e6fc77aa4":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}