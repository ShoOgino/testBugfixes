{"path":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","commits":[{"id":"8f50ea9dfa58003c5d50d910905b09f933083da4","date":1291388067,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","date":1291833341,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","sourceOld":"    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","sourceOld":"    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","sourceOld":"    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1efe3edca215dd9891cb42af283fed96f792ca0","date":1320428891,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"Read past EOF: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      if (WindowsDirectory.read(fd, b, offset, length, getFilePointer()) != length)\n        throw new IOException(\"Read past EOF\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88822d307a7b7c2a5f97d80b7779ece9a1f82518","date":1320883044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"Read past EOF (resource: \" + this + \")\");\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"Read past EOF: \" + this);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5090f41e198d9dd9374e99981f940b111973af2","date":1325969785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"Read past EOF (resource: \" + this + \")\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["8f50ea9dfa58003c5d50d910905b09f933083da4"],"8f50ea9dfa58003c5d50d910905b09f933083da4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e5090f41e198d9dd9374e99981f940b111973af2"],"f1efe3edca215dd9891cb42af283fed96f792ca0":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"88822d307a7b7c2a5f97d80b7779ece9a1f82518":["f1efe3edca215dd9891cb42af283fed96f792ca0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8f50ea9dfa58003c5d50d910905b09f933083da4"],"e5090f41e198d9dd9374e99981f940b111973af2":["88822d307a7b7c2a5f97d80b7779ece9a1f82518"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["f1efe3edca215dd9891cb42af283fed96f792ca0","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"8f50ea9dfa58003c5d50d910905b09f933083da4":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1efe3edca215dd9891cb42af283fed96f792ca0":["88822d307a7b7c2a5f97d80b7779ece9a1f82518"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f50ea9dfa58003c5d50d910905b09f933083da4","4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"88822d307a7b7c2a5f97d80b7779ece9a1f82518":["e5090f41e198d9dd9374e99981f940b111973af2"],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"e5090f41e198d9dd9374e99981f940b111973af2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}