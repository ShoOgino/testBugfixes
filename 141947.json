{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (4+((long) numDocs)*8 != indexStream.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"fdx size mismatch: docCount is \" + numDocs + \" but fdx file size is \" + indexStream.getFilePointer() + \" file=\" + indexStream.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (4+((long) numDocs)*8 != indexStream.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"fdx size mismatch: docCount is \" + numDocs + \" but fdx file size is \" + indexStream.getFilePointer() + \" file=\" + indexStream.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (4+((long) numDocs)*8 != indexStream.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"fdx size mismatch: docCount is \" + numDocs + \" but fdx file size is \" + indexStream.getFilePointer() + \" file=\" + indexStream.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (4+((long) numDocs)*8 != indexStream.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"fdx size mismatch: docCount is \" + numDocs + \" but fdx file size is \" + indexStream.getFilePointer() + \" file=\" + indexStream.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32e43f282bea25b8cc26e4a842d98deafd617e9b","date":1337759516,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (HEADER_LENGTH_IDX+((long) numDocs)*8 != indexStream.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"fdx size mismatch: docCount is \" + numDocs + \" but fdx file size is \" + indexStream.getFilePointer() + \" file=\" + indexStream.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (4+((long) numDocs)*8 != indexStream.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"fdx size mismatch: docCount is \" + numDocs + \" but fdx file size is \" + indexStream.getFilePointer() + \" file=\" + indexStream.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (HEADER_LENGTH_IDX+((long) numDocs)*8 != indexStream.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"fdx size mismatch: docCount is \" + numDocs + \" but fdx file size is \" + indexStream.getFilePointer() + \" file=\" + indexStream.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","sourceOld":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (HEADER_LENGTH_IDX+((long) numDocs)*8 != indexStream.getFilePointer())\n      // This is most likely a bug in Sun JRE 1.6.0_04/_05;\n      // we detect that the bug has struck, here, and\n      // throw an exception to prevent the corruption from\n      // entering the index.  See LUCENE-1282 for\n      // details.\n      throw new RuntimeException(\"fdx size mismatch: docCount is \" + numDocs + \" but fdx file size is \" + indexStream.getFilePointer() + \" file=\" + indexStream.toString() + \"; now aborting this merge to prevent index corruption\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["32e43f282bea25b8cc26e4a842d98deafd617e9b","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"32e43f282bea25b8cc26e4a842d98deafd617e9b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076","32e43f282bea25b8cc26e4a842d98deafd617e9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"32e43f282bea25b8cc26e4a842d98deafd617e9b":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}