{"path":"lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools#decode(CharBuffer).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools#decode(CharBuffer).mjava","pathOld":"src/java/org/apache/lucene/util/IndexableBinaryStringTools#decode(CharBuffer).mjava","sourceNew":"  /**\n   * Decodes the given char sequence, which must have been encoded by\n   * {@link #encode(java.nio.ByteBuffer)} or\n   * {@link #encode(java.nio.ByteBuffer, java.nio.CharBuffer)}.\n   * \n   * @param input The char sequence to decode\n   * @return A byte sequence containing the decoding result. The limit is set to\n   *         one past the position of the final char.\n   * @throws IllegalArgumentException If the input buffer is not backed by an\n   *         array\n   * @deprecated Use {@link #decode(char[], int, int, byte[], int, int)}\n   *             instead. This method will be removed in Lucene 4.0\n   */\n  @Deprecated\n  public static ByteBuffer decode(CharBuffer input) {\n    byte[] outputArray = new byte[getDecodedLength(input)];\n    ByteBuffer output = ByteBuffer.wrap(outputArray);\n    decode(input, output);\n    return output;\n  }\n\n","sourceOld":"  /**\n   * Decodes the given char sequence, which must have been encoded by\n   * {@link #encode(java.nio.ByteBuffer)} or\n   * {@link #encode(java.nio.ByteBuffer, java.nio.CharBuffer)}.\n   * \n   * @param input The char sequence to decode\n   * @return A byte sequence containing the decoding result. The limit is set to\n   *         one past the position of the final char.\n   * @throws IllegalArgumentException If the input buffer is not backed by an\n   *         array\n   * @deprecated Use {@link #decode(char[], int, int, byte[], int, int)}\n   *             instead. This method will be removed in Lucene 4.0\n   */\n  @Deprecated\n  public static ByteBuffer decode(CharBuffer input) {\n    byte[] outputArray = new byte[getDecodedLength(input)];\n    ByteBuffer output = ByteBuffer.wrap(outputArray);\n    decode(input, output);\n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools#decode(CharBuffer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Decodes the given char sequence, which must have been encoded by\n   * {@link #encode(java.nio.ByteBuffer)} or\n   * {@link #encode(java.nio.ByteBuffer, java.nio.CharBuffer)}.\n   * \n   * @param input The char sequence to decode\n   * @return A byte sequence containing the decoding result. The limit is set to\n   *         one past the position of the final char.\n   * @throws IllegalArgumentException If the input buffer is not backed by an\n   *         array\n   * @deprecated Use {@link #decode(char[], int, int, byte[], int, int)}\n   *             instead. This method will be removed in Lucene 4.0\n   */\n  @Deprecated\n  public static ByteBuffer decode(CharBuffer input) {\n    byte[] outputArray = new byte[getDecodedLength(input)];\n    ByteBuffer output = ByteBuffer.wrap(outputArray);\n    decode(input, output);\n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools#decode(CharBuffer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Decodes the given char sequence, which must have been encoded by\n   * {@link #encode(java.nio.ByteBuffer)} or\n   * {@link #encode(java.nio.ByteBuffer, java.nio.CharBuffer)}.\n   * \n   * @param input The char sequence to decode\n   * @return A byte sequence containing the decoding result. The limit is set to\n   *         one past the position of the final char.\n   * @throws IllegalArgumentException If the input buffer is not backed by an\n   *         array\n   * @deprecated Use {@link #decode(char[], int, int, byte[], int, int)}\n   *             instead. This method will be removed in Lucene 4.0\n   */\n  @Deprecated\n  public static ByteBuffer decode(CharBuffer input) {\n    byte[] outputArray = new byte[getDecodedLength(input)];\n    ByteBuffer output = ByteBuffer.wrap(outputArray);\n    decode(input, output);\n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools#decode(CharBuffer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Decodes the given char sequence, which must have been encoded by\n   * {@link #encode(java.nio.ByteBuffer)} or\n   * {@link #encode(java.nio.ByteBuffer, java.nio.CharBuffer)}.\n   * \n   * @param input The char sequence to decode\n   * @return A byte sequence containing the decoding result. The limit is set to\n   *         one past the position of the final char.\n   * @throws IllegalArgumentException If the input buffer is not backed by an\n   *         array\n   * @deprecated Use {@link #decode(char[], int, int, byte[], int, int)}\n   *             instead. This method will be removed in Lucene 4.0\n   */\n  @Deprecated\n  public static ByteBuffer decode(CharBuffer input) {\n    byte[] outputArray = new byte[getDecodedLength(input)];\n    ByteBuffer output = ByteBuffer.wrap(outputArray);\n    decode(input, output);\n    return output;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}