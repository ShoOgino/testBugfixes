{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setParams(String).mjava","commits":[{"id":"d3adb86d40c10078a2d59c16020be3796dd18a8c","date":1264738067,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setParams(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setParams(String params) {\n    super.setParams(params);\n    StringTokenizer st = new StringTokenizer(params, \",\");\n    while (st.hasMoreTokens()) {\n      String param = st.nextToken();\n      StringTokenizer expr = new StringTokenizer(param, \":\");\n      String key = expr.nextToken();\n      String value = expr.nextToken();\n      if (key.equalsIgnoreCase(\"analyzer\")) {\n        analyzerClassName = value;\n      } else if (key.equalsIgnoreCase(\"outputUnigrams\")) {\n        outputUnigrams = Boolean.parseBoolean(value);\n      } else if (key.equalsIgnoreCase(\"maxShingleSize\")) {\n        maxShingleSize = (int)Double.parseDouble(value);\n      } else {\n        throw new RuntimeException(\"Unknown parameter \" + param);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setParams(String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NewShingleAnalyzerTask#setParams(String).mjava","sourceNew":"  @Override\n  public void setParams(String params) {\n    super.setParams(params);\n    StringTokenizer st = new StringTokenizer(params, \",\");\n    while (st.hasMoreTokens()) {\n      String param = st.nextToken();\n      StringTokenizer expr = new StringTokenizer(param, \":\");\n      String key = expr.nextToken();\n      String value = expr.nextToken();\n      if (key.equalsIgnoreCase(\"analyzer\")) {\n        analyzerClassName = value;\n      } else if (key.equalsIgnoreCase(\"outputUnigrams\")) {\n        outputUnigrams = Boolean.parseBoolean(value);\n      } else if (key.equalsIgnoreCase(\"maxShingleSize\")) {\n        maxShingleSize = (int)Double.parseDouble(value);\n      } else {\n        throw new RuntimeException(\"Unknown parameter \" + param);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setParams(String params) {\n    super.setParams(params);\n    StringTokenizer st = new StringTokenizer(params, \",\");\n    while (st.hasMoreTokens()) {\n      String param = st.nextToken();\n      StringTokenizer expr = new StringTokenizer(param, \":\");\n      String key = expr.nextToken();\n      String value = expr.nextToken();\n      if (key.equalsIgnoreCase(\"analyzer\")) {\n        analyzerClassName = value;\n      } else if (key.equalsIgnoreCase(\"outputUnigrams\")) {\n        outputUnigrams = Boolean.parseBoolean(value);\n      } else if (key.equalsIgnoreCase(\"maxShingleSize\")) {\n        maxShingleSize = (int)Double.parseDouble(value);\n      } else {\n        throw new RuntimeException(\"Unknown parameter \" + param);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3adb86d40c10078a2d59c16020be3796dd18a8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d3adb86d40c10078a2d59c16020be3796dd18a8c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3adb86d40c10078a2d59c16020be3796dd18a8c"],"d3adb86d40c10078a2d59c16020be3796dd18a8c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}