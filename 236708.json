{"path":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#size(String).mjava","commits":[{"id":"0c5635dd6609964d2a79ffdc1b83922d4b31c5e0","date":1465834970,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#size(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param path to calculate size of\n   * @return size in bytes\n   * @throws IOException on low level IO error\n   */\n  @Override\n  public long size(String path) throws IOException {\n    Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.newInstance(hdfsDirPath.toUri(), getConf());\n      long size = fileSystem.getContentSummary(hdfsDirPath).getLength();\n      return size;\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["60788e79302b77255f71a4bcfc58a2424a205d9c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","date":1465913303,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#size(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param path to calculate size of\n   * @return size in bytes\n   * @throws IOException on low level IO error\n   */\n  @Override\n  public long size(String path) throws IOException {\n    Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.newInstance(hdfsDirPath.toUri(), getConf());\n      long size = fileSystem.getContentSummary(hdfsDirPath).getLength();\n      return size;\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#size(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param path to calculate size of\n   * @return size in bytes\n   * @throws IOException on low level IO error\n   */\n  @Override\n  public long size(String path) throws IOException {\n    Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.newInstance(hdfsDirPath.toUri(), getConf());\n      long size = fileSystem.getContentSummary(hdfsDirPath).getLength();\n      return size;\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60788e79302b77255f71a4bcfc58a2424a205d9c","date":1517245253,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#size(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#size(String).mjava","sourceNew":"  /**\n   * @param path to calculate size of\n   * @return size in bytes\n   * @throws IOException on low level IO error\n   */\n  @Override\n  public long size(String path) throws IOException {\n    Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = getCachedFileSystem(path);\n    try {\n      return fileSystem.getContentSummary(hdfsDirPath).getLength();\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param path to calculate size of\n   * @return size in bytes\n   * @throws IOException on low level IO error\n   */\n  @Override\n  public long size(String path) throws IOException {\n    Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.newInstance(hdfsDirPath.toUri(), getConf());\n      long size = fileSystem.getContentSummary(hdfsDirPath).getLength();\n      return size;\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","bugFix":["0c5635dd6609964d2a79ffdc1b83922d4b31c5e0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#size(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#size(String).mjava","sourceNew":"  /**\n   * @param path to calculate size of\n   * @return size in bytes\n   * @throws IOException on low level IO error\n   */\n  @Override\n  public long size(String path) throws IOException {\n    Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = getCachedFileSystem(path);\n    try {\n      return fileSystem.getContentSummary(hdfsDirPath).getLength();\n    } catch (IOException e) {\n      log.error(\"Error checking if hdfs path exists\", e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param path to calculate size of\n   * @return size in bytes\n   * @throws IOException on low level IO error\n   */\n  @Override\n  public long size(String path) throws IOException {\n    Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = getCachedFileSystem(path);\n    try {\n      return fileSystem.getContentSummary(hdfsDirPath).getLength();\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60788e79302b77255f71a4bcfc58a2424a205d9c":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0c5635dd6609964d2a79ffdc1b83922d4b31c5e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c5635dd6609964d2a79ffdc1b83922d4b31c5e0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["60788e79302b77255f71a4bcfc58a2424a205d9c"]},"commit2Childs":{"60788e79302b77255f71a4bcfc58a2424a205d9c":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0c5635dd6609964d2a79ffdc1b83922d4b31c5e0","57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"0c5635dd6609964d2a79ffdc1b83922d4b31c5e0":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["60788e79302b77255f71a4bcfc58a2424a205d9c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}