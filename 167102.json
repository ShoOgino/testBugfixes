{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","commits":[{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testSetMaxMergeDocs().mjava","sourceNew":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n    document.add(newField(\"tvtest\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED,\n                           Field.TermVector.YES));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n    document.add(newField(\"tvtest\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED,\n                           Field.TermVector.YES));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testSetMaxMergeDocs().mjava","sourceNew":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n    document.add(newField(\"tvtest\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED,\n                           Field.TermVector.YES));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n    document.add(newField(\"tvtest\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED,\n                           Field.TermVector.YES));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testSetMaxMergeDocs().mjava","sourceNew":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n    document.add(newField(\"tvtest\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED,\n                           Field.TermVector.YES));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n    document.add(newField(\"tvtest\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED,\n                           Field.TermVector.YES));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","sourceNew":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    \n    document.add(newField(\"tvtest\", \"a b c\", customType));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n    document.add(newField(\"tvtest\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED,\n                           Field.TermVector.YES));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","sourceNew":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    Document document = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    \n    document.add(newField(\"tvtest\", \"a b c\", customType));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    iw.setInfoStream(VERBOSE ? System.out : null);\n    Document document = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    \n    document.add(newField(\"tvtest\", \"a b c\", customType));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterMerging#testSetMaxMergeDocs().mjava","sourceNew":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    Document document = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    \n    document.add(newField(\"tvtest\", \"a b c\", customType));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1013\n  public void testSetMaxMergeDocs() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n      .setMergeScheduler(new MyMergeScheduler()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    LogMergePolicy lmp = (LogMergePolicy) conf.getMergePolicy();\n    lmp.setMaxMergeDocs(20);\n    lmp.setMergeFactor(2);\n    IndexWriter iw = new IndexWriter(dir, conf);\n    Document document = new Document();\n\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    \n    document.add(newField(\"tvtest\", \"a b c\", customType));\n    for(int i=0;i<177;i++)\n      iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["06584e6e98d592b34e1329b384182f368d2025e8"],"06584e6e98d592b34e1329b384182f368d2025e8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}