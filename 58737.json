{"path":"solr/core/src/java/org/apache/solr/logging/DeprecationLog#log(String,String).mjava","commits":[{"id":"405ba2c408c37cdb9d56bda3197a43b96e4e49ea","date":1601555499,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/DeprecationLog#log(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Logs a deprecation warning for the provided feature, but only the first time.\n   * The logger name used is {@value LOG_PREFIX} + {@code featureId}.\n   * Remember that logger names are disable-able via configuration if needed.\n   * @return true if logged\n   */\n  public static boolean log(String featureId, String message) {\n    if (alreadyLogged.putIfAbsent(featureId, message) != null) {\n      return false;\n    }\n    Logger log = LoggerFactory.getLogger(LOG_PREFIX + featureId);\n    log.warn(message);\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1803f3d757a41808b9a843df2dee003728c4cb87","date":1601586158,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/DeprecationLog#log(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/DeprecationLog#log(String,String).mjava","sourceNew":"  /**\n   * Logs a deprecation warning for the provided feature, but only the first time.\n   * The logger name used is {@value #LOG_PREFIX} + {@code featureId}.\n   * Remember that logger names are disable-able via configuration if needed.\n   * @return true if logged\n   */\n  public static boolean log(String featureId, String message) {\n    if (alreadyLogged.putIfAbsent(featureId, message) != null) {\n      return false;\n    }\n    Logger log = LoggerFactory.getLogger(LOG_PREFIX + featureId);\n    log.warn(message);\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Logs a deprecation warning for the provided feature, but only the first time.\n   * The logger name used is {@value LOG_PREFIX} + {@code featureId}.\n   * Remember that logger names are disable-able via configuration if needed.\n   * @return true if logged\n   */\n  public static boolean log(String featureId, String message) {\n    if (alreadyLogged.putIfAbsent(featureId, message) != null) {\n      return false;\n    }\n    Logger log = LoggerFactory.getLogger(LOG_PREFIX + featureId);\n    log.warn(message);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"405ba2c408c37cdb9d56bda3197a43b96e4e49ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1803f3d757a41808b9a843df2dee003728c4cb87":["405ba2c408c37cdb9d56bda3197a43b96e4e49ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1803f3d757a41808b9a843df2dee003728c4cb87"]},"commit2Childs":{"405ba2c408c37cdb9d56bda3197a43b96e4e49ea":["1803f3d757a41808b9a843df2dee003728c4cb87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["405ba2c408c37cdb9d56bda3197a43b96e4e49ea"],"1803f3d757a41808b9a843df2dee003728c4cb87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}