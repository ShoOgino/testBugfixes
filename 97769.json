{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#assertVersions().mjava","commits":[{"id":"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6","date":1361552322,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#assertVersions().mjava","pathOld":"/dev/null","sourceNew":"  private void assertVersions() throws Exception {\n    NamedList<Object> details = getDetails(masterClient);\n    ArrayList<NamedList<Object>> commits = (ArrayList<NamedList<Object>>) details.get(\"commits\");\n    Long maxVersionMaster = 0L;\n    for(NamedList<Object> commit : commits) {\n      Long version = (Long) commit.get(\"indexVersion\");\n      maxVersionMaster = Math.max(version, maxVersionMaster);\n    }\n    \n    details = getDetails(slaveClient);\n    commits = (ArrayList<NamedList<Object>>) details.get(\"commits\");\n    Long maxVersionSlave= 0L;\n    for(NamedList<Object> commit : commits) {\n      Long version = (Long) commit.get(\"indexVersion\");\n      maxVersionSlave = Math.max(version, maxVersionSlave);\n    }\n    \n    assertEquals(maxVersionMaster, maxVersionSlave);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd8bc29700397ec1886e73bae0a67ff536bad223","date":1362159450,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#getVersion(SolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#assertVersions().mjava","sourceNew":"  private Long getVersion(SolrServer client) throws Exception {\n    NamedList<Object> details;\n    ArrayList<NamedList<Object>> commits;\n    details = getDetails(client);\n    commits = (ArrayList<NamedList<Object>>) details.get(\"commits\");\n    Long maxVersionSlave= 0L;\n    for(NamedList<Object> commit : commits) {\n      Long version = (Long) commit.get(\"indexVersion\");\n      maxVersionSlave = Math.max(version, maxVersionSlave);\n    }\n    return maxVersionSlave;\n  }\n\n","sourceOld":"  private void assertVersions() throws Exception {\n    NamedList<Object> details = getDetails(masterClient);\n    ArrayList<NamedList<Object>> commits = (ArrayList<NamedList<Object>>) details.get(\"commits\");\n    Long maxVersionMaster = 0L;\n    for(NamedList<Object> commit : commits) {\n      Long version = (Long) commit.get(\"indexVersion\");\n      maxVersionMaster = Math.max(version, maxVersionMaster);\n    }\n    \n    details = getDetails(slaveClient);\n    commits = (ArrayList<NamedList<Object>>) details.get(\"commits\");\n    Long maxVersionSlave= 0L;\n    for(NamedList<Object> commit : commits) {\n      Long version = (Long) commit.get(\"indexVersion\");\n      maxVersionSlave = Math.max(version, maxVersionSlave);\n    }\n    \n    assertEquals(maxVersionMaster, maxVersionSlave);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bd8bc29700397ec1886e73bae0a67ff536bad223":["43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd8bc29700397ec1886e73bae0a67ff536bad223"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6"],"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6":["bd8bc29700397ec1886e73bae0a67ff536bad223"],"bd8bc29700397ec1886e73bae0a67ff536bad223":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}