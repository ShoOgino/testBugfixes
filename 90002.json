{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansEnum#testSpansEnumNotBeforeAfter1().mjava","commits":[{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansEnum#testSpansEnumNotBeforeAfter1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSpansEnumNotBeforeAfter1() throws Exception {\n    SpanTermQuery t1 = spanTQ(\"one\");\n    SpanTermQuery t100 = spanTQ(\"hundred\");\n    SpanNotQuery snq = new SpanNotQuery(t100, t1, 0, 0);\n    checkHits(snq, new int[] {10, 11, 12, 13, 14, 15, 16, 17, 18, 19}); // include all \"one hundred ...\"\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansEnum#testSpansEnumNotBeforeAfter1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSpansEnumNotBeforeAfter1() throws Exception {\n    SpanTermQuery t1 = spanTQ(\"one\");\n    SpanTermQuery t100 = spanTQ(\"hundred\");\n    SpanNotQuery snq = new SpanNotQuery(t100, t1, 0, 0);\n    checkHits(snq, new int[] {10, 11, 12, 13, 14, 15, 16, 17, 18, 19}); // include all \"one hundred ...\"\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4f600f812447b5512daeaf8e5c9df5dbcc4a254","date":1428874774,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansEnum#testSpansEnumNotBeforeAfter1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpansEnum#testSpansEnumNotBeforeAfter1().mjava","sourceNew":"  public void testSpansEnumNotBeforeAfter1() throws Exception {\n    checkHits(spanNotQuery(spanTermQuery(\"field\", \"hundred\"), spanTermQuery(\"field\", \"one\")), \n              new int[] {10, 11, 12, 13, 14, 15, 16, 17, 18, 19}); // include all \"one hundred ...\"\n  }\n\n","sourceOld":"  @Test\n  public void testSpansEnumNotBeforeAfter1() throws Exception {\n    SpanTermQuery t1 = spanTQ(\"one\");\n    SpanTermQuery t100 = spanTQ(\"hundred\");\n    SpanNotQuery snq = new SpanNotQuery(t100, t1, 0, 0);\n    checkHits(snq, new int[] {10, 11, 12, 13, 14, 15, 16, 17, 18, 19}); // include all \"one hundred ...\"\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fab172655716b96f7e42376116235017a922de3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"]},"commit2Childs":{"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}