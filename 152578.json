{"path":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/TermVectorsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/StoredFieldsWriter#finish(int).mjava","sourceNew":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(FieldInfos fis, int numDocs) throws IOException;\n\n","sourceOld":"  /** Called before {@link #close()}, passing in the number\n   *  of documents that were written. Note that this is \n   *  intentionally redundant (equivalent to the number of\n   *  calls to {@link #startDocument(int)}, but a Codec should\n   *  check that this is the case to detect the JRE bug described \n   *  in LUCENE-1282. */\n  public abstract void finish(int numDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}