{"path":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#allocSlice(byte[],int).mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#allocSlice(byte[],int).mjava","pathOld":"/dev/null","sourceNew":"    public int allocSlice(final byte[] slice, final int upto) {\n\n      final int level = slice[upto] & 15;\n      final int newLevel = nextLevelArray[level];\n      final int newSize = levelSizeArray[newLevel];\n\n      // Maybe allocate another block\n      if (byteUpto > BYTE_BLOCK_SIZE-newSize)\n        nextBuffer();\n\n      final int newUpto = byteUpto;\n      final int offset = newUpto + byteOffset;\n      byteUpto += newSize;\n\n      // Copy forward the past 3 bytes (which we are about\n      // to overwrite with the forwarding address):\n      buffer[newUpto] = slice[upto-3];\n      buffer[newUpto+1] = slice[upto-2];\n      buffer[newUpto+2] = slice[upto-1];\n\n      // Write forwarding address at end of last slice:\n      slice[upto-3] = (byte) (offset >>> 24);\n      slice[upto-2] = (byte) (offset >>> 16);\n      slice[upto-1] = (byte) (offset >>> 8);\n      slice[upto] = (byte) offset;\n        \n      // Write new level:\n      buffer[byteUpto-1] = (byte) (16|newLevel);\n\n      return newUpto+3;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#allocSlice(byte[],int).mjava","sourceNew":null,"sourceOld":"    public int allocSlice(final byte[] slice, final int upto) {\n\n      final int level = slice[upto] & 15;\n      final int newLevel = nextLevelArray[level];\n      final int newSize = levelSizeArray[newLevel];\n\n      // Maybe allocate another block\n      if (byteUpto > BYTE_BLOCK_SIZE-newSize)\n        nextBuffer();\n\n      final int newUpto = byteUpto;\n      final int offset = newUpto + byteOffset;\n      byteUpto += newSize;\n\n      // Copy forward the past 3 bytes (which we are about\n      // to overwrite with the forwarding address):\n      buffer[newUpto] = slice[upto-3];\n      buffer[newUpto+1] = slice[upto-2];\n      buffer[newUpto+2] = slice[upto-1];\n\n      // Write forwarding address at end of last slice:\n      slice[upto-3] = (byte) (offset >>> 24);\n      slice[upto-2] = (byte) (offset >>> 16);\n      slice[upto-1] = (byte) (offset >>> 8);\n      slice[upto] = (byte) offset;\n        \n      // Write new level:\n      buffer[byteUpto-1] = (byte) (16|newLevel);\n\n      return newUpto+3;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a0af3a442be522899177e5e11384a45a6784a3f":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a0af3a442be522899177e5e11384a45a6784a3f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"5a0af3a442be522899177e5e11384a45a6784a3f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["5a0af3a442be522899177e5e11384a45a6784a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}