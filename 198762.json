{"path":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","commits":[{"id":"daa9f76a48e97bb2d40fc67ecdaad33d166d596e","date":1488856307,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    field.checkSortability();\n\n    Object missingValue = null;\n    boolean sortMissingLast = field.sortMissingLast();\n    boolean sortMissingFirst = field.sortMissingFirst();\n\n    if (sortMissingLast) {\n      missingValue = top ? Long.MIN_VALUE : Long.MAX_VALUE;\n    } else if (sortMissingFirst) {\n      missingValue = top ? Long.MAX_VALUE : Long.MIN_VALUE;\n    }\n    SortField sf = new SortField(field.getName(), SortField.Type.LONG, top);\n    sf.setMissingValue(missingValue);\n    return sf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["70052d44b40be0028db94b4cffeb9aaa5468055e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70052d44b40be0028db94b4cffeb9aaa5468055e","date":1505151510,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    return getSortField(field, SortField.Type.LONG, top, Long.MIN_VALUE, Long.MAX_VALUE);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    field.checkSortability();\n\n    Object missingValue = null;\n    boolean sortMissingLast = field.sortMissingLast();\n    boolean sortMissingFirst = field.sortMissingFirst();\n\n    if (sortMissingLast) {\n      missingValue = top ? Long.MIN_VALUE : Long.MAX_VALUE;\n    } else if (sortMissingFirst) {\n      missingValue = top ? Long.MAX_VALUE : Long.MIN_VALUE;\n    }\n    SortField sf = new SortField(field.getName(), SortField.Type.LONG, top);\n    sf.setMissingValue(missingValue);\n    return sf;\n  }\n\n","bugFix":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffb85feece8645a035c02443a625f5af15e1106b","date":1505219692,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    return getSortField(field, SortField.Type.LONG, top, Long.MIN_VALUE, Long.MAX_VALUE);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    field.checkSortability();\n\n    Object missingValue = null;\n    boolean sortMissingLast = field.sortMissingLast();\n    boolean sortMissingFirst = field.sortMissingFirst();\n\n    if (sortMissingLast) {\n      missingValue = top ? Long.MIN_VALUE : Long.MAX_VALUE;\n    } else if (sortMissingFirst) {\n      missingValue = top ? Long.MAX_VALUE : Long.MIN_VALUE;\n    }\n    SortField sf = new SortField(field.getName(), SortField.Type.LONG, top);\n    sf.setMissingValue(missingValue);\n    return sf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    return getSortField(field, SortField.Type.LONG, top, Long.MIN_VALUE, Long.MAX_VALUE);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    field.checkSortability();\n\n    Object missingValue = null;\n    boolean sortMissingLast = field.sortMissingLast();\n    boolean sortMissingFirst = field.sortMissingFirst();\n\n    if (sortMissingLast) {\n      missingValue = top ? Long.MIN_VALUE : Long.MAX_VALUE;\n    } else if (sortMissingFirst) {\n      missingValue = top ? Long.MAX_VALUE : Long.MIN_VALUE;\n    }\n    SortField sf = new SortField(field.getName(), SortField.Type.LONG, top);\n    sf.setMissingValue(missingValue);\n    return sf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf2282b6a7c3f113e7a233b785b80527c03d590","date":1516129064,"type":5,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/PointField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    return getNumericSort(field, getNumberType(), top);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    return getSortField(field, SortField.Type.LONG, top, Long.MIN_VALUE, Long.MAX_VALUE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/DatePointField#getSortField(SchemaField,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean top) {\n    return getSortField(field, SortField.Type.LONG, top, Long.MIN_VALUE, Long.MAX_VALUE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["ffb85feece8645a035c02443a625f5af15e1106b","4cf2282b6a7c3f113e7a233b785b80527c03d590"],"685bd38810c206c93e9058f3c2cfa9827c086c27":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e","ffb85feece8645a035c02443a625f5af15e1106b"],"ffb85feece8645a035c02443a625f5af15e1106b":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e","70052d44b40be0028db94b4cffeb9aaa5468055e"],"daa9f76a48e97bb2d40fc67ecdaad33d166d596e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cf2282b6a7c3f113e7a233b785b80527c03d590":["ffb85feece8645a035c02443a625f5af15e1106b"],"70052d44b40be0028db94b4cffeb9aaa5468055e":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"ffb85feece8645a035c02443a625f5af15e1106b":["b94236357aaa22b76c10629851fe4e376e0cea82","685bd38810c206c93e9058f3c2cfa9827c086c27","4cf2282b6a7c3f113e7a233b785b80527c03d590"],"daa9f76a48e97bb2d40fc67ecdaad33d166d596e":["685bd38810c206c93e9058f3c2cfa9827c086c27","ffb85feece8645a035c02443a625f5af15e1106b","70052d44b40be0028db94b4cffeb9aaa5468055e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e"],"4cf2282b6a7c3f113e7a233b785b80527c03d590":["b94236357aaa22b76c10629851fe4e376e0cea82"],"70052d44b40be0028db94b4cffeb9aaa5468055e":["ffb85feece8645a035c02443a625f5af15e1106b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}