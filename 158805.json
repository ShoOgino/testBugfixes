{"path":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockCharFilter#test().mjava","commits":[{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockCharFilter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockCharFilter#test().mjava","sourceNew":"  public void test() throws IOException {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"ab\",\n        new String[] { \"aab\" },\n        new int[] { 0 },\n        new int[] { 2 }\n    );\n    \n    assertAnalyzesTo(analyzer, \"aba\",\n        new String[] { \"aabaa\" },\n        new int[] { 0 },\n        new int[] { 3 }\n    );\n    \n    assertAnalyzesTo(analyzer, \"abcdefga\",\n        new String[] { \"aabcdefgaa\" },\n        new int[] { 0 },\n        new int[] { 8 }\n    );\n  }\n\n","sourceOld":"  public void test() throws IOException {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"ab\",\n        new String[] { \"aab\" },\n        new int[] { 0 },\n        new int[] { 2 }\n    );\n    \n    assertAnalyzesTo(analyzer, \"aba\",\n        new String[] { \"aabaa\" },\n        new int[] { 0 },\n        new int[] { 3 }\n    );\n    \n    assertAnalyzesTo(analyzer, \"abcdefga\",\n        new String[] { \"aabcdefgaa\" },\n        new int[] { 0 },\n        new int[] { 8 }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}