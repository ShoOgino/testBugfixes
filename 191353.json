{"path":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","commits":[{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testOptimizeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + oldNames[i]);\n      }\n      File oldIndxeDir = _TestUtil.getTempDir(oldNames[i]);\n      _TestUtil.unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testOptimizeOldIndex() throws Exception {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + oldNames[i]);\n      }\n      File oldIndxeDir = _TestUtil.getTempDir(oldNames[i]);\n      _TestUtil.unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.optimize();\n      w.close();\n      \n      dir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testFullyMergeOldIndex() throws Exception {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + oldNames[i]);\n      }\n      File oldIndxeDir = _TestUtil.getTempDir(oldNames[i]);\n      _TestUtil.unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8be580b58bcc650d428f3f22de81cadcf51d650a":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}