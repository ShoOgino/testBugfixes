{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilterFactory#checkWordnetSynonyms(TokenFilterFactory).mjava","commits":[{"id":"85f3a2d749715373feb8529516e92d3538103525","date":1379624134,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilterFactory#checkWordnetSynonyms(TokenFilterFactory).mjava","pathOld":"/dev/null","sourceNew":"  /** checks for synonyms of \"second\" in synonyms-wordnet.txt */\n  private void checkWordnetSynonyms(TokenFilterFactory factory) throws Exception {\n    Reader reader = new StringReader(\"second\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = factory.create(stream);\n    assertTrue(stream instanceof SynonymFilter);\n    assertTokenStreamContents(stream,\n        new String[] { \"second\", \"2nd\", \"two\" },\n        new int[] { 1, 0, 0 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilterFactory#checkWordnetSynonyms(TokenFilterFactory).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilterFactory#checkWordnetSynonyms(TokenFilterFactory).mjava","sourceNew":"  /** checks for synonyms of \"second\" in synonyms-wordnet.txt */\n  private void checkWordnetSynonyms(TokenFilterFactory factory) throws Exception {\n    Reader reader = new StringReader(\"second\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTrue(stream instanceof SynonymFilter);\n    assertTokenStreamContents(stream,\n        new String[] { \"second\", \"2nd\", \"two\" },\n        new int[] { 1, 0, 0 });\n  }\n\n","sourceOld":"  /** checks for synonyms of \"second\" in synonyms-wordnet.txt */\n  private void checkWordnetSynonyms(TokenFilterFactory factory) throws Exception {\n    Reader reader = new StringReader(\"second\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = factory.create(stream);\n    assertTrue(stream instanceof SynonymFilter);\n    assertTokenStreamContents(stream,\n        new String[] { \"second\", \"2nd\", \"two\" },\n        new int[] { 1, 0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilterFactory#checkWordnetSynonyms(TokenFilterFactory).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilterFactory#checkWordnetSynonyms(TokenFilterFactory).mjava","sourceNew":"  /** checks for synonyms of \"second\" in synonyms-wordnet.txt */\n  @SuppressWarnings(\"deprecation\")\n  private void checkWordnetSynonyms(TokenFilterFactory factory) throws Exception {\n    Reader reader = new StringReader(\"second\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTrue(stream instanceof SynonymFilter);\n    assertTokenStreamContents(stream,\n        new String[] { \"second\", \"2nd\", \"two\" },\n        new int[] { 1, 0, 0 });\n  }\n\n","sourceOld":"  /** checks for synonyms of \"second\" in synonyms-wordnet.txt */\n  private void checkWordnetSynonyms(TokenFilterFactory factory) throws Exception {\n    Reader reader = new StringReader(\"second\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTrue(stream instanceof SynonymFilter);\n    assertTokenStreamContents(stream,\n        new String[] { \"second\", \"2nd\", \"two\" },\n        new int[] { 1, 0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilterFactory#checkWordnetSynonyms(TokenFilterFactory).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilterFactory#checkWordnetSynonyms(TokenFilterFactory).mjava","sourceNew":"  /** checks for synonyms of \"second\" in synonyms-wordnet.txt */\n  private void checkWordnetSynonyms(TokenFilterFactory factory) throws Exception {\n    Reader reader = new StringReader(\"second\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTrue(stream instanceof SynonymFilter);\n    assertTokenStreamContents(stream,\n        new String[] { \"second\", \"2nd\", \"two\" },\n        new int[] { 1, 0, 0 });\n  }\n\n","sourceOld":"  /** checks for synonyms of \"second\" in synonyms-wordnet.txt */\n  @SuppressWarnings(\"deprecation\")\n  private void checkWordnetSynonyms(TokenFilterFactory factory) throws Exception {\n    Reader reader = new StringReader(\"second\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTrue(stream instanceof SynonymFilter);\n    assertTokenStreamContents(stream,\n        new String[] { \"second\", \"2nd\", \"two\" },\n        new int[] { 1, 0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["85f3a2d749715373feb8529516e92d3538103525"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"85f3a2d749715373feb8529516e92d3538103525":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85f3a2d749715373feb8529516e92d3538103525"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85f3a2d749715373feb8529516e92d3538103525":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}