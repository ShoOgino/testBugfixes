{"path":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","commits":[{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    out.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    out.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    out.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    } finally {\n    out.close();\n  }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    } finally {\n    out.close();\n  }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    } finally {\n    out.close();\n  }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    } finally {\n    out.close();\n  }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    try {\n    final long dirStart = out.getFilePointer();\n    final int fieldCount = fields.size();\n\n    int nonNullFieldCount = 0;\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        nonNullFieldCount++;\n      }\n    }\n\n    out.writeVInt(nonNullFieldCount);\n    for(int i=0;i<fieldCount;i++) {\n      FSTFieldWriter field = fields.get(i);\n      if (field.fst != null) {\n        out.writeVInt(field.fieldInfo.number);\n        out.writeVLong(field.indexStart);\n      }\n    }\n    writeTrailer(dirStart);\n    } finally {\n    out.close();\n  }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["56da903869515527852ee21ea7ef7bfe414cd40d","efb7a19703a037c29e30440260d393500febc1f4"],"efb7a19703a037c29e30440260d393500febc1f4":["56da903869515527852ee21ea7ef7bfe414cd40d"],"56da903869515527852ee21ea7ef7bfe414cd40d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["efb7a19703a037c29e30440260d393500febc1f4"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["70ad682703b8585f5d0a637efec044d57ec05efb","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","efb7a19703a037c29e30440260d393500febc1f4","868da859b43505d9d2a023bfeae6dd0c795f5295"],"efb7a19703a037c29e30440260d393500febc1f4":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a0ae5e3ed1232483b7b8a014f175a5fe43595982","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","56da903869515527852ee21ea7ef7bfe414cd40d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}