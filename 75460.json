{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#deactivateUnreleasedStates().mjava","commits":[{"id":"6a8a3c395573f31971a415972824d76a5c772cd8","date":1306706129,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#deactivateUnreleasedStates().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Deactivate all unreleased threadstates \n   */\n  protected synchronized void deactivateUnreleasedStates() {\n    for (int i = numThreadStatesActive; i < perThreads.length; i++) {\n      final ThreadState threadState = perThreads[i];\n      threadState.lock();\n      try {\n        threadState.resetWriter(null);\n      } finally {\n        threadState.unlock();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#deactivateUnreleasedStates().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Deactivate all unreleased threadstates \n   */\n  protected synchronized void deactivateUnreleasedStates() {\n    for (int i = numThreadStatesActive; i < perThreads.length; i++) {\n      final ThreadState threadState = perThreads[i];\n      threadState.lock();\n      try {\n        threadState.resetWriter(null);\n      } finally {\n        threadState.unlock();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#deactivateUnreleasedStates().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Deactivate all unreleased threadstates \n   */\n  protected synchronized void deactivateUnreleasedStates() {\n    for (int i = numThreadStatesActive; i < perThreads.length; i++) {\n      final ThreadState threadState = perThreads[i];\n      threadState.lock();\n      try {\n        threadState.resetWriter(null);\n      } finally {\n        threadState.unlock();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#deactivateUnreleasedStates().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#deactivateUnreleasedStates().mjava","sourceNew":"  /**\n   * Deactivate all unreleased threadstates \n   */\n  protected synchronized void deactivateUnreleasedStates() {\n    for (int i = numThreadStatesActive; i < perThreads.length; i++) {\n      final ThreadState threadState = perThreads[i];\n      threadState.lock();\n      try {\n        threadState.resetWriter(null);\n      } finally {\n        threadState.unlock();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Deactivate all unreleased threadstates \n   */\n  protected synchronized void deactivateUnreleasedStates() {\n    for (int i = numThreadStatesActive; i < perThreads.length; i++) {\n      final ThreadState threadState = perThreads[i];\n      threadState.lock();\n      try {\n        threadState.resetWriter(null);\n      } finally {\n        threadState.unlock();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6a8a3c395573f31971a415972824d76a5c772cd8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6a8a3c395573f31971a415972824d76a5c772cd8"],"6a8a3c395573f31971a415972824d76a5c772cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6a8a3c395573f31971a415972824d76a5c772cd8"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"6a8a3c395573f31971a415972824d76a5c772cd8":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3a119bbc8703c10faa329ec201c654b3a35a1e3e","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","6a8a3c395573f31971a415972824d76a5c772cd8","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}