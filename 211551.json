{"path":"solr/core/src/java/org/apache/solr/update/CdcrTransactionLog#readNumRecords().mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/CdcrTransactionLog#readNumRecords().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The last record of the transaction log file is expected to be a commit with a 4 byte integer that encodes the\n   * number of records in the file.\n   */\n  private int readNumRecords() {\n    try {\n      if (endsWithCommit()) {\n        long size = fos.size();\n        // 4 bytes for the record size, the lenght of the end message + 1 byte for its value tag,\n        // and 4 bytes for the number of records\n        long pos = size - 4 - END_MESSAGE.length() - 1 - 4;\n        if (pos < 0) return 0;\n\n        ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);\n        return is.readInt();\n      }\n    } catch (IOException e) {\n      log.error(\"Error while reading number of records in tlog \" + this, e);\n    }\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/CdcrTransactionLog#readNumRecords().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/CdcrTransactionLog#readNumRecords().mjava","sourceNew":"  /**\n   * The last record of the transaction log file is expected to be a commit with a 4 byte integer that encodes the\n   * number of records in the file.\n   */\n  private int readNumRecords() {\n    try {\n      if (endsWithCommit()) {\n        long size = fos.size();\n        // 4 bytes for the record size, the lenght of the end message + 1 byte for its value tag,\n        // and 4 bytes for the number of records\n        long pos = size - 4 - END_MESSAGE.length() - 1 - 4;\n        if (pos < 0) return 0;\n        try (ChannelFastInputStream is = new ChannelFastInputStream(channel, pos)) {\n          return is.readInt();\n        }\n      }\n    } catch (IOException e) {\n      log.error(\"Error while reading number of records in tlog \" + this, e);\n    }\n    return 0;\n  }\n\n","sourceOld":"  /**\n   * The last record of the transaction log file is expected to be a commit with a 4 byte integer that encodes the\n   * number of records in the file.\n   */\n  private int readNumRecords() {\n    try {\n      if (endsWithCommit()) {\n        long size = fos.size();\n        // 4 bytes for the record size, the lenght of the end message + 1 byte for its value tag,\n        // and 4 bytes for the number of records\n        long pos = size - 4 - END_MESSAGE.length() - 1 - 4;\n        if (pos < 0) return 0;\n\n        ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);\n        return is.readInt();\n      }\n    } catch (IOException e) {\n      log.error(\"Error while reading number of records in tlog \" + this, e);\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/CdcrTransactionLog#readNumRecords().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/CdcrTransactionLog#readNumRecords().mjava","sourceNew":"  /**\n   * The last record of the transaction log file is expected to be a commit with a 4 byte integer that encodes the\n   * number of records in the file.\n   */\n  private int readNumRecords() {\n    try {\n      if (endsWithCommit()) {\n        long size = fos.size();\n        // 4 bytes for the record size, the lenght of the end message + 1 byte for its value tag,\n        // and 4 bytes for the number of records\n        long pos = size - 4 - END_MESSAGE.length() - 1 - 4;\n        if (pos < 0) return 0;\n        try (ChannelFastInputStream is = new ChannelFastInputStream(channel, pos)) {\n          return is.readInt();\n        }\n      }\n    } catch (IOException e) {\n      log.error(\"Error while reading number of records in tlog {}\", this, e);\n    }\n    return 0;\n  }\n\n","sourceOld":"  /**\n   * The last record of the transaction log file is expected to be a commit with a 4 byte integer that encodes the\n   * number of records in the file.\n   */\n  private int readNumRecords() {\n    try {\n      if (endsWithCommit()) {\n        long size = fos.size();\n        // 4 bytes for the record size, the lenght of the end message + 1 byte for its value tag,\n        // and 4 bytes for the number of records\n        long pos = size - 4 - END_MESSAGE.length() - 1 - 4;\n        if (pos < 0) return 0;\n        try (ChannelFastInputStream is = new ChannelFastInputStream(channel, pos)) {\n          return is.readInt();\n        }\n      }\n    } catch (IOException e) {\n      log.error(\"Error while reading number of records in tlog \" + this, e);\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/CdcrTransactionLog#readNumRecords().mjava","sourceNew":null,"sourceOld":"  /**\n   * The last record of the transaction log file is expected to be a commit with a 4 byte integer that encodes the\n   * number of records in the file.\n   */\n  private int readNumRecords() {\n    try {\n      if (endsWithCommit()) {\n        long size = fos.size();\n        // 4 bytes for the record size, the lenght of the end message + 1 byte for its value tag,\n        // and 4 bytes for the number of records\n        long pos = size - 4 - END_MESSAGE.length() - 1 - 4;\n        if (pos < 0) return 0;\n        try (ChannelFastInputStream is = new ChannelFastInputStream(channel, pos)) {\n          return is.readInt();\n        }\n      }\n    } catch (IOException e) {\n      log.error(\"Error while reading number of records in tlog {}\", this, e);\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"740d649f013f07efbeb73ca854f106c60166e7c0":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["740d649f013f07efbeb73ca854f106c60166e7c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"740d649f013f07efbeb73ca854f106c60166e7c0":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["740d649f013f07efbeb73ca854f106c60166e7c0"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}