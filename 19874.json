{"path":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#assumeSslIsSafeToTest().mjava","commits":[{"id":"620836184fd918b1cca33e6de8100c45da6890dc","date":1561413738,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#assumeSslIsSafeToTest().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper method for sanity checking if it's safe to use SSL on this JVM\n   *\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-12988\">SOLR-12988</a>\n   * @throws org.junit.internal.AssumptionViolatedException if this JVM is known to have SSL problems\n   */\n  public static void assumeSslIsSafeToTest() {\n    if (Constants.JVM_NAME.startsWith(\"OpenJDK\") ||\n        Constants.JVM_NAME.startsWith(\"Java HotSpot(TM)\")) {\n      RandomizedTest.assumeFalse(\"Test (or randomization for this seed) wants to use SSL, \" +\n                                 \"but SSL is known to fail on your JVM: \" +\n                                 Constants.JVM_NAME + \" / \" + Constants.JVM_VERSION, \n                                 isOpenJdkJvmVersionKnownToHaveProblems(Constants.JVM_VERSION));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c8cb983608d8dea5c61181ba5168ba89ec92f34","date":1561416143,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#assumeSslIsSafeToTest().mjava","sourceNew":null,"sourceOld":"  /**\n   * Helper method for sanity checking if it's safe to use SSL on this JVM\n   *\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-12988\">SOLR-12988</a>\n   * @throws org.junit.internal.AssumptionViolatedException if this JVM is known to have SSL problems\n   */\n  public static void assumeSslIsSafeToTest() {\n    if (Constants.JVM_NAME.startsWith(\"OpenJDK\") ||\n        Constants.JVM_NAME.startsWith(\"Java HotSpot(TM)\")) {\n      RandomizedTest.assumeFalse(\"Test (or randomization for this seed) wants to use SSL, \" +\n                                 \"but SSL is known to fail on your JVM: \" +\n                                 Constants.JVM_NAME + \" / \" + Constants.JVM_VERSION, \n                                 isOpenJdkJvmVersionKnownToHaveProblems(Constants.JVM_VERSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b6382e83f99a1251346565d7f385aa8f6f79f2d","date":1561675880,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SSLTestConfig#assumeSslIsSafeToTest().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper method for sanity checking if it's safe to use SSL on this JVM\n   *\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-12988\">SOLR-12988</a>\n   * @throws org.junit.internal.AssumptionViolatedException if this JVM is known to have SSL problems\n   */\n  public static void assumeSslIsSafeToTest() {\n    if (Constants.JVM_NAME.startsWith(\"OpenJDK\") ||\n        Constants.JVM_NAME.startsWith(\"Java HotSpot(TM)\")) {\n      RandomizedTest.assumeFalse(\"Test (or randomization for this seed) wants to use SSL, \" +\n                                 \"but SSL is known to fail on your JVM: \" +\n                                 Constants.JVM_NAME + \" / \" + Constants.JVM_VERSION, \n                                 isOpenJdkJvmVersionKnownToHaveProblems(Constants.JVM_VERSION));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c8cb983608d8dea5c61181ba5168ba89ec92f34":["620836184fd918b1cca33e6de8100c45da6890dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"620836184fd918b1cca33e6de8100c45da6890dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2b6382e83f99a1251346565d7f385aa8f6f79f2d":["6c8cb983608d8dea5c61181ba5168ba89ec92f34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2b6382e83f99a1251346565d7f385aa8f6f79f2d"]},"commit2Childs":{"6c8cb983608d8dea5c61181ba5168ba89ec92f34":["2b6382e83f99a1251346565d7f385aa8f6f79f2d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["620836184fd918b1cca33e6de8100c45da6890dc"],"620836184fd918b1cca33e6de8100c45da6890dc":["6c8cb983608d8dea5c61181ba5168ba89ec92f34"],"2b6382e83f99a1251346565d7f385aa8f6f79f2d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}