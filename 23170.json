{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/Lev1TParametricDescription#transition(int,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Lev1TParametricDescription#transition(int,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Lev1TParametricDescription#transition(int,int,int).mjava","sourceNew":"  @Override\n  int transition(int absState, int position, int vector) {\n    // null absState should never be passed in\n    assert absState != -1;\n    \n    // decode absState -> state, offset\n    int state = absState/(w+1);\n    int offset = absState%(w+1);\n    assert offset >= 0;\n    \n    if (position == w) {\n      if (state < 2) {\n        final int loc = vector * 2 + state;\n        offset += unpack(offsetIncrs0, loc, 1);\n        state = unpack(toStates0, loc, 2)-1;\n      }\n    } else if (position == w-1) {\n      if (state < 3) {\n        final int loc = vector * 3 + state;\n        offset += unpack(offsetIncrs1, loc, 1);\n        state = unpack(toStates1, loc, 2)-1;\n      }\n    } else if (position == w-2) {\n      if (state < 6) {\n        final int loc = vector * 6 + state;\n        offset += unpack(offsetIncrs2, loc, 2);\n        state = unpack(toStates2, loc, 3)-1;\n      }\n    } else {\n      if (state < 6) {\n        final int loc = vector * 6 + state;\n        offset += unpack(offsetIncrs3, loc, 2);\n        state = unpack(toStates3, loc, 3)-1;\n      }\n    }\n    \n    if (state == -1) {\n      // null state\n      return -1;\n    } else {\n      // translate back to abs\n      return state*(w+1)+offset;\n    }\n  }\n\n","sourceOld":"  @Override\n  int transition(int absState, int position, int vector) {\n    // null absState should never be passed in\n    assert absState != -1;\n    \n    // decode absState -> state, offset\n    int state = absState/(w+1);\n    int offset = absState%(w+1);\n    assert offset >= 0;\n    \n    if (position == w) {\n      if (state < 2) {\n        final int loc = vector * 2 + state;\n        offset += unpack(offsetIncrs0, loc, 1);\n        state = unpack(toStates0, loc, 2)-1;\n      }\n    } else if (position == w-1) {\n      if (state < 3) {\n        final int loc = vector * 3 + state;\n        offset += unpack(offsetIncrs1, loc, 1);\n        state = unpack(toStates1, loc, 2)-1;\n      }\n    } else if (position == w-2) {\n      if (state < 6) {\n        final int loc = vector * 6 + state;\n        offset += unpack(offsetIncrs2, loc, 2);\n        state = unpack(toStates2, loc, 3)-1;\n      }\n    } else {\n      if (state < 6) {\n        final int loc = vector * 6 + state;\n        offset += unpack(offsetIncrs3, loc, 2);\n        state = unpack(toStates3, loc, 3)-1;\n      }\n    }\n    \n    if (state == -1) {\n      // null state\n      return -1;\n    } else {\n      // translate back to abs\n      return state*(w+1)+offset;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}