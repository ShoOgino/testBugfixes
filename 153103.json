{"path":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(CodecReader...).mjava","commits":[{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(CodecReader...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(LeafReader...).mjava","sourceNew":"  /** Calls {@link IndexWriter#addIndexes(CodecReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(CodecReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","sourceOld":"  /** Calls {@link IndexWriter#addIndexes(LeafReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(LeafReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"427bf5b96e9aacef8f01879bc1b93c3619c43439","date":1464134313,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(CodecReader...).mjava","sourceNew":null,"sourceOld":"  /** Calls {@link IndexWriter#addIndexes(CodecReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(CodecReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":4,"author":"Mike McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(CodecReader...).mjava","sourceNew":null,"sourceOld":"  /** Calls {@link IndexWriter#addIndexes(CodecReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(CodecReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(CodecReader...).mjava","sourceNew":null,"sourceOld":"  /** Calls {@link IndexWriter#addIndexes(CodecReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(CodecReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/TrackingIndexWriter#addIndexes(CodecReader...).mjava","sourceNew":null,"sourceOld":"  /** Calls {@link IndexWriter#addIndexes(CodecReader...)}\n   *  and returns the generation that reflects this change. */\n  public long addIndexes(CodecReader... readers) throws IOException {\n    writer.addIndexes(readers);\n    // Return gen as of when indexing finished:\n    return indexingGen.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6483e4260c08168709c02238ae083a51519a28dd":["505bff044e47a553f461b6f4484d1d08faf4ac85","427bf5b96e9aacef8f01879bc1b93c3619c43439"],"191128ac5b85671b1671e2c857437694283b6ebf":["505bff044e47a553f461b6f4484d1d08faf4ac85","6483e4260c08168709c02238ae083a51519a28dd"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["505bff044e47a553f461b6f4484d1d08faf4ac85","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["191128ac5b85671b1671e2c857437694283b6ebf"],"427bf5b96e9aacef8f01879bc1b93c3619c43439":["505bff044e47a553f461b6f4484d1d08faf4ac85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","427bf5b96e9aacef8f01879bc1b93c3619c43439"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"427bf5b96e9aacef8f01879bc1b93c3619c43439":["6483e4260c08168709c02238ae083a51519a28dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}