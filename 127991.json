{"path":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, int)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold)\n      throws IOException {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, int)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold)\n      throws IOException {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, int)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, int)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold)\n      throws IOException {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd9ddb59e9d33950773d186a8b726b5610ae3aad","date":1341258232,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, int)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, int)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold)\n      throws IOException {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        toCollectionStats(stats), \n        toTermStats(stats));\n    realStats.normalize(1f, stats.getBoost());\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(stats.getTotalBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        stats.getBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        toCollectionStats(stats), \n        toTermStats(stats));\n    realStats.normalize(1f, stats.getBoost());\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        stats.getBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        toCollectionStats(stats), \n        toTermStats(stats));\n    realStats.normalize(1f, stats.getBoost());\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, double, double)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        (float)stats.getBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = (float) sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, float, float)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        stats.getBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, double, double)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = ((BasicSimScorer) sim.scorer(\n        (float)stats.getBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats))).stats;\n    float score = (float) sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, double, double)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        (float)stats.getBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = (float) sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#correctnessTestCore(SimilarityBase,float).mjava","sourceNew":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, double, double)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = ((BasicSimScorer) sim.scorer(\n        (float)stats.getBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats))).stats;\n    float score = (float) sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","sourceOld":"  /**\n   * The generic test core called by all correctness test methods. It calls the\n   * {@link SimilarityBase#score(BasicStats, double, double)} method of all\n   * Similarities in {@link #sims} and compares the score against the manually\n   * computed {@code gold}.\n   */\n  private void correctnessTestCore(SimilarityBase sim, float gold) {\n    BasicStats stats = createStats();\n    BasicStats realStats = (BasicStats) sim.computeWeight(\n        (float)stats.getBoost(),\n        toCollectionStats(stats), \n        toTermStats(stats));\n    float score = (float) sim.score(realStats, FREQ, DOC_LEN);\n    assertEquals(\n        sim.toString() + \" score not correct.\", gold, score, FLOAT_EPSILON);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"bd9ddb59e9d33950773d186a8b726b5610ae3aad":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","bd9ddb59e9d33950773d186a8b726b5610ae3aad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["bd9ddb59e9d33950773d186a8b726b5610ae3aad"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"bd9ddb59e9d33950773d186a8b726b5610ae3aad":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2dfdf766e55e943d942055d7de53c7ad6bc45283"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["bd9ddb59e9d33950773d186a8b726b5610ae3aad"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}