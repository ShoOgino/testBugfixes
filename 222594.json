{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest.OverseerRestarter#run().mjava","commits":[{"id":"0beaed456aa3358e5e4a99ea2aea994ef6c81de3","date":1365434191,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest.OverseerRestarter#run().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void run() {\n      try {\n        overseerClient = electNewOverseer(zkAddress);\n        while (run) {\n          if (killCounter.get() > 0) {\n            try {\n              killCounter.decrementAndGet();\n              log.info(\"Killing overseer after 800ms\");\n              Thread.sleep(800);\n              overseerClient.close();\n              overseerClient = electNewOverseer(zkAddress);\n            } catch (Throwable e) {\n              // e.printStackTrace();\n            }\n          }\n          try {\n            Thread.sleep(100);\n          } catch (Throwable e) {\n            // e.printStackTrace();\n          }\n        }\n      } catch (Throwable t) {\n        // ignore\n      } finally {\n        if (overseerClient != null) {\n          try {\n            overseerClient.close();\n          } catch (Throwable t) {\n            // ignore\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2","date":1389633998,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest.OverseerRestarter#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyShardSplitTest.OverseerRestarter#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        overseerClient = electNewOverseer(zkAddress);\n        while (run) {\n          if (killCounter.get() > 0) {\n            try {\n              killCounter.decrementAndGet();\n              log.info(\"Killing overseer after 800ms\");\n              Thread.sleep(800);\n              overseerClient.close();\n              overseerClient = electNewOverseer(zkAddress);\n            } catch (Exception e) {\n              // e.printStackTrace();\n            }\n          }\n          try {\n            Thread.sleep(100);\n          } catch (Exception e) {\n            // e.printStackTrace();\n          }\n        }\n      } catch (Exception t) {\n        // ignore\n      } finally {\n        if (overseerClient != null) {\n          try {\n            overseerClient.close();\n          } catch (Exception t) {\n            // ignore\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        overseerClient = electNewOverseer(zkAddress);\n        while (run) {\n          if (killCounter.get() > 0) {\n            try {\n              killCounter.decrementAndGet();\n              log.info(\"Killing overseer after 800ms\");\n              Thread.sleep(800);\n              overseerClient.close();\n              overseerClient = electNewOverseer(zkAddress);\n            } catch (Throwable e) {\n              // e.printStackTrace();\n            }\n          }\n          try {\n            Thread.sleep(100);\n          } catch (Throwable e) {\n            // e.printStackTrace();\n          }\n        }\n      } catch (Throwable t) {\n        // ignore\n      } finally {\n        if (overseerClient != null) {\n          try {\n            overseerClient.close();\n          } catch (Throwable t) {\n            // ignore\n          }\n        }\n      }\n    }\n\n","bugFix":["0beaed456aa3358e5e4a99ea2aea994ef6c81de3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0beaed456aa3358e5e4a99ea2aea994ef6c81de3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["0beaed456aa3358e5e4a99ea2aea994ef6c81de3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0beaed456aa3358e5e4a99ea2aea994ef6c81de3"],"0beaed456aa3358e5e4a99ea2aea994ef6c81de3":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}