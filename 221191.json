{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","sourceNew":"  /** Expert: the {@link MergeScheduler} calls this method\n   *  to retrieve the next merge requested by the\n   *  MergePolicy */\n  synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","sourceOld":"  /** Expert: the {@link MergeScheduler} calls this method\n   *  to retrieve the next merge requested by the\n   *  MergePolicy */\n  synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59e018adb27395528a3a548ec731ee436c0e9169","date":1304344843,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","sourceNew":"  /**\n   * Expert: the {@link MergeScheduler} calls this method to retrieve the next\n   * merge requested by the MergePolicy\n   * \n   * @lucene.experimental\n   */\n  public synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","sourceOld":"  /** Expert: the {@link MergeScheduler} calls this method\n   *  to retrieve the next merge requested by the\n   *  MergePolicy */\n  synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1f0e2f00b4449f4f1fc7473a8287cb532d631e","date":1304347497,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","sourceNew":"  /**\n   * Expert: the {@link MergeScheduler} calls this method to retrieve the next\n   * merge requested by the MergePolicy\n   * \n   * @lucene.experimental\n   */\n  public synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","sourceOld":"  /** Expert: the {@link MergeScheduler} calls this method\n   *  to retrieve the next merge requested by the\n   *  MergePolicy */\n  synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","sourceNew":"  /**\n   * Expert: the {@link MergeScheduler} calls this method to retrieve the next\n   * merge requested by the MergePolicy\n   * \n   * @lucene.experimental\n   */\n  public synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","sourceOld":"  /** Expert: the {@link MergeScheduler} calls this method\n   *  to retrieve the next merge requested by the\n   *  MergePolicy */\n  synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getNextMerge().mjava","sourceNew":"  /**\n   * Expert: the {@link MergeScheduler} calls this method to retrieve the next\n   * merge requested by the MergePolicy\n   * \n   * @lucene.experimental\n   */\n  public synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","sourceOld":"  /**\n   * Expert: the {@link MergeScheduler} calls this method to retrieve the next\n   * merge requested by the MergePolicy\n   * \n   * @lucene.experimental\n   */\n  public synchronized MergePolicy.OneMerge getNextMerge() {\n    if (pendingMerges.size() == 0)\n      return null;\n    else {\n      // Advance the merge from pending to running\n      MergePolicy.OneMerge merge = pendingMerges.removeFirst();\n      runningMerges.add(merge);\n      return merge;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59e018adb27395528a3a548ec731ee436c0e9169":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["59e018adb27395528a3a548ec731ee436c0e9169"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9454a6510e2db155fb01faa5c049b06ece95fab9","59e018adb27395528a3a548ec731ee436c0e9169"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba1f0e2f00b4449f4f1fc7473a8287cb532d631e":["9454a6510e2db155fb01faa5c049b06ece95fab9","59e018adb27395528a3a548ec731ee436c0e9169"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"59e018adb27395528a3a548ec731ee436c0e9169":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","ba1f0e2f00b4449f4f1fc7473a8287cb532d631e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba1f0e2f00b4449f4f1fc7473a8287cb532d631e":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["59e018adb27395528a3a548ec731ee436c0e9169","a3776dccca01c11e7046323cfad46a3b4a471233","ba1f0e2f00b4449f4f1fc7473a8287cb532d631e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","ba1f0e2f00b4449f4f1fc7473a8287cb532d631e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}