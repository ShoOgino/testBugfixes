{"path":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","commits":[{"id":"2e5d36d3b999ce76a1e80788e5d243f513c69d50","date":1359044508,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pendingIndex) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pendingIndex) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d805367d8ca5fa9d4d9037076fd87698b9080f53","date":1359549977,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pendingIndex) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n    nonEmptyCount++;\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n    nonEmptyCount++;\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5844844466689b1121b12ccb467623f894eb269d","date":1475600453,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    addOneValue(value);\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, docID);\n    docsWithField.set(docID);\n\n    lastDocID = docID;\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n    nonEmptyCount++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    addOneValue(value);\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, docID);\n    docsWithField.set(docID);\n\n    lastDocID = docID;\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pending.size()) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      pending.add(EMPTY_ORD);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceec64003e8cc400e862d44c8589a41570432ab9","date":1478783055,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    addOneValue(value);\n    docsWithField.add(docID);\n\n    lastDocID = docID;\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    addOneValue(value);\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, docID);\n    docsWithField.set(docID);\n\n    lastDocID = docID;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    addOneValue(value);\n    docsWithField.add(docID);\n\n    lastDocID = docID;\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    addOneValue(value);\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, docID);\n    docsWithField.set(docID);\n\n    lastDocID = docID;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d805367d8ca5fa9d4d9037076fd87698b9080f53":["2e5d36d3b999ce76a1e80788e5d243f513c69d50"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"5844844466689b1121b12ccb467623f894eb269d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ceec64003e8cc400e862d44c8589a41570432ab9"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d4d69c535930b5cce125cff868d40f6373dc27d4","9faa42f41b6adb98daf009cf99a4ee239189e469"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","5844844466689b1121b12ccb467623f894eb269d"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d805367d8ca5fa9d4d9037076fd87698b9080f53"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"ceec64003e8cc400e862d44c8589a41570432ab9":["5844844466689b1121b12ccb467623f894eb269d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ceec64003e8cc400e862d44c8589a41570432ab9"]},"commit2Childs":{"d805367d8ca5fa9d4d9037076fd87698b9080f53":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"5844844466689b1121b12ccb467623f894eb269d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ceec64003e8cc400e862d44c8589a41570432ab9"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":["d805367d8ca5fa9d4d9037076fd87698b9080f53"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["5844844466689b1121b12ccb467623f894eb269d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","2e5d36d3b999ce76a1e80788e5d243f513c69d50"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"ceec64003e8cc400e862d44c8589a41570432ab9":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}