{"path":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#ramBytesUsed().mjava","commits":[{"id":"fad01f81cc24b33263ccec7dbff3fb907702f91e","date":1535461373,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#ramBytesUsed().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    // Return a rough estimation for allocated blocks. Note that we do not make\n    // any special distinction for direct memory buffers.\n    return RamUsageEstimator.NUM_BYTES_OBJECT_REF * blocks.size() + \n           blocks.stream().mapToLong(buf -> buf.capacity()).sum();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4665526e8172c3a9c5f37e011c8abfda5d1c96ee","date":1600883355,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    // Return a rough estimation for allocated blocks. Note that we do not make\n    // any special distinction for direct memory buffers.\n    ByteBuffer first = blocks.peek();\n    if (first == null) {\n      return 0L;\n    } else {\n      // All blocks have the same capacity.\n      return (first.capacity() + RamUsageEstimator.NUM_BYTES_OBJECT_REF) * blocks.size();\n    }\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    // Return a rough estimation for allocated blocks. Note that we do not make\n    // any special distinction for direct memory buffers.\n    return RamUsageEstimator.NUM_BYTES_OBJECT_REF * blocks.size() + \n           blocks.stream().mapToLong(buf -> buf.capacity()).sum();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"679def3e975e7c840728e0f1123a2785fc68b3f9","date":1601298488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    // Return a rough estimation for allocated blocks. Note that we do not make\n    // any special distinction for direct memory buffers.\n    assert ramBytesUsed == blocks.stream().mapToLong(ByteBuffer::capacity).sum() + blocks.size() * RamUsageEstimator.NUM_BYTES_OBJECT_REF;\n    return ramBytesUsed;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    // Return a rough estimation for allocated blocks. Note that we do not make\n    // any special distinction for direct memory buffers.\n    ByteBuffer first = blocks.peek();\n    if (first == null) {\n      return 0L;\n    } else {\n      // All blocks have the same capacity.\n      return (first.capacity() + RamUsageEstimator.NUM_BYTES_OBJECT_REF) * blocks.size();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"679def3e975e7c840728e0f1123a2785fc68b3f9":["4665526e8172c3a9c5f37e011c8abfda5d1c96ee"],"4665526e8172c3a9c5f37e011c8abfda5d1c96ee":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["679def3e975e7c840728e0f1123a2785fc68b3f9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"679def3e975e7c840728e0f1123a2785fc68b3f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4665526e8172c3a9c5f37e011c8abfda5d1c96ee":["679def3e975e7c840728e0f1123a2785fc68b3f9"],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["4665526e8172c3a9c5f37e011c8abfda5d1c96ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}