{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testDetectMultiValuedField().mjava","commits":[{"id":"006838107b0cd2051371f3470740d23ec91b1886","date":1384950816,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testDetectMultiValuedField().mjava","pathOld":"/dev/null","sourceNew":"  // Make sure we catch when app didn't declare field as\n  // multi-valued but it was:\n  public void testDetectMultiValuedField() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    doc.add(new FacetField(\"a\", \"path2\"));\n    try {\n      builder.build(doc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testDetectMultiValuedField().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testDetectMultiValuedField().mjava","sourceNew":"  // Make sure we catch when app didn't declare field as\n  // multi-valued but it was:\n  public void testDetectMultiValuedField() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    doc.add(new FacetField(\"a\", \"path2\"));\n    try {\n      config.build(doc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  // Make sure we catch when app didn't declare field as\n  // multi-valued but it was:\n  public void testDetectMultiValuedField() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    doc.add(new FacetField(\"a\", \"path2\"));\n    try {\n      builder.build(doc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testDetectMultiValuedField().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testDetectMultiValuedField().mjava","sourceNew":"  // Make sure we catch when app didn't declare field as\n  // multi-valued but it was:\n  public void testDetectMultiValuedField() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    doc.add(new FacetField(\"a\", \"path2\"));\n    try {\n      config.build(doc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  // Make sure we catch when app didn't declare field as\n  // multi-valued but it was:\n  public void testDetectMultiValuedField() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    doc.add(new FacetField(\"a\", \"path2\"));\n    try {\n      config.build(doc);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["ae75def1e2525383b6e1397ed97c44387da9941c"],"006838107b0cd2051371f3470740d23ec91b1886":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["006838107b0cd2051371f3470740d23ec91b1886"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["006838107b0cd2051371f3470740d23ec91b1886","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"006838107b0cd2051371f3470740d23ec91b1886":["ae75def1e2525383b6e1397ed97c44387da9941c"],"ae75def1e2525383b6e1397ed97c44387da9941c":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}