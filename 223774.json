{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoBBoxTest#testBBoxDegenerate().mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoBBoxTest#testBBoxDegenerate().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoBBoxTest#testBBoxDegenerate().mjava","sourceNew":"  @Test\n  public void testBBoxDegenerate() {\n    GeoBBox box;\n    GeoConvexPolygon cp;\n    int relationship;\n    List<GeoPoint> points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 24 * DEGREES_TO_RADIANS, -30 * DEGREES_TO_RADIANS));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -11 * DEGREES_TO_RADIANS, 101 * DEGREES_TO_RADIANS));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -49 * DEGREES_TO_RADIANS, -176 * DEGREES_TO_RADIANS));\n    GeoMembershipShape shape = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points, 0);\n    box = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, -64 * DEGREES_TO_RADIANS, -64 * DEGREES_TO_RADIANS, -180 * DEGREES_TO_RADIANS, 180 * DEGREES_TO_RADIANS);\n    relationship = box.getRelationship(shape);\n    assertEquals(GeoArea.CONTAINS, relationship);\n    box = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, -61.85 * DEGREES_TO_RADIANS, -67.5 * DEGREES_TO_RADIANS, -180 * DEGREES_TO_RADIANS, -168.75 * DEGREES_TO_RADIANS);\n    //System.out.println(\"Shape = \" + shape + \" Rect = \" + box);\n    relationship = box.getRelationship(shape);\n    assertEquals(GeoArea.CONTAINS, relationship);\n  }\n\n","sourceOld":"  @Test\n  public void testBBoxDegenerate() {\n    GeoBBox box;\n    GeoConvexPolygon cp;\n    int relationship;\n    List<GeoPoint> points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 24 * DEGREES_TO_RADIANS, -30 * DEGREES_TO_RADIANS));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -11 * DEGREES_TO_RADIANS, 101 * DEGREES_TO_RADIANS));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -49 * DEGREES_TO_RADIANS, -176 * DEGREES_TO_RADIANS));\n    GeoMembershipShape shape = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points, 0);\n    box = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, -64 * DEGREES_TO_RADIANS, -64 * DEGREES_TO_RADIANS, -180 * DEGREES_TO_RADIANS, 180 * DEGREES_TO_RADIANS);\n    relationship = box.getRelationship(shape);\n    assertEquals(GeoArea.CONTAINS, relationship);\n    box = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, -61.85 * DEGREES_TO_RADIANS, -67.5 * DEGREES_TO_RADIANS, -180 * DEGREES_TO_RADIANS, -168.75 * DEGREES_TO_RADIANS);\n    //System.out.println(\"Shape = \" + shape + \" Rect = \" + box);\n    relationship = box.getRelationship(shape);\n    assertEquals(GeoArea.CONTAINS, relationship);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"414425421ced68c7064f08c9da6a2c95399226d9","date":1460921822,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoBBoxTest#testBBoxDegenerate().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoBBoxTest#testBBoxDegenerate().mjava","sourceNew":"  @Test\n  public void testBBoxDegenerate() {\n    GeoBBox box;\n    GeoConvexPolygon cp;\n    int relationship;\n    List<GeoPoint> points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -49 * DEGREES_TO_RADIANS, -176 * DEGREES_TO_RADIANS));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -11 * DEGREES_TO_RADIANS, 101 * DEGREES_TO_RADIANS));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 24 * DEGREES_TO_RADIANS, -30 * DEGREES_TO_RADIANS));\n    GeoMembershipShape shape = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    box = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, -64 * DEGREES_TO_RADIANS, -64 * DEGREES_TO_RADIANS, -180 * DEGREES_TO_RADIANS, 180 * DEGREES_TO_RADIANS);\n    relationship = box.getRelationship(shape);\n    assertEquals(GeoArea.CONTAINS, relationship);\n    box = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, -61.85 * DEGREES_TO_RADIANS, -67.5 * DEGREES_TO_RADIANS, -180 * DEGREES_TO_RADIANS, -168.75 * DEGREES_TO_RADIANS);\n    //System.out.println(\"Shape = \" + shape + \" Rect = \" + box);\n    relationship = box.getRelationship(shape);\n    assertEquals(GeoArea.CONTAINS, relationship);\n  }\n\n","sourceOld":"  @Test\n  public void testBBoxDegenerate() {\n    GeoBBox box;\n    GeoConvexPolygon cp;\n    int relationship;\n    List<GeoPoint> points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 24 * DEGREES_TO_RADIANS, -30 * DEGREES_TO_RADIANS));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -11 * DEGREES_TO_RADIANS, 101 * DEGREES_TO_RADIANS));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -49 * DEGREES_TO_RADIANS, -176 * DEGREES_TO_RADIANS));\n    GeoMembershipShape shape = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points, 0);\n    box = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, -64 * DEGREES_TO_RADIANS, -64 * DEGREES_TO_RADIANS, -180 * DEGREES_TO_RADIANS, 180 * DEGREES_TO_RADIANS);\n    relationship = box.getRelationship(shape);\n    assertEquals(GeoArea.CONTAINS, relationship);\n    box = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, -61.85 * DEGREES_TO_RADIANS, -67.5 * DEGREES_TO_RADIANS, -180 * DEGREES_TO_RADIANS, -168.75 * DEGREES_TO_RADIANS);\n    //System.out.println(\"Shape = \" + shape + \" Rect = \" + box);\n    relationship = box.getRelationship(shape);\n    assertEquals(GeoArea.CONTAINS, relationship);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"414425421ced68c7064f08c9da6a2c95399226d9":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["414425421ced68c7064f08c9da6a2c95399226d9"]},"commit2Childs":{"414425421ced68c7064f08c9da6a2c95399226d9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["414425421ced68c7064f08c9da6a2c95399226d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}