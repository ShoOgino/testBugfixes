{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.Op#fromMap(Map[String,Object]).mjava","commits":[{"id":"976feb6756f29529c6ce5b578e7d6fa8b1efcb30","date":1535461878,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.Op#fromMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    public static Op fromMap(Map<String, Object> map) {\n      if (!map.containsKey(\"action\")) {\n        return null;\n      }\n      CollectionParams.CollectionAction action = CollectionParams.CollectionAction.get(String.valueOf(map.get(\"action\")));\n      if (action == null) {\n        return null;\n      }\n      Op op = new Op(action);\n      Map<Object, Object> hints = (Map<Object, Object>)map.get(\"hints\");\n      if (hints != null && !hints.isEmpty()) {\n        hints.forEach((k, v) ->  {\n          Suggester.Hint h = Suggester.Hint.get(k.toString());\n          if (h == null) {\n            return;\n          }\n          if (!(v instanceof Collection)) {\n            v = Collections.singletonList(v);\n          }\n          ((Collection)v).forEach(vv -> {\n            if (vv instanceof Map) {\n              // maybe it's a Pair?\n              Map<String, Object> m = (Map<String, Object>)vv;\n              if (m.containsKey(\"first\") && m.containsKey(\"second\")) {\n                Pair p = Pair.parse(m);\n                if (p != null) {\n                  op.addHint(h, p);\n                  return;\n                }\n              }\n            }\n            op.addHint(h, vv);\n          });\n        });\n      }\n      return op;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daa0f21a44e235a2299ea1fa913898b182dd7cce","date":1590952026,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.Op#fromMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.Op#fromMap(Map[String,Object]).mjava","sourceNew":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public static Op fromMap(Map<String, Object> map) {\n      if (!map.containsKey(\"action\")) {\n        return null;\n      }\n      CollectionParams.CollectionAction action = CollectionParams.CollectionAction.get(String.valueOf(map.get(\"action\")));\n      if (action == null) {\n        return null;\n      }\n      Op op = new Op(action);\n      Map<Object, Object> hints = (Map<Object, Object>)map.get(\"hints\");\n      if (hints != null && !hints.isEmpty()) {\n        hints.forEach((k, v) ->  {\n          Suggester.Hint h = Suggester.Hint.get(k.toString());\n          if (h == null) {\n            return;\n          }\n          if (!(v instanceof Collection)) {\n            v = Collections.singletonList(v);\n          }\n          ((Collection)v).forEach(vv -> {\n            if (vv instanceof Map) {\n              // maybe it's a Pair?\n              Map<String, Object> m = (Map<String, Object>)vv;\n              if (m.containsKey(\"first\") && m.containsKey(\"second\")) {\n                Pair p = Pair.parse(m);\n                if (p != null) {\n                  op.addHint(h, p);\n                  return;\n                }\n              }\n            }\n            op.addHint(h, vv);\n          });\n        });\n      }\n      return op;\n    }\n\n","sourceOld":"    public static Op fromMap(Map<String, Object> map) {\n      if (!map.containsKey(\"action\")) {\n        return null;\n      }\n      CollectionParams.CollectionAction action = CollectionParams.CollectionAction.get(String.valueOf(map.get(\"action\")));\n      if (action == null) {\n        return null;\n      }\n      Op op = new Op(action);\n      Map<Object, Object> hints = (Map<Object, Object>)map.get(\"hints\");\n      if (hints != null && !hints.isEmpty()) {\n        hints.forEach((k, v) ->  {\n          Suggester.Hint h = Suggester.Hint.get(k.toString());\n          if (h == null) {\n            return;\n          }\n          if (!(v instanceof Collection)) {\n            v = Collections.singletonList(v);\n          }\n          ((Collection)v).forEach(vv -> {\n            if (vv instanceof Map) {\n              // maybe it's a Pair?\n              Map<String, Object> m = (Map<String, Object>)vv;\n              if (m.containsKey(\"first\") && m.containsKey(\"second\")) {\n                Pair p = Pair.parse(m);\n                if (p != null) {\n                  op.addHint(h, p);\n                  return;\n                }\n              }\n            }\n            op.addHint(h, vv);\n          });\n        });\n      }\n      return op;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.Op#fromMap(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public static Op fromMap(Map<String, Object> map) {\n      if (!map.containsKey(\"action\")) {\n        return null;\n      }\n      CollectionParams.CollectionAction action = CollectionParams.CollectionAction.get(String.valueOf(map.get(\"action\")));\n      if (action == null) {\n        return null;\n      }\n      Op op = new Op(action);\n      Map<Object, Object> hints = (Map<Object, Object>)map.get(\"hints\");\n      if (hints != null && !hints.isEmpty()) {\n        hints.forEach((k, v) ->  {\n          Suggester.Hint h = Suggester.Hint.get(k.toString());\n          if (h == null) {\n            return;\n          }\n          if (!(v instanceof Collection)) {\n            v = Collections.singletonList(v);\n          }\n          ((Collection)v).forEach(vv -> {\n            if (vv instanceof Map) {\n              // maybe it's a Pair?\n              Map<String, Object> m = (Map<String, Object>)vv;\n              if (m.containsKey(\"first\") && m.containsKey(\"second\")) {\n                Pair p = Pair.parse(m);\n                if (p != null) {\n                  op.addHint(h, p);\n                  return;\n                }\n              }\n            }\n            op.addHint(h, vv);\n          });\n        });\n      }\n      return op;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}