{"path":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","pathOld":"modules/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","sourceNew":"  /**\n   * Return the element that is stored in a cell associated with the given key.\n   * \n   * @param key the key\n   * @return the associated element\n   */\n  public CharSequence getFully(CharSequence key) {\n    Row now = getRow(root);\n    int w;\n    Cell c;\n    int cmd = -1;\n    StrEnum e = new StrEnum(key, forward);\n    Character ch = null;\n    Character aux = null;\n    \n    for (int i = 0; i < key.length();) {\n      ch = new Character(e.next());\n      i++;\n      \n      c = now.at(ch);\n      if (c == null) {\n        return null;\n      }\n      \n      cmd = c.cmd;\n      \n      for (int skip = c.skip; skip > 0; skip--) {\n        if (i < key.length()) {\n          aux = new Character(e.next());\n        } else {\n          return null;\n        }\n        i++;\n      }\n      \n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else if (i < key.length()) {\n        return null;\n      }\n    }\n    return (cmd == -1) ? null : cmds.get(cmd);\n  }\n\n","sourceOld":"  /**\n   * Return the element that is stored in a cell associated with the given key.\n   * \n   * @param key the key\n   * @return the associated element\n   */\n  public CharSequence getFully(CharSequence key) {\n    Row now = getRow(root);\n    int w;\n    Cell c;\n    int cmd = -1;\n    StrEnum e = new StrEnum(key, forward);\n    Character ch = null;\n    Character aux = null;\n    \n    for (int i = 0; i < key.length();) {\n      ch = new Character(e.next());\n      i++;\n      \n      c = now.at(ch);\n      if (c == null) {\n        return null;\n      }\n      \n      cmd = c.cmd;\n      \n      for (int skip = c.skip; skip > 0; skip--) {\n        if (i < key.length()) {\n          aux = new Character(e.next());\n        } else {\n          return null;\n        }\n        i++;\n      }\n      \n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else if (i < key.length()) {\n        return null;\n      }\n    }\n    return (cmd == -1) ? null : cmds.get(cmd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","pathOld":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","sourceNew":"  /**\n   * Return the element that is stored in a cell associated with the given key.\n   * \n   * @param key the key\n   * @return the associated element\n   */\n  public CharSequence getFully(CharSequence key) {\n    Row now = getRow(root);\n    int w;\n    Cell c;\n    int cmd = -1;\n    StrEnum e = new StrEnum(key, forward);\n    Character ch = null;\n    Character aux = null;\n    \n    for (int i = 0; i < key.length();) {\n      ch = e.next();\n      i++;\n      \n      c = now.at(ch);\n      if (c == null) {\n        return null;\n      }\n      \n      cmd = c.cmd;\n      \n      for (int skip = c.skip; skip > 0; skip--) {\n        if (i < key.length()) {\n          aux = e.next();\n        } else {\n          return null;\n        }\n        i++;\n      }\n      \n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else if (i < key.length()) {\n        return null;\n      }\n    }\n    return (cmd == -1) ? null : cmds.get(cmd);\n  }\n\n","sourceOld":"  /**\n   * Return the element that is stored in a cell associated with the given key.\n   * \n   * @param key the key\n   * @return the associated element\n   */\n  public CharSequence getFully(CharSequence key) {\n    Row now = getRow(root);\n    int w;\n    Cell c;\n    int cmd = -1;\n    StrEnum e = new StrEnum(key, forward);\n    Character ch = null;\n    Character aux = null;\n    \n    for (int i = 0; i < key.length();) {\n      ch = new Character(e.next());\n      i++;\n      \n      c = now.at(ch);\n      if (c == null) {\n        return null;\n      }\n      \n      cmd = c.cmd;\n      \n      for (int skip = c.skip; skip > 0; skip--) {\n        if (i < key.length()) {\n          aux = new Character(e.next());\n        } else {\n          return null;\n        }\n        i++;\n      }\n      \n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else if (i < key.length()) {\n        return null;\n      }\n    }\n    return (cmd == -1) ? null : cmds.get(cmd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","pathOld":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","sourceNew":"  /**\n   * Return the element that is stored in a cell associated with the given key.\n   * \n   * @param key the key\n   * @return the associated element\n   */\n  public CharSequence getFully(CharSequence key) {\n    Row now = getRow(root);\n    int w;\n    Cell c;\n    int cmd = -1;\n    StrEnum e = new StrEnum(key, forward);\n    Character ch = null;\n    Character aux = null;\n    \n    for (int i = 0; i < key.length();) {\n      ch = e.next();\n      i++;\n      \n      c = now.at(ch);\n      if (c == null) {\n        return null;\n      }\n      \n      cmd = c.cmd;\n      \n      for (int skip = c.skip; skip > 0; skip--) {\n        if (i < key.length()) {\n          aux = e.next();\n        } else {\n          return null;\n        }\n        i++;\n      }\n      \n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else if (i < key.length()) {\n        return null;\n      }\n    }\n    return (cmd == -1) ? null : cmds.get(cmd);\n  }\n\n","sourceOld":"  /**\n   * Return the element that is stored in a cell associated with the given key.\n   * \n   * @param key the key\n   * @return the associated element\n   */\n  public CharSequence getFully(CharSequence key) {\n    Row now = getRow(root);\n    int w;\n    Cell c;\n    int cmd = -1;\n    StrEnum e = new StrEnum(key, forward);\n    Character ch = null;\n    Character aux = null;\n    \n    for (int i = 0; i < key.length();) {\n      ch = new Character(e.next());\n      i++;\n      \n      c = now.at(ch);\n      if (c == null) {\n        return null;\n      }\n      \n      cmd = c.cmd;\n      \n      for (int skip = c.skip; skip > 0; skip--) {\n        if (i < key.length()) {\n          aux = new Character(e.next());\n        } else {\n          return null;\n        }\n        i++;\n      }\n      \n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else if (i < key.length()) {\n        return null;\n      }\n    }\n    return (cmd == -1) ? null : cmds.get(cmd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","pathOld":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Trie#getFully(CharSequence).mjava","sourceNew":"  /**\n   * Return the element that is stored in a cell associated with the given key.\n   * \n   * @param key the key\n   * @return the associated element\n   */\n  public CharSequence getFully(CharSequence key) {\n    Row now = getRow(root);\n    int w;\n    Cell c;\n    int cmd = -1;\n    StrEnum e = new StrEnum(key, forward);\n    Character ch = null;\n    Character aux = null;\n    \n    for (int i = 0; i < key.length();) {\n      ch = e.next();\n      i++;\n      \n      c = now.at(ch);\n      if (c == null) {\n        return null;\n      }\n      \n      cmd = c.cmd;\n      \n      for (int skip = c.skip; skip > 0; skip--) {\n        if (i < key.length()) {\n          aux = e.next();\n        } else {\n          return null;\n        }\n        i++;\n      }\n      \n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else if (i < key.length()) {\n        return null;\n      }\n    }\n    return (cmd == -1) ? null : cmds.get(cmd);\n  }\n\n","sourceOld":"  /**\n   * Return the element that is stored in a cell associated with the given key.\n   * \n   * @param key the key\n   * @return the associated element\n   */\n  public CharSequence getFully(CharSequence key) {\n    Row now = getRow(root);\n    int w;\n    Cell c;\n    int cmd = -1;\n    StrEnum e = new StrEnum(key, forward);\n    Character ch = null;\n    Character aux = null;\n    \n    for (int i = 0; i < key.length();) {\n      ch = new Character(e.next());\n      i++;\n      \n      c = now.at(ch);\n      if (c == null) {\n        return null;\n      }\n      \n      cmd = c.cmd;\n      \n      for (int skip = c.skip; skip > 0; skip--) {\n        if (i < key.length()) {\n          aux = new Character(e.next());\n        } else {\n          return null;\n        }\n        i++;\n      }\n      \n      w = now.getRef(ch);\n      if (w >= 0) {\n        now = getRow(w);\n      } else if (i < key.length()) {\n        return null;\n      }\n    }\n    return (cmd == -1) ? null : cmds.get(cmd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["b89678825b68eccaf09e6ab71675fc0b0af1e099","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}