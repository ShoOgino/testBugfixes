{"path":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkJaroWinklerSuggestions().mjava","commits":[{"id":"6000179efff4c320dafa76c7f0f088e44c4df0d0","date":1213765317,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkJaroWinklerSuggestions().mjava","pathOld":"/dev/null","sourceNew":"  private void checkJaroWinklerSuggestions() throws IOException {\n    String[] similar = spellChecker.suggestSimilar(\"onety\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"one\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62ef729ef7d982bed7997d2837565d4c63df9c81","date":1242828428,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkJaroWinklerSuggestions().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkJaroWinklerSuggestions().mjava","sourceNew":"  private void checkJaroWinklerSuggestions() throws IOException {\n    String[] similar = spellChecker.suggestSimilar(\"onety\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"one\");\n    assertEquals(similar[1], \"ninety\");\n  }\n\n","sourceOld":"  private void checkJaroWinklerSuggestions() throws IOException {\n    String[] similar = spellChecker.suggestSimilar(\"onety\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"one\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkJaroWinklerSuggestions().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkJaroWinklerSuggestions().mjava","sourceNew":"  private void checkJaroWinklerSuggestions() throws IOException {\n    String[] similar = spellChecker.suggestSimilar(\"onety\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"one\");\n    assertEquals(similar[1], \"ninety\");\n  }\n\n","sourceOld":"  private void checkJaroWinklerSuggestions() throws IOException {\n    String[] similar = spellChecker.suggestSimilar(\"onety\", 2);\n    assertEquals(2, similar.length);\n    assertEquals(similar[0], \"one\");\n    assertEquals(similar[1], \"ninety\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62ef729ef7d982bed7997d2837565d4c63df9c81":["6000179efff4c320dafa76c7f0f088e44c4df0d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6000179efff4c320dafa76c7f0f088e44c4df0d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["62ef729ef7d982bed7997d2837565d4c63df9c81"]},"commit2Childs":{"62ef729ef7d982bed7997d2837565d4c63df9c81":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6000179efff4c320dafa76c7f0f088e44c4df0d0"],"6000179efff4c320dafa76c7f0f088e44c4df0d0":["62ef729ef7d982bed7997d2837565d4c63df9c81"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}