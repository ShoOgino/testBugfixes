{"path":"solr/core/src/java/org/apache/solr/handler/component/StandaloneReplicaSource#StandaloneReplicaSource(Builder).mjava","commits":[{"id":"59781d3bed3e710d1eb267b259b850c1f5043a8e","date":1583026251,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StandaloneReplicaSource#StandaloneReplicaSource(Builder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/LegacyReplicaSource#LegacyReplicaSource(Builder).mjava","sourceNew":"  public StandaloneReplicaSource(Builder builder) {\n    List<String> list = StrUtils.splitSmart(builder.shardsParam, \",\", true);\n    replicas = new List[list.size()];\n    for (int i = 0; i < list.size(); i++) {\n      replicas[i] = StrUtils.splitSmart(list.get(i), \"|\", true);\n      // todo do we really not need to transform in non-cloud mode?!\n      // builder.replicaListTransformer.transform(replicas[i]);\n      builder.hostChecker.checkWhitelist(builder.shardsParam, replicas[i]);\n    }\n  }\n\n","sourceOld":"  public LegacyReplicaSource(Builder builder) {\n    List<String> list = StrUtils.splitSmart(builder.shardsParam, \",\", true);\n    replicas = new List[list.size()];\n    for (int i = 0; i < list.size(); i++) {\n      replicas[i] = StrUtils.splitSmart(list.get(i), \"|\", true);\n      // todo do we really not need to transform in non-cloud mode?!\n      // builder.replicaListTransformer.transform(replicas[i]);\n      builder.hostChecker.checkWhitelist(builder.shardsParam, replicas[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8582f07e9350eaeb33bf6c4617b8c9895d99c839","date":1591307386,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StandaloneReplicaSource#StandaloneReplicaSource(Builder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StandaloneReplicaSource#StandaloneReplicaSource(Builder).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public StandaloneReplicaSource(Builder builder) {\n    List<String> list = StrUtils.splitSmart(builder.shardsParam, \",\", true);\n    replicas = new List[list.size()];\n    for (int i = 0; i < list.size(); i++) {\n      replicas[i] = StrUtils.splitSmart(list.get(i), \"|\", true);\n      // todo do we really not need to transform in non-cloud mode?!\n      // builder.replicaListTransformer.transform(replicas[i]);\n      builder.hostChecker.checkWhitelist(builder.shardsParam, replicas[i]);\n    }\n  }\n\n","sourceOld":"  public StandaloneReplicaSource(Builder builder) {\n    List<String> list = StrUtils.splitSmart(builder.shardsParam, \",\", true);\n    replicas = new List[list.size()];\n    for (int i = 0; i < list.size(); i++) {\n      replicas[i] = StrUtils.splitSmart(list.get(i), \"|\", true);\n      // todo do we really not need to transform in non-cloud mode?!\n      // builder.replicaListTransformer.transform(replicas[i]);\n      builder.hostChecker.checkWhitelist(builder.shardsParam, replicas[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"59781d3bed3e710d1eb267b259b850c1f5043a8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["59781d3bed3e710d1eb267b259b850c1f5043a8e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["59781d3bed3e710d1eb267b259b850c1f5043a8e"],"59781d3bed3e710d1eb267b259b850c1f5043a8e":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}