{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean).mjava","commits":[{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean,boolean).mjava","sourceNew":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, boolean needsScores) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = needsScores;\n    this.similarity = searcher.getSimilarity(needsScores);\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), needsScores && c.isScoring());\n      weights.add(w);\n    }\n  }\n\n","sourceOld":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, boolean needsScores, boolean disableCoord) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = needsScores;\n    this.similarity = searcher.getSimilarity(needsScores);\n    weights = new ArrayList<>();\n    int i = 0;\n    int maxCoord = 0;\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), needsScores && c.isScoring());\n      weights.add(w);\n      if (c.isScoring()) {\n        maxCoord++;\n      }\n      i += 1;\n    }\n    this.maxCoord = maxCoord;\n    \n    // precompute coords (0..N, N).\n    // set disableCoord when its explicit, scores are not needed, no scoring clauses, or the sim doesn't use it.\n    coords = new float[maxCoord+1];\n    Arrays.fill(coords, 1F);\n    coords[0] = 0f;\n    if (maxCoord > 0 && needsScores && disableCoord == false) {\n      // compute coords from the similarity, look for any actual ones.\n      boolean seenActualCoord = false;\n      for (i = 1; i < coords.length; i++) {\n        coords[i] = coord(i, maxCoord);\n        seenActualCoord |= (coords[i] != 1F);\n      }\n      this.disableCoord = seenActualCoord == false;\n    } else {\n      this.disableCoord = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean).mjava","sourceNew":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = needsScores;\n    this.similarity = searcher.getSimilarity(needsScores);\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), needsScores && c.isScoring(), boost);\n      weights.add(w);\n    }\n  }\n\n","sourceOld":"  BooleanWeight(BooleanQuery query, IndexSearcher searcher, boolean needsScores) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = needsScores;\n    this.similarity = searcher.getSimilarity(needsScores);\n    weights = new ArrayList<>();\n    for (BooleanClause c : query) {\n      Weight w = searcher.createWeight(c.getQuery(), needsScores && c.isScoring());\n      weights.add(w);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["c8a0e442f7b61f811680273b25da95994a724466"],"c8a0e442f7b61f811680273b25da95994a724466":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8a0e442f7b61f811680273b25da95994a724466"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c8a0e442f7b61f811680273b25da95994a724466":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}