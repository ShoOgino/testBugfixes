{"path":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","commits":[{"id":"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02","date":1244977984,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ced3401b9c4e7ed2be67711dbc83e48b81aa736","date":1265394056,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(Version.LUCENE_CURRENT),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(TEST_VERSION_CURRENT),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(Version.LUCENE_CURRENT),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new IndexWriterConfig(TEST_VERSION_CURRENT));\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(TEST_VERSION_CURRENT),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(TEST_VERSION_CURRENT),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new IndexWriterConfig(TEST_VERSION_CURRENT));\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(TEST_VERSION_CURRENT),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore, true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["4256bc1b3c94786287ccdfc751230374521843cf"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"4256bc1b3c94786287ccdfc751230374521843cf":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}