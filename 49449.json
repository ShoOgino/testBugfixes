{"path":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#nextRange().mjava","commits":[{"id":"449aa3166f747982f507c48782901cde8693b608","date":1285560445,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#nextRange().mjava","pathOld":"/dev/null","sourceNew":"    private void nextRange() {\n      assert rangeBounds.size() % 2 == 0;\n\n      currentLowerBound = rangeBounds.removeFirst();\n      assert currentUpperBound == null || termComp.compare(currentUpperBound, currentLowerBound) <= 0 :\n        \"The current upper bound must be <= the new lower bound\";\n      \n      currentUpperBound = rangeBounds.removeFirst();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#nextRange().mjava","pathOld":"/dev/null","sourceNew":"    private void nextRange() {\n      assert rangeBounds.size() % 2 == 0;\n\n      currentLowerBound = rangeBounds.removeFirst();\n      assert currentUpperBound == null || termComp.compare(currentUpperBound, currentLowerBound) <= 0 :\n        \"The current upper bound must be <= the new lower bound\";\n      \n      currentUpperBound = rangeBounds.removeFirst();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#nextRange().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#nextRange().mjava","sourceNew":"    private void nextRange() {\n      assert rangeBounds.size() % 2 == 0;\n\n      currentLowerBound = rangeBounds.removeFirst();\n      assert currentUpperBound == null || termComp.compare(currentUpperBound, currentLowerBound) <= 0 :\n        \"The current upper bound must be <= the new lower bound\";\n      \n      currentUpperBound = rangeBounds.removeFirst();\n    }\n\n","sourceOld":"    private void nextRange() {\n      assert rangeBounds.size() % 2 == 0;\n\n      currentLowerBound = rangeBounds.removeFirst();\n      assert currentUpperBound == null || termComp.compare(currentUpperBound, currentLowerBound) <= 0 :\n        \"The current upper bound must be <= the new lower bound\";\n      \n      currentUpperBound = rangeBounds.removeFirst();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"449aa3166f747982f507c48782901cde8693b608":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["449aa3166f747982f507c48782901cde8693b608"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","449aa3166f747982f507c48782901cde8693b608"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"449aa3166f747982f507c48782901cde8693b608":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["449aa3166f747982f507c48782901cde8693b608","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}