{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","commits":[{"id":"917e62f3497c83634a13edd833e8e21dd6cc6496","date":1490728467,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","pathOld":"/dev/null","sourceNew":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(5000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3732e34f27916e98704736cc6924a34fffca249a","date":1490873946,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","pathOld":"/dev/null","sourceNew":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(5000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd","date":1567056470,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","sourceNew":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'blockUnknown': false,\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(5000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","sourceOld":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(5000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","sourceNew":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'blockUnknown': false,\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(1000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","sourceOld":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'blockUnknown': false,\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(5000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","sourceNew":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'blockUnknown': false,\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(1000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","sourceOld":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'blockUnknown': false,\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(5000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7612891097d4751617c396cdd7a092833799147","date":1600707827,"type":4,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#protectConfigsHandler().mjava","sourceNew":null,"sourceOld":"  private void protectConfigsHandler() throws Exception {\n    String authcPrefix = \"/admin/authentication\";\n    String authzPrefix = \"/admin/authorization\";\n\n    String securityJson = \"{\\n\" +\n        \"  'authentication':{\\n\" +\n        \"    'class':'solr.BasicAuthPlugin',\\n\" +\n        \"    'blockUnknown': false,\\n\" +\n        \"    'credentials':{'solr':'orwp2Ghgj39lmnrZOTm7Qtre1VqHFDfwAEzr0ApbN3Y= Ju5osoAqOX8iafhWpPP01E5P+sg8tK8tHON7rCYZRRw='}},\\n\" +\n        \"  'authorization':{\\n\" +\n        \"    'class':'solr.RuleBasedAuthorizationPlugin',\\n\" +\n        \"    'user-role':{'solr':'admin'},\\n\" +\n        \"    'permissions':[{'name':'security-edit','role':'admin'}, {'name':'config-edit','role':'admin'}]}}\";\n\n    HttpClient cl = null;\n    try {\n      cl = HttpClientUtil.createClient(null);\n      JettySolrRunner randomJetty = solrCluster.getRandomJetty(random());\n      String baseUrl = randomJetty.getBaseUrl().toString();\n\n      zkClient().setData(\"/security.json\", securityJson.replaceAll(\"'\", \"\\\"\").getBytes(UTF_8), true);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authcPrefix, \"authentication/class\", \"solr.BasicAuthPlugin\", 50);\n      BasicAuthIntegrationTest.verifySecurityStatus(cl, baseUrl + authzPrefix, \"authorization/class\", \"solr.RuleBasedAuthorizationPlugin\", 50);\n    } finally {\n      if (cl != null) {\n        HttpClientUtil.close(cl);\n      }\n    }\n    Thread.sleep(1000); // TODO: Without a delay, the test fails. Some problem with Authc/Authz framework?\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"c7612891097d4751617c396cdd7a092833799147":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"917e62f3497c83634a13edd833e8e21dd6cc6496":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd":["917e62f3497c83634a13edd833e8e21dd6cc6496"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3732e34f27916e98704736cc6924a34fffca249a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7612891097d4751617c396cdd7a092833799147"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"c7612891097d4751617c396cdd7a092833799147":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"917e62f3497c83634a13edd833e8e21dd6cc6496":["5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd"],"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd":["df724d84dab24a0cc54bec95a8680867adc7f171","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["917e62f3497c83634a13edd833e8e21dd6cc6496","3732e34f27916e98704736cc6924a34fffca249a"],"3732e34f27916e98704736cc6924a34fffca249a":[],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","c7612891097d4751617c396cdd7a092833799147"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","3732e34f27916e98704736cc6924a34fffca249a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}