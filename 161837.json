{"path":"src/java/org/apache/solr/util/SolrPluginUtils#setDefaults(SolrQueryRequest,SolrParams,SolrParams,SolrParams).mjava","commits":[{"id":"48f9527d950de8054d6fd72b138e94bc70fd63b4","date":1158101406,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#setDefaults(SolrQueryRequest,SolrParams,SolrParams,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set default-ish params on a SolrQueryRequest.\n   *\n   * RequestHandlers can use this method to ensure their defaults and\n   * overrides are visible to other components such as the response writer\n   *\n   * @param req The request whose params we are interested i\n   * @param defaults values to be used if no values are specified in the request params\n   * @param appends values to be appended to those from the request (or defaults) when dealing with multi-val params, or treated as another layer of defaults for singl-val params.\n   * @param invariants values which will be used instead of any request, or default values, regardless of context.\n   */\n  public static void setDefaults(SolrQueryRequest req, SolrParams defaults,\n                                 SolrParams appends, SolrParams invariants) {\n    \n      SolrParams p = req.getParams();\n      if (defaults != null) {\n        p = new DefaultSolrParams(p,defaults);\n      }\n      if (appends != null) {\n        p = new AppendedSolrParams(p,appends);\n      }\n      if (invariants != null) {\n        p = new DefaultSolrParams(invariants,p);\n      }\n      req.setParams(p);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#setDefaults(SolrQueryRequest,SolrParams,SolrParams,SolrParams).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#setDefaults(SolrQueryRequest,SolrParams,SolrParams,SolrParams).mjava","sourceNew":"  /**\n   * Set default-ish params on a SolrQueryRequest.\n   *\n   * RequestHandlers can use this method to ensure their defaults and\n   * overrides are visible to other components such as the response writer\n   *\n   * @param req The request whose params we are interested i\n   * @param defaults values to be used if no values are specified in the request params\n   * @param appends values to be appended to those from the request (or defaults) when dealing with multi-val params, or treated as another layer of defaults for singl-val params.\n   * @param invariants values which will be used instead of any request, or default values, regardless of context.\n   */\n  public static void setDefaults(SolrQueryRequest req, SolrParams defaults,\n                                 SolrParams appends, SolrParams invariants) {\n    \n      SolrParams p = req.getParams();\n      if (defaults != null) {\n        p = new DefaultSolrParams(p,defaults);\n      }\n      if (appends != null) {\n        p = new AppendedSolrParams(p,appends);\n      }\n      if (invariants != null) {\n        p = new DefaultSolrParams(invariants,p);\n      }\n      req.setParams(p);\n  }\n\n","sourceOld":"  /**\n   * Set default-ish params on a SolrQueryRequest.\n   *\n   * RequestHandlers can use this method to ensure their defaults and\n   * overrides are visible to other components such as the response writer\n   *\n   * @param req The request whose params we are interested i\n   * @param defaults values to be used if no values are specified in the request params\n   * @param appends values to be appended to those from the request (or defaults) when dealing with multi-val params, or treated as another layer of defaults for singl-val params.\n   * @param invariants values which will be used instead of any request, or default values, regardless of context.\n   */\n  public static void setDefaults(SolrQueryRequest req, SolrParams defaults,\n                                 SolrParams appends, SolrParams invariants) {\n    \n      SolrParams p = req.getParams();\n      if (defaults != null) {\n        p = new DefaultSolrParams(p,defaults);\n      }\n      if (appends != null) {\n        p = new AppendedSolrParams(p,appends);\n      }\n      if (invariants != null) {\n        p = new DefaultSolrParams(invariants,p);\n      }\n      req.setParams(p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["48f9527d950de8054d6fd72b138e94bc70fd63b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"48f9527d950de8054d6fd72b138e94bc70fd63b4":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["48f9527d950de8054d6fd72b138e94bc70fd63b4"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"48f9527d950de8054d6fd72b138e94bc70fd63b4":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}