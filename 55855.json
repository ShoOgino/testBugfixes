{"path":"src/java/org/apache/solr/util/SimplePostTool#postFile(File,Writer).mjava","commits":[{"id":"196a576c5807672fc9ec3fd6db6311bf919bab9c","date":1171834203,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SimplePostTool#postFile(File,Writer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Opens the file and posts it's contents to the solrUrl,\n   * writes to response to output.\n   */\n  public void postFile(File file, Writer output) \n    throws FileNotFoundException {\n\n    FileReader reader = new FileReader(file);\n    try {\n      postData(reader, output);\n    } finally {\n      try {\n        if(reader!=null) reader.close();\n      } catch (IOException e) {\n        throw new PostException(\"IOException while closing file\", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cfe3401d40bbcb55bb7043293a3432ff85dace5f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cfe3401d40bbcb55bb7043293a3432ff85dace5f","date":1174469362,"type":3,"author":"Bertrand Delacretaz","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SimplePostTool#postFile(File,Writer).mjava","pathOld":"src/java/org/apache/solr/util/SimplePostTool#postFile(File,Writer).mjava","sourceNew":"  /**\n   * Opens the file and posts it's contents to the solrUrl,\n   * writes to response to output.\n   * @throws UnsupportedEncodingException \n   */\n  public void postFile(File file, Writer output) \n    throws FileNotFoundException, UnsupportedEncodingException {\n\n    // FIXME; use a real XML parser to read files, so as to support various encodings\n    // (and we can only post well-formed XML anyway)\n    Reader reader = new InputStreamReader(new FileInputStream(file),POST_ENCODING);\n    try {\n      postData(reader, output);\n    } finally {\n      try {\n        if(reader!=null) reader.close();\n      } catch (IOException e) {\n        throw new PostException(\"IOException while closing file\", e);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Opens the file and posts it's contents to the solrUrl,\n   * writes to response to output.\n   */\n  public void postFile(File file, Writer output) \n    throws FileNotFoundException {\n\n    FileReader reader = new FileReader(file);\n    try {\n      postData(reader, output);\n    } finally {\n      try {\n        if(reader!=null) reader.close();\n      } catch (IOException e) {\n        throw new PostException(\"IOException while closing file\", e);\n      }\n    }\n  }\n\n","bugFix":["196a576c5807672fc9ec3fd6db6311bf919bab9c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SimplePostTool#postFile(File,Writer).mjava","pathOld":"src/java/org/apache/solr/util/SimplePostTool#postFile(File,Writer).mjava","sourceNew":"  /**\n   * Opens the file and posts it's contents to the solrUrl,\n   * writes to response to output.\n   * @throws UnsupportedEncodingException \n   */\n  public void postFile(File file, Writer output) \n    throws FileNotFoundException, UnsupportedEncodingException {\n\n    // FIXME; use a real XML parser to read files, so as to support various encodings\n    // (and we can only post well-formed XML anyway)\n    Reader reader = new InputStreamReader(new FileInputStream(file),POST_ENCODING);\n    try {\n      postData(reader, output);\n    } finally {\n      try {\n        if(reader!=null) reader.close();\n      } catch (IOException e) {\n        throw new PostException(\"IOException while closing file\", e);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Opens the file and posts it's contents to the solrUrl,\n   * writes to response to output.\n   * @throws UnsupportedEncodingException \n   */\n  public void postFile(File file, Writer output) \n    throws FileNotFoundException, UnsupportedEncodingException {\n\n    // FIXME; use a real XML parser to read files, so as to support various encodings\n    // (and we can only post well-formed XML anyway)\n    Reader reader = new InputStreamReader(new FileInputStream(file),POST_ENCODING);\n    try {\n      postData(reader, output);\n    } finally {\n      try {\n        if(reader!=null) reader.close();\n      } catch (IOException e) {\n        throw new PostException(\"IOException while closing file\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"196a576c5807672fc9ec3fd6db6311bf919bab9c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cfe3401d40bbcb55bb7043293a3432ff85dace5f":["196a576c5807672fc9ec3fd6db6311bf919bab9c"],"ad94625fb8d088209f46650c8097196fec67f00c":["cfe3401d40bbcb55bb7043293a3432ff85dace5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"196a576c5807672fc9ec3fd6db6311bf919bab9c":["cfe3401d40bbcb55bb7043293a3432ff85dace5f"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["196a576c5807672fc9ec3fd6db6311bf919bab9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cfe3401d40bbcb55bb7043293a3432ff85dace5f":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}