{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\");\n    } else {\n      // turn off faceting on other requests\n      sreq.params.remove(\"json.facet\");\n      sreq.params.remove(FACET_STATE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\");\n    } else {\n      // turn off faceting on other requests\n      sreq.params.remove(\"json.facet\");\n      sreq.params.remove(FACET_STATE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1931d98b40b01d5075753b197c2461a5c2652689","date":1471971289,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\"); // The presence of FACET_STATE (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n      sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_STATE really control the faceting\n      sreq.params.remove(FACET_STATE);\n       **/\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\");\n    } else {\n      // turn off faceting on other requests\n      sreq.params.remove(\"json.facet\");\n      sreq.params.remove(FACET_STATE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\"); // The presence of FACET_STATE (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n      sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_STATE really control the faceting\n      sreq.params.remove(FACET_STATE);\n       **/\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\");\n    } else {\n      // turn off faceting on other requests\n      sreq.params.remove(\"json.facet\");\n      sreq.params.remove(FACET_STATE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\"); // The presence of FACET_STATE (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n      sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_STATE really control the faceting\n      sreq.params.remove(FACET_STATE);\n       **/\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\");\n    } else {\n      // turn off faceting on other requests\n      sreq.params.remove(\"json.facet\");\n      sreq.params.remove(FACET_STATE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ec805ca8fedc0166461148c7182f1bcbbd18ee1","date":1489767223,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_INFO, \"{}\"); // The presence of FACET_INFO (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n      sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_INFO really control the faceting\n      sreq.params.remove(FACET_INFO);\n       **/\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\"); // The presence of FACET_STATE (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n      sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_STATE really control the faceting\n      sreq.params.remove(FACET_STATE);\n       **/\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11ab475c994c79138885cc8a30b2641d929cdc43","date":1490280010,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_INFO, \"{}\"); // The presence of FACET_INFO (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n      sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_INFO really control the faceting\n      sreq.params.remove(FACET_INFO);\n       **/\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_STATE, \"{}\"); // The presence of FACET_STATE (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n      sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_STATE really control the faceting\n      sreq.params.remove(FACET_STATE);\n       **/\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetModule#modifyRequest(ResponseBuilder,SearchComponent,ShardRequest).mjava","sourceNew":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who, ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_INFO, \"{}\"); // The presence of FACET_INFO (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n       sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_INFO really control the faceting\n       sreq.params.remove(FACET_INFO);\n       **/\n    }\n  }\n\n","sourceOld":"  @Override\n  public void modifyRequest(ResponseBuilder rb, SearchComponent who,ShardRequest sreq) {\n    FacetComponentState facetState = getFacetComponentState(rb);\n    if (facetState == null) return;\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      sreq.purpose |= FacetModule.PURPOSE_GET_JSON_FACETS;\n      sreq.params.set(FACET_INFO, \"{}\"); // The presence of FACET_INFO (_facet_) turns on json faceting\n    } else {\n      // turn off faceting on other requests\n      /*** distributedProcess will need to use other requests for refinement\n      sreq.params.remove(\"json.facet\");  // this just saves space... the presence of FACET_INFO really control the faceting\n      sreq.params.remove(FACET_INFO);\n       **/\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["8ec805ca8fedc0166461148c7182f1bcbbd18ee1"],"11ab475c994c79138885cc8a30b2641d929cdc43":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1931d98b40b01d5075753b197c2461a5c2652689":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"8ec805ca8fedc0166461148c7182f1bcbbd18ee1":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","1931d98b40b01d5075753b197c2461a5c2652689"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11ab475c994c79138885cc8a30b2641d929cdc43":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1931d98b40b01d5075753b197c2461a5c2652689","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1931d98b40b01d5075753b197c2461a5c2652689":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"8ec805ca8fedc0166461148c7182f1bcbbd18ee1":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["11ab475c994c79138885cc8a30b2641d929cdc43","8ec805ca8fedc0166461148c7182f1bcbbd18ee1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","11ab475c994c79138885cc8a30b2641d929cdc43","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}