{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testBadAddIndexes().mjava","commits":[{"id":"6e22133c22c69a013e8c3c14bb986e7848c7296e","date":1537859647,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testBadAddIndexes().mjava","pathOld":"/dev/null","sourceNew":"  public void testBadAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    IndexWriterConfig iwc1 = newIndexWriterConfig();\n    iwc1.setIndexSort(indexSort);\n    IndexWriter w = new IndexWriter(dir, iwc1);\n    w.addDocument(new Document());\n    List<Sort> indexSorts = Arrays.asList(null, new Sort(new SortField(\"bar\", SortField.Type.LONG)));\n    for (Sort sort : indexSorts) {\n      Directory dir2 = newDirectory();\n      IndexWriterConfig iwc2 = newIndexWriterConfig();\n      if (sort != null) {\n        iwc2.setIndexSort(sort);\n      }\n      IndexWriter w2 = new IndexWriter(dir2, iwc2);\n      w2.addDocument(new Document());\n      final IndexReader reader = w2.getReader();\n      w2.close();\n      IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> w.addIndexes(dir2));\n      assertThat(expected.getMessage(), containsString(\"cannot change index sort\"));\n      CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n      for (int i = 0; i < codecReaders.length; ++i) {\n        codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n      }\n      expected = expectThrows(IllegalArgumentException.class, () -> w.addIndexes(codecReaders));\n      assertThat(expected.getMessage(), containsString(\"cannot change index sort\"));\n\n      reader.close();\n      dir2.close();\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6e22133c22c69a013e8c3c14bb986e7848c7296e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e22133c22c69a013e8c3c14bb986e7848c7296e"]},"commit2Childs":{"6e22133c22c69a013e8c3c14bb986e7848c7296e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e22133c22c69a013e8c3c14bb986e7848c7296e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}