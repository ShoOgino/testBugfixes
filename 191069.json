{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ENGLISH,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ENGLISH,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ENGLISH,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ENGLISH,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ENGLISH,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ENGLISH,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.SortInfo#toString().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.SortInfo#toString().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["2acf500f78aa12b92e371fd89c719291986b6b90","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"46d8ada1fff8d18cb197c38c7983225162599948":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["d4d69c535930b5cce125cff868d40f6373dc27d4","fe33227f6805edab2036cbb80645cc4e2d1fa424","847d1294c8ff2f0172af20892ef98a1c6a952e09","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}