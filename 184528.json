{"path":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","commits":[{"id":"eeddcf8e42f213f1b4499194c6f014554e1a22ef","date":1242729902,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"/dev/null","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          PrintWriter out = response.getWriter();\n          responseWriter.write(out, solrReq, solrRsp);\n\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bdecc35cd68be360c5ba1bf003e2136a68ea3054","6a617b59fd276a5d672bc7269a3d2108331d1bdd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#writeResponse(SolrQueryResponse,ServletResponse,QueryResponseWriter,SolrQueryRequest,Method).mjava","sourceNew":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          PrintWriter out = response.getWriter();\n          responseWriter.write(out, solrReq, solrRsp);\n\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","sourceOld":"  private void writeResponse(SolrQueryResponse solrRsp, ServletResponse response,\n                             QueryResponseWriter responseWriter, SolrQueryRequest solrReq, Method reqMethod)\n          throws IOException {\n    if (solrRsp.getException() != null) {\n      sendError((HttpServletResponse) response, solrRsp.getException());\n    } else {\n      // Now write it out\n      response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n      if (Method.HEAD != reqMethod) {\n        if (responseWriter instanceof BinaryQueryResponseWriter) {\n          BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;\n          binWriter.write(response.getOutputStream(), solrReq, solrRsp);\n        } else {\n          PrintWriter out = response.getWriter();\n          responseWriter.write(out, solrReq, solrRsp);\n\n        }\n      }\n      //else http HEAD request, nothing to write out, waited this long just to get ContentType\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["eeddcf8e42f213f1b4499194c6f014554e1a22ef"],"eeddcf8e42f213f1b4499194c6f014554e1a22ef":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["eeddcf8e42f213f1b4499194c6f014554e1a22ef"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"eeddcf8e42f213f1b4499194c6f014554e1a22ef":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}