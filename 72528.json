{"path":"modules/analysis/uima/src/test/org/apache/lucene/analysis/uima/an/SampleWSTokenizerAnnotator#process(JCas).mjava","commits":[{"id":"c717a601fb905424e3846ac811b33f1500096a7e","date":1329311877,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"modules/analysis/uima/src/test/org/apache/lucene/analysis/uima/an/SampleWSTokenizerAnnotator#process(JCas).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void process(JCas jCas) throws AnalysisEngineProcessException {\n    Type sentenceType = jCas.getCas().getTypeSystem().getType(SENTENCE_TYPE);\n    Type tokenType = jCas.getCas().getTypeSystem().getType(TOKEN_TYPE);\n    int i = 0;\n    for (String sentenceString : jCas.getDocumentText().split(CR)) {\n      // add the sentence\n      AnnotationFS sentenceAnnotation = jCas.getCas().createAnnotation(sentenceType, i, sentenceString.length());\n      jCas.addFsToIndexes(sentenceAnnotation);\n      i += sentenceString.length();\n    }\n\n    // get tokens\n    int j = 0;\n    for (String tokenString : jCas.getDocumentText().split(WHITESPACE)) {\n      int tokenLength = tokenString.length();\n      AnnotationFS tokenAnnotation = jCas.getCas().createAnnotation(tokenType, j, j + tokenLength);\n      jCas.addFsToIndexes(tokenAnnotation);\n      j += tokenLength;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/an/SampleWSTokenizerAnnotator#process(JCas).mjava","pathOld":"modules/analysis/uima/src/test/org/apache/lucene/analysis/uima/an/SampleWSTokenizerAnnotator#process(JCas).mjava","sourceNew":"  @Override\n  public void process(JCas jCas) throws AnalysisEngineProcessException {\n    Type sentenceType = jCas.getCas().getTypeSystem().getType(SENTENCE_TYPE);\n    Type tokenType = jCas.getCas().getTypeSystem().getType(TOKEN_TYPE);\n    int i = 0;\n    for (String sentenceString : jCas.getDocumentText().split(CR)) {\n      // add the sentence\n      AnnotationFS sentenceAnnotation = jCas.getCas().createAnnotation(sentenceType, i, sentenceString.length());\n      jCas.addFsToIndexes(sentenceAnnotation);\n      i += sentenceString.length();\n    }\n\n    // get tokens\n    int j = 0;\n    for (String tokenString : jCas.getDocumentText().split(WHITESPACE)) {\n      int tokenLength = tokenString.length();\n      AnnotationFS tokenAnnotation = jCas.getCas().createAnnotation(tokenType, j, j + tokenLength);\n      jCas.addFsToIndexes(tokenAnnotation);\n      j += tokenLength;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(JCas jCas) throws AnalysisEngineProcessException {\n    Type sentenceType = jCas.getCas().getTypeSystem().getType(SENTENCE_TYPE);\n    Type tokenType = jCas.getCas().getTypeSystem().getType(TOKEN_TYPE);\n    int i = 0;\n    for (String sentenceString : jCas.getDocumentText().split(CR)) {\n      // add the sentence\n      AnnotationFS sentenceAnnotation = jCas.getCas().createAnnotation(sentenceType, i, sentenceString.length());\n      jCas.addFsToIndexes(sentenceAnnotation);\n      i += sentenceString.length();\n    }\n\n    // get tokens\n    int j = 0;\n    for (String tokenString : jCas.getDocumentText().split(WHITESPACE)) {\n      int tokenLength = tokenString.length();\n      AnnotationFS tokenAnnotation = jCas.getCas().createAnnotation(tokenType, j, j + tokenLength);\n      jCas.addFsToIndexes(tokenAnnotation);\n      j += tokenLength;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c717a601fb905424e3846ac811b33f1500096a7e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c717a601fb905424e3846ac811b33f1500096a7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c717a601fb905424e3846ac811b33f1500096a7e"],"c717a601fb905424e3846ac811b33f1500096a7e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}