{"path":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#setUp().mjava","commits":[{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n\n    for (int i = 0; i < docs.length; i++) {\n      Document d = new Document();\n      FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setIndexed(false);\n      d.add(newField(FIELD_ID, Integer.toString(i), ft));\n      d.add(newField(FIELD_BODY, docs[i], TextField.TYPE_STORED));\n      writer.addDocument(d);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    \n    sims = new ArrayList<SimilarityBase>();\n    for (BasicModel basicModel : BASIC_MODELS) {\n      for (AfterEffect afterEffect : AFTER_EFFECTS) {\n        for (Normalization normalization : NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : DISTRIBUTIONS) {\n      for (Lambda lambda : LAMBDAS) {\n        for (Normalization normalization : NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n\n    for (int i = 0; i < docs.length; i++) {\n      Document d = new Document();\n      FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setIndexed(false);\n      d.add(newField(FIELD_ID, Integer.toString(i), ft));\n      d.add(newField(FIELD_BODY, docs[i], TextField.TYPE_STORED));\n      writer.addDocument(d);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    \n    sims = new ArrayList<SimilarityBase>();\n    for (BasicModel basicModel : BASIC_MODELS) {\n      for (AfterEffect afterEffect : AFTER_EFFECTS) {\n        for (Normalization normalization : NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : DISTRIBUTIONS) {\n      for (Lambda lambda : LAMBDAS) {\n        for (Normalization normalization : NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n\n    for (int i = 0; i < docs.length; i++) {\n      Document d = new Document();\n      FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setIndexed(false);\n      d.add(newField(FIELD_ID, Integer.toString(i), ft));\n      d.add(newField(FIELD_BODY, docs[i], TextField.TYPE_STORED));\n      writer.addDocument(d);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    \n    sims = new ArrayList<SimilarityBase>();\n    for (BasicModel basicModel : BASIC_MODELS) {\n      for (AfterEffect afterEffect : AFTER_EFFECTS) {\n        for (Normalization normalization : NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : DISTRIBUTIONS) {\n      for (Lambda lambda : LAMBDAS) {\n        for (Normalization normalization : NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}