{"path":"solr/core/src/test/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/BlockPoolSlice#addToReplicasMap(ReplicaMap,File,RamDiskReplicaTracker,boolean,List[IOException],Queue[RecursiveAction]).mjava","commits":[{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/BlockPoolSlice#addToReplicasMap(ReplicaMap,File,RamDiskReplicaTracker,boolean,List[IOException],Queue[RecursiveAction]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add replicas under the given directory to the volume map\n   * @param volumeMap the replicas map\n   * @param dir an input directory\n   * @param lazyWriteReplicaMap Map of replicas on transient\n   *                                storage.\n   * @param isFinalized true if the directory has finalized replicas;\n   *                    false if the directory has rbw replicas\n   * @param exceptions list of exception which need to return to parent thread.\n   * @param subTaskQueue queue of sub tasks\n   */\n  void addToReplicasMap(ReplicaMap volumeMap, File dir,\n                        final RamDiskReplicaTracker lazyWriteReplicaMap, boolean isFinalized,\n                        List<IOException> exceptions, Queue<RecursiveAction> subTaskQueue)\n      throws IOException {\n    File[] files = fileIoProvider.listFiles(volume, dir);\n    Arrays.sort(files, FILE_COMPARATOR);\n    for (int i = 0; i < files.length; i++) {\n      File file = files[i];\n      if (file.isDirectory()) {\n        // Launch new sub task.\n        AddReplicaProcessor subTask = new AddReplicaProcessor(volumeMap, file,\n            lazyWriteReplicaMap, isFinalized, exceptions, subTaskQueue);\n        subTask.fork();\n        subTaskQueue.add(subTask);\n      }\n\n      if (isFinalized && FsDatasetUtil.isUnlinkTmpFile(file)) {\n        file = recoverTempUnlinkedBlock(file);\n        if (file == null) { // the original block still exists, so we cover it\n          // in another iteration and can continue here\n          continue;\n        }\n      }\n      if (!Block.isBlockFilename(file)) {\n        continue;\n      }\n\n      long genStamp = FsDatasetUtil.getGenerationStampFromFile(\n          files, file, i);\n      long blockId = Block.filename2id(file.getName());\n      Block block = new Block(blockId, file.length(), genStamp);\n      addReplicaToReplicasMap(block, volumeMap, lazyWriteReplicaMap,\n          isFinalized);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44ca189138a5b6e1989d12ab992fab60e235ddc7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}