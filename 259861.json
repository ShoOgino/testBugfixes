{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","commits":[{"id":"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd","date":1340946597,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Check if the arguments make sense -- throw an exception if not\n   */\n  public void validate() throws InvalidSpatialArgument {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new InvalidSpatialArgument(operation + \" only supports geometry with area\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"147a814c4b009f0a613263ddea933f231804c47b","date":1341285543,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","sourceNew":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws InvalidSpatialArgument {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new InvalidSpatialArgument(operation + \" only supports geometry with area\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Check if the arguments make sense -- throw an exception if not\n   */\n  public void validate() throws InvalidSpatialArgument {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new InvalidSpatialArgument(operation + \" only supports geometry with area\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","pathOld":"/dev/null","sourceNew":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws InvalidSpatialArgument {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new InvalidSpatialArgument(operation + \" only supports geometry with area\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da956410d7a790f567af4e7e94584fb0930212f2","date":1346859431,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","sourceNew":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new IllegalArgumentException(operation + \" only supports geometry with area\");\n    }\n  }\n\n","sourceOld":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws InvalidSpatialArgument {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new InvalidSpatialArgument(operation + \" only supports geometry with area\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e2410e27320f6aaba450cbf500d7822baf642f8","date":1347075066,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","sourceNew":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new IllegalArgumentException(operation + \" only supports geometry with area\");\n    }\n    if (distErr != null && distErrPct != null)\n      throw new IllegalArgumentException(\"Only distErr or distErrPct can be specified.\");\n  }\n\n","sourceOld":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new IllegalArgumentException(operation + \" only supports geometry with area\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64ffac52d9812c94cca5f3a3a980f074839c732f","date":1404849022,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","sourceNew":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (distErr != null && distErrPct != null)\n      throw new IllegalArgumentException(\"Only distErr or distErrPct can be specified.\");\n  }\n\n","sourceOld":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (operation.isTargetNeedsArea() && !shape.hasArea()) {\n      throw new IllegalArgumentException(operation + \" only supports geometry with area\");\n    }\n    if (distErr != null && distErrPct != null)\n      throw new IllegalArgumentException(\"Only distErr or distErrPct can be specified.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","sourceNew":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (distErr != null && distErrPct != null)\n      throw new IllegalArgumentException(\"Only distErr or distErrPct can be specified.\");\n  }\n\n","sourceOld":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (distErr != null && distErrPct != null)\n      throw new IllegalArgumentException(\"Only distErr or distErrPct can be specified.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#validate().mjava","sourceNew":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (distErr != null && distErrPct != null)\n      throw new IllegalArgumentException(\"Only distErr or distErrPct can be specified.\");\n  }\n\n","sourceOld":"  /** Check if the arguments make sense -- throw an exception if not */\n  public void validate() throws IllegalArgumentException {\n    if (distErr != null && distErrPct != null)\n      throw new IllegalArgumentException(\"Only distErr or distErrPct can be specified.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6e2410e27320f6aaba450cbf500d7822baf642f8":["da956410d7a790f567af4e7e94584fb0930212f2"],"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"af2638813028b254a88b418ebeafb541afb49653":["64ffac52d9812c94cca5f3a3a980f074839c732f","112d77ac8d3e10a362516ad834c9a11d35c94234"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","147a814c4b009f0a613263ddea933f231804c47b"],"da956410d7a790f567af4e7e94584fb0930212f2":["147a814c4b009f0a613263ddea933f231804c47b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["64ffac52d9812c94cca5f3a3a980f074839c732f"],"64ffac52d9812c94cca5f3a3a980f074839c732f":["6e2410e27320f6aaba450cbf500d7822baf642f8"],"147a814c4b009f0a613263ddea933f231804c47b":["ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"6e2410e27320f6aaba450cbf500d7822baf642f8":["64ffac52d9812c94cca5f3a3a980f074839c732f"],"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd":["147a814c4b009f0a613263ddea933f231804c47b"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"da956410d7a790f567af4e7e94584fb0930212f2":["6e2410e27320f6aaba450cbf500d7822baf642f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"64ffac52d9812c94cca5f3a3a980f074839c732f":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"147a814c4b009f0a613263ddea933f231804c47b":["fe33227f6805edab2036cbb80645cc4e2d1fa424","da956410d7a790f567af4e7e94584fb0930212f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}