{"path":"backwards/src/java/org/apache/lucene/search/BooleanScorer2#countingDisjunctionSumScorer(List[Scorer],int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/BooleanScorer2#countingDisjunctionSumScorer(List[Scorer],int).mjava","pathOld":"/dev/null","sourceNew":"  private Scorer countingDisjunctionSumScorer(final List<Scorer> scorers,\n      int minNrShouldMatch) throws IOException {\n    // each scorer from the list counted as a single matcher\n    return new DisjunctionSumScorer(scorers, minNrShouldMatch) {\n      private int lastScoredDoc = -1;\n      // Save the score of lastScoredDoc, so that we don't compute it more than\n      // once in score().\n      private float lastDocScore = Float.NaN;\n      @Override public float score() throws IOException {\n        int doc = docID();\n        if (doc >= lastScoredDoc) {\n          if (doc > lastScoredDoc) {\n            lastDocScore = super.score();\n            lastScoredDoc = doc;\n          }\n          coordinator.nrMatchers += super.nrMatchers;\n        }\n        return lastDocScore;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/BooleanScorer2#countingDisjunctionSumScorer(List[Scorer],int).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/BooleanScorer2#countingDisjunctionSumScorer(List[Scorer],int).mjava","sourceNew":"  private Scorer countingDisjunctionSumScorer(final List<Scorer> scorers,\n      int minNrShouldMatch) throws IOException {\n    // each scorer from the list counted as a single matcher\n    return new DisjunctionSumScorer(scorers, minNrShouldMatch) {\n      private int lastScoredDoc = -1;\n      // Save the score of lastScoredDoc, so that we don't compute it more than\n      // once in score().\n      private float lastDocScore = Float.NaN;\n      @Override public float score() throws IOException {\n        int doc = docID();\n        if (doc >= lastScoredDoc) {\n          if (doc > lastScoredDoc) {\n            lastDocScore = super.score();\n            lastScoredDoc = doc;\n          }\n          coordinator.nrMatchers += super.nrMatchers;\n        }\n        return lastDocScore;\n      }\n    };\n  }\n\n","sourceOld":"  private Scorer countingDisjunctionSumScorer(final List<Scorer> scorers,\n      int minNrShouldMatch) throws IOException {\n    // each scorer from the list counted as a single matcher\n    return new DisjunctionSumScorer(scorers, minNrShouldMatch) {\n      private int lastScoredDoc = -1;\n      // Save the score of lastScoredDoc, so that we don't compute it more than\n      // once in score().\n      private float lastDocScore = Float.NaN;\n      @Override public float score() throws IOException {\n        int doc = docID();\n        if (doc >= lastScoredDoc) {\n          if (doc > lastScoredDoc) {\n            lastDocScore = super.score();\n            lastScoredDoc = doc;\n          }\n          coordinator.nrMatchers += super.nrMatchers;\n        }\n        return lastDocScore;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}