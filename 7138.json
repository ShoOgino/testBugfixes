{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/DocumentValueSourceDictionaryTest#testLongValuesSourceEmptyReader().mjava","commits":[{"id":"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382","date":1483789945,"type":2,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/DocumentValueSourceDictionaryTest#testLongValuesSourceEmptyReader().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/DocumentValueSourceDictionaryTest#testEmptyReader().mjava","sourceNew":"  @Test\n  public void testLongValuesSourceEmptyReader() throws IOException {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    // Make sure the index is created?\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new DocumentValueSourceDictionary(ir, FIELD_NAME, LongValuesSource.constant(10), PAYLOAD_FIELD_NAME);\n    InputIterator inputIterator = dictionary.getEntryIterator();\n\n    assertNull(inputIterator.next());\n    assertEquals(inputIterator.weight(), 0);\n    assertNull(inputIterator.payload());\n\n    IOUtils.close(ir, analyzer, dir);\n  }\n\n","sourceOld":"  @Test\n  public void testEmptyReader() throws IOException {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    // Make sure the index is created?\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new DocumentValueSourceDictionary(ir, FIELD_NAME,  new DoubleConstValueSource(10), PAYLOAD_FIELD_NAME);\n    InputIterator inputIterator = dictionary.getEntryIterator();\n\n    assertNull(inputIterator.next());\n    assertEquals(inputIterator.weight(), 0);\n    assertNull(inputIterator.payload());\n\n    IOUtils.close(ir, analyzer, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":2,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/DocumentValueSourceDictionaryTest#testLongValuesSourceEmptyReader().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/DocumentValueSourceDictionaryTest#testEmptyReader().mjava","sourceNew":"  @Test\n  public void testLongValuesSourceEmptyReader() throws IOException {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    // Make sure the index is created?\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new DocumentValueSourceDictionary(ir, FIELD_NAME, LongValuesSource.constant(10), PAYLOAD_FIELD_NAME);\n    InputIterator inputIterator = dictionary.getEntryIterator();\n\n    assertNull(inputIterator.next());\n    assertEquals(inputIterator.weight(), 0);\n    assertNull(inputIterator.payload());\n\n    IOUtils.close(ir, analyzer, dir);\n  }\n\n","sourceOld":"  @Test\n  public void testEmptyReader() throws IOException {\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwc = newIndexWriterConfig(analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    // Make sure the index is created?\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    writer.commit();\n    writer.close();\n    IndexReader ir = DirectoryReader.open(dir);\n    Dictionary dictionary = new DocumentValueSourceDictionary(ir, FIELD_NAME,  new DoubleConstValueSource(10), PAYLOAD_FIELD_NAME);\n    InputIterator inputIterator = dictionary.getEntryIterator();\n\n    assertNull(inputIterator.next());\n    assertEquals(inputIterator.weight(), 0);\n    assertNull(inputIterator.payload());\n\n    IOUtils.close(ir, analyzer, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7abbd4266bb36de7f2181eb6d9f3df3ea45ff382"],"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7abbd4266bb36de7f2181eb6d9f3df3ea45ff382"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","7abbd4266bb36de7f2181eb6d9f3df3ea45ff382"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"7abbd4266bb36de7f2181eb6d9f3df3ea45ff382":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}