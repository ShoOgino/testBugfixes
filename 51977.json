{"path":"lucene/sandbox/src/java/org/apache/lucene/util/GeoHashUtils#stringEncodeFromMortonLong(long,int).mjava","commits":[{"id":"11540ae0536f080714982c91b67e799273893920","date":1438423706,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/util/GeoHashUtils#stringEncodeFromMortonLong(long,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Encode to a geohash string at a given level from a morton long\n   */\n  public static final String stringEncodeFromMortonLong(long hashedVal, final int level) {\n    // bit twiddle to geohash (since geohash is a swapped (lon/lat) encoding)\n    hashedVal = BitUtil.flipFlop(hashedVal);\n\n    StringBuilder geoHash = new StringBuilder();\n    short precision = 0;\n    final short msf = (GeoUtils.BITS<<1)-5;\n    long mask = 31L<<msf;\n    do {\n      geoHash.append(BASE_32[(int)((mask & hashedVal)>>>(msf-(precision*5)))]);\n      // next 5 bits\n      mask >>>= 5;\n    } while (++precision < level);\n    return geoHash.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoHashUtils#stringEncodeFromMortonLong(long,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoHashUtils#stringEncodeFromMortonLong(long,int).mjava","sourceNew":"  /**\n   * Encode to a geohash string at a given level from a morton long\n   */\n  public static final String stringEncodeFromMortonLong(long hashedVal, final int level) {\n    // bit twiddle to geohash (since geohash is a swapped (lon/lat) encoding)\n    hashedVal = BitUtil.flipFlop(hashedVal);\n\n    StringBuilder geoHash = new StringBuilder();\n    short precision = 0;\n    final short msf = (GeoUtils.BITS<<1)-5;\n    long mask = 31L<<msf;\n    do {\n      geoHash.append(BASE_32[(int)((mask & hashedVal)>>>(msf-(precision*5)))]);\n      // next 5 bits\n      mask >>>= 5;\n    } while (++precision < level);\n    return geoHash.toString();\n  }\n\n","sourceOld":"  /**\n   * Encode to a geohash string at a given level from a morton long\n   */\n  public static final String stringEncodeFromMortonLong(long hashedVal, final int level) {\n    // bit twiddle to geohash (since geohash is a swapped (lon/lat) encoding)\n    hashedVal = BitUtil.flipFlop(hashedVal);\n\n    StringBuilder geoHash = new StringBuilder();\n    short precision = 0;\n    final short msf = (GeoUtils.BITS<<1)-5;\n    long mask = 31L<<msf;\n    do {\n      geoHash.append(BASE_32[(int)((mask & hashedVal)>>>(msf-(precision*5)))]);\n      // next 5 bits\n      mask >>>= 5;\n    } while (++precision < level);\n    return geoHash.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoHashUtils#stringEncodeFromMortonLong(long,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoHashUtils#stringEncodeFromMortonLong(long,int).mjava","sourceNew":"  /**\n   * Encode to a geohash string at a given level from a morton long\n   */\n  public static final String stringEncodeFromMortonLong(long hashedVal, final int level) {\n    // bit twiddle to geohash (since geohash is a swapped (lon/lat) encoding)\n    hashedVal = BitUtil.flipFlop(hashedVal);\n\n    StringBuilder geoHash = new StringBuilder();\n    short precision = 0;\n    final short msf = (GeoEncodingUtils.BITS<<1)-5;\n    long mask = 31L<<msf;\n    do {\n      geoHash.append(BASE_32[(int)((mask & hashedVal)>>>(msf-(precision*5)))]);\n      // next 5 bits\n      mask >>>= 5;\n    } while (++precision < level);\n    return geoHash.toString();\n  }\n\n","sourceOld":"  /**\n   * Encode to a geohash string at a given level from a morton long\n   */\n  public static final String stringEncodeFromMortonLong(long hashedVal, final int level) {\n    // bit twiddle to geohash (since geohash is a swapped (lon/lat) encoding)\n    hashedVal = BitUtil.flipFlop(hashedVal);\n\n    StringBuilder geoHash = new StringBuilder();\n    short precision = 0;\n    final short msf = (GeoUtils.BITS<<1)-5;\n    long mask = 31L<<msf;\n    do {\n      geoHash.append(BASE_32[(int)((mask & hashedVal)>>>(msf-(precision*5)))]);\n      // next 5 bits\n      mask >>>= 5;\n    } while (++precision < level);\n    return geoHash.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11540ae0536f080714982c91b67e799273893920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["11540ae0536f080714982c91b67e799273893920","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["11540ae0536f080714982c91b67e799273893920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"11540ae0536f080714982c91b67e799273893920":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11540ae0536f080714982c91b67e799273893920"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}