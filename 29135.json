{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","commits":[{"id":"fa4a466195c69a11a113b33adc90f9069031e54e","date":1477605536,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","pathOld":"/dev/null","sourceNew":"  private Object getter(Tuple tuple, Map.Entry<String, Class> field) {\n    Object val = tuple.get(field.getKey());\n    Class clazz = field.getValue();\n\n    if(clazz.equals(Double.class)) {\n      return val == null ? 0D : val;\n    }\n\n    if(clazz.equals(Long.class)) {\n      if(val == null) {\n        return 0L;\n      }\n      if(val instanceof Double) {\n        return this.getRealVal(val);\n      }\n      return val;\n    }\n\n    return val;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"612da0a0a2d5f4409da55729b9833e799f905ac5","date":1479142562,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","sourceNew":"  private Object getter(Tuple tuple, Map.Entry<String, Class> field) {\n    Object val = tuple.get(field.getKey());\n\n    if(val == null) {\n      return null;\n    }\n\n    Class clazz = field.getValue();\n    if(clazz.equals(Long.class)) {\n      if(val instanceof Double) {\n        return this.getRealVal(val);\n      }\n      return val;\n    }\n\n    return val;\n  }\n\n","sourceOld":"  private Object getter(Tuple tuple, Map.Entry<String, Class> field) {\n    Object val = tuple.get(field.getKey());\n    Class clazz = field.getValue();\n\n    if(clazz.equals(Double.class)) {\n      return val == null ? 0D : val;\n    }\n\n    if(clazz.equals(Long.class)) {\n      if(val == null) {\n        return 0L;\n      }\n      if(val instanceof Double) {\n        return this.getRealVal(val);\n      }\n      return val;\n    }\n\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f20deebda1cf327549c84cb60464135abd31c71","date":1487004368,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","sourceNew":"  private Object getter(Tuple tuple, Map.Entry<String, Class> field) {\n    Object val = tuple.get(field.getKey());\n\n    if(val == null) {\n      return null;\n    }\n\n    Class clazz = field.getValue();\n    if(clazz.equals(Long.class)) {\n      if(val instanceof Double) {\n        return this.getRealVal(val);\n      }\n      return val;\n    }\n\n    if(val instanceof ArrayList) {\n      ArrayList arrayList = (ArrayList) val;\n      StringBuilder buf = new StringBuilder();\n\n      for(Object o : arrayList) {\n        buf.append(sep);\n        buf.append(o.toString());\n      }\n      val = buf.toString();\n    }\n\n    return val;\n  }\n\n","sourceOld":"  private Object getter(Tuple tuple, Map.Entry<String, Class> field) {\n    Object val = tuple.get(field.getKey());\n\n    if(val == null) {\n      return null;\n    }\n\n    Class clazz = field.getValue();\n    if(clazz.equals(Long.class)) {\n      if(val instanceof Double) {\n        return this.getRealVal(val);\n      }\n      return val;\n    }\n\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":0,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","pathOld":"/dev/null","sourceNew":"  private Object getter(Tuple tuple, Map.Entry<String, Class> field) {\n    Object val = tuple.get(field.getKey());\n\n    if(val == null) {\n      return null;\n    }\n\n    Class clazz = field.getValue();\n    if(clazz.equals(Long.class)) {\n      if(val instanceof Double) {\n        return this.getRealVal(val);\n      }\n      return val;\n    }\n\n    if(val instanceof ArrayList) {\n      ArrayList arrayList = (ArrayList) val;\n      StringBuilder buf = new StringBuilder();\n\n      for(Object o : arrayList) {\n        buf.append(sep);\n        buf.append(o.toString());\n      }\n      val = buf.toString();\n    }\n\n    return val;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8582f07e9350eaeb33bf6c4617b8c9895d99c839","date":1591307386,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getter(Tuple,Map.Entry[String,Class]).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  private Object getter(Tuple tuple, Map.Entry<String, Class> field) {\n    Object val = tuple.get(field.getKey());\n\n    if(val == null) {\n      return null;\n    }\n\n    Class clazz = field.getValue();\n    if(clazz.equals(Long.class)) {\n      if(val instanceof Double) {\n        return this.getRealVal(val);\n      }\n      return val;\n    }\n\n    if(val instanceof ArrayList) {\n      ArrayList arrayList = (ArrayList) val;\n      StringBuilder buf = new StringBuilder();\n\n      for(Object o : arrayList) {\n        buf.append(sep);\n        buf.append(o.toString());\n      }\n      val = buf.toString();\n    }\n\n    return val;\n  }\n\n","sourceOld":"  private Object getter(Tuple tuple, Map.Entry<String, Class> field) {\n    Object val = tuple.get(field.getKey());\n\n    if(val == null) {\n      return null;\n    }\n\n    Class clazz = field.getValue();\n    if(clazz.equals(Long.class)) {\n      if(val instanceof Double) {\n        return this.getRealVal(val);\n      }\n      return val;\n    }\n\n    if(val instanceof ArrayList) {\n      ArrayList arrayList = (ArrayList) val;\n      StringBuilder buf = new StringBuilder();\n\n      for(Object o : arrayList) {\n        buf.append(sep);\n        buf.append(o.toString());\n      }\n      val = buf.toString();\n    }\n\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"612da0a0a2d5f4409da55729b9833e799f905ac5":["fa4a466195c69a11a113b33adc90f9069031e54e"],"fa4a466195c69a11a113b33adc90f9069031e54e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3f20deebda1cf327549c84cb60464135abd31c71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f20deebda1cf327549c84cb60464135abd31c71":["612da0a0a2d5f4409da55729b9833e799f905ac5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"]},"commit2Childs":{"612da0a0a2d5f4409da55729b9833e799f905ac5":["3f20deebda1cf327549c84cb60464135abd31c71"],"fa4a466195c69a11a113b33adc90f9069031e54e":["612da0a0a2d5f4409da55729b9833e799f905ac5"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa4a466195c69a11a113b33adc90f9069031e54e","116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"3f20deebda1cf327549c84cb60464135abd31c71":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}