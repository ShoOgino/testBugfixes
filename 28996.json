{"path":"lucene/src/test/org/apache/lucene/search/TestSearchAfter#setUp().mjava","commits":[{"id":"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15","date":1316561169,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSearchAfter#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(200);\n    for (int i = 0; i < numDocs; i++) {\n      Document document = new Document();\n      document.add(newField(\"english\", English.intToEnglish(i), StringField.TYPE_UNSTORED));\n      document.add(newField(\"oddeven\", (i % 2 == 0) ? \"even\" : \"odd\", StringField.TYPE_UNSTORED));\n      iw.addDocument(document);\n    }\n    reader = iw.getReader();\n    iw.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45a51a576bac6b9947b098f823748652c7550ee4","date":1317054166,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSearchAfter#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSearchAfter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(200);\n    for (int i = 0; i < numDocs; i++) {\n      Document document = new Document();\n      document.add(newField(\"english\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      document.add(newField(\"oddeven\", (i % 2 == 0) ? \"even\" : \"odd\", TextField.TYPE_UNSTORED));\n      iw.addDocument(document);\n    }\n    reader = iw.getReader();\n    iw.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(200);\n    for (int i = 0; i < numDocs; i++) {\n      Document document = new Document();\n      document.add(newField(\"english\", English.intToEnglish(i), StringField.TYPE_UNSTORED));\n      document.add(newField(\"oddeven\", (i % 2 == 0) ? \"even\" : \"odd\", StringField.TYPE_UNSTORED));\n      iw.addDocument(document);\n    }\n    reader = iw.getReader();\n    iw.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSearchAfter#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSearchAfter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(200);\n    for (int i = 0; i < numDocs; i++) {\n      Document document = new Document();\n      document.add(newField(\"english\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      document.add(newField(\"oddeven\", (i % 2 == 0) ? \"even\" : \"odd\", TextField.TYPE_UNSTORED));\n      iw.addDocument(document);\n    }\n    reader = iw.getReader();\n    iw.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(200);\n    for (int i = 0; i < numDocs; i++) {\n      Document document = new Document();\n      document.add(newField(\"english\", English.intToEnglish(i), TextField.TYPE_UNSTORED));\n      document.add(newField(\"oddeven\", (i % 2 == 0) ? \"even\" : \"odd\", TextField.TYPE_UNSTORED));\n      iw.addDocument(document);\n    }\n    reader = iw.getReader();\n    iw.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["45a51a576bac6b9947b098f823748652c7550ee4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45a51a576bac6b9947b098f823748652c7550ee4":["c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15":["45a51a576bac6b9947b098f823748652c7550ee4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15"],"45a51a576bac6b9947b098f823748652c7550ee4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}