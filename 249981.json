{"path":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/association/AssociationsPayloadIterator#getAssociation(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/association/AssociationsPayloadIterator#getAssociation(int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/enhancements/association/AssociationsPayloadIterator#getAssociation(int).mjava","sourceNew":"  /**\n   * Get int association value for the given ordinal. <br>\n   * The return is either an int value casted as long if the ordinal has an\n   * associated value. Otherwise the returned value would be\n   * {@link #NO_ASSOCIATION} which is 'pure long' value (e.g not in the int\n   * range of values)\n   * \n   * @param ordinal\n   *            for which the association value is requested\n   * @return the associated int value (encapsulated in a long) if the ordinal\n   *         had an associated value, or {@link #NO_ASSOCIATION} otherwise\n   */\n  public long getAssociation(int ordinal) {\n    if (ordinalToAssociationMap.containsKey(ordinal)) {\n      return ordinalToAssociationMap.get(ordinal);\n    }\n\n    return NO_ASSOCIATION;\n  }\n\n","sourceOld":"  /**\n   * Get int association value for the given ordinal. <br>\n   * The return is either an int value casted as long if the ordinal has an\n   * associated value. Otherwise the returned value would be\n   * {@link #NO_ASSOCIATION} which is 'pure long' value (e.g not in the int\n   * range of values)\n   * \n   * @param ordinal\n   *            for which the association value is requested\n   * @return the associated int value (encapsulated in a long) if the ordinal\n   *         had an associated value, or {@link #NO_ASSOCIATION} otherwise\n   */\n  public long getAssociation(int ordinal) {\n    if (ordinalToAssociationMap.containsKey(ordinal)) {\n      return ordinalToAssociationMap.get(ordinal);\n    }\n\n    return NO_ASSOCIATION;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/association/AssociationsPayloadIterator#getAssociation(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Get int association value for the given ordinal. <br>\n   * The return is either an int value casted as long if the ordinal has an\n   * associated value. Otherwise the returned value would be\n   * {@link #NO_ASSOCIATION} which is 'pure long' value (e.g not in the int\n   * range of values)\n   * \n   * @param ordinal\n   *            for which the association value is requested\n   * @return the associated int value (encapsulated in a long) if the ordinal\n   *         had an associated value, or {@link #NO_ASSOCIATION} otherwise\n   */\n  public long getAssociation(int ordinal) {\n    if (ordinalToAssociationMap.containsKey(ordinal)) {\n      return ordinalToAssociationMap.get(ordinal);\n    }\n\n    return NO_ASSOCIATION;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/association/AssociationsPayloadIterator#getAssociation(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Get int association value for the given ordinal. <br>\n   * The return is either an int value casted as long if the ordinal has an\n   * associated value. Otherwise the returned value would be\n   * {@link #NO_ASSOCIATION} which is 'pure long' value (e.g not in the int\n   * range of values)\n   * \n   * @param ordinal\n   *            for which the association value is requested\n   * @return the associated int value (encapsulated in a long) if the ordinal\n   *         had an associated value, or {@link #NO_ASSOCIATION} otherwise\n   */\n  public long getAssociation(int ordinal) {\n    if (ordinalToAssociationMap.containsKey(ordinal)) {\n      return ordinalToAssociationMap.get(ordinal);\n    }\n\n    return NO_ASSOCIATION;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}