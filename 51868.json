{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell#sliceEquals(byte[],int,int,byte[],int,int).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell#sliceEquals(byte[],int,int,byte[],int,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell#sliceEquals(byte[],int,int,byte[],int,int).mjava","sourceNew":"  /** Copied from {@link org.apache.lucene.util.StringHelper#startsWith(BytesRef, BytesRef)}\n   *  which calls this. This is to avoid creating a BytesRef.  */\n  private static boolean sliceEquals(byte[] sliceToTest_bytes, int sliceToTest_offset, int sliceToTest_length,\n                                     byte[] other_bytes, int other_offset, int other_length) {\n    if (sliceToTest_length < other_length) {\n      return false;\n    }\n    int i = sliceToTest_offset;\n    int j = other_offset;\n    final int k = other_offset + other_length;\n\n    while (j < k) {\n      if (sliceToTest_bytes[i++] != other_bytes[j++]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  /** Copied from {@link org.apache.lucene.util.StringHelper#startsWith(BytesRef, BytesRef)}\n   *  which calls this. This is to avoid creating a BytesRef.  */\n  private static boolean sliceEquals(byte[] sliceToTest_bytes, int sliceToTest_offset, int sliceToTest_length,\n                                     byte[] other_bytes, int other_offset, int other_length) {\n    if (sliceToTest_length < other_length) {\n      return false;\n    }\n    int i = sliceToTest_offset;\n    int j = other_offset;\n    final int k = other_offset + other_length;\n\n    while (j < k) {\n      if (sliceToTest_bytes[i++] != other_bytes[j++]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell#sliceEquals(byte[],int,int,byte[],int,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell#sliceEquals(byte[],int,int,byte[],int,int).mjava","sourceNew":"  /** Copied from {@link org.apache.lucene.util.StringHelper#startsWith(BytesRef, BytesRef)}\n   *  which calls this. This is to avoid creating a BytesRef.  */\n  private static boolean sliceEquals(byte[] sliceToTest_bytes, int sliceToTest_offset, int sliceToTest_length,\n                                     byte[] other_bytes, int other_offset, int other_length) {\n    if (sliceToTest_length < other_length) {\n      return false;\n    }\n    int i = sliceToTest_offset;\n    int j = other_offset;\n    final int k = other_offset + other_length;\n\n    while (j < k) {\n      if (sliceToTest_bytes[i++] != other_bytes[j++]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  /** Copied from {@link org.apache.lucene.util.StringHelper#startsWith(BytesRef, BytesRef)}\n   *  which calls this. This is to avoid creating a BytesRef.  */\n  private static boolean sliceEquals(byte[] sliceToTest_bytes, int sliceToTest_offset, int sliceToTest_length,\n                                     byte[] other_bytes, int other_offset, int other_length) {\n    if (sliceToTest_length < other_length) {\n      return false;\n    }\n    int i = sliceToTest_offset;\n    int j = other_offset;\n    final int k = other_offset + other_length;\n\n    while (j < k) {\n      if (sliceToTest_bytes[i++] != other_bytes[j++]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}