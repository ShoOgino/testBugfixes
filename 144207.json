{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext]).mjava","commits":[{"id":"d4b6308fa66dc96de36abfae5d3e7c92c805e227","date":1432916588,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext]).mjava","pathOld":"/dev/null","sourceNew":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms) throws IOException {\n      this(matchWeight, searcher, terms, SpanCollectorFactory.NO_OP_FACTORY);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"485545da3b4429d6f138b4baac573a97820ee93b","date":1433876557,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext]).mjava","sourceNew":null,"sourceOld":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms) throws IOException {\n      this(matchWeight, searcher, terms, SpanCollectorFactory.NO_OP_FACTORY);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29aea3139c4326c0501d75d51059855463220279","date":1433952060,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext],SpanCollectorFactory).mjava","sourceNew":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms) throws IOException {\n      super(SpanPositionCheckQuery.this, searcher, terms);\n      this.matchWeight = matchWeight;\n    }\n\n","sourceOld":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms,\n                                   SpanCollectorFactory collectorFactory) throws IOException {\n      super(SpanPositionCheckQuery.this, searcher, terms, collectorFactory);\n      this.matchWeight = matchWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext]).mjava","sourceNew":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms, float boost) throws IOException {\n      super(SpanPositionCheckQuery.this, searcher, terms, boost);\n      this.matchWeight = matchWeight;\n    }\n\n","sourceOld":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms) throws IOException {\n      super(SpanPositionCheckQuery.this, searcher, terms);\n      this.matchWeight = matchWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.SpanPositionCheckWeight#SpanPositionCheckWeight(SpanWeight,IndexSearcher,Map[Term,TermContext]).mjava","sourceNew":null,"sourceOld":"    public SpanPositionCheckWeight(SpanWeight matchWeight, IndexSearcher searcher, Map<Term, TermContext> terms) throws IOException {\n      super(SpanPositionCheckQuery.this, searcher, terms);\n      this.matchWeight = matchWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29aea3139c4326c0501d75d51059855463220279":["485545da3b4429d6f138b4baac573a97820ee93b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["29aea3139c4326c0501d75d51059855463220279"],"485545da3b4429d6f138b4baac573a97820ee93b":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["29aea3139c4326c0501d75d51059855463220279","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"29aea3139c4326c0501d75d51059855463220279":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"485545da3b4429d6f138b4baac573a97820ee93b":["29aea3139c4326c0501d75d51059855463220279"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["485545da3b4429d6f138b4baac573a97820ee93b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}