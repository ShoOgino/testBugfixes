{"path":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws ParseException {\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws ParseException {\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws ParseException {\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws ParseException {\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws ParseException {\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws ParseException {\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws ParseException {\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws ParseException {\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t.build();\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery t = new BooleanQuery();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3ca415055c1401a2359adfb8f5d3fbf3887f95d7","date":1438554679,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      boolean mmAutoRelax = params.getBool(DisMaxParams.MM_AUTORELAX, false);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch, mmAutoRelax);\n      query = t.build();\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch);\n      query = t.build();\n    }\n    return query;\n  }\n\n","bugFix":["50de217601652b8d4bff9f8ac567455920c85891"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39fdbc59d893f5a211736e861fe145798a40b9ff","date":1498161919,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      boolean mmAutoRelax = params.getBool(DisMaxParams.MM_AUTORELAX, false);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch, mmAutoRelax);\n      query = QueryUtils.build(t, this);\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      boolean mmAutoRelax = params.getBool(DisMaxParams.MM_AUTORELAX, false);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch, mmAutoRelax);\n      query = t.build();\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      boolean mmAutoRelax = params.getBool(DisMaxParams.MM_AUTORELAX, false);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch, mmAutoRelax);\n      query = QueryUtils.build(t, this);\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      boolean mmAutoRelax = params.getBool(DisMaxParams.MM_AUTORELAX, false);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch, mmAutoRelax);\n      query = t.build();\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DisMaxQParser#getUserQuery(String,SolrPluginUtils.DisjunctionMaxQueryParser,SolrParams).mjava","sourceNew":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      boolean mmAutoRelax = params.getBool(DisMaxParams.MM_AUTORELAX, false);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch, mmAutoRelax);\n      query = QueryUtils.build(t, this);\n    }\n    return query;\n  }\n\n","sourceOld":"  protected Query getUserQuery(String userQuery, SolrPluginUtils.DisjunctionMaxQueryParser up, SolrParams solrParams)\n          throws SyntaxError {\n\n\n    String minShouldMatch = parseMinShouldMatch(req.getSchema(), solrParams);\n    Query dis = up.parse(userQuery);\n    Query query = dis;\n\n    if (dis instanceof BooleanQuery) {\n      BooleanQuery.Builder t = new BooleanQuery.Builder();\n      SolrPluginUtils.flattenBooleanQuery(t, (BooleanQuery) dis);\n      boolean mmAutoRelax = params.getBool(DisMaxParams.MM_AUTORELAX, false);\n      SolrPluginUtils.setMinShouldMatch(t, minShouldMatch, mmAutoRelax);\n      query = t.build();\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["3cdb67100dc016748799a77218aa409478372d79"],"3cdb67100dc016748799a77218aa409478372d79":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"39fdbc59d893f5a211736e861fe145798a40b9ff":["3ca415055c1401a2359adfb8f5d3fbf3887f95d7"],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","3cdb67100dc016748799a77218aa409478372d79"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["3ca415055c1401a2359adfb8f5d3fbf3887f95d7","39fdbc59d893f5a211736e861fe145798a40b9ff"],"28288370235ed02234a64753cdbf0c6ec096304a":["3ca415055c1401a2359adfb8f5d3fbf3887f95d7","39fdbc59d893f5a211736e861fe145798a40b9ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"3ca415055c1401a2359adfb8f5d3fbf3887f95d7":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["3ca415055c1401a2359adfb8f5d3fbf3887f95d7"],"3cdb67100dc016748799a77218aa409478372d79":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","407687e67faf6e1f02a211ca078d8e3eed631027"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"39fdbc59d893f5a211736e861fe145798a40b9ff":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3ca415055c1401a2359adfb8f5d3fbf3887f95d7":["39fdbc59d893f5a211736e861fe145798a40b9ff","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","a258fbb26824fd104ed795e5d9033d2d040049ee","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}