{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ops/ReplaceWithValueOperation#ReplaceWithValueOperation(String,StreamExpression,StreamFactory).mjava","commits":[{"id":"37f0902b794e42ac312bfd9daa69e6a523cf4675","date":1447303057,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ops/ReplaceWithValueOperation#ReplaceWithValueOperation(String,StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public ReplaceWithValueOperation(String forField, StreamExpression expression, StreamFactory factory) throws IOException {\n    \n    if(2 == expression.getParameters().size()){\n      wasBuiltWithFieldName = false;\n      \n      this.fieldName = forField;\n      this.original = factory.constructPrimitiveObject(factory.getValueOperand(expression, 0));\n\n    }\n    else if(3 == expression.getParameters().size()){\n      wasBuiltWithFieldName = true;\n      \n      this.fieldName = factory.getValueOperand(expression, 0);\n      this.original = factory.constructPrimitiveObject(factory.getValueOperand(expression, 1));\n    }\n    else{\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n    \n    StreamExpressionNamedParameter replacementParameter = factory.getNamedOperand(expression, \"withValue\");\n    if(null == replacementParameter){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a parameter named 'withValue' but didn't find one.\", expression));\n    }\n    if(!(replacementParameter.getParameter() instanceof StreamExpressionValue)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting parameter named 'withValue' to be a primitive type.\", expression));      \n    }\n    \n    this.replacement = factory.constructPrimitiveObject(((StreamExpressionValue)replacementParameter.getParameter()).getValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37f0902b794e42ac312bfd9daa69e6a523cf4675":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["37f0902b794e42ac312bfd9daa69e6a523cf4675"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37f0902b794e42ac312bfd9daa69e6a523cf4675"],"37f0902b794e42ac312bfd9daa69e6a523cf4675":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}