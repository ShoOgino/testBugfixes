{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","sourceNew":"  /**\n   * Return a term for drilling down into a category.\n   */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.charsNeededForFullPath()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","sourceOld":"  /**\n   * Return a term for drilling down into a category.\n   */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.charsNeededForFullPath()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9b1f09a9e58dfa9a85edd07038d129b0dee0ac0","date":1354615545,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","sourceNew":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.charsNeededForFullPath()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","sourceOld":"  /**\n   * Return a term for drilling down into a category.\n   */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.charsNeededForFullPath()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","sourceNew":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.charsNeededForFullPath()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","sourceOld":"  /**\n   * Return a term for drilling down into a category.\n   */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.charsNeededForFullPath()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","sourceNew":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.fullPathLength()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","sourceOld":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.charsNeededForFullPath()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","sourceNew":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.fullPathLength()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","sourceOld":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.charsNeededForFullPath()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","sourceNew":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.fullPathLength()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.field, String.valueOf(buffer));\n  }\n\n","sourceOld":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.fullPathLength()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","sourceNew":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.fullPathLength()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.field, String.valueOf(buffer));\n  }\n\n","sourceOld":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.fullPathLength()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.getTerm().field(), String.valueOf(buffer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f793470bad5ce8422502e33eaae65fc6a3271bd2","date":1360479442,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDownQuery#term(FacetIndexingParams,CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillDown#term(FacetIndexingParams,CategoryPath).mjava","sourceNew":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.fullPathLength()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.field, String.valueOf(buffer));\n  }\n\n","sourceOld":"  /** Return a drill-down {@link Term} for a category. */\n  public static final Term term(FacetIndexingParams iParams, CategoryPath path) {\n    CategoryListParams clp = iParams.getCategoryListParams(path);\n    char[] buffer = new char[path.fullPathLength()];\n    iParams.drillDownTermText(path, buffer);\n    return new Term(clp.field, String.valueOf(buffer));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["e9b1f09a9e58dfa9a85edd07038d129b0dee0ac0"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"e9b1f09a9e58dfa9a85edd07038d129b0dee0ac0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","e9b1f09a9e58dfa9a85edd07038d129b0dee0ac0"],"f793470bad5ce8422502e33eaae65fc6a3271bd2":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f793470bad5ce8422502e33eaae65fc6a3271bd2"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e9b1f09a9e58dfa9a85edd07038d129b0dee0ac0","407687e67faf6e1f02a211ca078d8e3eed631027"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"e9b1f09a9e58dfa9a85edd07038d129b0dee0ac0":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["c4015cd39dff8d4dec562d909f9766debac53aa6","f793470bad5ce8422502e33eaae65fc6a3271bd2"],"f793470bad5ce8422502e33eaae65fc6a3271bd2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}