{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterTermIntervals#testObjectFormatter().mjava","commits":[{"id":"68a600ba48cf2abfb5af305ebbf96bb6e2d820ea","date":1574601528,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterTermIntervals#testObjectFormatter().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-4906\n  public void testObjectFormatter() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Field body = new Field(\"body\", \"\", fieldType);\n    Document doc = new Document();\n    doc.add(body);\n\n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer) {\n      @Override\n      protected PassageFormatter getFormatter(String field) {\n        return new PassageFormatter() {\n          PassageFormatter defaultFormatter = new DefaultPassageFormatter();\n\n          @Override\n          public String[] format(Passage passages[], String content) {\n            // Just turns the String snippet into a length 2\n            // array of String\n            return new String[]{\"blah blah\", defaultFormatter.format(passages, content).toString()};\n          }\n        };\n      }\n    };\n\n    Query query = new IntervalQuery(\"body\", Intervals.term(\"highlighting\"));\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(1, topDocs.totalHits.value);\n    int[] docIDs = new int[1];\n    docIDs[0] = topDocs.scoreDocs[0].doc;\n    Map<String,Object[]> snippets = highlighter.highlightFieldsAsObjects(new String[] {\"body\"}, query, docIDs,\n        new int[] {1});\n    Object[] bodySnippets = snippets.get(\"body\");\n    assertEquals(1, bodySnippets.length);\n    assertTrue(Arrays.equals(new String[] {\"blah blah\", \"Just a test <b>highlighting</b> from postings. \"},\n        (String[]) bodySnippets[0]));\n    ir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"68a600ba48cf2abfb5af305ebbf96bb6e2d820ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68a600ba48cf2abfb5af305ebbf96bb6e2d820ea"]},"commit2Childs":{"68a600ba48cf2abfb5af305ebbf96bb6e2d820ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68a600ba48cf2abfb5af305ebbf96bb6e2d820ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}