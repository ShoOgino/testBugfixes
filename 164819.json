{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/sharedterms/STUniformSplitTermsWriter#mergeSegments(MergeState,NormsProducer,List[TermIterator[SegmentTerms]],STBlockWriter,IndexDictionary.Builder).mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/sharedterms/STUniformSplitTermsWriter#mergeSegments(MergeState,NormsProducer,List[TermIterator[SegmentTerms]],STBlockWriter,IndexDictionary.Builder).mjava","pathOld":"/dev/null","sourceNew":"  private Collection<FieldMetadata> mergeSegments(MergeState mergeState, NormsProducer normsProducer,\n                                                  List<TermIterator<SegmentTerms>> segmentTermsList,\n                                                  STBlockWriter blockWriter, IndexDictionary.Builder dictionaryBuilder) throws IOException {\n    List<FieldMetadata> fieldMetadataList = createFieldMetadataList(mergeState.mergeFieldInfos.iterator(), mergeState.segmentInfo.maxDoc());\n    Map<String, MergingFieldTerms> fieldTermsMap = createMergingFieldTermsMap(fieldMetadataList, mergeState.fieldsProducers.length);\n    TermIteratorQueue<SegmentTerms> segmentTermsQueue = createSegmentTermsQueue(segmentTermsList);\n    List<TermIterator<SegmentTerms>> groupedSegmentTerms = new ArrayList<>(segmentTermsList.size());\n    Map<String, List<SegmentPostings>> fieldPostingsMap = new HashMap<>(mergeState.fieldInfos.length);\n    List<MergingFieldTerms> groupedFieldTerms = new ArrayList<>(mergeState.fieldInfos.length);\n    List<FieldMetadataTermState> termStates = new ArrayList<>(mergeState.fieldInfos.length);\n\n    while (segmentTermsQueue.size() != 0) {\n      TermIterator<SegmentTerms> topSegmentTerms = segmentTermsQueue.popTerms();\n      BytesRef term = BytesRef.deepCopyOf(topSegmentTerms.term);\n      groupByTerm(segmentTermsQueue, topSegmentTerms, groupedSegmentTerms);\n      combineSegmentsFields(groupedSegmentTerms, fieldPostingsMap);\n      combinePostingsPerField(term, fieldTermsMap, fieldPostingsMap, groupedFieldTerms);\n      writePostingLines(term, groupedFieldTerms, normsProducer, termStates);\n      blockWriter.addLine(term, termStates, dictionaryBuilder);\n      nextTermForIterators(groupedSegmentTerms, segmentTermsQueue);\n    }\n    return fieldMetadataList;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}