{"path":"modules/analysis/common/src/java/org/tartarus/snowball/ext/ArmenianStemmer#stem().mjava","commits":[{"id":"a4193dd6874631c7088239f186fb6e5b2f02eeb1","date":1283035345,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/ArmenianStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n                    // (, line 292\n                    // do, line 294\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 294\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 295\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 295\n                    v_2 = limit - cursor;\n                    // tomark, line 295\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 295\n                    // do, line 296\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call ending, line 296\n                        if (!r_ending())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 297\n                    v_5 = limit - cursor;\n                    lab2: do {\n                        // call verb, line 297\n                        if (!r_verb())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 298\n                    v_6 = limit - cursor;\n                    lab3: do {\n                        // call adjective, line 298\n                        if (!r_adjective())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 299\n                    v_7 = limit - cursor;\n                    lab4: do {\n                        // call noun, line 299\n                        if (!r_noun())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/ArmenianStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n                    // (, line 292\n                    // do, line 294\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 294\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 295\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 295\n                    v_2 = limit - cursor;\n                    // tomark, line 295\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 295\n                    // do, line 296\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call ending, line 296\n                        if (!r_ending())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 297\n                    v_5 = limit - cursor;\n                    lab2: do {\n                        // call verb, line 297\n                        if (!r_verb())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 298\n                    v_6 = limit - cursor;\n                    lab3: do {\n                        // call adjective, line 298\n                        if (!r_adjective())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 299\n                    v_7 = limit - cursor;\n                    lab4: do {\n                        // call noun, line 299\n                        if (!r_noun())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/ArmenianStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/ArmenianStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n                    // (, line 292\n                    // do, line 294\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 294\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 295\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 295\n                    v_2 = limit - cursor;\n                    // tomark, line 295\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 295\n                    // do, line 296\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call ending, line 296\n                        if (!r_ending())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 297\n                    v_5 = limit - cursor;\n                    lab2: do {\n                        // call verb, line 297\n                        if (!r_verb())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 298\n                    v_6 = limit - cursor;\n                    lab3: do {\n                        // call adjective, line 298\n                        if (!r_adjective())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 299\n                    v_7 = limit - cursor;\n                    lab4: do {\n                        // call noun, line 299\n                        if (!r_noun())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n                    // (, line 292\n                    // do, line 294\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 294\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 295\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 295\n                    v_2 = limit - cursor;\n                    // tomark, line 295\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 295\n                    // do, line 296\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call ending, line 296\n                        if (!r_ending())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 297\n                    v_5 = limit - cursor;\n                    lab2: do {\n                        // call verb, line 297\n                        if (!r_verb())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 298\n                    v_6 = limit - cursor;\n                    lab3: do {\n                        // call adjective, line 298\n                        if (!r_adjective())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 299\n                    v_7 = limit - cursor;\n                    lab4: do {\n                        // call noun, line 299\n                        if (!r_noun())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4193dd6874631c7088239f186fb6e5b2f02eeb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a4193dd6874631c7088239f186fb6e5b2f02eeb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a4193dd6874631c7088239f186fb6e5b2f02eeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"a4193dd6874631c7088239f186fb6e5b2f02eeb1":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4193dd6874631c7088239f186fb6e5b2f02eeb1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}