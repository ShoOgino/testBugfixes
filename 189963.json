{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","commits":[{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(Collector).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    if (random.nextBoolean()) {\n      try {\n        final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS);\n        assert !remaining;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(Collector collector) throws IOException {\n    if (random.nextBoolean()) {\n      try {\n        final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS);\n        assert !remaining;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(Collector).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    if (random.nextBoolean()) {\n      try {\n        final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS);\n        assert !remaining;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(Collector collector) throws IOException {\n    if (random.nextBoolean()) {\n      try {\n        final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS);\n        assert !remaining;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    collector = new AssertingLeafCollector(random, collector, DocsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS);\n        assert !remaining;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    if (random.nextBoolean()) {\n      try {\n        final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS);\n        assert !remaining;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e166cc9c5f45f78a8dd02332b5ac100221063fd8","date":1421678965,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, DocsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, 0, DocsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    collector = new AssertingLeafCollector(random, collector, DocsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS);\n        assert !remaining;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, DocsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, 0, DocsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector, Bits acceptDocs) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, acceptDocs, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector, acceptDocs);\n      }\n    } else {\n      in.score(collector, acceptDocs);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["51f5280f31484820499077f41fcdfe92d527d9dc"],"e166cc9c5f45f78a8dd02332b5ac100221063fd8":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["ae73da626f97850c922c42736f808d0378e165f0"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"51f5280f31484820499077f41fcdfe92d527d9dc":["e166cc9c5f45f78a8dd02332b5ac100221063fd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e166cc9c5f45f78a8dd02332b5ac100221063fd8":["51f5280f31484820499077f41fcdfe92d527d9dc"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["e166cc9c5f45f78a8dd02332b5ac100221063fd8"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"ae73da626f97850c922c42736f808d0378e165f0":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","15e323346eac5e4685c0a9f2df85eb96b4239bbb"],"51f5280f31484820499077f41fcdfe92d527d9dc":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}