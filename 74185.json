{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/rule/ImplicitSnitch#addIpTags(String,Set[String],SnitchContext).mjava","commits":[{"id":"dded3df9e710f258905cff1def2f25eb51c62e0f","date":1475158173,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/rule/ImplicitSnitch#addIpTags(String,Set[String],SnitchContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/ImplicitSnitch#addIpTags(String,Set[String],SnitchContext).mjava","sourceNew":"  private void addIpTags(String solrNode, Set<String> requestedTags, SnitchContext context) {\n\n    List<String> requestedHostTags = new ArrayList<>();\n    for (String tag : requestedTags) {\n      if (IP_SNITCHES.contains(tag)) {\n        requestedHostTags.add(tag);\n      }\n    }\n\n    if (requestedHostTags.isEmpty()) {\n      return;\n    }\n\n    String[] ipFragments = getIpFragments(solrNode);\n\n    if (ipFragments == null) {\n      return;\n    }\n\n    int ipSnitchCount = IP_SNITCHES.size();\n    for (int i = 0; i < ipSnitchCount; i++) {\n      String currentTagValue = ipFragments[i];\n      String currentTagKey = IP_SNITCHES.get(ipSnitchCount - i - 1);\n\n      if (requestedHostTags.contains(currentTagKey)) {\n        context.getTags().put(currentTagKey, currentTagValue);\n      }\n\n    }\n\n  }\n\n","sourceOld":"  private void addIpTags(String solrNode, Set<String> requestedTags, SnitchContext context) {\n\n    List<String> requestedHostTags = new ArrayList<>();\n    for (String tag : requestedTags) {\n      if (IP_SNITCHES.contains(tag)) {\n        requestedHostTags.add(tag);\n      }\n    }\n\n    if (requestedHostTags.isEmpty()) {\n      return;\n    }\n\n    String[] ipFragments = getIpFragments(solrNode);\n\n    if (ipFragments == null) {\n      return;\n    }\n\n    int ipSnitchCount = IP_SNITCHES.size();\n    for (int i = 0; i < ipSnitchCount; i++) {\n      String currentTagValue = ipFragments[i];\n      String currentTagKey = IP_SNITCHES.get(ipSnitchCount - i - 1);\n\n      if (requestedHostTags.contains(currentTagKey)) {\n        context.getTags().put(currentTagKey, currentTagValue);\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/rule/ImplicitSnitch#addIpTags(String,Set[String],SnitchContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/ImplicitSnitch#addIpTags(String,Set[String],SnitchContext).mjava","sourceNew":"  private void addIpTags(String solrNode, Set<String> requestedTags, SnitchContext context) {\n\n    List<String> requestedHostTags = new ArrayList<>();\n    for (String tag : requestedTags) {\n      if (IP_SNITCHES.contains(tag)) {\n        requestedHostTags.add(tag);\n      }\n    }\n\n    if (requestedHostTags.isEmpty()) {\n      return;\n    }\n\n    String[] ipFragments = getIpFragments(solrNode);\n\n    if (ipFragments == null) {\n      return;\n    }\n\n    int ipSnitchCount = IP_SNITCHES.size();\n    for (int i = 0; i < ipSnitchCount; i++) {\n      String currentTagValue = ipFragments[i];\n      String currentTagKey = IP_SNITCHES.get(ipSnitchCount - i - 1);\n\n      if (requestedHostTags.contains(currentTagKey)) {\n        context.getTags().put(currentTagKey, currentTagValue);\n      }\n\n    }\n\n  }\n\n","sourceOld":"  private void addIpTags(String solrNode, Set<String> requestedTags, SnitchContext context) {\n\n    List<String> requestedHostTags = new ArrayList<>();\n    for (String tag : requestedTags) {\n      if (IP_SNITCHES.contains(tag)) {\n        requestedHostTags.add(tag);\n      }\n    }\n\n    if (requestedHostTags.isEmpty()) {\n      return;\n    }\n\n    String[] ipFragments = getIpFragments(solrNode);\n\n    if (ipFragments == null) {\n      return;\n    }\n\n    int ipSnitchCount = IP_SNITCHES.size();\n    for (int i = 0; i < ipSnitchCount; i++) {\n      String currentTagValue = ipFragments[i];\n      String currentTagKey = IP_SNITCHES.get(ipSnitchCount - i - 1);\n\n      if (requestedHostTags.contains(currentTagKey)) {\n        context.getTags().put(currentTagKey, currentTagValue);\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/rule/ImplicitSnitch#addIpTags(String,Set[String],SnitchContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/ImplicitSnitch#addIpTags(String,Set[String],SnitchContext).mjava","sourceNew":"  private void addIpTags(String solrNode, Set<String> requestedTags, SnitchContext context) {\n\n    List<String> requestedHostTags = new ArrayList<>();\n    for (String tag : requestedTags) {\n      if (IP_SNITCHES.contains(tag)) {\n        requestedHostTags.add(tag);\n      }\n    }\n\n    if (requestedHostTags.isEmpty()) {\n      return;\n    }\n\n    String[] ipFragments = getIpFragments(solrNode);\n\n    if (ipFragments == null) {\n      return;\n    }\n\n    int ipSnitchCount = IP_SNITCHES.size();\n    for (int i = 0; i < ipSnitchCount; i++) {\n      String currentTagValue = ipFragments[i];\n      String currentTagKey = IP_SNITCHES.get(ipSnitchCount - i - 1);\n\n      if (requestedHostTags.contains(currentTagKey)) {\n        context.getTags().put(currentTagKey, currentTagValue);\n      }\n\n    }\n\n  }\n\n","sourceOld":"  private void addIpTags(String solrNode, Set<String> requestedTags, SnitchContext context) {\n\n    List<String> requestedHostTags = new ArrayList<>();\n    for (String tag : requestedTags) {\n      if (IP_SNITCHES.contains(tag)) {\n        requestedHostTags.add(tag);\n      }\n    }\n\n    if (requestedHostTags.isEmpty()) {\n      return;\n    }\n\n    String[] ipFragments = getIpFragments(solrNode);\n\n    if (ipFragments == null) {\n      return;\n    }\n\n    int ipSnitchCount = IP_SNITCHES.size();\n    for (int i = 0; i < ipSnitchCount; i++) {\n      String currentTagValue = ipFragments[i];\n      String currentTagKey = IP_SNITCHES.get(ipSnitchCount - i - 1);\n\n      if (requestedHostTags.contains(currentTagKey)) {\n        context.getTags().put(currentTagKey, currentTagValue);\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dded3df9e710f258905cff1def2f25eb51c62e0f"],"dded3df9e710f258905cff1def2f25eb51c62e0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","dded3df9e710f258905cff1def2f25eb51c62e0f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dded3df9e710f258905cff1def2f25eb51c62e0f":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}