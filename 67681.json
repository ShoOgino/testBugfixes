{"path":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","commits":[{"id":"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9","date":1172996731,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","pathOld":"/dev/null","sourceNew":"  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = new Integer(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    return clone;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d72db039743bd6a2da9be6306f57c71654ca1bf6","date":1173217255,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","sourceNew":"  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = new Integer(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = new Integer(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","sourceNew":"  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = new Integer(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    MockRAMInputStream clone = (MockRAMInputStream) super.clone();\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["6bcde5e3f23911110baa101ed062b544162825b5"],"6bcde5e3f23911110baa101ed062b544162825b5":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d72db039743bd6a2da9be6306f57c71654ca1bf6":["6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6bcde5e3f23911110baa101ed062b544162825b5":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9"],"d72db039743bd6a2da9be6306f57c71654ca1bf6":["6bcde5e3f23911110baa101ed062b544162825b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}