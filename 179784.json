{"path":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","commits":[{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","pathOld":"/dev/null","sourceNew":"  public void testCantConnectToLeader() throws Exception {\n    int numShards = 1;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getLeader());\n    try {\n      // wait for replication\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      proxy.close();\n      expectThrows(SolrException.class, ()->addDocs(1));\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      assertNumDocs(10, cluster.getSolrClient());\n    } finally {\n      LOG.info(\"Opening leader node\");\n      proxy.reopen();\n    }\n//     Back to normal\n//    Even if the leader is back to normal, the replica can get broken pipe for some time when trying to connect to it. The commit\n//    can fail if it's sent to the replica and it forwards it to the leader, and since it uses CUSC the error is hidden! That breaks\n//    the last part of this test.\n//    addDocs(20);\n//    assertNumDocs(20, cluster.getSolrClient(), 300);\n//    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n//      assertNumDocs(20, pullReplicaClient);\n//    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","pathOld":"/dev/null","sourceNew":"  public void testCantConnectToLeader() throws Exception {\n    int numShards = 1;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getLeader());\n    try {\n      // wait for replication\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      proxy.close();\n      expectThrows(SolrException.class, ()->addDocs(1));\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      assertNumDocs(10, cluster.getSolrClient());\n    } finally {\n      LOG.info(\"Opening leader node\");\n      proxy.reopen();\n    }\n//     Back to normal\n//    Even if the leader is back to normal, the replica can get broken pipe for some time when trying to connect to it. The commit\n//    can fail if it's sent to the replica and it forwards it to the leader, and since it uses CUSC the error is hidden! That breaks\n//    the last part of this test.\n//    addDocs(20);\n//    assertNumDocs(20, cluster.getSolrClient(), 300);\n//    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n//      assertNumDocs(20, pullReplicaClient);\n//    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","sourceNew":"  public void testCantConnectToLeader() throws Exception {\n    int numShards = 1;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getLeader());\n    try {\n      // wait for replication\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      proxy.close();\n      expectThrows(SolrException.class, ()->addDocs(1));\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      assertNumDocs(10, cluster.getSolrClient());\n    } finally {\n      log.info(\"Opening leader node\");\n      proxy.reopen();\n    }\n//     Back to normal\n//    Even if the leader is back to normal, the replica can get broken pipe for some time when trying to connect to it. The commit\n//    can fail if it's sent to the replica and it forwards it to the leader, and since it uses CUSC the error is hidden! That breaks\n//    the last part of this test.\n//    addDocs(20);\n//    assertNumDocs(20, cluster.getSolrClient(), 300);\n//    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n//      assertNumDocs(20, pullReplicaClient);\n//    }\n  }\n\n","sourceOld":"  public void testCantConnectToLeader() throws Exception {\n    int numShards = 1;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getLeader());\n    try {\n      // wait for replication\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      proxy.close();\n      expectThrows(SolrException.class, ()->addDocs(1));\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      assertNumDocs(10, cluster.getSolrClient());\n    } finally {\n      LOG.info(\"Opening leader node\");\n      proxy.reopen();\n    }\n//     Back to normal\n//    Even if the leader is back to normal, the replica can get broken pipe for some time when trying to connect to it. The commit\n//    can fail if it's sent to the replica and it forwards it to the leader, and since it uses CUSC the error is hidden! That breaks\n//    the last part of this test.\n//    addDocs(20);\n//    assertNumDocs(20, cluster.getSolrClient(), 300);\n//    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n//      assertNumDocs(20, pullReplicaClient);\n//    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","sourceNew":"  public void testCantConnectToLeader() throws Exception {\n    int numShards = 1;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(collectionName, numShards, numShards * 2);\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getLeader());\n    try {\n      // wait for replication\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      proxy.close();\n      expectThrows(SolrException.class, ()->addDocs(1));\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      assertNumDocs(10, cluster.getSolrClient());\n    } finally {\n      log.info(\"Opening leader node\");\n      proxy.reopen();\n    }\n//     Back to normal\n//    Even if the leader is back to normal, the replica can get broken pipe for some time when trying to connect to it. The commit\n//    can fail if it's sent to the replica and it forwards it to the leader, and since it uses CUSC the error is hidden! That breaks\n//    the last part of this test.\n//    addDocs(20);\n//    assertNumDocs(20, cluster.getSolrClient(), 300);\n//    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n//      assertNumDocs(20, pullReplicaClient);\n//    }\n  }\n\n","sourceOld":"  public void testCantConnectToLeader() throws Exception {\n    int numShards = 1;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getLeader());\n    try {\n      // wait for replication\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      proxy.close();\n      expectThrows(SolrException.class, ()->addDocs(1));\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      assertNumDocs(10, cluster.getSolrClient());\n    } finally {\n      log.info(\"Opening leader node\");\n      proxy.reopen();\n    }\n//     Back to normal\n//    Even if the leader is back to normal, the replica can get broken pipe for some time when trying to connect to it. The commit\n//    can fail if it's sent to the replica and it forwards it to the leader, and since it uses CUSC the error is hidden! That breaks\n//    the last part of this test.\n//    addDocs(20);\n//    assertNumDocs(20, cluster.getSolrClient(), 300);\n//    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n//      assertNumDocs(20, pullReplicaClient);\n//    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToLeader().mjava","sourceNew":"  public void testCantConnectToLeader() throws Exception {\n    int numShards = 1;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(collectionName, numShards, numShards * 2);\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getLeader());\n    try {\n      // wait for replication\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      proxy.close();\n      expectThrows(SolrException.class, ()->addDocs(1));\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      assertNumDocs(10, cluster.getSolrClient());\n    } finally {\n      log.info(\"Opening leader node\");\n      proxy.reopen();\n    }\n//     Back to normal\n//    Even if the leader is back to normal, the replica can get broken pipe for some time when trying to connect to it. The commit\n//    can fail if it's sent to the replica and it forwards it to the leader, and since it uses CUSC the error is hidden! That breaks\n//    the last part of this test.\n//    addDocs(20);\n//    assertNumDocs(20, cluster.getSolrClient(), 300);\n//    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n//      assertNumDocs(20, pullReplicaClient);\n//    }\n  }\n\n","sourceOld":"  public void testCantConnectToLeader() throws Exception {\n    int numShards = 1;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(collectionName, numShards, numShards * 2);\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getLeader());\n    try {\n      // wait for replication\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      proxy.close();\n      expectThrows(SolrException.class, ()->addDocs(1));\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        assertNumDocs(10, pullReplicaClient);\n      }\n      assertNumDocs(10, cluster.getSolrClient());\n    } finally {\n      log.info(\"Opening leader node\");\n      proxy.reopen();\n    }\n//     Back to normal\n//    Even if the leader is back to normal, the replica can get broken pipe for some time when trying to connect to it. The commit\n//    can fail if it's sent to the replica and it forwards it to the leader, and since it uses CUSC the error is hidden! That breaks\n//    the last part of this test.\n//    addDocs(20);\n//    assertNumDocs(20, cluster.getSolrClient(), 300);\n//    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n//      assertNumDocs(20, pullReplicaClient);\n//    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["61c45e99cf6676da48f19d7511c73712ad39402b"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}