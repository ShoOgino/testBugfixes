{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#load(InputStream).mjava","commits":[{"id":"d0af0c31a687dd847212ae59f661152896c76516","date":1380727430,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#load(InputStream).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput in = new InputStreamDataInput(input);\n    CodecUtil.checkHeader(in, CODEC_NAME, VERSION_START, VERSION_START);\n    byte separatorOrig = in.readByte();\n    if (separatorOrig != separator) {\n      throw new IllegalStateException(\"separator=\" + separator + \" is incorrect: original model was built with separator=\" + separatorOrig);\n    }\n    int gramsOrig = in.readVInt();\n    if (gramsOrig != grams) {\n      throw new IllegalStateException(\"grams=\" + grams + \" is incorrect: original model was built with grams=\" + gramsOrig);\n    }\n    totTokens = in.readVLong();\n\n    fst = new FST<Long>(in, PositiveIntOutputs.getSingleton());\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":5,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#load(DataInput).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester#load(InputStream).mjava","sourceNew":"  @Override\n  public boolean load(DataInput input) throws IOException {\n    CodecUtil.checkHeader(input, CODEC_NAME, VERSION_START, VERSION_START);\n    count = input.readVLong();\n    byte separatorOrig = input.readByte();\n    if (separatorOrig != separator) {\n      throw new IllegalStateException(\"separator=\" + separator + \" is incorrect: original model was built with separator=\" + separatorOrig);\n    }\n    int gramsOrig = input.readVInt();\n    if (gramsOrig != grams) {\n      throw new IllegalStateException(\"grams=\" + grams + \" is incorrect: original model was built with grams=\" + gramsOrig);\n    }\n    totTokens = input.readVLong();\n\n    fst = new FST<Long>(input, PositiveIntOutputs.getSingleton());\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput in = new InputStreamDataInput(input);\n    CodecUtil.checkHeader(in, CODEC_NAME, VERSION_START, VERSION_START);\n    byte separatorOrig = in.readByte();\n    if (separatorOrig != separator) {\n      throw new IllegalStateException(\"separator=\" + separator + \" is incorrect: original model was built with separator=\" + separatorOrig);\n    }\n    int gramsOrig = in.readVInt();\n    if (gramsOrig != grams) {\n      throw new IllegalStateException(\"grams=\" + grams + \" is incorrect: original model was built with grams=\" + gramsOrig);\n    }\n    totTokens = in.readVLong();\n\n    fst = new FST<Long>(in, PositiveIntOutputs.getSingleton());\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0af0c31a687dd847212ae59f661152896c76516":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a645276cbaf5dc96a42fd473b9019bde352996c8":["d0af0c31a687dd847212ae59f661152896c76516"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a645276cbaf5dc96a42fd473b9019bde352996c8"]},"commit2Childs":{"d0af0c31a687dd847212ae59f661152896c76516":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d0af0c31a687dd847212ae59f661152896c76516"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}