{"path":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntEncoder#reInit(OutputStream).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntEncoder#reInit(OutputStream).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/util/encoding/IntEncoder#reInit(OutputStream).mjava","sourceNew":"  /**\n   * Reinitializes the encoder with the give {@link OutputStream}. For\n   * re-usability it can be changed without the need to reconstruct a new\n   * object.\n   * <p>\n   * <b>NOTE:</b> after calling {@link #close()}, one <u><i>must</i></u> call\n   * this method even if the output stream itself hasn't changed. An example\n   * case is that the output stream wraps a byte[], and the output stream itself\n   * is reset, but its instance hasn't changed. Some implementations of\n   * {@link IntEncoder} may write some metadata about themselves to the output\n   * stream, and therefore it is imperative that one calls this method before\n   * encoding any data.\n   */\n  public void reInit(OutputStream out) {\n    this.out = out;\n  }\n\n","sourceOld":"  /**\n   * Reinitializes the encoder with the give {@link OutputStream}. For\n   * re-usability it can be changed without the need to reconstruct a new\n   * object.\n   * <p>\n   * <b>NOTE:</b> after calling {@link #close()}, one <u><i>must</i></u> call\n   * this method even if the output stream itself hasn't changed. An example\n   * case is that the output stream wraps a byte[], and the output stream itself\n   * is reset, but its instance hasn't changed. Some implementations of\n   * {@link IntEncoder} may write some metadata about themselves to the output\n   * stream, and therefore it is imperative that one calls this method before\n   * encoding any data.\n   */\n  public void reInit(OutputStream out) {\n    this.out = out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bceb02c33032dd9bbf107cd06d0b74e5db4f110a","date":1357909746,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntEncoder#reInit(OutputStream).mjava","sourceNew":null,"sourceOld":"  /**\n   * Reinitializes the encoder with the give {@link OutputStream}. For\n   * re-usability it can be changed without the need to reconstruct a new\n   * object.\n   * <p>\n   * <b>NOTE:</b> after calling {@link #close()}, one <u><i>must</i></u> call\n   * this method even if the output stream itself hasn't changed. An example\n   * case is that the output stream wraps a byte[], and the output stream itself\n   * is reset, but its instance hasn't changed. Some implementations of\n   * {@link IntEncoder} may write some metadata about themselves to the output\n   * stream, and therefore it is imperative that one calls this method before\n   * encoding any data.\n   */\n  public void reInit(OutputStream out) {\n    this.out = out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntEncoder#reInit(OutputStream).mjava","sourceNew":null,"sourceOld":"  /**\n   * Reinitializes the encoder with the give {@link OutputStream}. For\n   * re-usability it can be changed without the need to reconstruct a new\n   * object.\n   * <p>\n   * <b>NOTE:</b> after calling {@link #close()}, one <u><i>must</i></u> call\n   * this method even if the output stream itself hasn't changed. An example\n   * case is that the output stream wraps a byte[], and the output stream itself\n   * is reset, but its instance hasn't changed. Some implementations of\n   * {@link IntEncoder} may write some metadata about themselves to the output\n   * stream, and therefore it is imperative that one calls this method before\n   * encoding any data.\n   */\n  public void reInit(OutputStream out) {\n    this.out = out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["b89678825b68eccaf09e6ab71675fc0b0af1e099","bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}