{"path":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"/dev/null","sourceNew":"  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":null,"sourceOld":"  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"/dev/null","sourceNew":"  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bd0a7f04b5a49a00149b867e7d51f632fb8a4664","date":1279497978,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"febfc271ec28372df4129e5facae9fd7c16d2c60","date":1284381057,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b7d4132fbe751821de276c12ac54cde842bdb5c","date":1293827723,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d345a86357a4042faeebfad2693a070019c95918","date":1305385272,"type":5,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["febfc271ec28372df4129e5facae9fd7c16d2c60","4b7d4132fbe751821de276c12ac54cde842bdb5c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","febfc271ec28372df4129e5facae9fd7c16d2c60"],"febfc271ec28372df4129e5facae9fd7c16d2c60":["bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"d345a86357a4042faeebfad2693a070019c95918":["4b7d4132fbe751821de276c12ac54cde842bdb5c"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4b7d4132fbe751821de276c12ac54cde842bdb5c"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["70ad682703b8585f5d0a637efec044d57ec05efb","d345a86357a4042faeebfad2693a070019c95918"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4b7d4132fbe751821de276c12ac54cde842bdb5c","d345a86357a4042faeebfad2693a070019c95918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b7d4132fbe751821de276c12ac54cde842bdb5c":["febfc271ec28372df4129e5facae9fd7c16d2c60"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d345a86357a4042faeebfad2693a070019c95918"],"bd0a7f04b5a49a00149b867e7d51f632fb8a4664":["1da8d55113b689b06716246649de6f62430f15c0"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"febfc271ec28372df4129e5facae9fd7c16d2c60":["70ad682703b8585f5d0a637efec044d57ec05efb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4b7d4132fbe751821de276c12ac54cde842bdb5c"],"1da8d55113b689b06716246649de6f62430f15c0":["5f4e87790277826a2aea119328600dfb07761f32","bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"d345a86357a4042faeebfad2693a070019c95918":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"4b7d4132fbe751821de276c12ac54cde842bdb5c":["70ad682703b8585f5d0a637efec044d57ec05efb","d345a86357a4042faeebfad2693a070019c95918","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","a3776dccca01c11e7046323cfad46a3b4a471233"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"bd0a7f04b5a49a00149b867e7d51f632fb8a4664":["5f4e87790277826a2aea119328600dfb07761f32","febfc271ec28372df4129e5facae9fd7c16d2c60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}