{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getOnlyLeafReader(IndexReader).mjava","commits":[{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getOnlyLeafReader(IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getOnlySegmentReader(DirectoryReader).mjava","sourceNew":"  /**\n   * Some tests expect the directory to contain a single segment, and want to \n   * do tests on that segment's reader. This is an utility method to help them.\n   */\n  public static LeafReader getOnlyLeafReader(IndexReader reader) {\n    List<LeafReaderContext> subReaders = reader.leaves();\n    if (subReaders.size() != 1) {\n      throw new IllegalArgumentException(reader + \" has \" + subReaders.size() + \" segments instead of exactly one\");\n    }\n    return subReaders.get(0).reader();\n  }\n\n","sourceOld":"  /**\n   * Some tests expect the directory to contain a single segment, and want to \n   * do tests on that segment's reader. This is an utility method to help them.\n   */\n  public static SegmentReader getOnlySegmentReader(DirectoryReader reader) {\n    List<LeafReaderContext> subReaders = reader.leaves();\n    if (subReaders.size() != 1) {\n      throw new IllegalArgumentException(reader + \" has \" + subReaders.size() + \" segments instead of exactly one\");\n    }\n    final LeafReader r = subReaders.get(0).reader();\n    assertTrue(r instanceof SegmentReader);\n    return (SegmentReader) r;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}