{"path":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","commits":[{"id":"7b3a4ab7d2fe963a5a758d16f8bed1b0ce3b9027","date":1328885564,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","pathOld":"/dev/null","sourceNew":"  private void testSearchByCollectionName() throws SolrServerException {\n    SolrServer client = clients.get(0);\n    String baseUrl = ((CommonsHttpSolrServer) client).getBaseURL();\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","sourceNew":"  private void testSearchByCollectionName() throws SolrServerException {\n    SolrServer client = clients.get(0);\n    String baseUrl = ((HttpSolrServer) client).getBaseURL();\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","sourceOld":"  private void testSearchByCollectionName() throws SolrServerException {\n    SolrServer client = clients.get(0);\n    String baseUrl = ((CommonsHttpSolrServer) client).getBaseURL();\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","bugFix":null,"bugIntro":["e19067e820b148e8dc0b240da4f2771cf7b68252"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e19067e820b148e8dc0b240da4f2771cf7b68252","date":1347730768,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","sourceNew":"  private void testSearchByCollectionName() throws SolrServerException {\n    SolrServer client = clients.get(0);\n    final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(\n        0,\n        ((HttpSolrServer) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","sourceOld":"  private void testSearchByCollectionName() throws SolrServerException {\n    SolrServer client = clients.get(0);\n    String baseUrl = ((HttpSolrServer) client).getBaseURL();\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","bugFix":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5a558d54519c651068ddb202f03befefb1514a7","date":1354382006,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","sourceNew":"  private void testSearchByCollectionName() throws SolrServerException {\n    log.info(\"### STARTING testSearchByCollectionName\");\n    SolrServer client = clients.get(0);\n    final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(\n        0,\n        ((HttpSolrServer) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","sourceOld":"  private void testSearchByCollectionName() throws SolrServerException {\n    SolrServer client = clients.get(0);\n    final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(\n        0,\n        ((HttpSolrServer) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","sourceNew":"  private void testSearchByCollectionName() throws SolrServerException {\n    log.info(\"### STARTING testSearchByCollectionName\");\n    SolrServer client = clients.get(0);\n    final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(\n        0,\n        ((HttpSolrServer) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","sourceOld":"  private void testSearchByCollectionName() throws SolrServerException {\n    SolrServer client = clients.get(0);\n    final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(\n        0,\n        ((HttpSolrServer) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ea7454b4afcb5dc9f7504f83d77b134df2b7c57","date":1391252295,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","sourceNew":"  private void testSearchByCollectionName() throws SolrServerException {\n    log.info(\"### STARTING testSearchByCollectionName\");\n    SolrServer client = clients.get(0);\n    final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(\n        0,\n        ((HttpSolrServer) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n    client1.shutdown();\n  }\n\n","sourceOld":"  private void testSearchByCollectionName() throws SolrServerException {\n    log.info(\"### STARTING testSearchByCollectionName\");\n    SolrServer client = clients.get(0);\n    final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(\n        0,\n        ((HttpSolrServer) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","sourceNew":"  private void testSearchByCollectionName() throws SolrServerException {\n    log.info(\"### STARTING testSearchByCollectionName\");\n    SolrClient client = clients.get(0);\n    final String baseUrl = ((HttpSolrClient) client).getBaseURL().substring(\n        0,\n        ((HttpSolrClient) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrClient client1 = createNewSolrClient(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n    client1.shutdown();\n  }\n\n","sourceOld":"  private void testSearchByCollectionName() throws SolrServerException {\n    log.info(\"### STARTING testSearchByCollectionName\");\n    SolrServer client = clients.get(0);\n    final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(\n        0,\n        ((HttpSolrServer) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n    client1.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#testSearchByCollectionName().mjava","sourceNew":"  private void testSearchByCollectionName() throws SolrServerException, IOException {\n    log.info(\"### STARTING testSearchByCollectionName\");\n    SolrClient client = clients.get(0);\n    final String baseUrl = ((HttpSolrClient) client).getBaseURL().substring(\n        0,\n        ((HttpSolrClient) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    try (SolrClient client1 = createNewSolrClient(oneInstanceCollection, baseUrl)) {\n      SolrQuery query = new SolrQuery(\"*:*\");\n      long oneDocs = client1.query(query).getResults().getNumFound();\n      assertEquals(3, oneDocs);\n    }\n  }\n\n","sourceOld":"  private void testSearchByCollectionName() throws SolrServerException {\n    log.info(\"### STARTING testSearchByCollectionName\");\n    SolrClient client = clients.get(0);\n    final String baseUrl = ((HttpSolrClient) client).getBaseURL().substring(\n        0,\n        ((HttpSolrClient) client).getBaseURL().length()\n            - DEFAULT_COLLECTION.length() - 1);\n    \n    // the cores each have different names, but if we add the collection name to the url\n    // we should get mapped to the right core\n    SolrClient client1 = createNewSolrClient(oneInstanceCollection, baseUrl);\n    SolrQuery query = new SolrQuery(\"*:*\");\n    long oneDocs = client1.query(query).getResults().getNumFound();\n    assertEquals(3, oneDocs);\n    client1.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7ea7454b4afcb5dc9f7504f83d77b134df2b7c57":["c5a558d54519c651068ddb202f03befefb1514a7"],"c5a558d54519c651068ddb202f03befefb1514a7":["e19067e820b148e8dc0b240da4f2771cf7b68252"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["e19067e820b148e8dc0b240da4f2771cf7b68252","c5a558d54519c651068ddb202f03befefb1514a7"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["7b3a4ab7d2fe963a5a758d16f8bed1b0ce3b9027"],"e19067e820b148e8dc0b240da4f2771cf7b68252":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["7ea7454b4afcb5dc9f7504f83d77b134df2b7c57"],"7b3a4ab7d2fe963a5a758d16f8bed1b0ce3b9027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc3b13b430571c2e169f98fe38e1e7666f88522d"]},"commit2Childs":{"7ea7454b4afcb5dc9f7504f83d77b134df2b7c57":["bafca15d8e408346a67f4282ad1143b88023893b"],"c5a558d54519c651068ddb202f03befefb1514a7":["7ea7454b4afcb5dc9f7504f83d77b134df2b7c57","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b3a4ab7d2fe963a5a758d16f8bed1b0ce3b9027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["e19067e820b148e8dc0b240da4f2771cf7b68252"],"e19067e820b148e8dc0b240da4f2771cf7b68252":["c5a558d54519c651068ddb202f03befefb1514a7","407687e67faf6e1f02a211ca078d8e3eed631027"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"7b3a4ab7d2fe963a5a758d16f8bed1b0ce3b9027":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}