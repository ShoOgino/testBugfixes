{"path":"solr/core/src/test/org/apache/solr/cloud/ReplaceNodeTest#createReplaceNodeRequest(String,String,Boolean).mjava","commits":[{"id":"541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e","date":1500089733,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplaceNodeTest#createReplaceNodeRequest(String,String,Boolean).mjava","pathOld":"/dev/null","sourceNew":"  private CollectionAdminRequest.AsyncCollectionAdminRequest createReplaceNodeRequest(String sourceNode, String targetNode, Boolean parallel) {\n    if (random().nextBoolean()) {\n      return new CollectionAdminRequest.ReplaceNode(sourceNode, targetNode).setParallel(parallel);\n    } else  {\n      // test back compat with old param names\n      // todo remove in solr 8.0\n      return new CollectionAdminRequest.AsyncCollectionAdminRequest(CollectionParams.CollectionAction.REPLACENODE)  {\n        @Override\n        public SolrParams getParams() {\n          ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n          params.set(\"source\", sourceNode);\n          params.set(\"target\", targetNode);\n          if (parallel != null) params.set(\"parallel\", parallel.toString());\n          return params;\n        }\n      };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplaceNodeTest#createReplaceNodeRequest(String,String,Boolean).mjava","pathOld":"/dev/null","sourceNew":"  private CollectionAdminRequest.AsyncCollectionAdminRequest createReplaceNodeRequest(String sourceNode, String targetNode, Boolean parallel) {\n    if (random().nextBoolean()) {\n      return new CollectionAdminRequest.ReplaceNode(sourceNode, targetNode).setParallel(parallel);\n    } else  {\n      // test back compat with old param names\n      // todo remove in solr 8.0\n      return new CollectionAdminRequest.AsyncCollectionAdminRequest(CollectionParams.CollectionAction.REPLACENODE)  {\n        @Override\n        public SolrParams getParams() {\n          ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n          params.set(\"source\", sourceNode);\n          params.set(\"target\", targetNode);\n          if (parallel != null) params.set(\"parallel\", parallel.toString());\n          return params;\n        }\n      };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1","date":1517395742,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplaceNodeTest#createReplaceNodeRequest(String,String,Boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ReplaceNodeTest#createReplaceNodeRequest(String,String,Boolean).mjava","sourceNew":"  public static  CollectionAdminRequest.AsyncCollectionAdminRequest createReplaceNodeRequest(String sourceNode, String targetNode, Boolean parallel) {\n    if (random().nextBoolean()) {\n      return new CollectionAdminRequest.ReplaceNode(sourceNode, targetNode).setParallel(parallel);\n    } else  {\n      // test back compat with old param names\n      // todo remove in solr 8.0\n      return new CollectionAdminRequest.AsyncCollectionAdminRequest(CollectionParams.CollectionAction.REPLACENODE)  {\n        @Override\n        public SolrParams getParams() {\n          ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n          params.set(\"source\", sourceNode);\n          params.setNonNull(\"target\", targetNode);\n          if (parallel != null) params.set(\"parallel\", parallel.toString());\n          return params;\n        }\n      };\n    }\n  }\n\n","sourceOld":"  private CollectionAdminRequest.AsyncCollectionAdminRequest createReplaceNodeRequest(String sourceNode, String targetNode, Boolean parallel) {\n    if (random().nextBoolean()) {\n      return new CollectionAdminRequest.ReplaceNode(sourceNode, targetNode).setParallel(parallel);\n    } else  {\n      // test back compat with old param names\n      // todo remove in solr 8.0\n      return new CollectionAdminRequest.AsyncCollectionAdminRequest(CollectionParams.CollectionAction.REPLACENODE)  {\n        @Override\n        public SolrParams getParams() {\n          ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n          params.set(\"source\", sourceNode);\n          params.set(\"target\", targetNode);\n          if (parallel != null) params.set(\"parallel\", parallel.toString());\n          return params;\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1":["541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e"],"541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1"]},"commit2Childs":{"135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e":["135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1","aaf90fc29510e72665ac7934f34c3d1c25efad64"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aaf90fc29510e72665ac7934f34c3d1c25efad64","541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}