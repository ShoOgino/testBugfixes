{"path":"lucene/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","pathOld":"src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","sourceNew":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d427706b993358d7f0d4554ee72d3913e39a0d0","date":1275231726,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","sourceNew":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException name) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+name.getMessage());\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb9003b8de7e0da8e841408fe85c555b5243f411","date":1275241944,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","sourceNew":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException name) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+name.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/VirtualMethod#VirtualMethod(Class[C],String,Class[#]...).mjava","sourceNew":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance for the given {@code baseClass} and method declaration.\n   * @throws UnsupportedOperationException if you create a second instance of the same\n   *  {@code baseClass} and method declaration combination. This enforces the singleton status.\n   * @throws IllegalArgumentException if {@code baseClass} does not declare the given method.\n   */\n  public VirtualMethod(Class<C> baseClass, String method, Class<?>... parameters) {\n    this.baseClass = baseClass;\n    this.method = method;\n    this.parameters = parameters;\n    try {\n      if (!singletonSet.add(baseClass.getDeclaredMethod(method, parameters)))\n        throw new UnsupportedOperationException(\n          \"VirtualMethod instances must be singletons and therefore \" +\n          \"assigned to static final members in the same class, they use as baseClass ctor param.\"\n        );\n    } catch (NoSuchMethodException nsme) {\n      throw new IllegalArgumentException(baseClass.getName() + \" has no such method: \"+nsme.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d427706b993358d7f0d4554ee72d3913e39a0d0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cb9003b8de7e0da8e841408fe85c555b5243f411"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb9003b8de7e0da8e841408fe85c555b5243f411":["7d427706b993358d7f0d4554ee72d3913e39a0d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7d427706b993358d7f0d4554ee72d3913e39a0d0":["cb9003b8de7e0da8e841408fe85c555b5243f411"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cb9003b8de7e0da8e841408fe85c555b5243f411":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7d427706b993358d7f0d4554ee72d3913e39a0d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}