{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","commits":[{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","sourceOld":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","sourceOld":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}