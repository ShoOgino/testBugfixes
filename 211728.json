{"path":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34aad2b15e35959ef2a8c4b991feea4c497936b7","date":1294423355,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":["1e64e4308bd25f7fdf6115d689d83d8c2786cf3f"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1efe3edca215dd9891cb42af283fed96f792ca0","date":1320428891,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"Read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"88822d307a7b7c2a5f97d80b7779ece9a1f82518","date":1320883044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"Read past EOF (resource: \" + this + \")\");\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"Read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e5090f41e198d9dd9374e99981f940b111973af2","date":1325969785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"Read past EOF (resource: \" + this + \")\");\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e5090f41e198d9dd9374e99981f940b111973af2"],"f1efe3edca215dd9891cb42af283fed96f792ca0":["34aad2b15e35959ef2a8c4b991feea4c497936b7"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","34aad2b15e35959ef2a8c4b991feea4c497936b7"],"88822d307a7b7c2a5f97d80b7779ece9a1f82518":["f1efe3edca215dd9891cb42af283fed96f792ca0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"34aad2b15e35959ef2a8c4b991feea4c497936b7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e5090f41e198d9dd9374e99981f940b111973af2":["88822d307a7b7c2a5f97d80b7779ece9a1f82518"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","34aad2b15e35959ef2a8c4b991feea4c497936b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1efe3edca215dd9891cb42af283fed96f792ca0":["88822d307a7b7c2a5f97d80b7779ece9a1f82518"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"88822d307a7b7c2a5f97d80b7779ece9a1f82518":["e5090f41e198d9dd9374e99981f940b111973af2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"34aad2b15e35959ef2a8c4b991feea4c497936b7":["f1efe3edca215dd9891cb42af283fed96f792ca0","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"e5090f41e198d9dd9374e99981f940b111973af2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["29ef99d61cda9641b6250bf9567329a6e65f901d","34aad2b15e35959ef2a8c4b991feea4c497936b7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}