{"path":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","commits":[{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n\n    new IndexSearcher(reader).search(query, new HitCollector() {\n      public final void collect(int doc, float score) {\n        bits.set(doc);  // set bit for hit\n      }\n    });\n    return bits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72156526dd25046a0956ed4b805568cb7e7ecd6f","date":1225469893,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader);\n      }\n    };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n\n    new IndexSearcher(reader).search(query, new HitCollector() {\n      public final void collect(int doc, float score) {\n        bits.set(doc);  // set bit for hit\n      }\n    });\n    return bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final QueryWeight weight = query.queryWeight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n    };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.createWeight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n    };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final QueryWeight weight = query.queryWeight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["512f996a2f8247d73f287fe4840951c0f55437ed"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"512f996a2f8247d73f287fe4840951c0f55437ed","date":1250547720,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n    };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.createWeight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n    };\n  }\n\n","bugFix":["fe941135bdfc28c81e20b4d21422f8726af34925"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a0b8ae4ac997de7adea27f34c380588fa28d646","date":1253188966,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n      public boolean isCacheable() { return false; }\n    };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d62b1ed69b2d54a65df6f993499b39562d1dc1f9","date":1255700561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      @Override\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n      @Override\n      public boolean isCacheable() { return false; }\n    };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n      public boolean isCacheable() { return false; }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/QueryWrapperFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      @Override\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n      @Override\n      public boolean isCacheable() { return false; }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Weight weight = query.weight(new IndexSearcher(reader));\n    return new DocIdSet() {\n      @Override\n      public DocIdSetIterator iterator() throws IOException {\n        return weight.scorer(reader, true, false);\n      }\n      @Override\n      public boolean isCacheable() { return false; }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d62b1ed69b2d54a65df6f993499b39562d1dc1f9":["3a0b8ae4ac997de7adea27f34c380588fa28d646"],"512f996a2f8247d73f287fe4840951c0f55437ed":["fe941135bdfc28c81e20b4d21422f8726af34925"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"72156526dd25046a0956ed4b805568cb7e7ecd6f":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"052fac7830290bd38a04cddee1a121ee07656b56":["72156526dd25046a0956ed4b805568cb7e7ecd6f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d62b1ed69b2d54a65df6f993499b39562d1dc1f9"],"3a0b8ae4ac997de7adea27f34c380588fa28d646":["512f996a2f8247d73f287fe4840951c0f55437ed"]},"commit2Childs":{"d62b1ed69b2d54a65df6f993499b39562d1dc1f9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"512f996a2f8247d73f287fe4840951c0f55437ed":["3a0b8ae4ac997de7adea27f34c380588fa28d646"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["72156526dd25046a0956ed4b805568cb7e7ecd6f"],"fe941135bdfc28c81e20b4d21422f8726af34925":["512f996a2f8247d73f287fe4840951c0f55437ed"],"72156526dd25046a0956ed4b805568cb7e7ecd6f":["052fac7830290bd38a04cddee1a121ee07656b56"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"3a0b8ae4ac997de7adea27f34c380588fa28d646":["d62b1ed69b2d54a65df6f993499b39562d1dc1f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}