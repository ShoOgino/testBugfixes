{"path":"sandbox/contributions/ant/src/main/org/apache/lucene/ant/IndexTask#execute().mjava","commits":[{"id":"6cae9303ec860d8a88b807570b29e841a3d1fbd3","date":1026349951,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/ant/src/main/org/apache/lucene/ant/IndexTask#execute().mjava","pathOld":"sandbox/projects/ant/src/main/org/apache/lucene/ant/IndexTask#execute().mjava","sourceNew":"    /**\n     *  Begins the indexing\n     *\n     * @exception  BuildException  If an error occurs indexing the\n     *      fileset\n     * @todo add classpath handling so handler does not\n     *       have to be in system classpath\n     */\n    public void execute() throws BuildException {\n        try {\n            Class clazz = Class.forName(handlerClassName);\n            handler = (DocumentHandler) clazz.newInstance();\n        }\n        catch (ClassNotFoundException cnfe) {\n            throw new BuildException(cnfe);\n        }\n        catch (InstantiationException ie) {\n            throw new BuildException(ie);\n        }\n        catch (IllegalAccessException iae) {\n            throw new BuildException(iae);\n        }\n\n        try {\n            indexDocs();\n        }\n        catch (IOException e) {\n            throw new BuildException(e);\n        }\n    }\n\n","sourceOld":"    /**\n     *  Begins the indexing\n     *\n     * @exception  BuildException  If an error occurs indexing the\n     *      fileset\n     * @todo add classpath handling so handler does not\n     *       have to be in system classpath\n     */\n    public void execute() throws BuildException {\n        try {\n            Class clazz = Class.forName(handlerClassName);\n            handler = (DocumentHandler) clazz.newInstance();\n        }\n        catch (ClassNotFoundException cnfe) {\n            throw new BuildException(cnfe);\n        }\n        catch (InstantiationException ie) {\n            throw new BuildException(ie);\n        }\n        catch (IllegalAccessException iae) {\n            throw new BuildException(iae);\n        }\n\n        try {\n            indexDocs();\n        }\n        catch (IOException e) {\n            throw new BuildException(e);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1231e7cbcc1a7bb7e8e177fba43db8d12e03b6db","date":1074524313,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/ant/src/main/org/apache/lucene/ant/IndexTask#execute().mjava","pathOld":"sandbox/contributions/ant/src/main/org/apache/lucene/ant/IndexTask#execute().mjava","sourceNew":"  /**\n   *  Begins the indexing\n   *\n   *@exception  BuildException  If an error occurs indexing the\n   *      fileset\n   */\n  public void execute() throws BuildException {\n\n    // construct handler and analyzer dynamically\n    try {\n      Class clazz = Class.forName(handlerClassName);\n      handler = (DocumentHandler) clazz.newInstance();\n\n      clazz = Class.forName(analyzerClassName);\n      analyzer = (Analyzer) clazz.newInstance();\n    } catch (ClassNotFoundException cnfe) {\n      throw new BuildException(cnfe);\n    } catch (InstantiationException ie) {\n      throw new BuildException(ie);\n    } catch (IllegalAccessException iae) {\n      throw new BuildException(iae);\n    }\n\n    log(\"Document handler = \" + handler.getClass(), Project.MSG_VERBOSE);\n    log(\"Analyzer = \" + analyzer.getClass(), Project.MSG_VERBOSE);\n\n    if (handler instanceof ConfigurableDocumentHandler) {\n      ((ConfigurableDocumentHandler) handler).configure(handlerConfig.getProperties());\n    }\n\n    try {\n      indexDocs();\n    } catch (IOException e) {\n      throw new BuildException(e);\n    }\n  }\n\n","sourceOld":"    /**\n     *  Begins the indexing\n     *\n     * @exception  BuildException  If an error occurs indexing the\n     *      fileset\n     * @todo add classpath handling so handler does not\n     *       have to be in system classpath\n     */\n    public void execute() throws BuildException {\n        try {\n            Class clazz = Class.forName(handlerClassName);\n            handler = (DocumentHandler) clazz.newInstance();\n        }\n        catch (ClassNotFoundException cnfe) {\n            throw new BuildException(cnfe);\n        }\n        catch (InstantiationException ie) {\n            throw new BuildException(ie);\n        }\n        catch (IllegalAccessException iae) {\n            throw new BuildException(iae);\n        }\n\n        try {\n            indexDocs();\n        }\n        catch (IOException e) {\n            throw new BuildException(e);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/ant/src/main/org/apache/lucene/ant/IndexTask#execute().mjava","pathOld":"sandbox/contributions/ant/src/main/org/apache/lucene/ant/IndexTask#execute().mjava","sourceNew":"  /**\n   *  Begins the indexing\n   *\n   *@exception  BuildException  If an error occurs indexing the\n   *      fileset\n   */\n  public void execute() throws BuildException {\n\n    // construct handler and analyzer dynamically\n    try {\n      Class clazz = Class.forName(handlerClassName);\n      handler = (DocumentHandler) clazz.newInstance();\n\n      clazz = Class.forName(analyzerClassName);\n      analyzer = (Analyzer) clazz.newInstance();\n    } catch (ClassNotFoundException cnfe) {\n      throw new BuildException(cnfe);\n    } catch (InstantiationException ie) {\n      throw new BuildException(ie);\n    } catch (IllegalAccessException iae) {\n      throw new BuildException(iae);\n    }\n\n    log(\"Document handler = \" + handler.getClass(), Project.MSG_VERBOSE);\n    log(\"Analyzer = \" + analyzer.getClass(), Project.MSG_VERBOSE);\n\n    if (handler instanceof ConfigurableDocumentHandler) {\n      ((ConfigurableDocumentHandler) handler).configure(handlerConfig.getProperties());\n    }\n\n    try {\n      indexDocs();\n    } catch (IOException e) {\n      throw new BuildException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   *  Begins the indexing\n   *\n   *@exception  BuildException  If an error occurs indexing the\n   *      fileset\n   */\n  public void execute() throws BuildException {\n\n    // construct handler and analyzer dynamically\n    try {\n      Class clazz = Class.forName(handlerClassName);\n      handler = (DocumentHandler) clazz.newInstance();\n\n      clazz = Class.forName(analyzerClassName);\n      analyzer = (Analyzer) clazz.newInstance();\n    } catch (ClassNotFoundException cnfe) {\n      throw new BuildException(cnfe);\n    } catch (InstantiationException ie) {\n      throw new BuildException(ie);\n    } catch (IllegalAccessException iae) {\n      throw new BuildException(iae);\n    }\n\n    log(\"Document handler = \" + handler.getClass(), Project.MSG_VERBOSE);\n    log(\"Analyzer = \" + analyzer.getClass(), Project.MSG_VERBOSE);\n\n    if (handler instanceof ConfigurableDocumentHandler) {\n      ((ConfigurableDocumentHandler) handler).configure(handlerConfig.getProperties());\n    }\n\n    try {\n      indexDocs();\n    } catch (IOException e) {\n      throw new BuildException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["1231e7cbcc1a7bb7e8e177fba43db8d12e03b6db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6cae9303ec860d8a88b807570b29e841a3d1fbd3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1231e7cbcc1a7bb7e8e177fba43db8d12e03b6db":["6cae9303ec860d8a88b807570b29e841a3d1fbd3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6cae9303ec860d8a88b807570b29e841a3d1fbd3"],"6cae9303ec860d8a88b807570b29e841a3d1fbd3":["1231e7cbcc1a7bb7e8e177fba43db8d12e03b6db"],"1231e7cbcc1a7bb7e8e177fba43db8d12e03b6db":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}