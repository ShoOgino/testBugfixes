{"path":"lucene/core/src/java/org/apache/lucene/geo/Rectangle2D#edgeIntersectsQuery(int,int,int,int).mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Rectangle2D#edgeIntersectsQuery(int,int,int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#edgeIntersectsQuery(int,int,int,int).mjava","sourceNew":"  /** returns true if the edge (defined by (ax, ay) (bx, by)) intersects the query */\n  private boolean edgeIntersectsQuery(int ax, int ay, int bx, int by) {\n    if (this.crossesDateline() == true) {\n      return edgeIntersectsBox(ax, ay, bx, by, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n          || edgeIntersectsBox(ax, ay, bx, by, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n    }\n    return edgeIntersectsBox(ax, ay, bx, by, this.minX, this.maxX, this.minY, this.maxY);\n  }\n\n","sourceOld":"  /** returns true if the edge (defined by (ax, ay) (bx, by)) intersects the query */\n  private boolean edgeIntersectsQuery(int ax, int ay, int bx, int by) {\n    if (this.crossesDateline() == true) {\n      return edgeIntersectsBox(ax, ay, bx, by, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n          || edgeIntersectsBox(ax, ay, bx, by, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n    }\n    return edgeIntersectsBox(ax, ay, bx, by, this.minX, this.maxX, this.minY, this.maxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56c42be8d779573d0c86ba775117e17360dbf5a6","date":1583217404,"type":4,"author":"Ignacio Vera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Rectangle2D#edgeIntersectsQuery(int,int,int,int).mjava","sourceNew":null,"sourceOld":"  /** returns true if the edge (defined by (ax, ay) (bx, by)) intersects the query */\n  private boolean edgeIntersectsQuery(int ax, int ay, int bx, int by) {\n    if (this.crossesDateline() == true) {\n      return edgeIntersectsBox(ax, ay, bx, by, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n          || edgeIntersectsBox(ax, ay, bx, by, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n    }\n    return edgeIntersectsBox(ax, ay, bx, by, this.minX, this.maxX, this.minY, this.maxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56c42be8d779573d0c86ba775117e17360dbf5a6"]},"commit2Childs":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}