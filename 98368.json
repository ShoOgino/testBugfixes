{"path":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#getDataHome(CoreDescriptor).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    if (hdfsDataDir == null) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"You must set the \"\n          + this.getClass().getSimpleName() + \" param \" + HDFS_HOME\n          + \" for relative dataDir paths to work\");\n    }\n    \n    // by default, we go off the instance directory\n    String path;\n    if (cd.getCloudDescriptor() != null) {\n      path = URLEncoder.encode(cd.getCloudDescriptor().getCollectionName(),\n          \"UTF-8\")\n          + \"/\"\n          + URLEncoder.encode(cd.getCloudDescriptor().getCoreNodeName(),\n              \"UTF-8\");\n    } else {\n      path = cd.getName();\n    }\n    \n    return normalize(SolrResourceLoader.normalizeDir(ZkController\n        .trimLeadingAndTrailingSlashes(hdfsDataDir)\n        + \"/\"\n        + path\n        + \"/\"\n        + cd.getDataDir()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    if (hdfsDataDir == null) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"You must set the \"\n          + this.getClass().getSimpleName() + \" param \" + HDFS_HOME\n          + \" for relative dataDir paths to work\");\n    }\n    \n    // by default, we go off the instance directory\n    String path;\n    if (cd.getCloudDescriptor() != null) {\n      path = URLEncoder.encode(cd.getCloudDescriptor().getCollectionName(),\n          \"UTF-8\")\n          + \"/\"\n          + URLEncoder.encode(cd.getCloudDescriptor().getCoreNodeName(),\n              \"UTF-8\");\n    } else {\n      path = cd.getName();\n    }\n    \n    return normalize(SolrResourceLoader.normalizeDir(ZkController\n        .trimLeadingAndTrailingSlashes(hdfsDataDir)\n        + \"/\"\n        + path\n        + \"/\"\n        + cd.getDataDir()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#getDataHome(CoreDescriptor).mjava","sourceNew":"  @Override\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    if (hdfsDataDir == null) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"You must set the \"\n          + this.getClass().getSimpleName() + \" param \" + HDFS_HOME\n          + \" for relative dataDir paths to work\");\n    }\n    \n    // by default, we go off the instance directory\n    String path;\n    if (cd.getCloudDescriptor() != null) {\n      path = URLEncoder.encode(cd.getCloudDescriptor().getCollectionName(),\n          \"UTF-8\")\n          + \"/\"\n          + URLEncoder.encode(cd.getCloudDescriptor().getCoreNodeName(),\n              \"UTF-8\");\n    } else {\n      path = cd.getName();\n    }\n    \n    return normalize(SolrPaths.normalizeDir(ZkController\n        .trimLeadingAndTrailingSlashes(hdfsDataDir)\n        + \"/\"\n        + path\n        + \"/\"\n        + cd.getDataDir()));\n  }\n\n","sourceOld":"  @Override\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    if (hdfsDataDir == null) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"You must set the \"\n          + this.getClass().getSimpleName() + \" param \" + HDFS_HOME\n          + \" for relative dataDir paths to work\");\n    }\n    \n    // by default, we go off the instance directory\n    String path;\n    if (cd.getCloudDescriptor() != null) {\n      path = URLEncoder.encode(cd.getCloudDescriptor().getCollectionName(),\n          \"UTF-8\")\n          + \"/\"\n          + URLEncoder.encode(cd.getCloudDescriptor().getCoreNodeName(),\n              \"UTF-8\");\n    } else {\n      path = cd.getName();\n    }\n    \n    return normalize(SolrResourceLoader.normalizeDir(ZkController\n        .trimLeadingAndTrailingSlashes(hdfsDataDir)\n        + \"/\"\n        + path\n        + \"/\"\n        + cd.getDataDir()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}