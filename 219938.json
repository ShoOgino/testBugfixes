{"path":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      DocValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      DocValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      DocValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      DocValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      DocValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      DocValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32e7c2a80dad193a76a03ec46b878969d469ff6c","date":1323722006,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      DocValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      DocValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery.FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery.FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery.FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/FunctionRangeQuery[FunctionRangeQParserPlugin].FunctionRangeCollector#setNextReader(IndexReader.AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader.AtomicReaderContext context) throws IOException {\n      maxdoc = context.reader.maxDoc();\n      FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);\n      scorer = dv.getRangeScorer(context.reader, rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());\n      super.setNextReader(context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["d638301ad1cfcae567b681b893bc8781f0ee48a5","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["d638301ad1cfcae567b681b893bc8781f0ee48a5","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["c26f00b574427b55127e869b935845554afde1fa","32e7c2a80dad193a76a03ec46b878969d469ff6c"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["32e7c2a80dad193a76a03ec46b878969d469ff6c","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}