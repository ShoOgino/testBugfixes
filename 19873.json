{"path":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","commits":[{"id":"d4769bdea5a853f1841c485bc1fd9d79cb7022fc","date":1292168168,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"/dev/null","sourceNew":"  private int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"/dev/null","sourceNew":"  private int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"/dev/null","sourceNew":"  private int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  private int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  private int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  private int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30898a79d4bce815d5551a8a22c32e88f1972cb9","date":1298740268,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else if (inputType == INPUT_TYPE.BYTE2) {\n      v = in.readVInt();\n    } else {\n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readLabel(DataInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readLabel(DataInput).mjava","sourceNew":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","sourceOld":"  int readLabel(DataInput in) throws IOException {\n    final int v;\n    if (inputType == INPUT_TYPE.BYTE1) {\n      v = in.readByte()&0xFF;\n    } else { \n      v = in.readVInt();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","56da903869515527852ee21ea7ef7bfe414cd40d"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["30898a79d4bce815d5551a8a22c32e88f1972cb9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["868da859b43505d9d2a023bfeae6dd0c795f5295","30898a79d4bce815d5551a8a22c32e88f1972cb9"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["70ad682703b8585f5d0a637efec044d57ec05efb","30898a79d4bce815d5551a8a22c32e88f1972cb9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["30898a79d4bce815d5551a8a22c32e88f1972cb9","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"56da903869515527852ee21ea7ef7bfe414cd40d":["d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"30898a79d4bce815d5551a8a22c32e88f1972cb9":["56da903869515527852ee21ea7ef7bfe414cd40d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["d619839baa8ce5503e496b94a9e42ad6f079293f","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["70ad682703b8585f5d0a637efec044d57ec05efb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","30898a79d4bce815d5551a8a22c32e88f1972cb9","868da859b43505d9d2a023bfeae6dd0c795f5295"],"30898a79d4bce815d5551a8a22c32e88f1972cb9":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}