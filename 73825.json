{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(TopScorer,boolean,boolean,Collector,SubScorer).mjava","commits":[{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(TopScorer,boolean,boolean,Collector,SubScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","sourceNew":"    public SubScorer(TopScorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      this.more = true;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","sourceOld":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5794e5c995c57444b154b01a9f3c837cd530a77","date":1394190201,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(BulkScorer,boolean,boolean,Collector,SubScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(TopScorer,boolean,boolean,Collector,SubScorer).mjava","sourceNew":"    public SubScorer(BulkScorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      this.more = true;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","sourceOld":"    public SubScorer(TopScorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      this.more = true;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5794e5c995c57444b154b01a9f3c837cd530a77":["2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["a5794e5c995c57444b154b01a9f3c837cd530a77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5794e5c995c57444b154b01a9f3c837cd530a77":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a5794e5c995c57444b154b01a9f3c837cd530a77","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}