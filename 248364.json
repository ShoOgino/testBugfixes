{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(Document,int).mjava","commits":[{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(StoredDocument,int).mjava","sourceNew":"    /** \n     * Returns the value of the <code>weightField</code> for the current document.\n     * Retrieves the value for the <code>weightField</code> if it's stored (using <code>doc</code>)\n     * or if it's indexed as {@link NumericDocValues} (using <code>docId</code>) for the document.\n     * If no value is found, then the weight is 0.\n     */\n    protected long getWeight(Document doc, int docId) {\n      IndexableField weight = doc.getField(weightField);\n      if (weight != null) { // found weight as stored\n        return (weight.numericValue() != null) ? weight.numericValue().longValue() : 0;\n      } else if (weightValues != null) {  // found weight as NumericDocValue\n        return weightValues.get(docId);\n      } else { // fall back\n        return 0;\n      }\n    }\n\n","sourceOld":"    /** \n     * Returns the value of the <code>weightField</code> for the current document.\n     * Retrieves the value for the <code>weightField</code> if it's stored (using <code>doc</code>)\n     * or if it's indexed as {@link NumericDocValues} (using <code>docId</code>) for the document.\n     * If no value is found, then the weight is 0.\n     */\n    protected long getWeight(StoredDocument doc, int docId) {\n      StorableField weight = doc.getField(weightField);\n      if (weight != null) { // found weight as stored\n        return (weight.numericValue() != null) ? weight.numericValue().longValue() : 0;\n      } else if (weightValues != null) {  // found weight as NumericDocValue\n        return weightValues.get(docId);\n      } else { // fall back\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the value of the <code>weightField</code> for the current document.\n     * Retrieves the value for the <code>weightField</code> if it's stored (using <code>doc</code>)\n     * or if it's indexed as {@link NumericDocValues} (using <code>docId</code>) for the document.\n     * If no value is found, then the weight is 0.\n     */\n    protected long getWeight(Document doc, int docId) throws IOException {\n      IndexableField weight = doc.getField(weightField);\n      if (weight != null) { // found weight as stored\n        return (weight.numericValue() != null) ? weight.numericValue().longValue() : 0;\n      } else if (weightValues != null) {  // found weight as NumericDocValue\n        if (weightValues.docID() < docId) {\n          weightValues.advance(docId);\n        }\n        if (weightValues.docID() == docId) {\n          return weightValues.longValue();\n        } else {\n          // missing\n          return 0;\n        }\n      } else { // fall back\n        return 0;\n      }\n    }\n\n","sourceOld":"    /** \n     * Returns the value of the <code>weightField</code> for the current document.\n     * Retrieves the value for the <code>weightField</code> if it's stored (using <code>doc</code>)\n     * or if it's indexed as {@link NumericDocValues} (using <code>docId</code>) for the document.\n     * If no value is found, then the weight is 0.\n     */\n    protected long getWeight(Document doc, int docId) {\n      IndexableField weight = doc.getField(weightField);\n      if (weight != null) { // found weight as stored\n        return (weight.numericValue() != null) ? weight.numericValue().longValue() : 0;\n      } else if (weightValues != null) {  // found weight as NumericDocValue\n        return weightValues.get(docId);\n      } else { // fall back\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the value of the <code>weightField</code> for the current document.\n     * Retrieves the value for the <code>weightField</code> if it's stored (using <code>doc</code>)\n     * or if it's indexed as {@link NumericDocValues} (using <code>docId</code>) for the document.\n     * If no value is found, then the weight is 0.\n     */\n    protected long getWeight(Document doc, int docId) throws IOException {\n      IndexableField weight = doc.getField(weightField);\n      if (weight != null) { // found weight as stored\n        return (weight.numericValue() != null) ? weight.numericValue().longValue() : 0;\n      } else if (weightValues != null) {  // found weight as NumericDocValue\n        if (weightValues.docID() < docId) {\n          weightValues.advance(docId);\n        }\n        if (weightValues.docID() == docId) {\n          return weightValues.longValue();\n        } else {\n          // missing\n          return 0;\n        }\n      } else { // fall back\n        return 0;\n      }\n    }\n\n","sourceOld":"    /** \n     * Returns the value of the <code>weightField</code> for the current document.\n     * Retrieves the value for the <code>weightField</code> if it's stored (using <code>doc</code>)\n     * or if it's indexed as {@link NumericDocValues} (using <code>docId</code>) for the document.\n     * If no value is found, then the weight is 0.\n     */\n    protected long getWeight(Document doc, int docId) {\n      IndexableField weight = doc.getField(weightField);\n      if (weight != null) { // found weight as stored\n        return (weight.numericValue() != null) ? weight.numericValue().longValue() : 0;\n      } else if (weightValues != null) {  // found weight as NumericDocValue\n        return weightValues.get(docId);\n      } else { // fall back\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(Document,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentDictionary.DocumentInputIterator#getWeight(Document,int).mjava","sourceNew":"    /** \n     * Returns the value of the <code>weightField</code> for the current document.\n     * Retrieves the value for the <code>weightField</code> if it's stored (using <code>doc</code>)\n     * or if it's indexed as {@link NumericDocValues} (using <code>docId</code>) for the document.\n     * If no value is found, then the weight is 0.\n     */\n    protected long getWeight(Document doc, int docId) throws IOException {\n      IndexableField weight = doc.getField(weightField);\n      if (weight != null) { // found weight as stored\n        return (weight.numericValue() != null) ? weight.numericValue().longValue() : 0;\n      } else if (weightValues != null) {  // found weight as NumericDocValue\n        if (weightValues.docID() < docId) {\n          weightValues.advance(docId);\n        }\n        if (weightValues.docID() == docId) {\n          return weightValues.longValue();\n        } else {\n          // missing\n          return 0;\n        }\n      } else { // fall back\n        return 0;\n      }\n    }\n\n","sourceOld":"    /** \n     * Returns the value of the <code>weightField</code> for the current document.\n     * Retrieves the value for the <code>weightField</code> if it's stored (using <code>doc</code>)\n     * or if it's indexed as {@link NumericDocValues} (using <code>docId</code>) for the document.\n     * If no value is found, then the weight is 0.\n     */\n    protected long getWeight(Document doc, int docId) {\n      IndexableField weight = doc.getField(weightField);\n      if (weight != null) { // found weight as stored\n        return (weight.numericValue() != null) ? weight.numericValue().longValue() : 0;\n      } else if (weightValues != null) {  // found weight as NumericDocValue\n        return weightValues.get(docId);\n      } else { // fall back\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}