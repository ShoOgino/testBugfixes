{"path":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","commits":[{"id":"ee3a275f925be62184fad78d647fa70e27ac7cea","date":1301416659,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/test/java/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","pathOld":"solr/contrib/analysis-extras/src/test/java/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"Lucene3x\".equals(Codec.getDefault().getName()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75b4d037d2c8fd7d68c07be61d25c0260cf8091e","date":1336829560,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/schema/TestICUCollationField#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    assumeFalse(\"preflex format only supports UTF-8 encoded bytes\", \"Lucene3x\".equals(Codec.getDefault().getName()));\n    String home = setupSolrHome();\n    initCore(\"solrconfig.xml\",\"schema.xml\", home);\n    // add some docs\n    assertU(adoc(\"id\", \"1\", \"text\", \"\\u0633\\u0627\\u0628\"));\n    assertU(adoc(\"id\", \"2\", \"text\", \"I WİLL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"3\", \"text\", \"ı will use turkish casıng\"));\n    assertU(adoc(\"id\", \"4\", \"text\", \"Töne\"));\n    assertU(adoc(\"id\", \"5\", \"text\", \"I W\\u0049\\u0307LL USE TURKİSH CASING\"));\n    assertU(adoc(\"id\", \"6\", \"text\", \"Ｔｅｓｔｉｎｇ\"));\n    assertU(adoc(\"id\", \"7\", \"text\", \"Tone\"));\n    assertU(adoc(\"id\", \"8\", \"text\", \"Testing\"));\n    assertU(adoc(\"id\", \"9\", \"text\", \"testing\"));\n    assertU(adoc(\"id\", \"10\", \"text\", \"toene\"));\n    assertU(adoc(\"id\", \"11\", \"text\", \"Tzne\"));\n    assertU(adoc(\"id\", \"12\", \"text\", \"\\u0698\\u0698\"));\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["ee3a275f925be62184fad78d647fa70e27ac7cea"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","ee3a275f925be62184fad78d647fa70e27ac7cea"],"a3776dccca01c11e7046323cfad46a3b4a471233":["ee3a275f925be62184fad78d647fa70e27ac7cea","ee3a275f925be62184fad78d647fa70e27ac7cea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee3a275f925be62184fad78d647fa70e27ac7cea"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee3a275f925be62184fad78d647fa70e27ac7cea"],"ee3a275f925be62184fad78d647fa70e27ac7cea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75b4d037d2c8fd7d68c07be61d25c0260cf8091e"],"75b4d037d2c8fd7d68c07be61d25c0260cf8091e":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["75b4d037d2c8fd7d68c07be61d25c0260cf8091e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","ee3a275f925be62184fad78d647fa70e27ac7cea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"45669a651c970812a680841b97a77cce06af559f":[],"ee3a275f925be62184fad78d647fa70e27ac7cea":["7b91922b55d15444d554721b352861d028eb8278","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"75b4d037d2c8fd7d68c07be61d25c0260cf8091e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}