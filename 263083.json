{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","commits":[{"id":"7c2faf42ce045d4bd93fa175ef185dc88f4f3bcf","date":1450457061,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","pathOld":"/dev/null","sourceNew":"  public SimpleOrderedMap getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    info.add(\"processor\", processor);\n    info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e5f469d206ae27a1d59e654e70a1413ffcec765","date":1462661221,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","sourceNew":"  public SimpleOrderedMap getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    if (processor != null) info.add(\"processor\", processor);\n    if (elapse != -1) info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","sourceOld":"  public SimpleOrderedMap getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    info.add(\"processor\", processor);\n    info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","sourceNew":"  public SimpleOrderedMap getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    if (processor != null) info.add(\"processor\", processor);\n    if (elapse != -1) info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","sourceOld":"  public SimpleOrderedMap getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    info.add(\"processor\", processor);\n    info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","sourceNew":"  public SimpleOrderedMap getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    if (processor != null) info.add(\"processor\", processor);\n    if (elapse != -1) info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","sourceOld":"  public SimpleOrderedMap getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    info.add(\"processor\", processor);\n    info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetDebugInfo#getFacetDebugInfo().mjava","sourceNew":"  public SimpleOrderedMap<Object> getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    if (processor != null) info.add(\"processor\", processor);\n    if (elapse != -1) info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","sourceOld":"  public SimpleOrderedMap getFacetDebugInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    if (filter != null) info.add(\"filter\", filter);\n    if (processor != null) info.add(\"processor\", processor);\n    if (elapse != -1) info.add(\"elapse\", elapse);\n    if (reqDescription != null) {\n      info.addAll(reqDescription);\n    } \n    info.addAll(this.info);\n    \n    if (children != null && children.size() > 0) {\n      List<Object> subfacet = new ArrayList<Object>();\n      info.add(\"sub-facet\", subfacet);\n      for (FacetDebugInfo child : children) {\n        subfacet.add(child.getFacetDebugInfo());\n      }\n    }     \n    return info;\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["3e5f469d206ae27a1d59e654e70a1413ffcec765"],"3e5f469d206ae27a1d59e654e70a1413ffcec765":["7c2faf42ce045d4bd93fa175ef185dc88f4f3bcf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e66a459d38c1c4a2f97128433dab546f683a9fed":["7c2faf42ce045d4bd93fa175ef185dc88f4f3bcf","3e5f469d206ae27a1d59e654e70a1413ffcec765"],"7c2faf42ce045d4bd93fa175ef185dc88f4f3bcf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7c2faf42ce045d4bd93fa175ef185dc88f4f3bcf","3e5f469d206ae27a1d59e654e70a1413ffcec765"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e5f469d206ae27a1d59e654e70a1413ffcec765":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e","e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c2faf42ce045d4bd93fa175ef185dc88f4f3bcf"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"7c2faf42ce045d4bd93fa175ef185dc88f4f3bcf":["3e5f469d206ae27a1d59e654e70a1413ffcec765","e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}