{"path":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","commits":[{"id":"818d704eaaf0fba0561d0d2752832e1015053482","date":1327419676,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"\t    @Override\n\t    public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n\t      DeleteUpdateCommand expected = deleteCommands.poll();\n\t      assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n\t      assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n\t          ObjectUtils.equals(expected.id, cmd.id) &&\n\t          ObjectUtils.equals(expected.query, cmd.query) &&\n\t          expected.commitWithin==cmd.commitWithin);\n\t    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"\t    @Override\n\t    public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n\t      DeleteUpdateCommand expected = deleteCommands.poll();\n\t      assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n\t      assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n\t          ObjectUtils.equals(expected.id, cmd.id) &&\n\t          ObjectUtils.equals(expected.query, cmd.query) &&\n\t          expected.commitWithin==cmd.commitWithin);\n\t    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"\t    @Override\n\t    public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n\t      DeleteUpdateCommand expected = deleteCommands.poll();\n\t      assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n\t      assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n\t          ObjectUtils.equals(expected.id, cmd.id) &&\n\t          ObjectUtils.equals(expected.query, cmd.query) &&\n\t          expected.commitWithin==cmd.commitWithin);\n\t    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","sourceNew":"      @Override\n      public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n        DeleteUpdateCommand expected = deleteCommands.poll();\n        assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n        assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n            ObjectUtils.equals(expected.id, cmd.id) &&\n            ObjectUtils.equals(expected.query, cmd.query) &&\n            expected.commitWithin==cmd.commitWithin);\n      }\n\n","sourceOld":"\t    @Override\n\t    public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n\t      DeleteUpdateCommand expected = deleteCommands.poll();\n\t      assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n\t      assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n\t          ObjectUtils.equals(expected.id, cmd.id) &&\n\t          ObjectUtils.equals(expected.query, cmd.query) &&\n\t          expected.commitWithin==cmd.commitWithin);\n\t    }\n\n","bugFix":null,"bugIntro":["747dd71fefcbc7142661c25334b74c518fef4d81"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"747dd71fefcbc7142661c25334b74c518fef4d81","date":1423504825,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","sourceNew":"      @Override\n      public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n        DeleteUpdateCommand expected = deleteCommands.poll();\n        assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n        assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n            ObjectUtils.equals(expected.id, cmd.id) &&\n            ObjectUtils.equals(expected.query, cmd.query) &&\n            expected.commitWithin==cmd.commitWithin && \n            ObjectUtils.equals(expected.getRoute(), cmd.getRoute()));\n      }\n\n","sourceOld":"      @Override\n      public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n        DeleteUpdateCommand expected = deleteCommands.poll();\n        assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n        assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n            ObjectUtils.equals(expected.id, cmd.id) &&\n            ObjectUtils.equals(expected.query, cmd.query) &&\n            expected.commitWithin==cmd.commitWithin);\n      }\n\n","bugFix":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ac6494315d04f68950d2f00f5436b4861bcd467","date":1553125039,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest.MockUpdateRequestProcessor#processDelete(DeleteUpdateCommand).mjava","sourceNew":"      @Override\n      public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n        DeleteUpdateCommand expected = deleteCommands.poll();\n        assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n        assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n            Objects.equals(expected.id, cmd.id) &&\n            Objects.equals(expected.query, cmd.query) &&\n            expected.commitWithin==cmd.commitWithin && \n            Objects.equals(expected.getRoute(), cmd.getRoute()));\n      }\n\n","sourceOld":"      @Override\n      public void processDelete(DeleteUpdateCommand cmd) throws IOException {\n        DeleteUpdateCommand expected = deleteCommands.poll();\n        assertNotNull(\"Unexpected delete command: [\" + cmd + \"]\", expected);\n        assertTrue(\"Expected [\" + expected + \"] but found [\" + cmd + \"]\",\n            ObjectUtils.equals(expected.id, cmd.id) &&\n            ObjectUtils.equals(expected.query, cmd.query) &&\n            expected.commitWithin==cmd.commitWithin && \n            ObjectUtils.equals(expected.getRoute(), cmd.getRoute()));\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","818d704eaaf0fba0561d0d2752832e1015053482"],"0ac6494315d04f68950d2f00f5436b4861bcd467":["747dd71fefcbc7142661c25334b74c518fef4d81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","818d704eaaf0fba0561d0d2752832e1015053482"],"747dd71fefcbc7142661c25334b74c518fef4d81":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"818d704eaaf0fba0561d0d2752832e1015053482":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ac6494315d04f68950d2f00f5436b4861bcd467"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["818d704eaaf0fba0561d0d2752832e1015053482"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"0ac6494315d04f68950d2f00f5436b4861bcd467":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","818d704eaaf0fba0561d0d2752832e1015053482"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"818d704eaaf0fba0561d0d2752832e1015053482":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"747dd71fefcbc7142661c25334b74c518fef4d81":["0ac6494315d04f68950d2f00f5436b4861bcd467"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["747dd71fefcbc7142661c25334b74c518fef4d81"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}