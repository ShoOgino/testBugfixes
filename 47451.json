{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testConcat().mjava","commits":[{"id":"deb4d0cfb021fa1b0c1e44571968b254f379ac6f","date":1564497726,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testConcat().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConcat() throws Exception {\n    String expr = \" select(list(tuple(field1=\\\"a\\\", field2=\\\"b\\\"), tuple(field1=\\\"c\\\", field2=\\\"d\\\")), concat(field1, field2, \\\"hello\\\", delim=\\\"-\\\") as field3)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(),  2);\n    String s1= tuples.get(0).getString(\"field3\");\n    assertEquals(s1, \"a-b-hello\");\n    String s2= tuples.get(1).getString(\"field3\");\n    assertEquals(s2, \"c-d-hello\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":0,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testConcat().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConcat() throws Exception {\n    String expr = \" select(list(tuple(field1=\\\"a\\\", field2=\\\"b\\\"), tuple(field1=\\\"c\\\", field2=\\\"d\\\")), concat(field1, field2, \\\"hello\\\", delim=\\\"-\\\") as field3)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(),  2);\n    String s1= tuples.get(0).getString(\"field3\");\n    assertEquals(s1, \"a-b-hello\");\n    String s2= tuples.get(1).getString(\"field3\");\n    assertEquals(s2, \"c-d-hello\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"deb4d0cfb021fa1b0c1e44571968b254f379ac6f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","deb4d0cfb021fa1b0c1e44571968b254f379ac6f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["deb4d0cfb021fa1b0c1e44571968b254f379ac6f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["deb4d0cfb021fa1b0c1e44571968b254f379ac6f","f8061ddd97f3352007d927dae445884a6f3d857b"],"deb4d0cfb021fa1b0c1e44571968b254f379ac6f":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}