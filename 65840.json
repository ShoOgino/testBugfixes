{"path":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"/dev/null","sourceNew":"  public static SolrCore getSolrCore() {\n    synchronized (SolrCore.class) {\n      if (core==null) core = new SolrCore(null,null);\n      return core;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** Alias for SolrCore.getSolrCore(null). */\n  public static SolrCore getSolrCore() {\n    return getSolrCore(null);\n  }\n\n","sourceOld":"  public static SolrCore getSolrCore() {\n    synchronized (SolrCore.class) {\n      if (core==null) core = new SolrCore(null,null);\n      return core;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7","date":1189312484,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** Alias for SolrCore.getSolrCore(null). */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    return getSolrCore(null);\n  }\n\n","sourceOld":"  /** Alias for SolrCore.getSolrCore(null). */\n  public static SolrCore getSolrCore() {\n    return getSolrCore(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe3c163c8df3fb3e4248c30f8ae8034cc786589","date":1189317596,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initalized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    return instance;\n  }\n\n","sourceOld":"  /** Alias for SolrCore.getSolrCore(null). */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    return getSolrCore(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8729e882626472bef255f71a1064b31eb539573f","date":1189355091,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initalized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    if( instance == null ) {\n      try {\n        instance = new SolrCore(null, new SolrConfig(), null);\n      } \n      catch(Exception xany) {\n        log.throwing(\"SolrCore\", \"getSolrCore\", xany);\n        return null;\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initalized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d80dad6f957fae3e1a804d1a2e851209afd62798","date":1190223136,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initalized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore(null, new SolrConfig(), null);  \n        }\n        catch(Exception xany) {\n          log.throwing(\"SolrCore\", \"getSolrCore\", xany);\n          return null;\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initalized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    if( instance == null ) {\n      try {\n        instance = new SolrCore(null, new SolrConfig(), null);\n      } \n      catch(Exception xany) {\n        log.throwing(\"SolrCore\", \"getSolrCore\", xany);\n        return null;\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":["9ca5a1ba34bb47720ea067d323b480141b361294"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8ddf95246f079e162fbc4ef8f9d5cda419ff7eec","date":1194636258,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore(null, new SolrConfig(), null);  \n        }\n        catch(Exception xany) {\n          log.throwing(\"SolrCore\", \"getSolrCore\", xany);\n          return null;\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initalized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore(null, new SolrConfig(), null);  \n        }\n        catch(Exception xany) {\n          log.throwing(\"SolrCore\", \"getSolrCore\", xany);\n          return null;\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"513cdeeb58f41d61014347b148ae0aad92407903","date":1196717677,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore(null, new SolrConfig(), null);  \n        }\n        catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore(null, new SolrConfig(), null);  \n        }\n        catch(Exception xany) {\n          log.throwing(\"SolrCore\", \"getSolrCore\", xany);\n          return null;\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore(\"default\", null, new SolrConfig(), null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore(null, new SolrConfig(), null);  \n        }\n        catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b46f0ccfb6b63c307ea901d48482630e3689042c","date":1198805331,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore( null, null, new SolrConfig(), null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore(\"default\", null, new SolrConfig(), null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d5151046764fb8d9662e02d6c5381b2adb69f96d","date":1216394962,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore( null, null, new SolrConfig(), null, null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore( null, null, new SolrConfig(), null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":["9ca5a1ba34bb47720ea067d323b480141b361294"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"166e7267ee953339ce7ff2febc91aee7576425f5","date":1218487056,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   * \n   * @deprecated Use {@link MultiCore#getCore(String)} instead.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore( null, null, new SolrConfig(), null, null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore( null, null, new SolrConfig(), null, null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   * \n   * @deprecated Use {@link CoreContainer#getCore(String)} instead.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore( null, null, new SolrConfig(), null, null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   * \n   * @deprecated Use {@link MultiCore#getCore(String)} instead.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore( null, null, new SolrConfig(), null, null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ca5a1ba34bb47720ea067d323b480141b361294","date":1223501333,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   * \n   * @deprecated Use {@link CoreContainer#getCore(String)} instead.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core          \n          CoreContainer.Initializer init = new CoreContainer.Initializer();\n          instance = init.initialize().getCore(\"\");\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   * \n   * @deprecated Use {@link CoreContainer#getCore(String)} instead.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core\n          instance = new SolrCore( null, null, new SolrConfig(), null, null);\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":["d80dad6f957fae3e1a804d1a2e851209afd62798","d5151046764fb8d9662e02d6c5381b2adb69f96d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSolrCore().mjava","sourceNew":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   * \n   * @deprecated Use {@link CoreContainer#getCore(String)} instead.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core          \n          CoreContainer.Initializer init = new CoreContainer.Initializer();\n          instance = init.initialize().getCore(\"\");\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  /** \n   * @return the last core initialized.  If you are using multiple cores, \n   * this is not a function to use.\n   * \n   * @deprecated Use {@link CoreContainer#getCore(String)} instead.\n   */\n  @Deprecated\n  public static SolrCore getSolrCore() {\n    synchronized( SolrCore.class ) {\n      if( instance == null ) {\n        try {\n          // sets 'instance' to the latest solr core          \n          CoreContainer.Initializer init = new CoreContainer.Initializer();\n          instance = init.initialize().getCore(\"\");\n        } catch(Exception xany) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n              \"error creating core\", xany );\n        }\n      }\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"d5151046764fb8d9662e02d6c5381b2adb69f96d":["b46f0ccfb6b63c307ea901d48482630e3689042c"],"166e7267ee953339ce7ff2febc91aee7576425f5":["d5151046764fb8d9662e02d6c5381b2adb69f96d"],"8ddf95246f079e162fbc4ef8f9d5cda419ff7eec":["d80dad6f957fae3e1a804d1a2e851209afd62798"],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["166e7267ee953339ce7ff2febc91aee7576425f5"],"b46f0ccfb6b63c307ea901d48482630e3689042c":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"513cdeeb58f41d61014347b148ae0aad92407903":["8ddf95246f079e162fbc4ef8f9d5cda419ff7eec"],"8729e882626472bef255f71a1064b31eb539573f":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["513cdeeb58f41d61014347b148ae0aad92407903"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ca5a1ba34bb47720ea067d323b480141b361294":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"ad94625fb8d088209f46650c8097196fec67f00c":["9ca5a1ba34bb47720ea067d323b480141b361294"],"d80dad6f957fae3e1a804d1a2e851209afd62798":["8729e882626472bef255f71a1064b31eb539573f"],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["6d6338c87060be5f66757a94945975f3bbd377a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"d5151046764fb8d9662e02d6c5381b2adb69f96d":["166e7267ee953339ce7ff2febc91aee7576425f5"],"166e7267ee953339ce7ff2febc91aee7576425f5":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"8ddf95246f079e162fbc4ef8f9d5cda419ff7eec":["513cdeeb58f41d61014347b148ae0aad92407903"],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["8729e882626472bef255f71a1064b31eb539573f"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"b46f0ccfb6b63c307ea901d48482630e3689042c":["d5151046764fb8d9662e02d6c5381b2adb69f96d"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["9ca5a1ba34bb47720ea067d323b480141b361294"],"513cdeeb58f41d61014347b148ae0aad92407903":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"8729e882626472bef255f71a1064b31eb539573f":["d80dad6f957fae3e1a804d1a2e851209afd62798"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["6d6338c87060be5f66757a94945975f3bbd377a9"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["b46f0ccfb6b63c307ea901d48482630e3689042c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ca5a1ba34bb47720ea067d323b480141b361294":["ad94625fb8d088209f46650c8097196fec67f00c"],"d80dad6f957fae3e1a804d1a2e851209afd62798":["8ddf95246f079e162fbc4ef8f9d5cda419ff7eec"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}