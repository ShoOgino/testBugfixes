{"path":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    return fields.get(field);\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    return fields.get(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2da200553d43622ccbeef29f3c1b6223fec4d83","date":1331145186,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    assert field != null;\n    return fields.get(field);\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    return fields.get(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    assert field != null;\n    return fields.get(field);\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    return fields.get(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad80176d91a6f70fe93880e43dfd697dc4e63ed","date":1400176913,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    assert field != null;\n    return fields.get(field);\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    assert field != null;\n    return fields.get(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    assert field != null;\n    return fields.get(field);\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    assert field != null;\n    return fields.get(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":6,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader#terms(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#terms(String).mjava","sourceNew":"  @Override\n  public Terms terms(String field) throws IOException {\n    assert field != null;\n    return fields.get(field);\n  }\n\n","sourceOld":"  @Override\n  public Terms terms(String field) throws IOException {\n    assert field != null;\n    return fields.get(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d2da200553d43622ccbeef29f3c1b6223fec4d83"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["d2da200553d43622ccbeef29f3c1b6223fec4d83","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["d2da200553d43622ccbeef29f3c1b6223fec4d83"],"d2da200553d43622ccbeef29f3c1b6223fec4d83":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","d2da200553d43622ccbeef29f3c1b6223fec4d83"],"d2da200553d43622ccbeef29f3c1b6223fec4d83":["38e3b736c7ca086d61b7dbb841c905ee115490da","4d637064d608752565d4f9f41b2497dfdfdde50e","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}