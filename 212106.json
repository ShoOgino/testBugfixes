{"path":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","commits":[{"id":"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e","date":1330665960,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","sourceNew":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported at this time, not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    try {\n      if( valueSource != null ) {\n        valueSource = new CachingDoubleValueSource(valueSource);\n      }\n      else {\n        valueSource = makeValueSource(args, fieldInfo);\n      }\n      Query spatialRankingQuery = new FunctionQuery(valueSource);\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(spatial,BooleanClause.Occur.MUST);\n      bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n      return bq;\n    } catch(Exception ex) {\n      log.warn(\"error making score\", ex);\n    }\n    return spatial;\n  }\n\n","sourceOld":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported at this time, not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    try {\n      if( valueSource != null ) {\n        valueSource = new CachingDoubleValueSource(valueSource);\n      }\n      else {\n        valueSource = makeValueSource(args, fieldInfo);\n      }\n      Query spatialRankingQuery = new FunctionQuery(valueSource);\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(spatial,BooleanClause.Occur.MUST);\n      bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n      return bq;\n    } catch(Exception ex) {\n      log.warn(\"error making score\", ex);\n    }\n    return spatial;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67897a3c10cb691420044f760cd98e83eff70ea3","date":1331604594,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","sourceNew":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported at this time, not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    if( valueSource != null ) {\n      valueSource = new CachingDoubleValueSource(valueSource);\n    }\n    else {\n      valueSource = makeValueSource(args, fieldInfo);\n    }\n    Query spatialRankingQuery = new FunctionQuery(valueSource);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(spatial,BooleanClause.Occur.MUST);\n    bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","sourceOld":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported at this time, not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    try {\n      if( valueSource != null ) {\n        valueSource = new CachingDoubleValueSource(valueSource);\n      }\n      else {\n        valueSource = makeValueSource(args, fieldInfo);\n      }\n      Query spatialRankingQuery = new FunctionQuery(valueSource);\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(spatial,BooleanClause.Occur.MUST);\n      bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n      return bq;\n    } catch(Exception ex) {\n      log.warn(\"error making score\", ex);\n    }\n    return spatial;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5603541bcfd1a31bb2ebe1bbd592536265a1a5eb","date":1331662047,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","sourceNew":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported shape (so far), not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    if( valueSource != null ) {\n      valueSource = new CachingDoubleValueSource(valueSource);\n    }\n    else {\n      valueSource = makeValueSource(args, fieldInfo);\n    }\n    Query spatialRankingQuery = new FunctionQuery(valueSource);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(spatial,BooleanClause.Occur.MUST);\n    bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","sourceOld":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported at this time, not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    if( valueSource != null ) {\n      valueSource = new CachingDoubleValueSource(valueSource);\n    }\n    else {\n      valueSource = makeValueSource(args, fieldInfo);\n    }\n    Query spatialRankingQuery = new FunctionQuery(valueSource);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(spatial,BooleanClause.Occur.MUST);\n    bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":["83dbba2dcd082d1dc6969ee6a37f3a550186b9f2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported shape (so far), not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    if( valueSource != null ) {\n      valueSource = new CachingDoubleValueSource(valueSource);\n    }\n    else {\n      valueSource = makeValueSource(args, fieldInfo);\n    }\n    Query spatialRankingQuery = new FunctionQuery(valueSource);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(spatial,BooleanClause.Occur.MUST);\n    bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeQuery(SpatialArgs,TwoDoublesFieldInfo).mjava","sourceNew":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported shape (so far), not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    if( valueSource != null ) {\n      valueSource = new CachingDoubleValueSource(valueSource);\n    }\n    else {\n      valueSource = makeValueSource(args, fieldInfo);\n    }\n    Query spatialRankingQuery = new FunctionQuery(valueSource);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(spatial,BooleanClause.Occur.MUST);\n    bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","sourceOld":"  @Override\n  public Query makeQuery(SpatialArgs args, TwoDoublesFieldInfo fieldInfo) {\n    // For starters, just limit the bbox\n    Shape shape = args.getShape();\n    if (!(shape instanceof Rectangle)) {\n      throw new InvalidShapeException(\"A rectangle is the only supported shape (so far), not \"+shape.getClass());//TODO\n    }\n    Rectangle bbox = (Rectangle) shape;\n    if (bbox.getCrossesDateLine()) {\n      throw new UnsupportedOperationException( \"Crossing dateline not yet supported\" );\n    }\n\n    ValueSource valueSource = null;\n\n    Query spatial = null;\n    SpatialOperation op = args.getOperation();\n\n    if( SpatialOperation.is( op,\n        SpatialOperation.BBoxWithin,\n        SpatialOperation.BBoxIntersects ) ) {\n        spatial = makeWithin(bbox, fieldInfo);\n    }\n    else if( SpatialOperation.is( op,\n      SpatialOperation.Intersects,\n      SpatialOperation.IsWithin ) ) {\n      spatial = makeWithin(bbox, fieldInfo);\n      if( args.getShape() instanceof Circle) {\n        Circle circle = (Circle)args.getShape();\n\n        // Make the ValueSource\n        valueSource = makeValueSource(args, fieldInfo);\n\n        ValueSourceFilter vsf = new ValueSourceFilter(\n            new QueryWrapperFilter( spatial ), valueSource, 0, circle.getDistance() );\n\n        spatial = new FilteredQuery( new MatchAllDocsQuery(), vsf );\n      }\n    }\n    else if( op == SpatialOperation.IsDisjointTo ) {\n      spatial =  makeDisjoint(bbox, fieldInfo);\n    }\n\n    if( spatial == null ) {\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    }\n\n    if( valueSource != null ) {\n      valueSource = new CachingDoubleValueSource(valueSource);\n    }\n    else {\n      valueSource = makeValueSource(args, fieldInfo);\n    }\n    Query spatialRankingQuery = new FunctionQuery(valueSource);\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(spatial,BooleanClause.Occur.MUST);\n    bq.add(spatialRankingQuery,BooleanClause.Occur.MUST);\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e47768b261c28e7e6032060e8331475c81057953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5603541bcfd1a31bb2ebe1bbd592536265a1a5eb":["67897a3c10cb691420044f760cd98e83eff70ea3"],"e47768b261c28e7e6032060e8331475c81057953":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5603541bcfd1a31bb2ebe1bbd592536265a1a5eb"],"67897a3c10cb691420044f760cd98e83eff70ea3":["de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e47768b261c28e7e6032060e8331475c81057953","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"5603541bcfd1a31bb2ebe1bbd592536265a1a5eb":["e47768b261c28e7e6032060e8331475c81057953"],"e47768b261c28e7e6032060e8331475c81057953":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"67897a3c10cb691420044f760cd98e83eff70ea3":["5603541bcfd1a31bb2ebe1bbd592536265a1a5eb"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["67897a3c10cb691420044f760cd98e83eff70ea3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}