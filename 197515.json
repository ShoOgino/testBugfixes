{"path":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#recurseDelete(File).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#recurseDelete(File).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#recurseDelete(File).mjava","sourceNew":"  public static boolean recurseDelete(File f) {\n    if (f.isDirectory()) {\n      for (File sub : f.listFiles()) {\n        if (!recurseDelete(sub)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + sub.getAbsolutePath() + \" FAILED !!!!!\");\n          return false;\n        }\n      }\n    }\n    return f.delete();\n  }\n\n","sourceOld":"  public static boolean recurseDelete(File f) {\n    if (f.isDirectory()) {\n      for (File sub : f.listFiles()) {\n        if (!recurseDelete(sub)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + sub.getAbsolutePath() + \" FAILED !!!!!\");\n          return false;\n        }\n      }\n    }\n    return f.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#recurseDelete(File).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#recurseDelete(File).mjava","sourceNew":"  public static boolean recurseDelete(File f) {\n    if (f.isDirectory()) {\n      for (File sub : f.listFiles()) {\n        if (!recurseDelete(sub)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + sub.getAbsolutePath() + \" FAILED !!!!!\");\n          return false;\n        }\n      }\n    }\n    return f.delete();\n  }\n\n","sourceOld":"  public static boolean recurseDelete(File f) {\n    if (f.isDirectory()) {\n      for (File sub : f.listFiles()) {\n        if (!recurseDelete(sub)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + sub.getAbsolutePath() + \" FAILED !!!!!\");\n          return false;\n        }\n      }\n    }\n    return f.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#recurseDelete(File).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#recurseDelete(File).mjava","sourceNew":"  public static boolean recurseDelete(File f) {\n    if (f.isDirectory()) {\n      for (File sub : f.listFiles()) {\n        if (!recurseDelete(sub)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + sub.getAbsolutePath() + \" FAILED !!!!!\");\n          return false;\n        }\n      }\n    }\n    return f.delete();\n  }\n\n","sourceOld":"  public static boolean recurseDelete(File f) {\n    if (f.isDirectory()) {\n      for (File sub : f.listFiles()) {\n        if (!recurseDelete(sub)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + sub.getAbsolutePath() + \" FAILED !!!!!\");\n          return false;\n        }\n      }\n    }\n    return f.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4f25a2171450fd11fca6ecb7a809922c9ec694","date":1395865816,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#recurseDelete(File).mjava","sourceNew":null,"sourceOld":"  public static boolean recurseDelete(File f) {\n    if (f.isDirectory()) {\n      for (File sub : f.listFiles()) {\n        if (!recurseDelete(sub)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + sub.getAbsolutePath() + \" FAILED !!!!!\");\n          return false;\n        }\n      }\n    }\n    return f.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec4f25a2171450fd11fca6ecb7a809922c9ec694":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec4f25a2171450fd11fca6ecb7a809922c9ec694"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["ec4f25a2171450fd11fca6ecb7a809922c9ec694"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ec4f25a2171450fd11fca6ecb7a809922c9ec694":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}