{"path":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"/dev/null","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2","date":1391685460,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    writer.shutdown();\n    IOUtils.close(searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    writer.shutdown();\n    IOUtils.close(searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), dir);\n  }\n\n","bugFix":["19f5022544a8fc895776356d1b35a4b46d05945c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSlowCompositeReaderWrapper().mjava","sourceNew":null,"sourceOld":"  public void testSlowCompositeReaderWrapper() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    writer.commit();\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = new IndexSearcher(SlowCompositeReaderWrapper.wrap(writer.getReader()));\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    Facets facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    assertEquals(\"dim=a path=[] value=2 childCount=2\\n  foo1 (1)\\n  foo2 (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["30fc8c22124fdcf9d76449bd2fa04decbe74e2e2"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"ad2a673349939e48652bf304cccf673c3412198f":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d0ef034a4f10871667ae75181537775ddcf8ade4","ad2a673349939e48652bf304cccf673c3412198f"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ad2a673349939e48652bf304cccf673c3412198f","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["30fc8c22124fdcf9d76449bd2fa04decbe74e2e2"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}