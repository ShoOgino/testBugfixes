{"path":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","commits":[{"id":"6e5d88b55f1b57feab6da94a5c635a224539bd2a","date":1095877947,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"  public static SegmentReader get(SegmentInfo si) throws IOException {\n    return get(si.dir, si, null, false, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(si.dir, si, null, false, false);\n  }\n\n","sourceOld":"  public static SegmentReader get(SegmentInfo si) throws IOException {\n    return get(si.dir, si, null, false, false);\n  }\n\n","bugFix":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6dba7919de4ff4ed6ff17f90619203772722f08","date":1180451647,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(si.dir, si, null, false, false, BufferedIndexInput.BUFFER_SIZE);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(si.dir, si, null, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(si.dir, si, null, false, false, BufferedIndexInput.BUFFER_SIZE, true);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(si.dir, si, null, false, false, BufferedIndexInput.BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5712975970a595c28f1988efd007e1b8a617a92f","date":1219499238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(READ_ONLY_DEFAULT, si.dir, si, null, false, false, BufferedIndexInput.BUFFER_SIZE, true);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(si.dir, si, null, false, false, BufferedIndexInput.BUFFER_SIZE, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dabcca520e81aeff96f5c937b7ffb5617ee69d1","date":1243458018,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(false, si.dir, si, null, false, false, BufferedIndexInput.BUFFER_SIZE, true);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(READ_ONLY_DEFAULT, si.dir, si, null, false, false, BufferedIndexInput.BUFFER_SIZE, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(false, si.dir, si, BufferedIndexInput.BUFFER_SIZE, true);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(false, si.dir, si, null, false, false, BufferedIndexInput.BUFFER_SIZE, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"961159f13aece73fbb30aea720e77a2237e8bafd","date":1247258916,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","sourceNew":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(false, si.dir, si, BufferedIndexInput.BUFFER_SIZE, true, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(false, si.dir, si, BufferedIndexInput.BUFFER_SIZE, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1","date":1255502337,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/SegmentReader#get(SegmentInfo).mjava","sourceNew":null,"sourceOld":"  /**\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated\n   */\n  public static SegmentReader get(SegmentInfo si) throws CorruptIndexException, IOException {\n    return get(false, si.dir, si, BufferedIndexInput.BUFFER_SIZE, true, IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["0dabcca520e81aeff96f5c937b7ffb5617ee69d1"],"5712975970a595c28f1988efd007e1b8a617a92f":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"961159f13aece73fbb30aea720e77a2237e8bafd":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"1b54a9bc667895a2095a886184bf69a3179e63df":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f6dba7919de4ff4ed6ff17f90619203772722f08":["1b54a9bc667895a2095a886184bf69a3179e63df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["961159f13aece73fbb30aea720e77a2237e8bafd"],"0dabcca520e81aeff96f5c937b7ffb5617ee69d1":["5712975970a595c28f1988efd007e1b8a617a92f"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["f6dba7919de4ff4ed6ff17f90619203772722f08"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["961159f13aece73fbb30aea720e77a2237e8bafd"],"5712975970a595c28f1988efd007e1b8a617a92f":["0dabcca520e81aeff96f5c937b7ffb5617ee69d1"],"961159f13aece73fbb30aea720e77a2237e8bafd":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"1b54a9bc667895a2095a886184bf69a3179e63df":["f6dba7919de4ff4ed6ff17f90619203772722f08"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["1b54a9bc667895a2095a886184bf69a3179e63df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"f6dba7919de4ff4ed6ff17f90619203772722f08":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0dabcca520e81aeff96f5c937b7ffb5617ee69d1":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["5712975970a595c28f1988efd007e1b8a617a92f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}