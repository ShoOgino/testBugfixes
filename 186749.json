{"path":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/EnhancementsPayloadIteratorTest#testFullIterator().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/EnhancementsPayloadIteratorTest#testFullIterator().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/enhancements/EnhancementsPayloadIteratorTest#testFullIterator().mjava","sourceNew":"  @Test\n  public void testFullIterator() throws IOException {\n    IndexReader indexReader = IndexReader.open(indexDir);\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"tags\", \"lucene\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n    assertTrue(\"Unexpected failure of init()\", iterator.init());\n    assertTrue(\"Missing instance of tags/lucene in doc 0\", iterator.setdoc(0));\n    int assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 0\", 3, assoc, 1E-5);\n    assertTrue(\"Missing instance of tags/lucene in doc 1\", iterator.setdoc(1));\n    assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 1\", 1, assoc, 1E-5);\n    indexReader.close();\n  }\n\n","sourceOld":"  @Test\n  public void testFullIterator() throws IOException {\n    IndexReader indexReader = IndexReader.open(indexDir);\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"tags\", \"lucene\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n    assertTrue(\"Unexpected failure of init()\", iterator.init());\n    assertTrue(\"Missing instance of tags/lucene in doc 0\", iterator.setdoc(0));\n    int assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 0\", 3, assoc, 1E-5);\n    assertTrue(\"Missing instance of tags/lucene in doc 1\", iterator.setdoc(1));\n    assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 1\", 1, assoc, 1E-5);\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/EnhancementsPayloadIteratorTest#testFullIterator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/EnhancementsPayloadIteratorTest#testFullIterator().mjava","sourceNew":"  @Test\n  public void testFullIterator() throws IOException {\n    IndexReader indexReader = DirectoryReader.open(indexDir);\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"tags\", \"lucene\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n    assertTrue(\"Unexpected failure of init()\", iterator.init());\n    assertTrue(\"Missing instance of tags/lucene in doc 0\", iterator.setdoc(0));\n    int assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 0\", 3, assoc, 1E-5);\n    assertTrue(\"Missing instance of tags/lucene in doc 1\", iterator.setdoc(1));\n    assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 1\", 1, assoc, 1E-5);\n    indexReader.close();\n  }\n\n","sourceOld":"  @Test\n  public void testFullIterator() throws IOException {\n    IndexReader indexReader = IndexReader.open(indexDir);\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"tags\", \"lucene\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n    assertTrue(\"Unexpected failure of init()\", iterator.init());\n    assertTrue(\"Missing instance of tags/lucene in doc 0\", iterator.setdoc(0));\n    int assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 0\", 3, assoc, 1E-5);\n    assertTrue(\"Missing instance of tags/lucene in doc 1\", iterator.setdoc(1));\n    assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 1\", 1, assoc, 1E-5);\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/EnhancementsPayloadIteratorTest#testFullIterator().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testFullIterator() throws IOException {\n    IndexReader indexReader = DirectoryReader.open(indexDir);\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"tags\", \"lucene\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n    assertTrue(\"Unexpected failure of init()\", iterator.init());\n    assertTrue(\"Missing instance of tags/lucene in doc 0\", iterator.setdoc(0));\n    int assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 0\", 3, assoc, 1E-5);\n    assertTrue(\"Missing instance of tags/lucene in doc 1\", iterator.setdoc(1));\n    assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 1\", 1, assoc, 1E-5);\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/EnhancementsPayloadIteratorTest#testFullIterator().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testFullIterator() throws IOException {\n    IndexReader indexReader = DirectoryReader.open(indexDir);\n    Term term = DrillDown.term(indexingParams, new CategoryPath(\"tags\", \"lucene\"));\n    EnhancementsPayloadIterator iterator = new EnhancementsPayloadIterator(\n        indexingParams.getCategoryEnhancements(), indexReader, term);\n    assertTrue(\"Unexpected failure of init()\", iterator.init());\n    assertTrue(\"Missing instance of tags/lucene in doc 0\", iterator.setdoc(0));\n    int assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 0\", 3, assoc, 1E-5);\n    assertTrue(\"Missing instance of tags/lucene in doc 1\", iterator.setdoc(1));\n    assoc = (Integer) iterator.getCategoryData(associationEnhancement);\n    assertEquals(\"Unexpected association value for tags/lucene in doc 1\", 1, assoc, 1E-5);\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}