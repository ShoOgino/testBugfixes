{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/core/nodes/QueryNodeImpl#set(List[QueryNode]).mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/core/nodes/QueryNodeImpl#set(List[QueryNode]).mjava","pathOld":"/dev/null","sourceNew":"  public final void set(List<QueryNode> children) {\n\n    if (isLeaf() || this.clauses == null) {\n      ResourceBundle bundle = ResourceBundle\n          .getBundle(\"org.apache.lucene.queryParser.messages.QueryParserMessages\");\n      String message = bundle.getObject(\"Q0008E.NODE_ACTION_NOT_SUPPORTED\")\n          .toString();\n\n      throw new IllegalArgumentException(message);\n\n    }\n\n    // reset parent value\n    for (QueryNode child : children) {\n\n      ((QueryNodeImpl) child).setParent(null);\n\n    }\n\n    // allocate new children list\n    allocate();\n\n    // add new childs and set parent\n    for (QueryNode child : children) {\n      add(child);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["917ebe9ddaf53995b52117fefb375be692579d63"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"add7d922e63099fbce8f0a1b31216df7ef5067f1","date":1252002701,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/core/nodes/QueryNodeImpl#set(List[QueryNode]).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/core/nodes/QueryNodeImpl#set(List[QueryNode]).mjava","sourceNew":"  public final void set(List<QueryNode> children) {\n\n    if (isLeaf() || this.clauses == null) {\n      ResourceBundle bundle = ResourceBundle\n          .getBundle(\"org.apache.lucene.queryParser.messages.QueryParserMessages\");\n      String message = bundle.getObject(\"Q0008E.NODE_ACTION_NOT_SUPPORTED\")\n          .toString();\n\n      throw new IllegalArgumentException(message);\n\n    }\n\n    // reset parent value\n    for (QueryNode child : children) {\n\n      ((QueryNodeImpl) child).setParent(null);\n\n    }\n\n    // allocate new children list\n    allocate();\n\n    // add new children and set parent\n    for (QueryNode child : children) {\n      add(child);\n    }\n  }\n\n","sourceOld":"  public final void set(List<QueryNode> children) {\n\n    if (isLeaf() || this.clauses == null) {\n      ResourceBundle bundle = ResourceBundle\n          .getBundle(\"org.apache.lucene.queryParser.messages.QueryParserMessages\");\n      String message = bundle.getObject(\"Q0008E.NODE_ACTION_NOT_SUPPORTED\")\n          .toString();\n\n      throw new IllegalArgumentException(message);\n\n    }\n\n    // reset parent value\n    for (QueryNode child : children) {\n\n      ((QueryNodeImpl) child).setParent(null);\n\n    }\n\n    // allocate new children list\n    allocate();\n\n    // add new childs and set parent\n    for (QueryNode child : children) {\n      add(child);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/core/nodes/QueryNodeImpl#set(List[QueryNode]).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/core/nodes/QueryNodeImpl#set(List[QueryNode]).mjava","sourceNew":"  public final void set(List<QueryNode> children) {\n\n    if (isLeaf() || this.clauses == null) {\n      ResourceBundle bundle = ResourceBundle\n          .getBundle(\"org.apache.lucene.queryParser.messages.QueryParserMessages\");\n      String message = bundle.getObject(\"Q0008E.NODE_ACTION_NOT_SUPPORTED\")\n          .toString();\n\n      throw new IllegalArgumentException(message);\n\n    }\n\n    // reset parent value\n    for (QueryNode child : children) {\n\n      ((QueryNodeImpl) child).setParent(null);\n\n    }\n\n    // allocate new children list\n    allocate();\n\n    // add new children and set parent\n    for (QueryNode child : children) {\n      add(child);\n    }\n  }\n\n","sourceOld":"  public final void set(List<QueryNode> children) {\n\n    if (isLeaf() || this.clauses == null) {\n      ResourceBundle bundle = ResourceBundle\n          .getBundle(\"org.apache.lucene.queryParser.messages.QueryParserMessages\");\n      String message = bundle.getObject(\"Q0008E.NODE_ACTION_NOT_SUPPORTED\")\n          .toString();\n\n      throw new IllegalArgumentException(message);\n\n    }\n\n    // reset parent value\n    for (QueryNode child : children) {\n\n      ((QueryNodeImpl) child).setParent(null);\n\n    }\n\n    // allocate new children list\n    allocate();\n\n    // add new children and set parent\n    for (QueryNode child : children) {\n      add(child);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"add7d922e63099fbce8f0a1b31216df7ef5067f1":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["add7d922e63099fbce8f0a1b31216df7ef5067f1"]},"commit2Childs":{"add7d922e63099fbce8f0a1b31216df7ef5067f1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}