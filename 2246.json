{"path":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CreateShardCmd#usePolicyFramework(DocCollection,OverseerCollectionMessageHandler).mjava","sourceNew":"  static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    return !autoScalingConfig.getPolicy().getClusterPolicy().isEmpty() || collection.getPolicyName() != null;\n  }\n\n","sourceOld":"  static boolean usePolicyFramework(DocCollection collection, OverseerCollectionMessageHandler ocmh)\n      throws IOException, InterruptedException {\n    AutoScalingConfig autoScalingConfig = ocmh.overseer.getSolrCloudManager().getDistribStateManager().getAutoScalingConfig();\n    return !autoScalingConfig.getPolicy().getClusterPolicy().isEmpty() || collection.getPolicyName() != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","sourceNew":"  public static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    return !autoScalingConfig.getPolicy().getClusterPolicy().isEmpty() || collection.getPolicyName() != null;\n  }\n\n","sourceOld":"  static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    return !autoScalingConfig.getPolicy().getClusterPolicy().isEmpty() || collection.getPolicyName() != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","sourceNew":"  public static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    return !autoScalingConfig.getPolicy().getClusterPolicy().isEmpty() || collection.getPolicyName() != null;\n  }\n\n","sourceOld":"  static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    return !autoScalingConfig.getPolicy().getClusterPolicy().isEmpty() || collection.getPolicyName() != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"216382c52eb6bf24fc72851399bb3750e8ad7a97","date":1538562171,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","sourceNew":"  /**\n   * @return true if auto scaling policy framework should be used for replica placement\n   * for this collection, otherwise false\n   */\n  public static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    Objects.requireNonNull(collection, \"The DocCollection instance cannot be null\");\n    Objects.requireNonNull(cloudManager, \"The SolrCloudManager instance cannot be null\");\n    return usePolicyFramework(Optional.of(collection), cloudManager);\n  }\n\n","sourceOld":"  public static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    return !autoScalingConfig.getPolicy().getClusterPolicy().isEmpty() || collection.getPolicyName() != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01322d51122b6cbe6b5ba6059fffba67798dae72","date":1539067228,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/Assign#usePolicyFramework(DocCollection,SolrCloudManager).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CloudUtil#usePolicyFramework(DocCollection,SolrCloudManager).mjava","sourceNew":"  /**\n   * @return true if auto scaling policy framework should be used for replica placement\n   * for this collection, otherwise false\n   */\n  public static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    Objects.requireNonNull(collection, \"The DocCollection instance cannot be null\");\n    Objects.requireNonNull(cloudManager, \"The SolrCloudManager instance cannot be null\");\n    return usePolicyFramework(Optional.of(collection), cloudManager);\n  }\n\n","sourceOld":"  /**\n   * @return true if auto scaling policy framework should be used for replica placement\n   * for this collection, otherwise false\n   */\n  public static boolean usePolicyFramework(DocCollection collection, SolrCloudManager cloudManager)\n      throws IOException, InterruptedException {\n    Objects.requireNonNull(collection, \"The DocCollection instance cannot be null\");\n    Objects.requireNonNull(cloudManager, \"The SolrCloudManager instance cannot be null\");\n    return usePolicyFramework(Optional.of(collection), cloudManager);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"01322d51122b6cbe6b5ba6059fffba67798dae72":["216382c52eb6bf24fc72851399bb3750e8ad7a97"],"b94236357aaa22b76c10629851fe4e376e0cea82":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"216382c52eb6bf24fc72851399bb3750e8ad7a97":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["01322d51122b6cbe6b5ba6059fffba67798dae72"]},"commit2Childs":{"01322d51122b6cbe6b5ba6059fffba67798dae72":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b94236357aaa22b76c10629851fe4e376e0cea82":["216382c52eb6bf24fc72851399bb3750e8ad7a97"],"216382c52eb6bf24fc72851399bb3750e8ad7a97":["01322d51122b6cbe6b5ba6059fffba67798dae72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}