{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","commits":[{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testXMLGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":1,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testXMLGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testXMLGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e","date":1541777404,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","sourceNew":"  @Test\n  public void testXMLGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 18\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='uninvertible'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testXMLGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a52341299179de5479672f7cf518bf4b173f34b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac1e7fa558287a811ea07634d815ee7b1c541284"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac1e7fa558287a811ea07634d815ee7b1c541284"],"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e":["a52341299179de5479672f7cf518bf4b173f34b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a52341299179de5479672f7cf518bf4b173f34b3":["0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75","ac1e7fa558287a811ea07634d815ee7b1c541284"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}