{"path":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","commits":[{"id":"6e02c0d6a64df9c63897458b31d88b5ec3b854a5","date":1454964111,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","pathOld":"/dev/null","sourceNew":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    try {\n      new DefaultingWrapperMergePolicyFactory(resourceLoader, args).getMergePolicy();\n      fail(\"Should have failed when no 'class' specified for wrapped merge policy\");\n    } catch (final IllegalArgumentException e) {\n      // Good!\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b531d6853cf691cd84ab58193ce7a89a424289e","date":1455121686,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","sourceNew":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    try {\n      new DefaultingWrapperMergePolicyFactory(resourceLoader, args, null).getMergePolicy();\n      fail(\"Should have failed when no 'class' specified for wrapped merge policy\");\n    } catch (final IllegalArgumentException e) {\n      // Good!\n    }\n  }\n\n","sourceOld":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    try {\n      new DefaultingWrapperMergePolicyFactory(resourceLoader, args).getMergePolicy();\n      fail(\"Should have failed when no 'class' specified for wrapped merge policy\");\n    } catch (final IllegalArgumentException e) {\n      // Good!\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","sourceNew":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    expectThrows(IllegalArgumentException.class,\n        () -> new DefaultingWrapperMergePolicyFactory(resourceLoader, args, null).getMergePolicy());\n  }\n\n","sourceOld":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    try {\n      new DefaultingWrapperMergePolicyFactory(resourceLoader, args, null).getMergePolicy();\n      fail(\"Should have failed when no 'class' specified for wrapped merge policy\");\n    } catch (final IllegalArgumentException e) {\n      // Good!\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","sourceNew":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    expectThrows(IllegalArgumentException.class,\n        () -> new DefaultingWrapperMergePolicyFactory(resourceLoader, args, null).getMergePolicy());\n  }\n\n","sourceOld":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    try {\n      new DefaultingWrapperMergePolicyFactory(resourceLoader, args, null).getMergePolicy();\n      fail(\"Should have failed when no 'class' specified for wrapped merge policy\");\n    } catch (final IllegalArgumentException e) {\n      // Good!\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","pathOld":"solr/core/src/test/org/apache/solr/index/WrapperMergePolicyFactoryTest#testFailsIfNoClassSpecifiedForWrappedPolicy().mjava","sourceNew":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    expectThrows(IllegalArgumentException.class,\n        () -> new DefaultingWrapperMergePolicyFactory(resourceLoader, args, null).getMergePolicy());\n  }\n\n","sourceOld":"  public void testFailsIfNoClassSpecifiedForWrappedPolicy() {\n    final MergePolicyFactoryArgs args = new MergePolicyFactoryArgs();\n    args.add(WrapperMergePolicyFactory.WRAPPED_PREFIX, \"foo\");\n    try {\n      new DefaultingWrapperMergePolicyFactory(resourceLoader, args, null).getMergePolicy();\n      fail(\"Should have failed when no 'class' specified for wrapped merge policy\");\n    } catch (final IllegalArgumentException e) {\n      // Good!\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6e02c0d6a64df9c63897458b31d88b5ec3b854a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0b531d6853cf691cd84ab58193ce7a89a424289e":["6e02c0d6a64df9c63897458b31d88b5ec3b854a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["0b531d6853cf691cd84ab58193ce7a89a424289e"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["0b531d6853cf691cd84ab58193ce7a89a424289e","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["0b531d6853cf691cd84ab58193ce7a89a424289e","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"6e02c0d6a64df9c63897458b31d88b5ec3b854a5":["0b531d6853cf691cd84ab58193ce7a89a424289e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e02c0d6a64df9c63897458b31d88b5ec3b854a5"],"0b531d6853cf691cd84ab58193ce7a89a424289e":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}