{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","commits":[{"id":"2247f9b905bc1344a659f142ce3ea23f96c9e827","date":1478786509,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"query boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n      @Override\n      public float computeSlopFactor(int distance) {\n        return 1f;\n      }\n\n      @Override\n      public float computePayloadFactor(int doc, int start, int end, BytesRef payload) {\n        return 1f;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"query boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n      @Override\n      public float computeSlopFactor(int distance) {\n        return 1f;\n      }\n\n      @Override\n      public float computePayloadFactor(int doc, int start, int end, BytesRef payload) {\n        return 1f;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n      @Override\n      public float computeSlopFactor(int distance) {\n        return 1f;\n      }\n\n      @Override\n      public float computePayloadFactor(int doc, int start, int end, BytesRef payload) {\n        return 1f;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"query boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n      @Override\n      public float computeSlopFactor(int distance) {\n        return 1f;\n      }\n\n      @Override\n      public float computePayloadFactor(int doc, int start, int end, BytesRef payload) {\n        return 1f;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"136d4e97e5588b3f560e4d157962baa796f6c259","date":1510236334,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n      @Override\n      public float computeSlopFactor(int distance) {\n        return 1f;\n      }\n\n      @Override\n      public float computePayloadFactor(int doc, int start, int end, BytesRef payload) {\n        return 1f;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"297201ceb6f93f54f44df6d02cdc988591428b75","date":1510304523,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n      @Override\n      public float computeSlopFactor(int distance) {\n        return 1f;\n      }\n\n      @Override\n      public float computePayloadFactor(int doc, int start, int end, BytesRef payload) {\n        return 1f;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9b82182bcb9110d24f7de32032113dbf31606c2","date":1510306998,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n      @Override\n      public float computeSlopFactor(int distance) {\n        return 1f;\n      }\n\n      @Override\n      public float computePayloadFactor(int doc, int start, int end, BytesRef payload) {\n        return 1f;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public float maxScore(float maxFreq) {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public float maxScore(float maxFreq) {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a","date":1513155113,"type":3,"author":"Mayya Sharipova","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public float maxScore(float maxFreq) {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost, query boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public float maxScore(float maxFreq) {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"927e6deec13723e5fd6fb8f1e0457e8597dae15e","date":1513167013,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public float maxScore(float maxFreq) {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost, query boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public float maxScore(float maxFreq) {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public float maxScore(float maxFreq) {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost, query boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BooleanSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {\n    final float boost = ((BooleanWeight) weight).boost;\n\n    return new SimScorer() {\n\n      @Override\n      public float score(int doc, float freq) throws IOException {\n        return boost;\n      }\n\n      @Override\n      public float maxScore(float maxFreq) {\n        return boost;\n      }\n\n      @Override\n      public Explanation explain(int doc, Explanation freq) throws IOException {\n        Explanation queryBoostExpl = Explanation.match(boost, \"boost, query boost\");\n        return Explanation.match(\n            queryBoostExpl.getValue(),\n            \"score(\" + getClass().getSimpleName() + \", doc=\" + doc + \"), computed from:\",\n            queryBoostExpl);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["927e6deec13723e5fd6fb8f1e0457e8597dae15e","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["2247f9b905bc1344a659f142ce3ea23f96c9e827"],"0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a":["417142ff08fda9cf0b72d5133e63097a166c6458"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2247f9b905bc1344a659f142ce3ea23f96c9e827"],"927e6deec13723e5fd6fb8f1e0457e8597dae15e":["417142ff08fda9cf0b72d5133e63097a166c6458","0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a"],"417142ff08fda9cf0b72d5133e63097a166c6458":["b9b82182bcb9110d24f7de32032113dbf31606c2","9fc47cb7b4346802411bb432f501ed0673d7119e"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2247f9b905bc1344a659f142ce3ea23f96c9e827":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["b9b82182bcb9110d24f7de32032113dbf31606c2"],"b9b82182bcb9110d24f7de32032113dbf31606c2":["297201ceb6f93f54f44df6d02cdc988591428b75"],"297201ceb6f93f54f44df6d02cdc988591428b75":["136d4e97e5588b3f560e4d157962baa796f6c259"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"136d4e97e5588b3f560e4d157962baa796f6c259":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["136d4e97e5588b3f560e4d157962baa796f6c259"],"0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a":["927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"927e6deec13723e5fd6fb8f1e0457e8597dae15e":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"417142ff08fda9cf0b72d5133e63097a166c6458":["0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a","927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["199dfa410f1fdbfd3294106b04096cce5ed34b21","2247f9b905bc1344a659f142ce3ea23f96c9e827"],"2247f9b905bc1344a659f142ce3ea23f96c9e827":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"b9b82182bcb9110d24f7de32032113dbf31606c2":["417142ff08fda9cf0b72d5133e63097a166c6458","9fc47cb7b4346802411bb432f501ed0673d7119e"],"297201ceb6f93f54f44df6d02cdc988591428b75":["b9b82182bcb9110d24f7de32032113dbf31606c2"],"136d4e97e5588b3f560e4d157962baa796f6c259":["297201ceb6f93f54f44df6d02cdc988591428b75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}