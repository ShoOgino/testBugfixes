{"path":"src/test/org/apache/lucene/index/TestStressIndexing2#indexSerial(Map,Directory).mjava","commits":[{"id":"16efeb5e41e35037f154efba9fdbbc13f8bc5cc2","date":1202772354,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestStressIndexing2#indexSerial(Map,Directory).mjava","pathOld":"/dev/null","sourceNew":"  public static void indexSerial(Map docs, Directory dir) throws IOException {\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    // index all docs in a single thread\n    Iterator iter = docs.values().iterator();\n    while (iter.hasNext()) {\n      Document d = (Document)iter.next();\n      ArrayList fields = new ArrayList();\n      fields.addAll(d.getFields());\n      // put fields in same order each time\n      Collections.sort(fields, fieldNameComparator);\n      \n      Document d1 = new Document();\n      d1.setBoost(d.getBoost());\n      for (int i=0; i<fields.size(); i++) {\n        d1.add((Fieldable) fields.get(i));\n      }\n      w.addDocument(d1);\n      // System.out.println(\"indexing \"+d1);\n    }\n    \n    w.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestStressIndexing2#indexSerial(Map[String,Document],Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestStressIndexing2#indexSerial(Map,Directory).mjava","sourceNew":"  public static void indexSerial(Map<String,Document> docs, Directory dir) throws IOException {\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    // index all docs in a single thread\n    Iterator<Document> iter = docs.values().iterator();\n    while (iter.hasNext()) {\n      Document d = iter.next();\n      ArrayList<Fieldable> fields = new ArrayList<Fieldable>();\n      fields.addAll(d.getFields());\n      // put fields in same order each time\n      Collections.sort(fields, fieldNameComparator);\n      \n      Document d1 = new Document();\n      d1.setBoost(d.getBoost());\n      for (int i=0; i<fields.size(); i++) {\n        d1.add(fields.get(i));\n      }\n      w.addDocument(d1);\n      // System.out.println(\"indexing \"+d1);\n    }\n    \n    w.close();\n  }\n\n","sourceOld":"  public static void indexSerial(Map docs, Directory dir) throws IOException {\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    // index all docs in a single thread\n    Iterator iter = docs.values().iterator();\n    while (iter.hasNext()) {\n      Document d = (Document)iter.next();\n      ArrayList fields = new ArrayList();\n      fields.addAll(d.getFields());\n      // put fields in same order each time\n      Collections.sort(fields, fieldNameComparator);\n      \n      Document d1 = new Document();\n      d1.setBoost(d.getBoost());\n      for (int i=0; i<fields.size(); i++) {\n        d1.add((Fieldable) fields.get(i));\n      }\n      w.addDocument(d1);\n      // System.out.println(\"indexing \"+d1);\n    }\n    \n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16efeb5e41e35037f154efba9fdbbc13f8bc5cc2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["16efeb5e41e35037f154efba9fdbbc13f8bc5cc2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16efeb5e41e35037f154efba9fdbbc13f8bc5cc2"],"16efeb5e41e35037f154efba9fdbbc13f8bc5cc2":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}