{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/TermInfosReaderIndex#compareTo(Term,int,PagedBytesDataInput,BytesRef).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/TermInfosReaderIndex#compareTo(Term,int,PagedBytesDataInput,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermInfosReaderIndex#compareTo(Term,int,PagedBytesDataInput,BytesRef).mjava","sourceNew":"  /**\n   * Compare the fields of the terms first, and if not equals return from\n   * compare. If equal compare terms.\n   * \n   * @param term\n   *          the term to compare.\n   * @param termIndex\n   *          the position of the term in the input to compare\n   * @param input\n   *          the input buffer.\n   * @return int.\n   * @throws IOException \n   */\n  private int compareTo(Term term, int termIndex, PagedBytesDataInput input, BytesRef reuse) throws IOException {\n    // if term field does not equal mid's field index, then compare fields\n    // else if they are equal, compare term's string values...\n    int c = compareField(term, termIndex, input);\n    if (c == 0) {\n      reuse.length = input.readVInt();\n      reuse.grow(reuse.length);\n      input.readBytes(reuse.bytes, 0, reuse.length);\n      return comparator.compare(term.bytes(), reuse);\n    }\n    return c;\n  }\n\n","sourceOld":"  /**\n   * Compare the fields of the terms first, and if not equals return from\n   * compare. If equal compare terms.\n   * \n   * @param term\n   *          the term to compare.\n   * @param termIndex\n   *          the position of the term in the input to compare\n   * @param input\n   *          the input buffer.\n   * @return int.\n   * @throws IOException \n   */\n  private int compareTo(Term term, int termIndex, PagedBytesDataInput input, BytesRef reuse) throws IOException {\n    // if term field does not equal mid's field index, then compare fields\n    // else if they are equal, compare term's string values...\n    int c = compareField(term, termIndex, input);\n    if (c == 0) {\n      reuse.length = input.readVInt();\n      reuse.grow(reuse.length);\n      input.readBytes(reuse.bytes, 0, reuse.length);\n      return comparator.compare(term.bytes(), reuse);\n    }\n    return c;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/TermInfosReaderIndex#compareTo(Term,int,PagedBytesDataInput,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/TermInfosReaderIndex#compareTo(Term,int,PagedBytesDataInput,BytesRef).mjava","sourceNew":"  /**\n   * Compare the fields of the terms first, and if not equals return from\n   * compare. If equal compare terms.\n   * \n   * @param term\n   *          the term to compare.\n   * @param termIndex\n   *          the position of the term in the input to compare\n   * @param input\n   *          the input buffer.\n   * @return int.\n   * @throws IOException \n   */\n  private int compareTo(Term term, int termIndex, PagedBytesDataInput input, BytesRef reuse) throws IOException {\n    // if term field does not equal mid's field index, then compare fields\n    // else if they are equal, compare term's string values...\n    int c = compareField(term, termIndex, input);\n    if (c == 0) {\n      reuse.length = input.readVInt();\n      reuse.grow(reuse.length);\n      input.readBytes(reuse.bytes, 0, reuse.length);\n      return comparator.compare(term.bytes(), reuse);\n    }\n    return c;\n  }\n\n","sourceOld":"  /**\n   * Compare the fields of the terms first, and if not equals return from\n   * compare. If equal compare terms.\n   * \n   * @param term\n   *          the term to compare.\n   * @param termIndex\n   *          the position of the term in the input to compare\n   * @param input\n   *          the input buffer.\n   * @return int.\n   * @throws IOException \n   */\n  private int compareTo(Term term, int termIndex, PagedBytesDataInput input, BytesRef reuse) throws IOException {\n    // if term field does not equal mid's field index, then compare fields\n    // else if they are equal, compare term's string values...\n    int c = compareField(term, termIndex, input);\n    if (c == 0) {\n      reuse.length = input.readVInt();\n      reuse.grow(reuse.length);\n      input.readBytes(reuse.bytes, 0, reuse.length);\n      return comparator.compare(term.bytes(), reuse);\n    }\n    return c;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}