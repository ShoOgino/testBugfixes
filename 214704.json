{"path":"src/java/org/apache/lucene/util/OpenBitSetDISI#inPlaceNot(DocIdSetIterator).mjava","commits":[{"id":"a27a24aac4a53ec0af1f168a3b1ab4a06a042250","date":1211570705,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/OpenBitSetDISI#inPlaceNot(DocIdSetIterator).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Perform an inplace NOT with the doc ids from a given DocIdSetIterator,\r\n   * clearing all the bits for each such doc id.\r\n   * These doc ids should be smaller than the maximum size passed to the\r\n   * constructor.\r\n   */   \r\n  public void inPlaceNot(DocIdSetIterator disi) throws IOException {\r\n    while (disi.next() && (disi.doc() < size())) {\r\n      fastClear(disi.doc());\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00f15d6b8e3e70d793276689970650aea4ff4996","date":1226368489,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/OpenBitSetDISI#inPlaceNot(DocIdSetIterator).mjava","pathOld":"src/java/org/apache/lucene/util/OpenBitSetDISI#inPlaceNot(DocIdSetIterator).mjava","sourceNew":"  /**\n   * Perform an inplace NOT with the doc ids from a given DocIdSetIterator,\n   * clearing all the bits for each such doc id.\n   * These doc ids should be smaller than the maximum size passed to the\n   * constructor.\n   */   \n  public void inPlaceNot(DocIdSetIterator disi) throws IOException {\n    while (disi.next() && (disi.doc() < size())) {\n      fastClear(disi.doc());\n    }\n  }\n\n","sourceOld":"  /**\r\n   * Perform an inplace NOT with the doc ids from a given DocIdSetIterator,\r\n   * clearing all the bits for each such doc id.\r\n   * These doc ids should be smaller than the maximum size passed to the\r\n   * constructor.\r\n   */   \r\n  public void inPlaceNot(DocIdSetIterator disi) throws IOException {\r\n    while (disi.next() && (disi.doc() < size())) {\r\n      fastClear(disi.doc());\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/OpenBitSetDISI#inPlaceNot(DocIdSetIterator).mjava","pathOld":"src/java/org/apache/lucene/util/OpenBitSetDISI#inPlaceNot(DocIdSetIterator).mjava","sourceNew":"  /**\n   * Perform an inplace NOT with the doc ids from a given DocIdSetIterator,\n   * clearing all the bits for each such doc id.\n   * These doc ids should be smaller than the maximum size passed to the\n   * constructor.\n   */   \n  public void inPlaceNot(DocIdSetIterator disi) throws IOException {\n    int doc;\n    long size = size();\n    while ((doc = disi.nextDoc()) < size) {\n      fastClear(doc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Perform an inplace NOT with the doc ids from a given DocIdSetIterator,\n   * clearing all the bits for each such doc id.\n   * These doc ids should be smaller than the maximum size passed to the\n   * constructor.\n   */   \n  public void inPlaceNot(DocIdSetIterator disi) throws IOException {\n    while (disi.next() && (disi.doc() < size())) {\n      fastClear(disi.doc());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/OpenBitSetDISI#inPlaceNot(DocIdSetIterator).mjava","pathOld":"src/java/org/apache/lucene/util/OpenBitSetDISI#inPlaceNot(DocIdSetIterator).mjava","sourceNew":"  /**\n   * Perform an inplace NOT with the doc ids from a given DocIdSetIterator,\n   * clearing all the bits for each such doc id.\n   * These doc ids should be smaller than the maximum size passed to the\n   * constructor.\n   */   \n  public void inPlaceNot(DocIdSetIterator disi) throws IOException {\n    int doc;\n    long size = size();\n    while ((doc = disi.nextDoc()) < size) {\n      fastClear(doc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Perform an inplace NOT with the doc ids from a given DocIdSetIterator,\n   * clearing all the bits for each such doc id.\n   * These doc ids should be smaller than the maximum size passed to the\n   * constructor.\n   */   \n  public void inPlaceNot(DocIdSetIterator disi) throws IOException {\n    int doc;\n    long size = size();\n    while ((doc = disi.nextDoc()) < size) {\n      fastClear(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["00f15d6b8e3e70d793276689970650aea4ff4996"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"00f15d6b8e3e70d793276689970650aea4ff4996":["a27a24aac4a53ec0af1f168a3b1ab4a06a042250"],"a27a24aac4a53ec0af1f168a3b1ab4a06a042250":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["30a558487f2298c2c19ceca9103c1b6865d64708"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a27a24aac4a53ec0af1f168a3b1ab4a06a042250"],"00f15d6b8e3e70d793276689970650aea4ff4996":["30a558487f2298c2c19ceca9103c1b6865d64708"],"a27a24aac4a53ec0af1f168a3b1ab4a06a042250":["00f15d6b8e3e70d793276689970650aea4ff4996"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}