{"path":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testInit().mjava","commits":[{"id":"84b6c001c19319635b53dd80ee9fc1ba9a5b4574","date":1213883214,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testInit().mjava","pathOld":"/dev/null","sourceNew":"  public void testInit() throws Exception {\n    SolrCore core = h.getCore();\n    SpellCheckComponent scc = new SpellCheckComponent();\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(\"classname\", IndexBasedSpellChecker.class.getName());\n    spellchecker.add(\"name\", \"default\");\n    spellchecker.add(\"field\", \"lowerfilt\");\n    spellchecker.add(\"spellcheckIndexDir\", \"./spellchecker\");\n\n    args.add(\"spellchecker\", spellchecker);\n    NamedList altSC = new NamedList();\n    altSC.add(\"classname\", IndexBasedSpellChecker.class.getName());\n    altSC.add(\"name\", \"alternate\");\n    altSC.add(\"field\", \"lowerfilt\");\n    altSC.add(\"spellcheckIndexDir\", \"./spellchecker\");\n\n    args.add(\"spellchecker\", altSC);\n    args.add(\"queryAnalyzerFieldType\", \"lowerfilt\");\n    NamedList defaults = new NamedList();\n    defaults.add(SpellCheckComponent.SPELLCHECK_COLLATE, true);\n    defaults.add(SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, false);\n    defaults.add(SpellCheckComponent.SPELLCHECK_COUNT, 2);\n    args.add(\"defaults\", defaults);\n    scc.init(args);\n    scc.inform(core);\n    //hmm, not sure what to assert here...\n\n    //add the sc again and then init again, we should get an exception\n    args.add(\"spellchecker\", spellchecker);\n    scc = new SpellCheckComponent();\n    scc.init(args);\n    try {\n      scc.inform(core);\n      assertTrue(false);\n    } catch (Exception e) {\n\n    }\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testInit().mjava","pathOld":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testInit().mjava","sourceNew":"  public void testInit() throws Exception {\n    SolrCore core = h.getCore();\n    SpellCheckComponent scc = new SpellCheckComponent();\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(\"classname\", IndexBasedSpellChecker.class.getName());\n    spellchecker.add(\"name\", \"default\");\n    spellchecker.add(\"field\", \"lowerfilt\");\n    spellchecker.add(\"spellcheckIndexDir\", \"./spellchecker\");\n\n    args.add(\"spellchecker\", spellchecker);\n    NamedList altSC = new NamedList();\n    altSC.add(\"classname\", IndexBasedSpellChecker.class.getName());\n    altSC.add(\"name\", \"alternate\");\n    altSC.add(\"field\", \"lowerfilt\");\n    altSC.add(\"spellcheckIndexDir\", \"./spellchecker\");\n\n    args.add(\"spellchecker\", altSC);\n    args.add(\"queryAnalyzerFieldType\", \"lowerfilt\");\n    NamedList defaults = new NamedList();\n    defaults.add(SpellCheckComponent.SPELLCHECK_COLLATE, true);\n    defaults.add(SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, false);\n    defaults.add(SpellCheckComponent.SPELLCHECK_COUNT, 2);\n    args.add(\"defaults\", defaults);\n    scc.init(args);\n    scc.inform(core);\n    //hmm, not sure what to assert here...\n\n    //add the sc again and then init again, we should get an exception\n    args.add(\"spellchecker\", spellchecker);\n    scc = new SpellCheckComponent();\n    scc.init(args);\n    try {\n      scc.inform(core);\n      assertTrue(false);\n    } catch (Exception e) {\n\n    }\n\n\n  }\n\n","sourceOld":"  public void testInit() throws Exception {\n    SolrCore core = h.getCore();\n    SpellCheckComponent scc = new SpellCheckComponent();\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(\"classname\", IndexBasedSpellChecker.class.getName());\n    spellchecker.add(\"name\", \"default\");\n    spellchecker.add(\"field\", \"lowerfilt\");\n    spellchecker.add(\"spellcheckIndexDir\", \"./spellchecker\");\n\n    args.add(\"spellchecker\", spellchecker);\n    NamedList altSC = new NamedList();\n    altSC.add(\"classname\", IndexBasedSpellChecker.class.getName());\n    altSC.add(\"name\", \"alternate\");\n    altSC.add(\"field\", \"lowerfilt\");\n    altSC.add(\"spellcheckIndexDir\", \"./spellchecker\");\n\n    args.add(\"spellchecker\", altSC);\n    args.add(\"queryAnalyzerFieldType\", \"lowerfilt\");\n    NamedList defaults = new NamedList();\n    defaults.add(SpellCheckComponent.SPELLCHECK_COLLATE, true);\n    defaults.add(SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, false);\n    defaults.add(SpellCheckComponent.SPELLCHECK_COUNT, 2);\n    args.add(\"defaults\", defaults);\n    scc.init(args);\n    scc.inform(core);\n    //hmm, not sure what to assert here...\n\n    //add the sc again and then init again, we should get an exception\n    args.add(\"spellchecker\", spellchecker);\n    scc = new SpellCheckComponent();\n    scc.init(args);\n    try {\n      scc.inform(core);\n      assertTrue(false);\n    } catch (Exception e) {\n\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b6c001c19319635b53dd80ee9fc1ba9a5b4574":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"84b6c001c19319635b53dd80ee9fc1ba9a5b4574":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}