{"path":"solr/core/src/test/org/apache/solr/search/TestRangeQuery#sameDocs(String,DocSet,DocSet).mjava","commits":[{"id":"5cb157886ecc78f33fafd9d403e96a4a495503b3","date":1467753535,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRangeQuery#sameDocs(String,DocSet,DocSet).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRangeQuery#sameDocs(DocSet,DocSet).mjava","sourceNew":"  static boolean sameDocs(String msg, DocSet a, DocSet b) {\n    DocIterator i = a.iterator();\n    // System.out.println(\"SIZES=\"+a.size() + \",\" + b.size());\n    assertEquals(msg, a.size(), b.size());\n    while (i.hasNext()) {\n      int doc = i.nextDoc();\n      assertTrue(msg, b.exists(doc));\n      // System.out.println(\"MATCH! \" + doc);\n    }\n    return true;\n  }\n\n","sourceOld":"  static boolean sameDocs(DocSet a, DocSet b) {\n    DocIterator i = a.iterator();\n    // System.out.println(\"SIZES=\"+a.size() + \",\" + b.size());\n    assertEquals(a.size(), b.size());\n    while (i.hasNext()) {\n      int doc = i.nextDoc();\n      assertTrue(b.exists(doc));\n      // System.out.println(\"MATCH! \" + doc);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRangeQuery#sameDocs(String,DocSet,DocSet).mjava","pathOld":"/dev/null","sourceNew":"  static boolean sameDocs(String msg, DocSet a, DocSet b) {\n    DocIterator i = a.iterator();\n    // System.out.println(\"SIZES=\"+a.size() + \",\" + b.size());\n    assertEquals(msg, a.size(), b.size());\n    while (i.hasNext()) {\n      int doc = i.nextDoc();\n      assertTrue(msg, b.exists(doc));\n      // System.out.println(\"MATCH! \" + doc);\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92548f4520f4cb11beb9e9620b389d0b840c410f","date":1582641583,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestRangeQuery#sameDocs(String,DocSet,DocSet).mjava","sourceNew":null,"sourceOld":"  static boolean sameDocs(String msg, DocSet a, DocSet b) {\n    DocIterator i = a.iterator();\n    // System.out.println(\"SIZES=\"+a.size() + \",\" + b.size());\n    assertEquals(msg, a.size(), b.size());\n    while (i.hasNext()) {\n      int doc = i.nextDoc();\n      assertTrue(msg, b.exists(doc));\n      // System.out.println(\"MATCH! \" + doc);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92548f4520f4cb11beb9e9620b389d0b840c410f":["5cb157886ecc78f33fafd9d403e96a4a495503b3"],"5cb157886ecc78f33fafd9d403e96a4a495503b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5cb157886ecc78f33fafd9d403e96a4a495503b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92548f4520f4cb11beb9e9620b389d0b840c410f"]},"commit2Childs":{"92548f4520f4cb11beb9e9620b389d0b840c410f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cb157886ecc78f33fafd9d403e96a4a495503b3":["92548f4520f4cb11beb9e9620b389d0b840c410f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5cb157886ecc78f33fafd9d403e96a4a495503b3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}