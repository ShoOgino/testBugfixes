{"path":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#doTestBocchan(int).mjava","commits":[{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":1,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#doTestBocchan(int).mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#doTestBocchan(int).mjava","sourceNew":"  private void doTestBocchan(int numIterations) throws Exception {\n    LineNumberReader reader = new LineNumberReader(new InputStreamReader(\n        this.getClass().getResourceAsStream(\"bocchan.utf-8\")));\n    String line = reader.readLine();\n    reader.close();\n    \n    if (VERBOSE) {\n      System.out.println(\"Test for Bocchan without pre-splitting sentences\");\n    }\n\n    /*\n    if (numIterations > 1) {\n      // warmup\n      for (int i = 0; i < numIterations; i++) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    */\n\n    long totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n      ts.reset();\n      while(ts.incrementToken());\n    }\n    String[] sentences = line.split(\"、|。\");\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n      System.out.println(\"Test for Bocchan with pre-splitting sentences (\" + sentences.length + \" sentences)\");\n    }\n    totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      for (String sentence: sentences) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(sentence));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n    }\n  }\n\n","sourceOld":"  private void doTestBocchan(int numIterations) throws Exception {\n    LineNumberReader reader = new LineNumberReader(new InputStreamReader(\n        this.getClass().getResourceAsStream(\"bocchan.utf-8\")));\n    String line = reader.readLine();\n    reader.close();\n    \n    if (VERBOSE) {\n      System.out.println(\"Test for Bocchan without pre-splitting sentences\");\n    }\n\n    /*\n    if (numIterations > 1) {\n      // warmup\n      for (int i = 0; i < numIterations; i++) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    */\n\n    long totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n      ts.reset();\n      while(ts.incrementToken());\n    }\n    String[] sentences = line.split(\"、|。\");\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n      System.out.println(\"Test for Bocchan with pre-splitting sentences (\" + sentences.length + \" sentences)\");\n    }\n    totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      for (String sentence: sentences) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(sentence));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#doTestBocchan(int).mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#doTestBocchan(int).mjava","sourceNew":"  private void doTestBocchan(int numIterations) throws Exception {\n    LineNumberReader reader = new LineNumberReader(new InputStreamReader(\n        this.getClass().getResourceAsStream(\"bocchan.utf-8\")));\n    String line = reader.readLine();\n    reader.close();\n    \n    if (VERBOSE) {\n      System.out.println(\"Test for Bocchan without pre-splitting sentences\");\n    }\n\n    /*\n    if (numIterations > 1) {\n      // warmup\n      for (int i = 0; i < numIterations; i++) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    */\n\n    long totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n      ts.reset();\n      while(ts.incrementToken());\n    }\n    String[] sentences = line.split(\"、|。\");\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n      System.out.println(\"Test for Bocchan with pre-splitting sentences (\" + sentences.length + \" sentences)\");\n    }\n    totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      for (String sentence: sentences) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(sentence));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n    }\n  }\n\n","sourceOld":"  private void doTestBocchan(int numIterations) throws Exception {\n    LineNumberReader reader = new LineNumberReader(new InputStreamReader(\n        this.getClass().getResourceAsStream(\"bocchan.utf-8\")));\n    String line = reader.readLine();\n    reader.close();\n    \n    if (VERBOSE) {\n      System.out.println(\"Test for Bocchan without pre-splitting sentences\");\n    }\n\n    /*\n    if (numIterations > 1) {\n      // warmup\n      for (int i = 0; i < numIterations; i++) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    */\n\n    long totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(line));\n      ts.reset();\n      while(ts.incrementToken());\n    }\n    String[] sentences = line.split(\"、|。\");\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n      System.out.println(\"Test for Bocchan with pre-splitting sentences (\" + sentences.length + \" sentences)\");\n    }\n    totalStart = System.currentTimeMillis();\n    for (int i = 0; i < numIterations; i++) {\n      for (String sentence: sentences) {\n        final TokenStream ts = analyzer.tokenStream(\"ignored\", new StringReader(sentence));\n        ts.reset();\n        while(ts.incrementToken());\n      }\n    }\n    if (VERBOSE) {\n      System.out.println(\"Total time : \" + (System.currentTimeMillis() - totalStart));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}