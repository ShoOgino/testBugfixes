{"path":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","commits":[{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","pathOld":"src/java/org/apache/solr/core/MultiCore#getCore(String).mjava","sourceNew":"  public SolrCore getCore(String name) {\n    CoreDescriptor dcore = getDescriptor( name );\n    return (dcore == null) ? null : dcore.getCore();\n  }\n\n","sourceOld":"  public SolrCore getCore(String name) {\n    CoreDescriptor dcore = getDescriptor( name );\n    return (dcore == null) ? null : dcore.getCore();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4926b5318ba4167d360445a0c5f3fc8af2cf8c49","date":1218678599,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","sourceNew":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore.open() @see SolrCore.close()\n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    synchronized(cores) {\n      CoreDescriptor dcore = cores.get(name);\n       SolrCore core = null;\n      if (dcore != null)\n        core = dcore.getCore();\n       return core;\n// solr-647\n//      if (core != null)\n//        return core.open();\n//      return null;\n    }\n  }\n\n","sourceOld":"  public SolrCore getCore(String name) {\n    CoreDescriptor dcore = getDescriptor( name );\n    return (dcore == null) ? null : dcore.getCore();\n  }\n\n","bugFix":null,"bugIntro":["c28792ff7d1774c306e16afbd44ded91a417049b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c28792ff7d1774c306e16afbd44ded91a417049b","date":1219072108,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","sourceNew":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore.open() @see SolrCore.close()\n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    synchronized(cores) {\n      SolrCore core = cores.get(name);\n      if (core != null)\n        core.open();  // increment the ref count while still synchronized\n      return core;\n    }\n  }\n\n","sourceOld":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore.open() @see SolrCore.close()\n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    synchronized(cores) {\n      CoreDescriptor dcore = cores.get(name);\n       SolrCore core = null;\n      if (dcore != null)\n        core = dcore.getCore();\n       return core;\n// solr-647\n//      if (core != null)\n//        return core.open();\n//      return null;\n    }\n  }\n\n","bugFix":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ddc2fd411184c85d1baed1e8d24840a151d6ba1","date":1219508719,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","sourceNew":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore#open() \n   * @see SolrCore#close() \n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    synchronized(cores) {\n      SolrCore core = cores.get(name);\n      if (core != null)\n        core.open();  // increment the ref count while still synchronized\n      return core;\n    }\n  }\n\n","sourceOld":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore.open() @see SolrCore.close()\n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    synchronized(cores) {\n      SolrCore core = cores.get(name);\n      if (core != null)\n        core.open();  // increment the ref count while still synchronized\n      return core;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72","date":1260860758,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","sourceNew":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore#open() \n   * @see SolrCore#close() \n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    name= checkDefault(name);\n    synchronized(cores) {\n      SolrCore core = cores.get(name);\n      if (core != null)\n        core.open();  // increment the ref count while still synchronized\n      return core;\n    }\n  }\n\n","sourceOld":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore#open() \n   * @see SolrCore#close() \n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    synchronized(cores) {\n      SolrCore core = cores.get(name);\n      if (core != null)\n        core.open();  // increment the ref count while still synchronized\n      return core;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#getCore(String).mjava","sourceNew":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore#open() \n   * @see SolrCore#close() \n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    name= checkDefault(name);\n    synchronized(cores) {\n      SolrCore core = cores.get(name);\n      if (core != null)\n        core.open();  // increment the ref count while still synchronized\n      return core;\n    }\n  }\n\n","sourceOld":"  /** Gets a core by name and increase its refcount.\n   * @see SolrCore#open() \n   * @see SolrCore#close() \n   * @param name the core name\n   * @return the core if found\n   */\n  public SolrCore getCore(String name) {\n    name= checkDefault(name);\n    synchronized(cores) {\n      SolrCore core = cores.get(name);\n      if (core != null)\n        core.open();  // increment the ref count while still synchronized\n      return core;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c28792ff7d1774c306e16afbd44ded91a417049b":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"ad94625fb8d088209f46650c8097196fec67f00c":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["c28792ff7d1774c306e16afbd44ded91a417049b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72":["ad94625fb8d088209f46650c8097196fec67f00c"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["c28792ff7d1774c306e16afbd44ded91a417049b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"c28792ff7d1774c306e16afbd44ded91a417049b":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}