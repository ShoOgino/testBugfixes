{"path":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object val) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<IndexableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<IndexableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7280772020b860cd9a473ed847c5b79251a850d7","date":1489283281,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object val) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<IndexableField> result = new ArrayList<>();\n    if (field.indexed() || field.hasDocValues()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object val) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<IndexableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7280772020b860cd9a473ed847c5b79251a850d7":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7280772020b860cd9a473ed847c5b79251a850d7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"7280772020b860cd9a473ed847c5b79251a850d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"acd9883560fd89e6448b2b447302fe543040cd4f":["7280772020b860cd9a473ed847c5b79251a850d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}