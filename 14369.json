{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#setReaderTestPoint().mjava","commits":[{"id":"4c1b87b155748a27fbed84a0ffb3f8799177451e","date":1346349018,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#setReaderTestPoint().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#setReader(Reader).mjava","sourceNew":"  @Override\n  boolean setReaderTestPoint() {\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public void setReader(Reader input) throws IOException {\n    super.setReader(input);\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#setReaderTestPoint().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  boolean setReaderTestPoint() {\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50d5b588b112eeb3d6b2a3fcc43a40ef0615a529","date":1419024596,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#setReaderTestPoint().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#setReaderTestPoint().mjava","sourceNew":"  @Override\n  void setReaderTestPoint() {\n    try {\n      if (streamState != State.CLOSE) {\n        fail(\"setReader() called in wrong state: \" + streamState);\n      }\n    } finally {\n      streamState = State.SETREADER;\n    }\n  }\n\n","sourceOld":"  @Override\n  boolean setReaderTestPoint() {\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c1b87b155748a27fbed84a0ffb3f8799177451e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"50d5b588b112eeb3d6b2a3fcc43a40ef0615a529":["4c1b87b155748a27fbed84a0ffb3f8799177451e"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4c1b87b155748a27fbed84a0ffb3f8799177451e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50d5b588b112eeb3d6b2a3fcc43a40ef0615a529"]},"commit2Childs":{"4c1b87b155748a27fbed84a0ffb3f8799177451e":["50d5b588b112eeb3d6b2a3fcc43a40ef0615a529","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c1b87b155748a27fbed84a0ffb3f8799177451e","05a14b2611ead08655a2b2bdc61632eb31316e57"],"50d5b588b112eeb3d6b2a3fcc43a40ef0615a529":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}