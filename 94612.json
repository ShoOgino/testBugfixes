{"path":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","commits":[{"id":"0d6879a535f14bc53be7c86de58142558c4f9eee","date":1492512399,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testHiddenSysProps() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    SolrResourceLoader loader = new SolrResourceLoader(home);\n\n    // default config\n    String solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr.xml\").toFile(), \"UTF-8\");\n    NodeConfig config = SolrXmlConfig.fromString(loader, solrXml);\n    NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.forEach(s -> {\n      assertTrue(s, config.getHiddenSysProps().contains(s));\n    });\n\n    // custom config\n    solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr-hiddensysprops.xml\").toFile(), \"UTF-8\");\n    NodeConfig config2 = SolrXmlConfig.fromString(loader, solrXml);\n    Arrays.asList(\"foo\", \"bar\", \"baz\").forEach(s -> {\n      assertTrue(s, config2.getHiddenSysProps().contains(s));\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testHiddenSysProps() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    SolrResourceLoader loader = new SolrResourceLoader(home);\n\n    // default config\n    String solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr.xml\").toFile(), \"UTF-8\");\n    NodeConfig config = SolrXmlConfig.fromString(loader, solrXml);\n    NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.forEach(s -> {\n      assertTrue(s, config.getHiddenSysProps().contains(s));\n    });\n\n    // custom config\n    solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr-hiddensysprops.xml\").toFile(), \"UTF-8\");\n    NodeConfig config2 = SolrXmlConfig.fromString(loader, solrXml);\n    Arrays.asList(\"foo\", \"bar\", \"baz\").forEach(s -> {\n      assertTrue(s, config2.getHiddenSysProps().contains(s));\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa","date":1494330459,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","pathOld":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","sourceNew":"  @Test\n  public void testHiddenSysProps() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    SolrResourceLoader loader = new SolrResourceLoader(home);\n\n    // default config\n    String solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr.xml\").toFile(), \"UTF-8\");\n    NodeConfig config = SolrXmlConfig.fromString(loader, solrXml);\n    NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.forEach(s -> {\n      assertTrue(s, config.getMetricsConfig().getHiddenSysProps().contains(s));\n    });\n\n    // custom config\n    solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr-hiddensysprops.xml\").toFile(), \"UTF-8\");\n    NodeConfig config2 = SolrXmlConfig.fromString(loader, solrXml);\n    Arrays.asList(\"foo\", \"bar\", \"baz\").forEach(s -> {\n      assertTrue(s, config2.getMetricsConfig().getHiddenSysProps().contains(s));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testHiddenSysProps() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    SolrResourceLoader loader = new SolrResourceLoader(home);\n\n    // default config\n    String solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr.xml\").toFile(), \"UTF-8\");\n    NodeConfig config = SolrXmlConfig.fromString(loader, solrXml);\n    NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.forEach(s -> {\n      assertTrue(s, config.getHiddenSysProps().contains(s));\n    });\n\n    // custom config\n    solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr-hiddensysprops.xml\").toFile(), \"UTF-8\");\n    NodeConfig config2 = SolrXmlConfig.fromString(loader, solrXml);\n    Arrays.asList(\"foo\", \"bar\", \"baz\").forEach(s -> {\n      assertTrue(s, config2.getHiddenSysProps().contains(s));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","pathOld":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","sourceNew":"  @Test\n  public void testHiddenSysProps() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    SolrResourceLoader loader = new SolrResourceLoader(home);\n\n    // default config\n    String solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr.xml\").toFile(), \"UTF-8\");\n    NodeConfig config = SolrXmlConfig.fromString(loader, solrXml);\n    NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.forEach(s -> {\n      assertTrue(s, config.getMetricsConfig().getHiddenSysProps().contains(s));\n    });\n\n    // custom config\n    solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr-hiddensysprops.xml\").toFile(), \"UTF-8\");\n    NodeConfig config2 = SolrXmlConfig.fromString(loader, solrXml);\n    Arrays.asList(\"foo\", \"bar\", \"baz\").forEach(s -> {\n      assertTrue(s, config2.getMetricsConfig().getHiddenSysProps().contains(s));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testHiddenSysProps() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    SolrResourceLoader loader = new SolrResourceLoader(home);\n\n    // default config\n    String solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr.xml\").toFile(), \"UTF-8\");\n    NodeConfig config = SolrXmlConfig.fromString(loader, solrXml);\n    NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.forEach(s -> {\n      assertTrue(s, config.getHiddenSysProps().contains(s));\n    });\n\n    // custom config\n    solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr-hiddensysprops.xml\").toFile(), \"UTF-8\");\n    NodeConfig config2 = SolrXmlConfig.fromString(loader, solrXml);\n    Arrays.asList(\"foo\", \"bar\", \"baz\").forEach(s -> {\n      assertTrue(s, config2.getHiddenSysProps().contains(s));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","pathOld":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testHiddenSysProps().mjava","sourceNew":"  @Test\n  public void testHiddenSysProps() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n\n    // default config\n    String solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr.xml\").toFile(), \"UTF-8\");\n    NodeConfig config = SolrXmlConfig.fromString(home, solrXml);\n    NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.forEach(s -> {\n      assertTrue(s, config.getMetricsConfig().getHiddenSysProps().contains(s));\n    });\n\n    // custom config\n    solrXml = FileUtils.readFileToString(home.resolve(\"solr-hiddensysprops.xml\").toFile(), \"UTF-8\");\n    NodeConfig config2 = SolrXmlConfig.fromString(home, solrXml);\n    Arrays.asList(\"foo\", \"bar\", \"baz\").forEach(s -> {\n      assertTrue(s, config2.getMetricsConfig().getHiddenSysProps().contains(s));\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testHiddenSysProps() throws Exception {\n    Path home = Paths.get(TEST_HOME());\n    SolrResourceLoader loader = new SolrResourceLoader(home);\n\n    // default config\n    String solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr.xml\").toFile(), \"UTF-8\");\n    NodeConfig config = SolrXmlConfig.fromString(loader, solrXml);\n    NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.forEach(s -> {\n      assertTrue(s, config.getMetricsConfig().getHiddenSysProps().contains(s));\n    });\n\n    // custom config\n    solrXml = FileUtils.readFileToString(Paths.get(home.toString(), \"solr-hiddensysprops.xml\").toFile(), \"UTF-8\");\n    NodeConfig config2 = SolrXmlConfig.fromString(loader, solrXml);\n    Arrays.asList(\"foo\", \"bar\", \"baz\").forEach(s -> {\n      assertTrue(s, config2.getMetricsConfig().getHiddenSysProps().contains(s));\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","0d6879a535f14bc53be7c86de58142558c4f9eee"],"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa":["e9017cf144952056066919f1ebc7897ff9bd71b1","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}