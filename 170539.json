{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  void showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + a);\n    System.err.println(\"######\"+bName+ \": \" + b);\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n  }\n\n","sourceOld":"  void showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + a);\n    System.err.println(\"######\"+bName+ \": \" + b);\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  void showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + a);\n    System.err.println(\"######\"+bName+ \": \" + b);\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n  }\n\n","sourceOld":"  void showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + a);\n    System.err.println(\"######\"+bName+ \": \" + b);\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  void showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + a);\n    System.err.println(\"######\"+bName+ \": \" + b);\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n  }\n\n","sourceOld":"  void showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + a);\n    System.err.println(\"######\"+bName+ \": \" + b);\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042c474f8983c7bfede807d97ad9faf73ff694cc","date":1355859039,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(b);\n    return onlyInA;\n  }\n\n","sourceOld":"  void showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + a);\n    System.err.println(\"######\"+bName+ \": \" + b);\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39","date":1355888669,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a,10));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b,10));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(b);\n    return onlyInA;\n  }\n\n","sourceOld":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(b);\n    return onlyInA;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51bfb7c6f1010aba59ba00728bfde0fb2ee8e350","date":1355889205,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a,10));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b,10));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(onlyInB);\n    return onlyInA;\n  }\n\n","sourceOld":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a,10));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b,10));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(b);\n    return onlyInA;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a,10));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b,10));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(onlyInB);\n    return onlyInA;\n  }\n\n","sourceOld":"  void showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + a);\n    System.err.println(\"######\"+bName+ \": \" + b);\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a,10));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b,10));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(onlyInB);\n    return onlyInA;\n  }\n\n","sourceOld":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a,10));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b,10));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<Map>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<Map>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<Map>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<Map>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(onlyInB);\n    return onlyInA;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4339eef0c1b12030c8590187e652cd1cd0a1f3cb","date":1397833225,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#showDiff(SolrDocumentList,SolrDocumentList,String,String).mjava","sourceNew":"  /**\n   * Shows the difference between two lists of documents.\n   * \n   * @param a the first list\n   * @param b the second list\n   * @param aName label for the first list\n   * @param bName label for the second list\n   * @return the documents only in list a\n   */\n  public static Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b,\n      String aName, String bName) {\n    System.err.println(\"######\" + aName + \": \" + toStr(a, 10));\n    System.err.println(\"######\" + bName + \": \" + toStr(b, 10));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n    \n    Set<Map> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n    \n    Set<Map> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n    \n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n    \n    onlyInA.addAll(onlyInB);\n    return onlyInA;\n  }\n\n","sourceOld":"  Set<Map> showDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName) {\n    System.err.println(\"######\"+aName+ \": \" + toStr(a,10));\n    System.err.println(\"######\"+bName+ \": \" + toStr(b,10));\n    System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    \n    Set<Map> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n\n    Set<Map> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n\n    Set<Map> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n\n    if (onlyInA.size() > 0) {\n      System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    }\n    if (onlyInB.size() > 0) {\n      System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    }\n\n    onlyInA.addAll(onlyInB);\n    return onlyInA;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["2c30e4c1cee08b3b229a77991882594fe7250b66","51bfb7c6f1010aba59ba00728bfde0fb2ee8e350"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["51bfb7c6f1010aba59ba00728bfde0fb2ee8e350"],"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39":["042c474f8983c7bfede807d97ad9faf73ff694cc"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"4339eef0c1b12030c8590187e652cd1cd0a1f3cb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"042c474f8983c7bfede807d97ad9faf73ff694cc":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"51bfb7c6f1010aba59ba00728bfde0fb2ee8e350":["7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4339eef0c1b12030c8590187e652cd1cd0a1f3cb"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4339eef0c1b12030c8590187e652cd1cd0a1f3cb"],"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39":["51bfb7c6f1010aba59ba00728bfde0fb2ee8e350"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"042c474f8983c7bfede807d97ad9faf73ff694cc":["7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"4339eef0c1b12030c8590187e652cd1cd0a1f3cb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"51bfb7c6f1010aba59ba00728bfde0fb2ee8e350":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","042c474f8983c7bfede807d97ad9faf73ff694cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}