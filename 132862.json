{"path":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#addModule(Vector,Class,int).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#addModule(Vector,Class,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Adds a feature to the Module attribute of the HTTPConnection class\n     *\n     * @param list    The feature to be added to the Module attribute\n     * @param module  The feature to be added to the Module attribute\n     * @param pos     The feature to be added to the Module attribute\n     * @return        Description of the Return Value\n     */\n    private final static boolean addModule(Vector list, Class module, int pos)\n    {\n        if (module == null)\n        {\n            return false;\n        }\n\n        // check if module implements HTTPClientModule\n        try\n        {\n            HTTPClientModule tmp = (HTTPClientModule) module.newInstance();\n        }\n        catch (RuntimeException re)\n        {\n            throw re;\n        }\n        catch (Exception e)\n        {\n            throw new RuntimeException(e.toString());\n        }\n\n        synchronized (list)\n        {\n            // check if module already in list\n            if (list.contains(module))\n            {\n                return false;\n            }\n\n            // add module to list\n            if (pos < 0)\n            {\n                list.insertElementAt(module, DefaultModuleList.size() + pos + 1);\n            }\n            else\n            {\n                list.insertElementAt(module, pos);\n            }\n        }\n\n        Log.write(Log.CONN, \"Conn:  Added module \" + module.getName() +\n                \" to \" +\n                ((list == DefaultModuleList) ? \"default \" : \"\") +\n                \"list\");\n\n        return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#addModule(Vector,Class,int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Adds a feature to the Module attribute of the HTTPConnection class\n     *\n     * @param list    The feature to be added to the Module attribute\n     * @param module  The feature to be added to the Module attribute\n     * @param pos     The feature to be added to the Module attribute\n     * @return        Description of the Return Value\n     */\n    private final static boolean addModule(Vector list, Class module, int pos)\n    {\n        if (module == null)\n        {\n            return false;\n        }\n\n        // check if module implements HTTPClientModule\n        try\n        {\n            HTTPClientModule tmp = (HTTPClientModule) module.newInstance();\n        }\n        catch (RuntimeException re)\n        {\n            throw re;\n        }\n        catch (Exception e)\n        {\n            throw new RuntimeException(e.toString());\n        }\n\n        synchronized (list)\n        {\n            // check if module already in list\n            if (list.contains(module))\n            {\n                return false;\n            }\n\n            // add module to list\n            if (pos < 0)\n            {\n                list.insertElementAt(module, DefaultModuleList.size() + pos + 1);\n            }\n            else\n            {\n                list.insertElementAt(module, pos);\n            }\n        }\n\n        Log.write(Log.CONN, \"Conn:  Added module \" + module.getName() +\n                \" to \" +\n                ((list == DefaultModuleList) ? \"default \" : \"\") +\n                \"list\");\n\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}