{"path":"src/test/org/apache/solr/schema/IndexSchemaTest#testRuntimeFieldCreation().mjava","commits":[{"id":"c3f722aaea0c06773a393c2b0d41079ba5cb8b0a","date":1216417422,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/schema/IndexSchemaTest#testRuntimeFieldCreation().mjava","pathOld":"/dev/null","sourceNew":"  public void testRuntimeFieldCreation()\n  {\n    // any field manipulation needs to happen when you know the core will not \n    // be accepting any requests.  Typically this is done within the inform() \n    // method.  Since this is a single threaded test, we can change the fields\n    // willi-nilly\n\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    final String fieldName = \"runtimefield\";\n    SchemaField sf = new SchemaField( fieldName, schema.getFieldTypes().get( \"string\" ) );\n    schema.getFields().put( fieldName, sf );\n    \n    // also register a new copy field (from our new field)\n    schema.registerCopyField( fieldName, \"dynamic_runtime\" );\n    schema.refreshAnalyzers();\n    \n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", fieldName, \"aaa\"));\n    assertU(commit());\n\n    SolrQuery query = new SolrQuery( fieldName+\":aaa\" );\n    query.set( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, query );\n    \n    assertQ(\"Make sure they got in\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/int[@name='id'][.='10']\"\n            );\n    \n    // Check to see if our copy field made it out safely\n    query.setQuery( \"dynamic_runtime:aaa\" );\n    assertQ(\"Make sure they got in\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/int[@name='id'][.='10']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/schema/IndexSchemaTest#testRuntimeFieldCreation().mjava","pathOld":"src/test/org/apache/solr/schema/IndexSchemaTest#testRuntimeFieldCreation().mjava","sourceNew":"  public void testRuntimeFieldCreation()\n  {\n    // any field manipulation needs to happen when you know the core will not \n    // be accepting any requests.  Typically this is done within the inform() \n    // method.  Since this is a single threaded test, we can change the fields\n    // willi-nilly\n\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    final String fieldName = \"runtimefield\";\n    SchemaField sf = new SchemaField( fieldName, schema.getFieldTypes().get( \"string\" ) );\n    schema.getFields().put( fieldName, sf );\n    \n    // also register a new copy field (from our new field)\n    schema.registerCopyField( fieldName, \"dynamic_runtime\" );\n    schema.refreshAnalyzers();\n    \n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", fieldName, \"aaa\"));\n    assertU(commit());\n\n    SolrQuery query = new SolrQuery( fieldName+\":aaa\" );\n    query.set( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, query );\n    \n    assertQ(\"Make sure they got in\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/int[@name='id'][.='10']\"\n            );\n    \n    // Check to see if our copy field made it out safely\n    query.setQuery( \"dynamic_runtime:aaa\" );\n    assertQ(\"Make sure they got in\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/int[@name='id'][.='10']\"\n            );\n  }\n\n","sourceOld":"  public void testRuntimeFieldCreation()\n  {\n    // any field manipulation needs to happen when you know the core will not \n    // be accepting any requests.  Typically this is done within the inform() \n    // method.  Since this is a single threaded test, we can change the fields\n    // willi-nilly\n\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    final String fieldName = \"runtimefield\";\n    SchemaField sf = new SchemaField( fieldName, schema.getFieldTypes().get( \"string\" ) );\n    schema.getFields().put( fieldName, sf );\n    \n    // also register a new copy field (from our new field)\n    schema.registerCopyField( fieldName, \"dynamic_runtime\" );\n    schema.refreshAnalyzers();\n    \n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", fieldName, \"aaa\"));\n    assertU(commit());\n\n    SolrQuery query = new SolrQuery( fieldName+\":aaa\" );\n    query.set( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, query );\n    \n    assertQ(\"Make sure they got in\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/int[@name='id'][.='10']\"\n            );\n    \n    // Check to see if our copy field made it out safely\n    query.setQuery( \"dynamic_runtime:aaa\" );\n    assertQ(\"Make sure they got in\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/int[@name='id'][.='10']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c3f722aaea0c06773a393c2b0d41079ba5cb8b0a":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["c3f722aaea0c06773a393c2b0d41079ba5cb8b0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c3f722aaea0c06773a393c2b0d41079ba5cb8b0a"],"c3f722aaea0c06773a393c2b0d41079ba5cb8b0a":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}