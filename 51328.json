{"path":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand#postCollect(IndexSearcher).mjava","commits":[{"id":"1d3f7ab1a502671bbdb03bcced21e764d2483221","date":1532329609,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand#postCollect(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void postCollect(IndexSearcher searcher) throws IOException {\n    if (firstPhaseGroups.isEmpty()) {\n      topGroups = new TopGroups<>(groupSort.getSort(), withinGroupSort.getSort(), 0, 0, new GroupDocs[0], Float.NaN);\n      return;\n    }\n\n    FieldType fieldType = field.getType();\n    if (fieldType.getNumberType() != null) {\n      topGroups = GroupConverter.fromMutable(field, secondPassCollector.getTopGroups(0));\n    } else {\n      topGroups = secondPassCollector.getTopGroups(0);\n    }\n    for (GroupDocs<?> group : topGroups.groups) {\n      TopFieldCollector.populateScores(group.scoreDocs, searcher, query);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3233b6f65cc189ad8a2d4f50f32e744e4332f40a","date":1532427025,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand#postCollect(IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand#postCollect(IndexSearcher).mjava","sourceNew":"  @Override\n  public void postCollect(IndexSearcher searcher) throws IOException {\n    if (firstPhaseGroups.isEmpty()) {\n      topGroups = new TopGroups<>(groupSort.getSort(), withinGroupSort.getSort(), 0, 0, new GroupDocs[0], Float.NaN);\n      return;\n    }\n\n    FieldType fieldType = field.getType();\n    if (fieldType.getNumberType() != null) {\n      topGroups = GroupConverter.fromMutable(field, secondPassCollector.getTopGroups(0));\n    } else {\n      topGroups = secondPassCollector.getTopGroups(0);\n    }\n    if (needScores) {\n      for (GroupDocs<?> group : topGroups.groups) {\n        TopFieldCollector.populateScores(group.scoreDocs, searcher, query);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void postCollect(IndexSearcher searcher) throws IOException {\n    if (firstPhaseGroups.isEmpty()) {\n      topGroups = new TopGroups<>(groupSort.getSort(), withinGroupSort.getSort(), 0, 0, new GroupDocs[0], Float.NaN);\n      return;\n    }\n\n    FieldType fieldType = field.getType();\n    if (fieldType.getNumberType() != null) {\n      topGroups = GroupConverter.fromMutable(field, secondPassCollector.getTopGroups(0));\n    } else {\n      topGroups = secondPassCollector.getTopGroups(0);\n    }\n    for (GroupDocs<?> group : topGroups.groups) {\n      TopFieldCollector.populateScores(group.scoreDocs, searcher, query);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50dfd19525c8d73e856dca6edb64b7aea074037f","date":1591579225,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand#postCollect(IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/TopGroupsFieldCommand#postCollect(IndexSearcher).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void postCollect(IndexSearcher searcher) throws IOException {\n    if (firstPhaseGroups.isEmpty()) {\n      topGroups = new TopGroups<>(groupSort.getSort(), withinGroupSort.getSort(), 0, 0, new GroupDocs[0], Float.NaN);\n      return;\n    }\n\n    FieldType fieldType = field.getType();\n    if (fieldType.getNumberType() != null) {\n      topGroups = GroupConverter.fromMutable(field, secondPassCollector.getTopGroups(0));\n    } else {\n      topGroups = secondPassCollector.getTopGroups(0);\n    }\n    if (needScores) {\n      for (GroupDocs<?> group : topGroups.groups) {\n        TopFieldCollector.populateScores(group.scoreDocs, searcher, query);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void postCollect(IndexSearcher searcher) throws IOException {\n    if (firstPhaseGroups.isEmpty()) {\n      topGroups = new TopGroups<>(groupSort.getSort(), withinGroupSort.getSort(), 0, 0, new GroupDocs[0], Float.NaN);\n      return;\n    }\n\n    FieldType fieldType = field.getType();\n    if (fieldType.getNumberType() != null) {\n      topGroups = GroupConverter.fromMutable(field, secondPassCollector.getTopGroups(0));\n    } else {\n      topGroups = secondPassCollector.getTopGroups(0);\n    }\n    if (needScores) {\n      for (GroupDocs<?> group : topGroups.groups) {\n        TopFieldCollector.populateScores(group.scoreDocs, searcher, query);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3233b6f65cc189ad8a2d4f50f32e744e4332f40a":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["3233b6f65cc189ad8a2d4f50f32e744e4332f40a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50dfd19525c8d73e856dca6edb64b7aea074037f"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3233b6f65cc189ad8a2d4f50f32e744e4332f40a":["50dfd19525c8d73e856dca6edb64b7aea074037f"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["3233b6f65cc189ad8a2d4f50f32e744e4332f40a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}