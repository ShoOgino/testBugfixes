{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.Builder#add(CharsRef,CharsRef,boolean).mjava","commits":[{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.Builder#add(CharsRef,CharsRef,boolean).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Add a phrase->phrase synonym mapping.\n     * Phrases are character sequences where words are\n     * separated with character zero (\\u0000).  Empty words\n     * (two \\u0000s in a row) are not allowed in the input nor\n     * the output!\n     * \n     * @param input input phrase\n     * @param output output phrase\n     * @param includeOrig true if the original should be included\n     */\n    public void add(CharsRef input, CharsRef output, boolean includeOrig) {\n      add(input, countWords(input), output, countWords(output), includeOrig);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.Builder#add(CharsRef,CharsRef,boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.Builder#add(CharsRef,CharsRef,boolean).mjava","sourceNew":"    /**\n     * Add a phrase->phrase synonym mapping.\n     * Phrases are character sequences where words are\n     * separated with character zero (\\u0000).  Empty words\n     * (two \\u0000s in a row) are not allowed in the input nor\n     * the output!\n     * \n     * @param input input phrase\n     * @param output output phrase\n     * @param includeOrig true if the original should be included\n     */\n    public void add(CharsRef input, CharsRef output, boolean includeOrig) {\n      add(input, countWords(input), output, countWords(output), includeOrig);\n    }\n\n","sourceOld":"    /**\n     * Add a phrase->phrase synonym mapping.\n     * Phrases are character sequences where words are\n     * separated with character zero (\\u0000).  Empty words\n     * (two \\u0000s in a row) are not allowed in the input nor\n     * the output!\n     * \n     * @param input input phrase\n     * @param output output phrase\n     * @param includeOrig true if the original should be included\n     */\n    public void add(CharsRef input, CharsRef output, boolean includeOrig) {\n      add(input, countWords(input), output, countWords(output), includeOrig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}