{"path":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec.RandomlySplittingBKDWriter#split(byte[],byte[]).mjava","commits":[{"id":"24df944aceb57e67b2594b585cf004783054b5b2","date":1458934816,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec.RandomlySplittingBKDWriter#split(byte[],byte[]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected int split(byte[] minPackedValue, byte[] maxPackedValue) {\n      // BKD normally defaults by the widest dimension, to try to make as squarish cells as possible, but we just pick a random one ;)\n      return random.nextInt(numDims);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b35cfd3fa0a5c9e066b0256c4818af1d2a9f22d7","date":1482745036,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec.RandomlySplittingBKDWriter#split(byte[],byte[],int[]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec.RandomlySplittingBKDWriter#split(byte[],byte[]).mjava","sourceNew":"    @Override\n    protected int split(byte[] minPackedValue, byte[] maxPackedValue, int[] parentDims) {\n      // BKD normally defaults by the widest dimension, to try to make as squarish cells as possible, but we just pick a random one ;)\n      return random.nextInt(numDims);\n    }\n\n","sourceOld":"    @Override\n    protected int split(byte[] minPackedValue, byte[] maxPackedValue) {\n      // BKD normally defaults by the widest dimension, to try to make as squarish cells as possible, but we just pick a random one ;)\n      return random.nextInt(numDims);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec.RandomlySplittingBKDWriter#split(byte[],byte[]).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected int split(byte[] minPackedValue, byte[] maxPackedValue) {\n      // BKD normally defaults by the widest dimension, to try to make as squarish cells as possible, but we just pick a random one ;)\n      return random.nextInt(numDims);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24df944aceb57e67b2594b585cf004783054b5b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b35cfd3fa0a5c9e066b0256c4818af1d2a9f22d7":["24df944aceb57e67b2594b585cf004783054b5b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b35cfd3fa0a5c9e066b0256c4818af1d2a9f22d7"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["24df944aceb57e67b2594b585cf004783054b5b2","b35cfd3fa0a5c9e066b0256c4818af1d2a9f22d7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24df944aceb57e67b2594b585cf004783054b5b2"],"24df944aceb57e67b2594b585cf004783054b5b2":["b35cfd3fa0a5c9e066b0256c4818af1d2a9f22d7","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"b35cfd3fa0a5c9e066b0256c4818af1d2a9f22d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}