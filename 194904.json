{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","commits":[{"id":"a851824c09818632c94eba41e60ef5e72e323c8e","date":1337355760,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","pathOld":"/dev/null","sourceNew":"    /** If the field is not yet known, adds it. If it is known, checks to make\n     *  sure that the isIndexed flag is the same as was given previously for this\n     *  field. If not - marks it as being indexed.  Same goes for the TermVector\n     * parameters.\n     *\n     * @param name The name of the field\n     * @param isIndexed true if the field is indexed\n     * @param storeTermVector true if the term vector should be stored\n     * @param omitNorms true if the norms for the indexed field should be omitted\n     * @param storePayloads true if payloads should be stored for this field\n     * @param indexOptions if term freqs should be omitted for this field\n     */\n    // nocommit: fix testCodecs to do this another way, its the only user of this\n    synchronized FieldInfo addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                         boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normType) {\n      return addOrUpdateInternal(name, -1, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db170c1c8faa054c4e52af9aadc6cd12460af7a9","date":1337357757,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","sourceNew":"    /** If the field is not yet known, adds it. If it is known, checks to make\n     *  sure that the isIndexed flag is the same as was given previously for this\n     *  field. If not - marks it as being indexed.  Same goes for the TermVector\n     * parameters.\n     *\n     * @param name The name of the field\n     * @param isIndexed true if the field is indexed\n     * @param storeTermVector true if the term vector should be stored\n     * @param omitNorms true if the norms for the indexed field should be omitted\n     * @param storePayloads true if payloads should be stored for this field\n     * @param indexOptions if term freqs should be omitted for this field\n     */\n    // nocommit: fix testCodecs to do this another way, its the only user of this\n    FieldInfo addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                         boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normType) {\n      return addOrUpdateInternal(name, -1, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);\n    }\n\n","sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n     *  sure that the isIndexed flag is the same as was given previously for this\n     *  field. If not - marks it as being indexed.  Same goes for the TermVector\n     * parameters.\n     *\n     * @param name The name of the field\n     * @param isIndexed true if the field is indexed\n     * @param storeTermVector true if the term vector should be stored\n     * @param omitNorms true if the norms for the indexed field should be omitted\n     * @param storePayloads true if payloads should be stored for this field\n     * @param indexOptions if term freqs should be omitted for this field\n     */\n    // nocommit: fix testCodecs to do this another way, its the only user of this\n    synchronized FieldInfo addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                         boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normType) {\n      return addOrUpdateInternal(name, -1, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72075e55f96fefa443288356377c83e70d94cbd2","date":1337721157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","sourceNew":"    /** If the field is not yet known, adds it. If it is known, checks to make\n     *  sure that the isIndexed flag is the same as was given previously for this\n     *  field. If not - marks it as being indexed.  Same goes for the TermVector\n     * parameters.\n     *\n     * @param name The name of the field\n     * @param isIndexed true if the field is indexed\n     * @param storeTermVector true if the term vector should be stored\n     * @param omitNorms true if the norms for the indexed field should be omitted\n     * @param storePayloads true if payloads should be stored for this field\n     * @param indexOptions if term freqs should be omitted for this field\n     */\n    // TODO: fix testCodecs to do this another way, its the only user of this\n    FieldInfo addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                         boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normType) {\n      return addOrUpdateInternal(name, -1, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);\n    }\n\n","sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n     *  sure that the isIndexed flag is the same as was given previously for this\n     *  field. If not - marks it as being indexed.  Same goes for the TermVector\n     * parameters.\n     *\n     * @param name The name of the field\n     * @param isIndexed true if the field is indexed\n     * @param storeTermVector true if the term vector should be stored\n     * @param omitNorms true if the norms for the indexed field should be omitted\n     * @param storePayloads true if payloads should be stored for this field\n     * @param indexOptions if term freqs should be omitted for this field\n     */\n    // nocommit: fix testCodecs to do this another way, its the only user of this\n    FieldInfo addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                         boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normType) {\n      return addOrUpdateInternal(name, -1, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","pathOld":"/dev/null","sourceNew":"    /** If the field is not yet known, adds it. If it is known, checks to make\n     *  sure that the isIndexed flag is the same as was given previously for this\n     *  field. If not - marks it as being indexed.  Same goes for the TermVector\n     * parameters.\n     *\n     * @param name The name of the field\n     * @param isIndexed true if the field is indexed\n     * @param storeTermVector true if the term vector should be stored\n     * @param omitNorms true if the norms for the indexed field should be omitted\n     * @param storePayloads true if payloads should be stored for this field\n     * @param indexOptions if term freqs should be omitted for this field\n     */\n    // TODO: fix testCodecs to do this another way, its the only user of this\n    FieldInfo addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                         boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normType) {\n      return addOrUpdateInternal(name, -1, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","sourceNew":null,"sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n     *  sure that the isIndexed flag is the same as was given previously for this\n     *  field. If not - marks it as being indexed.  Same goes for the TermVector\n     * parameters.\n     *\n     * @param name The name of the field\n     * @param isIndexed true if the field is indexed\n     * @param storeTermVector true if the term vector should be stored\n     * @param omitNorms true if the norms for the indexed field should be omitted\n     * @param storePayloads true if payloads should be stored for this field\n     * @param indexOptions if term freqs should be omitted for this field\n     */\n    // TODO: fix testCodecs to do this another way, its the only user of this\n    FieldInfo addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                         boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normType) {\n      return addOrUpdateInternal(name, -1, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#addOrUpdate(String,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","sourceNew":null,"sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n     *  sure that the isIndexed flag is the same as was given previously for this\n     *  field. If not - marks it as being indexed.  Same goes for the TermVector\n     * parameters.\n     *\n     * @param name The name of the field\n     * @param isIndexed true if the field is indexed\n     * @param storeTermVector true if the term vector should be stored\n     * @param omitNorms true if the norms for the indexed field should be omitted\n     * @param storePayloads true if payloads should be stored for this field\n     * @param indexOptions if term freqs should be omitted for this field\n     */\n    // TODO: fix testCodecs to do this another way, its the only user of this\n    FieldInfo addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                         boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normType) {\n      return addOrUpdateInternal(name, -1, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","72075e55f96fefa443288356377c83e70d94cbd2"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","0837ab0472feecb3a54260729d845f839e1cbd72"],"db170c1c8faa054c4e52af9aadc6cd12460af7a9":["a851824c09818632c94eba41e60ef5e72e323c8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72075e55f96fefa443288356377c83e70d94cbd2":["db170c1c8faa054c4e52af9aadc6cd12460af7a9"],"0837ab0472feecb3a54260729d845f839e1cbd72":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a851824c09818632c94eba41e60ef5e72e323c8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db170c1c8faa054c4e52af9aadc6cd12460af7a9":["72075e55f96fefa443288356377c83e70d94cbd2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","a851824c09818632c94eba41e60ef5e72e323c8e"],"72075e55f96fefa443288356377c83e70d94cbd2":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a851824c09818632c94eba41e60ef5e72e323c8e":["db170c1c8faa054c4e52af9aadc6cd12460af7a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}