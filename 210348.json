{"path":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","commits":[{"id":"69cad0546debf9ce9d44e309ecfa26760fecd5d8","date":1425846082,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginRegistry.PluginHolder#close().mjava","sourceNew":"    @Override\n    public void close() throws Exception {\n      if (inst != null && inst instanceof AutoCloseable) ((AutoCloseable) inst).close();\n\n    }\n\n","sourceOld":"    @Override\n    public void close() throws Exception {\n      if (inst != null && inst instanceof AutoCloseable) ((AutoCloseable) inst).close();\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55a86e1831066267af63feede06bff6aa3141a40","date":1426643621,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","sourceNew":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        if (myInst != null && myInst instanceof AutoCloseable) ((AutoCloseable) myInst).close();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws Exception {\n      if (inst != null && inst instanceof AutoCloseable) ((AutoCloseable) inst).close();\n\n    }\n\n","bugFix":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        if (myInst != null && myInst instanceof AutoCloseable) ((AutoCloseable) myInst).close();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb50877dc038c021eba3a70999fd1f6ed85001c1","date":1563596432,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","sourceNew":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        closeQuietly(myInst);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        if (myInst != null && myInst instanceof AutoCloseable) ((AutoCloseable) myInst).close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","sourceNew":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        if (myInst != null && myInst instanceof AutoCloseable) ((AutoCloseable) myInst).close();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        closeQuietly(myInst);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","sourceNew":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        if (myInst != null && myInst instanceof AutoCloseable) ((AutoCloseable) myInst).close();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        closeQuietly(myInst);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag.PluginHolder#close().mjava","sourceNew":"    @Override\n    public void close() {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        // N.B. instanceof returns false if myInst is null\n        if (myInst instanceof AutoCloseable) {\n          try {\n            ((AutoCloseable) myInst).close();\n          } catch (Exception e) {\n            log.error(\"Error closing {}\", inst , e);\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws Exception {\n      // TODO: there may be a race here.  One thread can be creating a plugin\n      // and another thread can come along and close everything (missing the plugin\n      // that is in the state of being created and will probably never have close() called on it).\n      // can close() be called concurrently with other methods?\n      if (isLoaded()) {\n        T myInst = get();\n        if (myInst != null && myInst instanceof AutoCloseable) ((AutoCloseable) myInst).close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","55a86e1831066267af63feede06bff6aa3141a40"],"75237075d8425856bf4bbf52a6be4f9162b8187d":["c44cc06c26e456fe9c215072b79fce30babe3975"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["55a86e1831066267af63feede06bff6aa3141a40"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"69cad0546debf9ce9d44e309ecfa26760fecd5d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c44cc06c26e456fe9c215072b79fce30babe3975":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"55a86e1831066267af63feede06bff6aa3141a40":["69cad0546debf9ce9d44e309ecfa26760fecd5d8"],"b0b597c65628ca9e73913a07e81691f8229bae35":["fb50877dc038c021eba3a70999fd1f6ed85001c1","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"75237075d8425856bf4bbf52a6be4f9162b8187d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","69cad0546debf9ce9d44e309ecfa26760fecd5d8"],"69cad0546debf9ce9d44e309ecfa26760fecd5d8":["55a86e1831066267af63feede06bff6aa3141a40"],"c44cc06c26e456fe9c215072b79fce30babe3975":["75237075d8425856bf4bbf52a6be4f9162b8187d","b0b597c65628ca9e73913a07e81691f8229bae35"],"55a86e1831066267af63feede06bff6aa3141a40":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fb50877dc038c021eba3a70999fd1f6ed85001c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}