{"path":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","commits":[{"id":"acdd729ace9db5d0803eea4849ddc3c2ba196127","date":1181861605,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"/dev/null","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add \");\n      writer.write(\"allowDups=\\\"\" + allowDups + \"\\\" \");\n      writer.write(\"overwriteCommitted=\\\"\" + overwriteCommitted + \"\\\" \");\n      writer.write(\"overwritePending=\\\"\" + overwritePending + \"\\\">\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    if( deleteById != null || deleteQuery != null ) {\n      writer.append( \"<delete>\" );\n      if( deleteById != null ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQuery != null ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // add the commits\n    if (action == ACTION.COMMIT) {\n      writer.append(\"<commit \");\n      writer.append(\"waitFlush=\\\"\" + waitFlush + \"\\\" \");\n      writer.append(\"waitSearcher=\\\"\" + waitSearcher + \"\\\" \");\n      writer.append(\">\");\n      writer.append(\"</commit>\");\n    }\n    \n    // add the optimizes\n    if (action == ACTION.OPTIMIZE) {\n      writer.append(\"<optimize \");\n      writer.append(\"waitFlush=\\\"\" + waitFlush + \"\\\" \");\n      writer.append(\"waitSearcher=\\\"\" + waitSearcher + \"\\\" \");\n      writer.append(\">\");\n      writer.append(\"</optimize>\");\n    }\n    return writer.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f290f39f7dbe9a314963e94684d023e6f3b050cb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f290f39f7dbe9a314963e94684d023e6f3b050cb","date":1189520378,"type":3,"author":"William Au","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add \");\n      writer.write(\"allowDups=\\\"\" + allowDups + \"\\\" \");\n      writer.write(\"overwriteCommitted=\\\"\" + overwriteCommitted + \"\\\" \");\n      writer.write(\"overwritePending=\\\"\" + overwritePending + \"\\\">\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    if( deleteById != null || deleteQuery != null ) {\n      writer.append( \"<delete>\" );\n      if( deleteById != null ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQuery != null ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add \");\n      writer.write(\"allowDups=\\\"\" + allowDups + \"\\\" \");\n      writer.write(\"overwriteCommitted=\\\"\" + overwriteCommitted + \"\\\" \");\n      writer.write(\"overwritePending=\\\"\" + overwritePending + \"\\\">\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    if( deleteById != null || deleteQuery != null ) {\n      writer.append( \"<delete>\" );\n      if( deleteById != null ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQuery != null ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // add the commits\n    if (action == ACTION.COMMIT) {\n      writer.append(\"<commit \");\n      writer.append(\"waitFlush=\\\"\" + waitFlush + \"\\\" \");\n      writer.append(\"waitSearcher=\\\"\" + waitSearcher + \"\\\" \");\n      writer.append(\">\");\n      writer.append(\"</commit>\");\n    }\n    \n    // add the optimizes\n    if (action == ACTION.OPTIMIZE) {\n      writer.append(\"<optimize \");\n      writer.append(\"waitFlush=\\\"\" + waitFlush + \"\\\" \");\n      writer.append(\"waitSearcher=\\\"\" + waitSearcher + \"\\\" \");\n      writer.append(\">\");\n      writer.append(\"</optimize>\");\n    }\n    return writer.toString();\n  }\n\n","bugFix":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add \");\n      writer.write(\"allowDups=\\\"\" + allowDups + \"\\\" \");\n      writer.write(\"overwriteCommitted=\\\"\" + overwriteCommitted + \"\\\" \");\n      writer.write(\"overwritePending=\\\"\" + overwritePending + \"\\\">\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add \");\n      writer.write(\"allowDups=\\\"\" + allowDups + \"\\\" \");\n      writer.write(\"overwriteCommitted=\\\"\" + overwriteCommitted + \"\\\" \");\n      writer.write(\"overwritePending=\\\"\" + overwritePending + \"\\\">\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    if( deleteById != null || deleteQuery != null ) {\n      writer.append( \"<delete>\" );\n      if( deleteById != null ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQuery != null ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f9e70cea495aaf83300e16f5027ed8cb2da59fd","date":1201238296,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add \");\n      writer.write(\"allowDups=\\\"\" + allowDups + \"\\\" \");\n      // TODO: remove these when deprecations are removed\n      writer.write(\"overwriteCommitted=\\\"\" + overwriteCommitted + \"\\\" \");\n      writer.write(\"overwritePending=\\\"\" + overwritePending + \"\\\">\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add \");\n      writer.write(\"allowDups=\\\"\" + allowDups + \"\\\" \");\n      writer.write(\"overwriteCommitted=\\\"\" + overwriteCommitted + \"\\\" \");\n      writer.write(\"overwritePending=\\\"\" + overwritePending + \"\\\">\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f71d3fce898342d5d53f321a8c41e7a0b4a58e9","date":1216934263,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add>\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add \");\n      writer.write(\"allowDups=\\\"\" + allowDups + \"\\\" \");\n      // TODO: remove these when deprecations are removed\n      writer.write(\"overwriteCommitted=\\\"\" + overwriteCommitted + \"\\\" \");\n      writer.write(\"overwritePending=\\\"\" + overwritePending + \"\\\">\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e97a7d6ce275d5deea94b74ce25d8551202f9ba","date":1223943844,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      writer.write(\"<add>\");\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["2e97a7d6ce275d5deea94b74ce25d8551202f9ba"],"4f71d3fce898342d5d53f321a8c41e7a0b4a58e9":["4f9e70cea495aaf83300e16f5027ed8cb2da59fd"],"f290f39f7dbe9a314963e94684d023e6f3b050cb":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"2e97a7d6ce275d5deea94b74ce25d8551202f9ba":["4f71d3fce898342d5d53f321a8c41e7a0b4a58e9"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["f290f39f7dbe9a314963e94684d023e6f3b050cb"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4f9e70cea495aaf83300e16f5027ed8cb2da59fd":["048361614025800e582bfc7a7b0329dc6fd6a95e"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"4f71d3fce898342d5d53f321a8c41e7a0b4a58e9":["2e97a7d6ce275d5deea94b74ce25d8551202f9ba"],"f290f39f7dbe9a314963e94684d023e6f3b050cb":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"2e97a7d6ce275d5deea94b74ce25d8551202f9ba":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["f290f39f7dbe9a314963e94684d023e6f3b050cb"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["4f9e70cea495aaf83300e16f5027ed8cb2da59fd"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4f9e70cea495aaf83300e16f5027ed8cb2da59fd":["4f71d3fce898342d5d53f321a8c41e7a0b4a58e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}