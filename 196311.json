{"path":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a92ffe0d2961113e5588e614f8dc22b42bf10a95","date":1503304229,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    /* terms.raw only applies to indexed fields\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n    */\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f7ebafe1543d3847a1cb09988cb6c46d48741f8","date":1503180131,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    /* terms.raw only applies to indexed fields\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n    */\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3051d6122751c8f6cc1e9cf24592658b59843ec2","date":1503298024,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    /* terms.raw only applies to indexed fields\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n    */\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"213e062dd7cfdd10e8df198b43616cb99b0c4fdd","date":1600693537,"type":3,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    /* terms.raw only applies to indexed fields\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n    */\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\")\n       ,\"count(//lst[@name='lowerfilt']/*)=6\"\n       ,\"//int[@name='a'] \"\n       ,\"//int[@name='aa'] \"\n       ,\"//int[@name='aaa'] \"\n       ,\"//int[@name='ab'] \"\n       ,\"//int[@name='abb'] \"\n       ,\"//int[@name='abc'] \"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"lowerfilt\",\n       \"terms.lower\",\"a\",\n       \"terms.upper\",\"b\",\n       \"terms.raw\",\"true\",    // this should have no effect on a text field\n       \"terms.limit\",\"2\")\n       ,\"count(//lst[@name='lowerfilt']/*)=2\"\n       ,\"//int[@name='a']\"\n       ,\"//int[@name='aa']\"\n    );\n\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\")\n       ,\"//int[@name='1'][.='2']\"\n    );\n\n    /* terms.raw only applies to indexed fields\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"foo_i\", \"terms.raw\",\"true\")\n       ,\"not(//int[@name='1'][.='2'])\"\n    );\n    */\n\n    // check something at the end of the index\n    assertQ(req(\"indent\",\"true\", \"qt\",\"/terms\",  \"terms\",\"true\",\n       \"terms.fl\",\"zzz_i\")\n        ,\"count(//lst[@name='zzz_i']/*)=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"213e062dd7cfdd10e8df198b43616cb99b0c4fdd":["a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f7ebafe1543d3847a1cb09988cb6c46d48741f8":["c26f00b574427b55127e869b935845554afde1fa"],"3051d6122751c8f6cc1e9cf24592658b59843ec2":["c26f00b574427b55127e869b935845554afde1fa","2f7ebafe1543d3847a1cb09988cb6c46d48741f8"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a92ffe0d2961113e5588e614f8dc22b42bf10a95":["c26f00b574427b55127e869b935845554afde1fa","2f7ebafe1543d3847a1cb09988cb6c46d48741f8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["213e062dd7cfdd10e8df198b43616cb99b0c4fdd"]},"commit2Childs":{"213e062dd7cfdd10e8df198b43616cb99b0c4fdd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["2f7ebafe1543d3847a1cb09988cb6c46d48741f8","3051d6122751c8f6cc1e9cf24592658b59843ec2","a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2f7ebafe1543d3847a1cb09988cb6c46d48741f8":["3051d6122751c8f6cc1e9cf24592658b59843ec2","a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"3051d6122751c8f6cc1e9cf24592658b59843ec2":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"a92ffe0d2961113e5588e614f8dc22b42bf10a95":["213e062dd7cfdd10e8df198b43616cb99b0c4fdd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3051d6122751c8f6cc1e9cf24592658b59843ec2","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}