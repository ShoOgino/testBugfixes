{"path":"lucene/core/src/test/org/apache/lucene/store/TestSingleInstanceLockFactory#testDefaultLockFactory().mjava","commits":[{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestSingleInstanceLockFactory#testDefaultLockFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestSingleInstanceLockFactory#testDefaultRAMDirectory().mjava","sourceNew":"  // Verify: basic locking on single instance lock factory (can't create two IndexWriters)\n  public void testDefaultLockFactory() throws IOException {\n    ByteBuffersDirectory dir = new ByteBuffersDirectory();\n\n    assertTrue(dir.lockFactory instanceof SingleInstanceLockFactory);\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    \n    // Create a 2nd IndexWriter.  This should fail.\n    expectThrows(IOException.class, () -> {\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n    });\n    \n    writer.close();\n  }\n\n","sourceOld":"  // Verify: SingleInstanceLockFactory is the default lock for RAMDirectory\n  // Verify: RAMDirectory does basic locking correctly (can't create two IndexWriters)\n  public void testDefaultRAMDirectory() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    \n    assertTrue(\"RAMDirectory did not use correct LockFactory: got \" + dir.lockFactory,\n        dir.lockFactory instanceof SingleInstanceLockFactory);\n    \n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    \n    // Create a 2nd IndexWriter.  This should fail:\n    expectThrows(IOException.class, () -> {\n      new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n    });\n    \n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d77dafd89756a5161d244985903e3487ca109182"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}