{"path":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","commits":[{"id":"414aae1db83a83d247caa9514e383e4ca3d43da5","date":1350824365,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,Comparator[T]).mjava","sourceNew":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader(0);\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>();\n    }\n\n","sourceOld":"    public TopNSearcher(FST<T> fst, int topN, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader(0);\n      this.topN = topN;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e52115b56781006682fd92c6938efaf174304d","date":1351014780,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,Comparator[T]).mjava","sourceNew":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader(0);\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>();\n    }\n\n","sourceOld":"    public TopNSearcher(FST<T> fst, int topN, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader(0);\n      this.topN = topN;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a81c53232b7a347a2a79b731a0b152059237a4b5","date":1351810824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","sourceNew":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader(0);\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>(new TieBreakByInputComparator<T>(comparator));\n    }\n\n","sourceOld":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader(0);\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82557a475db3e0849171dc0be5b02e3ae0745ddb","date":1358195918,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","sourceNew":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>(new TieBreakByInputComparator<T>(comparator));\n    }\n\n","sourceOld":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader(0);\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>(new TieBreakByInputComparator<T>(comparator));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","sourceNew":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>(new TieBreakByInputComparator<T>(comparator));\n    }\n\n","sourceOld":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader(0);\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>(new TieBreakByInputComparator<T>(comparator));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","sourceNew":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<>(new TieBreakByInputComparator<>(comparator));\n    }\n\n","sourceOld":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<FSTPath<T>>(new TieBreakByInputComparator<T>(comparator));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d245db17aaa41b338dae9da5d4edba4dd6f61612","date":1394644847,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","sourceNew":"    /**\n     * Creates an unbounded TopNSearcher\n     * @param fst the {@link org.apache.lucene.util.fst.FST} to search on\n     * @param topN the number of top scoring entries to retrieve\n     * @param maxQueueDepth the maximum size of the queue of possible top entries\n     * @param comparator the comparator to select the top N\n     */\n    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<>(new TieBreakByInputComparator<>(comparator));\n    }\n\n","sourceOld":"    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<>(new TieBreakByInputComparator<>(comparator));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util.TopNSearcher#TopNSearcher(FST[T],int,int,Comparator[T]).mjava","sourceNew":"    /**\n     * Creates an unbounded TopNSearcher\n     * @param fst the {@link org.apache.lucene.util.fst.FST} to search on\n     * @param topN the number of top scoring entries to retrieve\n     * @param maxQueueDepth the maximum size of the queue of possible top entries\n     * @param comparator the comparator to select the top N\n     */\n    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this(fst, topN, maxQueueDepth, comparator, new TieBreakByInputComparator<>(comparator));\n    }\n\n","sourceOld":"    /**\n     * Creates an unbounded TopNSearcher\n     * @param fst the {@link org.apache.lucene.util.fst.FST} to search on\n     * @param topN the number of top scoring entries to retrieve\n     * @param maxQueueDepth the maximum size of the queue of possible top entries\n     * @param comparator the comparator to select the top N\n     */\n    public TopNSearcher(FST<T> fst, int topN, int maxQueueDepth, Comparator<T> comparator) {\n      this.fst = fst;\n      this.bytesReader = fst.getBytesReader();\n      this.topN = topN;\n      this.maxQueueDepth = maxQueueDepth;\n      this.comparator = comparator;\n\n      queue = new TreeSet<>(new TieBreakByInputComparator<>(comparator));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["82557a475db3e0849171dc0be5b02e3ae0745ddb"],"82557a475db3e0849171dc0be5b02e3ae0745ddb":["a81c53232b7a347a2a79b731a0b152059237a4b5"],"d245db17aaa41b338dae9da5d4edba4dd6f61612":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["a81c53232b7a347a2a79b731a0b152059237a4b5","82557a475db3e0849171dc0be5b02e3ae0745ddb"],"62e52115b56781006682fd92c6938efaf174304d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","414aae1db83a83d247caa9514e383e4ca3d43da5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a81c53232b7a347a2a79b731a0b152059237a4b5":["414aae1db83a83d247caa9514e383e4ca3d43da5"],"414aae1db83a83d247caa9514e383e4ca3d43da5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["d245db17aaa41b338dae9da5d4edba4dd6f61612"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c33f6677a2078739058f81eca1df69d12cd62b0"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d245db17aaa41b338dae9da5d4edba4dd6f61612"],"82557a475db3e0849171dc0be5b02e3ae0745ddb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","c4015cd39dff8d4dec562d909f9766debac53aa6"],"d245db17aaa41b338dae9da5d4edba4dd6f61612":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"62e52115b56781006682fd92c6938efaf174304d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["62e52115b56781006682fd92c6938efaf174304d","414aae1db83a83d247caa9514e383e4ca3d43da5"],"a81c53232b7a347a2a79b731a0b152059237a4b5":["82557a475db3e0849171dc0be5b02e3ae0745ddb","c4015cd39dff8d4dec562d909f9766debac53aa6"],"414aae1db83a83d247caa9514e383e4ca3d43da5":["62e52115b56781006682fd92c6938efaf174304d","a81c53232b7a347a2a79b731a0b152059237a4b5"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","62e52115b56781006682fd92c6938efaf174304d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}