{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","sourceNew":"  /** Retrieve the corrected offset. */\n  @Override\n  protected int correct(int currentOff) {\n    if (offsets == null || currentOff < offsets[0]) {\n      return currentOff;\n    }\n    \n    int hi = size - 1;\n    if(currentOff >= offsets[hi])\n      return currentOff + diffs[hi];\n\n    int lo = 0;\n    int mid = -1;\n    \n    while (hi >= lo) {\n      mid = (lo + hi) >>> 1;\n      if (currentOff < offsets[mid])\n        hi = mid - 1;\n      else if (currentOff > offsets[mid])\n        lo = mid + 1;\n      else\n        return currentOff + diffs[mid];\n    }\n\n    if (currentOff < offsets[mid])\n      return mid == 0 ? currentOff : currentOff + diffs[mid-1];\n    else\n      return currentOff + diffs[mid];\n  }\n\n","sourceOld":"  /** Retrieve the corrected offset. */\n  @Override\n  protected int correct(int currentOff) {\n    if (offsets == null || currentOff < offsets[0]) {\n      return currentOff;\n    }\n    \n    int hi = size - 1;\n    if(currentOff >= offsets[hi])\n      return currentOff + diffs[hi];\n\n    int lo = 0;\n    int mid = -1;\n    \n    while (hi >= lo) {\n      mid = (lo + hi) >>> 1;\n      if (currentOff < offsets[mid])\n        hi = mid - 1;\n      else if (currentOff > offsets[mid])\n        lo = mid + 1;\n      else\n        return currentOff + diffs[mid];\n    }\n\n    if (currentOff < offsets[mid])\n      return mid == 0 ? currentOff : currentOff + diffs[mid-1];\n    else\n      return currentOff + diffs[mid];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee473e61c0dfada5ad72cce02240284b1ef4c708","date":1484821644,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","sourceNew":"  /** Retrieve the corrected offset. */\n  @Override\n  protected int correct(int currentOff) {\n    if (offsets == null) {\n      return currentOff;\n    }\n\n    int index = Arrays.binarySearch(offsets, 0, size, currentOff);\n    if (index < -1) {\n      index = -2 - index;\n    }\n\n    final int diff = index < 0 ? 0 : diffs[index];\n    return currentOff + diff;\n  }\n\n","sourceOld":"  /** Retrieve the corrected offset. */\n  @Override\n  protected int correct(int currentOff) {\n    if (offsets == null || currentOff < offsets[0]) {\n      return currentOff;\n    }\n    \n    int hi = size - 1;\n    if(currentOff >= offsets[hi])\n      return currentOff + diffs[hi];\n\n    int lo = 0;\n    int mid = -1;\n    \n    while (hi >= lo) {\n      mid = (lo + hi) >>> 1;\n      if (currentOff < offsets[mid])\n        hi = mid - 1;\n      else if (currentOff > offsets[mid])\n        lo = mid + 1;\n      else\n        return currentOff + diffs[mid];\n    }\n\n    if (currentOff < offsets[mid])\n      return mid == 0 ? currentOff : currentOff + diffs[mid-1];\n    else\n      return currentOff + diffs[mid];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","sourceNew":"  /** Retrieve the corrected offset. */\n  @Override\n  protected int correct(int currentOff) {\n    if (offsets == null) {\n      return currentOff;\n    }\n\n    int index = Arrays.binarySearch(offsets, 0, size, currentOff);\n    if (index < -1) {\n      index = -2 - index;\n    }\n\n    final int diff = index < 0 ? 0 : diffs[index];\n    return currentOff + diff;\n  }\n\n","sourceOld":"  /** Retrieve the corrected offset. */\n  @Override\n  protected int correct(int currentOff) {\n    if (offsets == null || currentOff < offsets[0]) {\n      return currentOff;\n    }\n    \n    int hi = size - 1;\n    if(currentOff >= offsets[hi])\n      return currentOff + diffs[hi];\n\n    int lo = 0;\n    int mid = -1;\n    \n    while (hi >= lo) {\n      mid = (lo + hi) >>> 1;\n      if (currentOff < offsets[mid])\n        hi = mid - 1;\n      else if (currentOff > offsets[mid])\n        lo = mid + 1;\n      else\n        return currentOff + diffs[mid];\n    }\n\n    if (currentOff < offsets[mid])\n      return mid == 0 ? currentOff : currentOff + diffs[mid-1];\n    else\n      return currentOff + diffs[mid];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee473e61c0dfada5ad72cce02240284b1ef4c708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ee473e61c0dfada5ad72cce02240284b1ef4c708"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee473e61c0dfada5ad72cce02240284b1ef4c708"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ee473e61c0dfada5ad72cce02240284b1ef4c708","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ee473e61c0dfada5ad72cce02240284b1ef4c708":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}