{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree(String).mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree(String).mjava","pathOld":"/dev/null","sourceNew":"  private static Tree getAntlrComputedExpressionTree(String expression) throws ParseException {\n    CharStream input = new ANTLRStringStream(expression);\n    JavascriptLexer lexer = new JavascriptLexer(input);\n    CommonTokenStream tokens = new CommonTokenStream(lexer);\n    JavascriptParser parser = new JavascriptParser(tokens);\n\n    try {\n      return parser.expression().tree;\n\n    } catch (RecognitionException exception) {\n      throw new IllegalArgumentException(exception);\n    } catch (RuntimeException exception) {\n      if (exception.getCause() instanceof ParseException) {\n        throw (ParseException)exception.getCause();\n      }\n      throw exception;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec67ff97c3c57929891e4aa3bfba1094ef497d68","date":1379085761,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree(String).mjava","sourceNew":"  private Tree getAntlrComputedExpressionTree() throws ParseException {\n    CharStream input = new ANTLRStringStream(sourceText);\n    JavascriptLexer lexer = new JavascriptLexer(input);\n    CommonTokenStream tokens = new CommonTokenStream(lexer);\n    JavascriptParser parser = new JavascriptParser(tokens);\n\n    try {\n      return parser.expression().tree;\n\n    } catch (RecognitionException exception) {\n      throw new IllegalArgumentException(exception);\n    } catch (RuntimeException exception) {\n      if (exception.getCause() instanceof ParseException) {\n        throw (ParseException)exception.getCause();\n      }\n      throw exception;\n    }\n  }\n\n","sourceOld":"  private static Tree getAntlrComputedExpressionTree(String expression) throws ParseException {\n    CharStream input = new ANTLRStringStream(expression);\n    JavascriptLexer lexer = new JavascriptLexer(input);\n    CommonTokenStream tokens = new CommonTokenStream(lexer);\n    JavascriptParser parser = new JavascriptParser(tokens);\n\n    try {\n      return parser.expression().tree;\n\n    } catch (RecognitionException exception) {\n      throw new IllegalArgumentException(exception);\n    } catch (RuntimeException exception) {\n      if (exception.getCause() instanceof ParseException) {\n        throw (ParseException)exception.getCause();\n      }\n      throw exception;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ec67ff97c3c57929891e4aa3bfba1094ef497d68":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["ec67ff97c3c57929891e4aa3bfba1094ef497d68"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec67ff97c3c57929891e4aa3bfba1094ef497d68":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ec67ff97c3c57929891e4aa3bfba1094ef497d68","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}