{"path":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL],Overseer.Stats).mjava","commits":[{"id":"9f45f67a018421da088ea39274f23ad5d339b97d","date":1395559348,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL],Overseer.Stats).mjava","pathOld":"/dev/null","sourceNew":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl, Overseer.Stats stats) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83f985d9828d30801541f1eed26aa3169646baf","date":1409315453,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,Overseer.Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#DistributedQueue(SolrZkClient,String,List[ACL],Overseer.Stats).mjava","sourceNew":"  public DistributedQueue(SolrZkClient zookeeper, String dir, Overseer.Stats stats) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n  }\n\n","sourceOld":"  public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl, Overseer.Stats stats) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9f45f67a018421da088ea39274f23ad5d339b97d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c83f985d9828d30801541f1eed26aa3169646baf":["9f45f67a018421da088ea39274f23ad5d339b97d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c83f985d9828d30801541f1eed26aa3169646baf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f45f67a018421da088ea39274f23ad5d339b97d"],"9f45f67a018421da088ea39274f23ad5d339b97d":["c83f985d9828d30801541f1eed26aa3169646baf"],"c83f985d9828d30801541f1eed26aa3169646baf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}