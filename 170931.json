{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"/dev/null","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      skipOffset = termState.skipOffset;\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8df828f6eb8a46ba5a58ab37d00659165feb274f","date":1288433840,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.read(docReader, true);\n        freqIndex.seek(freqReader);\n        \n        posIndex.read(docReader, true);\n        // skip payload offset\n        docReader.readVLong();\n      } else {\n        freq = 1;\n      }\n      skipOffset = docReader.readVLong();\n\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      skipOffset = termState.skipOffset;\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.read(docReader, true);\n        freqIndex.seek(freqReader);\n        \n        posIndex.read(docReader, true);\n        // skip payload offset\n        docReader.readVLong();\n      } else {\n        freq = 1;\n      }\n      skipOffset = docReader.readVLong();\n\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      skipOffset = termState.skipOffset;\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.read(docReader, true);\n        freqIndex.seek(freqReader);\n        \n        posIndex.read(docReader, true);\n        // skip payload offset\n        docReader.readVLong();\n      } else {\n        freq = 1;\n      }\n      skipOffset = docReader.readVLong();\n\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      skipOffset = termState.skipOffset;\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipInterval:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.read(docReader, true);\n        freqIndex.seek(freqReader);\n        \n        posIndex.read(docReader, true);\n        // skip payload offset\n        docReader.readVLong();\n      } else {\n        freq = 1;\n      }\n      skipOffset = docReader.readVLong();\n\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipInterval:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.read(docReader, true);\n        freqIndex.seek(freqReader);\n        \n        posIndex.read(docReader, true);\n        // skip payload offset\n        docReader.readVLong();\n      } else {\n        freq = 1;\n      }\n      skipOffset = docReader.readVLong();\n\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipInterval:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.read(docReader, true);\n        freqIndex.seek(freqReader);\n        \n        posIndex.read(docReader, true);\n        // skip payload offset\n        docReader.readVLong();\n      } else {\n        freq = 1;\n      }\n      skipOffset = docReader.readVLong();\n\n      docFreq = termState.docFreq;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aff28d83336d21b964812b94574b7e8cea46a3cc","date":1297437050,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipInterval:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipInterval:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipInterval:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits skipDocs) throws IOException {\n      this.skipDocs = skipDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.indexOptions;\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      omitTF = fieldInfo.omitTermFreqAndPositions;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.indexOptions;\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.indexOptions;\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.storePayloads;\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.set(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.set(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      } else {\n        freq = 1;\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = 0;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"8df828f6eb8a46ba5a58ab37d00659165feb274f":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","aff28d83336d21b964812b94574b7e8cea46a3cc"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["aff28d83336d21b964812b94574b7e8cea46a3cc"],"aff28d83336d21b964812b94574b7e8cea46a3cc":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"85a883878c0af761245ab048babc63d099f835f3":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","8df828f6eb8a46ba5a58ab37d00659165feb274f"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["8df828f6eb8a46ba5a58ab37d00659165feb274f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","8df828f6eb8a46ba5a58ab37d00659165feb274f"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["aff28d83336d21b964812b94574b7e8cea46a3cc","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["aff28d83336d21b964812b94574b7e8cea46a3cc","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["85a883878c0af761245ab048babc63d099f835f3","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["e79a6d080bdd5b2a8f56342cf571b5476de04180","aff28d83336d21b964812b94574b7e8cea46a3cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"8df828f6eb8a46ba5a58ab37d00659165feb274f":["85a883878c0af761245ab048babc63d099f835f3","b1add9ddc0005b07550d4350720aac22dc9886b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"aff28d83336d21b964812b94574b7e8cea46a3cc":["f1bdbf92da222965b46c0a942c3857ba56e5c638","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"85a883878c0af761245ab048babc63d099f835f3":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["8df828f6eb8a46ba5a58ab37d00659165feb274f","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["aff28d83336d21b964812b94574b7e8cea46a3cc","e79a6d080bdd5b2a8f56342cf571b5476de04180","29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}