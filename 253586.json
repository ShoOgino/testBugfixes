{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ca/CatalanAnalyzer#CatalanAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public CatalanAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/da/DanishAnalyzer#DanishAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public DanishAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/es/SpanishAnalyzer#SpanishAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public SpanishAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/eu/BasqueAnalyzer#BasqueAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public BasqueAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/fi/FinnishAnalyzer#FinnishAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public FinnishAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianAnalyzer#GalicianAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public GalicianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/hu/HungarianAnalyzer#HungarianAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public HungarianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/hy/ArmenianAnalyzer#ArmenianAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public ArmenianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/it/ItalianAnalyzer#ItalianAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public ItalianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/lv/LatvianAnalyzer#LatvianAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public LatvianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/no/NorwegianAnalyzer#NorwegianAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public NorwegianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/pt/PortugueseAnalyzer#PortugueseAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public PortugueseAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ro/RomanianAnalyzer#RomanianAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public RomanianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/sv/SwedishAnalyzer#SwedishAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public SwedishAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/tr/TurkishAnalyzer#TurkishAnalyzer(Version,CharArraySet,CharArraySet).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/EnglishAnalyzer#EnglishAnalyzer(Version,Set[#],Set[#]).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public TurkishAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link KeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public EnglishAnalyzer(Version matchVersion, Set<?> stopwords, Set<?> stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"]},"commit2Childs":{"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}