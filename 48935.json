{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // create some simple geo points\n    final FieldType storedPoint = new FieldType(GeoPointField.TYPE_STORED);\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n         new GeoPointField(FIELD_NAME, -96.774, 32.763420, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, storedPoint),\n         new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7772, 32.778650, storedPoint),\n         new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, storedPoint),\n         new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, storedPoint),\n         new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, storedPoint),\n         new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, storedPoint),\n         new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -73.998776, 40.720611, storedPoint),\n         new GeoPointField(FIELD_NAME, -179.5, -44.5, storedPoint)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // create some simple geo points\n    final FieldType storedPoint = new FieldType(GeoPointField.TYPE_STORED);\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n         new GeoPointField(FIELD_NAME, -96.774, 32.763420, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, storedPoint),\n         new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7772, 32.778650, storedPoint),\n         new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, storedPoint),\n         new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, storedPoint),\n         new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, storedPoint),\n         new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, storedPoint),\n         new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -73.998776, 40.720611, storedPoint),\n         new GeoPointField(FIELD_NAME, -179.5, -44.5, storedPoint)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62cc423073d23f01208c6cf85844dedd80011121","date":1454731549,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    termEncoding = TermEncoding.PREFIX;// randomTermEncoding();\n    fieldType = randomFieldType();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, fieldType),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, fieldType),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, fieldType),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, fieldType),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, fieldType),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, fieldType),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, fieldType),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, fieldType),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, fieldType),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, fieldType)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // create some simple geo points\n    final FieldType storedPoint = new FieldType(GeoPointField.TYPE_STORED);\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n         new GeoPointField(FIELD_NAME, -96.774, 32.763420, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, storedPoint),\n         new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7772, 32.778650, storedPoint),\n         new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, storedPoint),\n         new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, storedPoint),\n         new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, storedPoint),\n         new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, storedPoint),\n         new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -73.998776, 40.720611, storedPoint),\n         new GeoPointField(FIELD_NAME, -179.5, -44.5, storedPoint)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    termEncoding = TermEncoding.PREFIX;// randomTermEncoding();\n    fieldType = randomFieldType();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, fieldType),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, fieldType),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, fieldType),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, fieldType),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, fieldType),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, fieldType),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, fieldType),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, fieldType),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, fieldType),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, fieldType)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // create some simple geo points\n    final FieldType storedPoint = new FieldType(GeoPointField.TYPE_STORED);\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n         new GeoPointField(FIELD_NAME, -96.774, 32.763420, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, storedPoint),\n         new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7772, 32.778650, storedPoint),\n         new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, storedPoint),\n         new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, storedPoint),\n         new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, storedPoint),\n         new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, storedPoint),\n         new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -73.998776, 40.720611, storedPoint),\n         new GeoPointField(FIELD_NAME, -179.5, -44.5, storedPoint)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    termEncoding = TermEncoding.PREFIX;// randomTermEncoding();\n    fieldType = randomFieldType();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, fieldType),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, fieldType),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, fieldType),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, fieldType),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, fieldType),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, fieldType),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, fieldType),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, fieldType),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, fieldType),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, fieldType)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // create some simple geo points\n    final FieldType storedPoint = new FieldType(GeoPointField.TYPE_STORED);\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n         new GeoPointField(FIELD_NAME, -96.774, 32.763420, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, storedPoint),\n         new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, storedPoint),\n         new GeoPointField(FIELD_NAME, -96.7772, 32.778650, storedPoint),\n         new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, storedPoint),\n         new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, storedPoint),\n         new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, storedPoint),\n         new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, storedPoint),\n         new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, storedPoint),\n         new GeoPointField(FIELD_NAME, -73.998776, 40.720611, storedPoint),\n         new GeoPointField(FIELD_NAME, -179.5, -44.5, storedPoint)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d802da8321c13d4cc6a82c2fe9d903dbebad1d0","date":1454878226,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    termEncoding = randomTermEncoding();\n    fieldType = randomFieldType();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, fieldType),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, fieldType),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, fieldType),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, fieldType),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, fieldType),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, fieldType),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, fieldType),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, fieldType),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, fieldType),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, fieldType)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    termEncoding = TermEncoding.PREFIX;// randomTermEncoding();\n    fieldType = randomFieldType();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, fieldType),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, fieldType),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, fieldType),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, fieldType),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, fieldType),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, fieldType),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, fieldType),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, fieldType),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, fieldType),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, fieldType)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#beforeClass().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    termEncoding = randomTermEncoding();\n    fieldType = randomFieldType();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, fieldType),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, fieldType),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, fieldType),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, fieldType),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, fieldType),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, fieldType),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, fieldType),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, fieldType),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, fieldType),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, fieldType)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    termEncoding = randomTermEncoding();\n    fieldType = randomFieldType();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, fieldType),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, fieldType),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, fieldType),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, fieldType),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, fieldType),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, fieldType),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, fieldType),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, fieldType),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, fieldType),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, fieldType)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a207d19eac354d649c3f0e2cce070017c78125e":["937923083e4d137932336fc80f3d78758ff698a6","62cc423073d23f01208c6cf85844dedd80011121"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","62cc423073d23f01208c6cf85844dedd80011121"],"4d802da8321c13d4cc6a82c2fe9d903dbebad1d0":["5a207d19eac354d649c3f0e2cce070017c78125e"],"62cc423073d23f01208c6cf85844dedd80011121":["937923083e4d137932336fc80f3d78758ff698a6"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["4d802da8321c13d4cc6a82c2fe9d903dbebad1d0"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a093d23e938d132b81b5f2de3d6b168afe3608e"]},"commit2Childs":{"5a207d19eac354d649c3f0e2cce070017c78125e":["4d802da8321c13d4cc6a82c2fe9d903dbebad1d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"62cc423073d23f01208c6cf85844dedd80011121":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"4d802da8321c13d4cc6a82c2fe9d903dbebad1d0":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"937923083e4d137932336fc80f3d78758ff698a6":["5a207d19eac354d649c3f0e2cce070017c78125e","62cc423073d23f01208c6cf85844dedd80011121"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}