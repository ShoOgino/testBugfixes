{"path":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#score(LeafCollector,int).mjava","commits":[{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#score(LeafCollector,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#score(Collector,int).mjava","sourceNew":"    @Override\n    public boolean score(LeafCollector collector, int max) throws IOException {\n      FakeScorer fakeScorer = new FakeScorer();\n      collector.setScorer(fakeScorer);\n      if (doc == -1) {\n        doc = nextDocOutOfOrder();\n      }\n      while(doc < max) {\n        fakeScorer.doc = doc;\n        fakeScorer.score = scores[ords[scoreUpto]];\n        collector.collect(doc);\n        doc = nextDocOutOfOrder();\n      }\n\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","sourceOld":"    @Override\n    public boolean score(Collector collector, int max) throws IOException {\n      FakeScorer fakeScorer = new FakeScorer();\n      collector.setScorer(fakeScorer);\n      if (doc == -1) {\n        doc = nextDocOutOfOrder();\n      }\n      while(doc < max) {\n        fakeScorer.doc = doc;\n        fakeScorer.score = scores[ords[scoreUpto]];\n        collector.collect(doc);\n        doc = nextDocOutOfOrder();\n      }\n\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#score(LeafCollector,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#score(Collector,int).mjava","sourceNew":"    @Override\n    public boolean score(LeafCollector collector, int max) throws IOException {\n      FakeScorer fakeScorer = new FakeScorer();\n      collector.setScorer(fakeScorer);\n      if (doc == -1) {\n        doc = nextDocOutOfOrder();\n      }\n      while(doc < max) {\n        fakeScorer.doc = doc;\n        fakeScorer.score = scores[ords[scoreUpto]];\n        collector.collect(doc);\n        doc = nextDocOutOfOrder();\n      }\n\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","sourceOld":"    @Override\n    public boolean score(Collector collector, int max) throws IOException {\n      FakeScorer fakeScorer = new FakeScorer();\n      collector.setScorer(fakeScorer);\n      if (doc == -1) {\n        doc = nextDocOutOfOrder();\n      }\n      while(doc < max) {\n        fakeScorer.doc = doc;\n        fakeScorer.score = scores[ords[scoreUpto]];\n        collector.collect(doc);\n        doc = nextDocOutOfOrder();\n      }\n\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#score(LeafCollector,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean score(LeafCollector collector, int max) throws IOException {\n      FakeScorer fakeScorer = new FakeScorer();\n      collector.setScorer(fakeScorer);\n      if (doc == -1) {\n        doc = nextDocOutOfOrder();\n      }\n      while(doc < max) {\n        fakeScorer.doc = doc;\n        fakeScorer.score = scores[ords[scoreUpto]];\n        collector.collect(doc);\n        doc = nextDocOutOfOrder();\n      }\n\n      return doc != DocsEnum.NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["ae73da626f97850c922c42736f808d0378e165f0"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"]},"commit2Childs":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"ae73da626f97850c922c42736f808d0378e165f0":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","15e323346eac5e4685c0a9f2df85eb96b4239bbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}