{"path":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#sha256(String,String).mjava","commits":[{"id":"ccfb40e1834cac1619556a0becf198bb7bad5d63","date":1438887805,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#sha256(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static String sha256(String password, String saltKey) {\n    MessageDigest digest;\n    try {\n      digest = MessageDigest.getInstance(\"SHA-256\");\n    } catch (NoSuchAlgorithmException e) {\n      BasicAuthPlugin.log.error(e.getMessage(), e);\n      return null;//should not happen\n    }\n    if (saltKey != null) {\n      digest.reset();\n      digest.update(Base64.decodeBase64(saltKey));\n    }\n\n    byte[] btPass = digest.digest(password.getBytes(StandardCharsets.UTF_8));\n    digest.reset();\n    btPass = digest.digest(btPass);\n    return Base64.encodeBase64String(btPass);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9367dbf5b00d7764583d991c1888f4acc9c9991a","date":1449048142,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#sha256(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#sha256(String,String).mjava","sourceNew":"  public static String sha256(String password, String saltKey) {\n    MessageDigest digest;\n    try {\n      digest = MessageDigest.getInstance(\"SHA-256\");\n    } catch (NoSuchAlgorithmException e) {\n      log.error(e.getMessage(), e);\n      return null;//should not happen\n    }\n    if (saltKey != null) {\n      digest.reset();\n      digest.update(Base64.decodeBase64(saltKey));\n    }\n\n    byte[] btPass = digest.digest(password.getBytes(StandardCharsets.UTF_8));\n    digest.reset();\n    btPass = digest.digest(btPass);\n    return Base64.encodeBase64String(btPass);\n  }\n\n","sourceOld":"  public static String sha256(String password, String saltKey) {\n    MessageDigest digest;\n    try {\n      digest = MessageDigest.getInstance(\"SHA-256\");\n    } catch (NoSuchAlgorithmException e) {\n      BasicAuthPlugin.log.error(e.getMessage(), e);\n      return null;//should not happen\n    }\n    if (saltKey != null) {\n      digest.reset();\n      digest.update(Base64.decodeBase64(saltKey));\n    }\n\n    byte[] btPass = digest.digest(password.getBytes(StandardCharsets.UTF_8));\n    digest.reset();\n    btPass = digest.digest(btPass);\n    return Base64.encodeBase64String(btPass);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c238f5fb83803b49b37b3a1a12224a64d47542","date":1593655679,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#sha256(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/Sha256AuthenticationProvider#sha256(String,String).mjava","sourceNew":"  public static String sha256(String password, String saltKey) {\n    MessageDigest digest;\n    try {\n      digest = MessageDigest.getInstance(\"SHA-256\");\n    } catch (NoSuchAlgorithmException e) {\n      log.error(\"Cannot find algorithm \", e);\n      return null;//should not happen\n    }\n    if (saltKey != null) {\n      digest.reset();\n      digest.update(Base64.decodeBase64(saltKey));\n    }\n\n    byte[] btPass = digest.digest(password.getBytes(StandardCharsets.UTF_8));\n    digest.reset();\n    btPass = digest.digest(btPass);\n    return Base64.encodeBase64String(btPass);\n  }\n\n","sourceOld":"  public static String sha256(String password, String saltKey) {\n    MessageDigest digest;\n    try {\n      digest = MessageDigest.getInstance(\"SHA-256\");\n    } catch (NoSuchAlgorithmException e) {\n      log.error(e.getMessage(), e);\n      return null;//should not happen\n    }\n    if (saltKey != null) {\n      digest.reset();\n      digest.update(Base64.decodeBase64(saltKey));\n    }\n\n    byte[] btPass = digest.digest(password.getBytes(StandardCharsets.UTF_8));\n    digest.reset();\n    btPass = digest.digest(btPass);\n    return Base64.encodeBase64String(btPass);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57c238f5fb83803b49b37b3a1a12224a64d47542":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c238f5fb83803b49b37b3a1a12224a64d47542"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"57c238f5fb83803b49b37b3a1a12224a64d47542":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}