{"path":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","commits":[{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0) {\n        builder.append(' '); // for the offset gap, TODO: make this configurable\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0) {\n        builder.append(' '); // for the offset gap, TODO: make this configurable\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0) {\n        builder.append(' '); // for the offset gap, TODO: make this configurable\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcb40b5261a74cb6dde091ea8ca22e1ef33d392f","date":1370273382,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0 && builder.length() < maxLength) {\n        builder.append(' '); // for the offset gap, TODO: make this configurable\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0) {\n        builder.append(' '); // for the offset gap, TODO: make this configurable\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","bugFix":["ffabe030a2b84ad50adb7265da07ee78f1c58f6a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bab9b3a0f87a0ddd75243046ecebe7dfdf5048d","date":1372774106,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0 && builder.length() < maxLength) {\n        builder.append(valueSeparators[currentField]);\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0 && builder.length() < maxLength) {\n        builder.append(' '); // for the offset gap, TODO: make this configurable\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0 && builder.length() < maxLength) {\n        builder.append(valueSeparators[currentField]);\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0 && builder.length() < maxLength) {\n        builder.append(' '); // for the offset gap, TODO: make this configurable\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399d127639ae13222a8545b50e0ac545a6bcd2d7","date":1428704686,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter.LimitedStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, byte[] bytes) throws IOException {\n      String value = new String(bytes, StandardCharsets.UTF_8);\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0 && builder.length() < maxLength) {\n        builder.append(valueSeparators[currentField]);\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      assert currentField >= 0;\n      StringBuilder builder = builders[currentField];\n      if (builder.length() > 0 && builder.length() < maxLength) {\n        builder.append(valueSeparators[currentField]);\n      }\n      if (builder.length() + value.length() > maxLength) {\n        builder.append(value, 0, maxLength - builder.length());\n      } else {\n        builder.append(value);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2bab9b3a0f87a0ddd75243046ecebe7dfdf5048d":["fcb40b5261a74cb6dde091ea8ca22e1ef33d392f"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["fcb40b5261a74cb6dde091ea8ca22e1ef33d392f","2bab9b3a0f87a0ddd75243046ecebe7dfdf5048d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fcb40b5261a74cb6dde091ea8ca22e1ef33d392f":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["2bab9b3a0f87a0ddd75243046ecebe7dfdf5048d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["399d127639ae13222a8545b50e0ac545a6bcd2d7"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fcb40b5261a74cb6dde091ea8ca22e1ef33d392f"],"2bab9b3a0f87a0ddd75243046ecebe7dfdf5048d":["37a0f60745e53927c4c876cfe5b5a58170f0646c","399d127639ae13222a8545b50e0ac545a6bcd2d7"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"fcb40b5261a74cb6dde091ea8ca22e1ef33d392f":["2bab9b3a0f87a0ddd75243046ecebe7dfdf5048d","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}