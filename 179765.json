{"path":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#rectCrossesCircle(double,double,double,double,double,double,double).mjava","commits":[{"id":"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d","date":1437181221,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#rectCrossesCircle(double,double,double,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Computes whether a rectangle crosses a circle\n   */\n  public static boolean rectCrossesCircle(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                          final double centerLon, final double centerLat, final double radius) {\n\n    return rectAnyCornersInCirlce(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius)\n        || lineCrossesSphere(rMinX, rMinY, 0, rMaxX, rMinY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMaxX, rMinY, 0, rMaxX, rMaxY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMaxX, rMaxY, 0, rMinX, rMaxY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMinX, rMaxY, 0, rMinX, rMinY, 0, centerLon, centerLat, 0, radius);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fc6e227caf7b84b83df6bb987ca077179f03452f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fc6e227caf7b84b83df6bb987ca077179f03452f","date":1438419526,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#rectCrossesCircle(double,double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#rectCrossesCircle(double,double,double,double,double,double,double).mjava","sourceNew":"  /**\n   * Computes whether a rectangle crosses a circle\n   */\n  public static boolean rectCrossesCircle(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                          final double centerLon, final double centerLat, final double radius) {\n    return rectAnyCornersInCircle(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius)\n        || lineCrossesSphere(rMinX, rMinY, 0, rMaxX, rMinY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMaxX, rMinY, 0, rMaxX, rMaxY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMaxX, rMaxY, 0, rMinX, rMaxY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMinX, rMaxY, 0, rMinX, rMinY, 0, centerLon, centerLat, 0, radius);\n  }\n\n","sourceOld":"  /**\n   * Computes whether a rectangle crosses a circle\n   */\n  public static boolean rectCrossesCircle(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                          final double centerLon, final double centerLat, final double radius) {\n\n    return rectAnyCornersInCirlce(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius)\n        || lineCrossesSphere(rMinX, rMinY, 0, rMaxX, rMinY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMaxX, rMinY, 0, rMaxX, rMaxY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMaxX, rMaxY, 0, rMinX, rMaxY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMinX, rMaxY, 0, rMinX, rMinY, 0, centerLon, centerLat, 0, radius);\n  }\n\n","bugFix":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07c50cb1eca5629cac5b6702dd0f5e06157af61a","date":1445464748,"type":3,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#rectCrossesCircle(double,double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#rectCrossesCircle(double,double,double,double,double,double,double).mjava","sourceNew":"  /**\n   * Determine if a bbox (defined by minLon, minLat, maxLon, maxLat) contains the provided point (defined by lon, lat)\n   * NOTE: this is basic method that does not handle dateline or pole crossing. Unwrapping must be done before\n   * calling this method.\n   */\n  public static boolean rectCrossesCircle(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                          final double centerLon, final double centerLat, final double radiusMeters) {\n    return rectAnyCornersInCircle(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radiusMeters)\n        || isClosestPointOnRectWithinRange(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radiusMeters);\n  }\n\n","sourceOld":"  /**\n   * Computes whether a rectangle crosses a circle\n   */\n  public static boolean rectCrossesCircle(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                          final double centerLon, final double centerLat, final double radius) {\n    return rectAnyCornersInCircle(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius)\n        || lineCrossesSphere(rMinX, rMinY, 0, rMaxX, rMinY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMaxX, rMinY, 0, rMaxX, rMaxY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMaxX, rMaxY, 0, rMinX, rMaxY, 0, centerLon, centerLat, 0, radius)\n        || lineCrossesSphere(rMinX, rMaxY, 0, rMinX, rMinY, 0, centerLon, centerLat, 0, radius);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33bb6bd7295e66f93f182556f5353b97243e62ba","date":1449525768,"type":5,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#rectCrossesCircle(double,double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#rectCrossesCircle(double,double,double,double,double,double,double).mjava","sourceNew":"  /**\n   * Determine if a bbox (defined by minLon, minLat, maxLon, maxLat) contains the provided point (defined by lon, lat)\n   * NOTE: this is basic method that does not handle dateline or pole crossing. Unwrapping must be done before\n   * calling this method.\n   */\n  public static boolean rectCrossesCircle(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                          final double centerLon, final double centerLat, final double radiusMeters) {\n    return rectCrossesCircle(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radiusMeters, false);\n  }\n\n","sourceOld":"  /**\n   * Determine if a bbox (defined by minLon, minLat, maxLon, maxLat) contains the provided point (defined by lon, lat)\n   * NOTE: this is basic method that does not handle dateline or pole crossing. Unwrapping must be done before\n   * calling this method.\n   */\n  public static boolean rectCrossesCircle(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                          final double centerLon, final double centerLat, final double radiusMeters) {\n    return rectAnyCornersInCircle(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radiusMeters)\n        || isClosestPointOnRectWithinRange(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc6e227caf7b84b83df6bb987ca077179f03452f":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["fc6e227caf7b84b83df6bb987ca077179f03452f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["33bb6bd7295e66f93f182556f5353b97243e62ba"],"33bb6bd7295e66f93f182556f5353b97243e62ba":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"]},"commit2Childs":{"fc6e227caf7b84b83df6bb987ca077179f03452f":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"],"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d":["fc6e227caf7b84b83df6bb987ca077179f03452f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["33bb6bd7295e66f93f182556f5353b97243e62ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"33bb6bd7295e66f93f182556f5353b97243e62ba":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}