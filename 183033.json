{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsEnum#nextDoc().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      // if (DEBUG) System.out.println(\"SPR.nextDoc seg=\" + segment + \" freqIn.fp=\" + freqIn.getFilePointer());\n      while(true) {\n        if (ord == limit) {\n          // if (DEBUG) System.out.println(\"  return END\");\n          return doc = NO_MORE_DOCS;\n        }\n\n        ord++;\n\n        // Decode next doc/freq pair\n        final int code = freqIn.readVInt();\n\n        accum += code >>> 1;              // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = freqIn.readVInt();     // else read freq\n        }\n        posPendingCount += freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          break;\n        }\n      }\n\n      position = 0;\n\n      // if (DEBUG) System.out.println(\"  return doc=\" + doc);\n      return (doc = accum);\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      // if (DEBUG) System.out.println(\"SPR.nextDoc seg=\" + segment + \" freqIn.fp=\" + freqIn.getFilePointer());\n      while(true) {\n        if (ord == limit) {\n          // if (DEBUG) System.out.println(\"  return END\");\n          return doc = NO_MORE_DOCS;\n        }\n\n        ord++;\n\n        // Decode next doc/freq pair\n        final int code = freqIn.readVInt();\n\n        accum += code >>> 1;              // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = freqIn.readVInt();     // else read freq\n        }\n        posPendingCount += freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          break;\n        }\n      }\n\n      position = 0;\n\n      // if (DEBUG) System.out.println(\"  return doc=\" + doc);\n      return (doc = accum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      // if (DEBUG) System.out.println(\"SPR.nextDoc seg=\" + segment + \" freqIn.fp=\" + freqIn.getFilePointer());\n      while(true) {\n        if (ord == limit) {\n          // if (DEBUG) System.out.println(\"  return END\");\n          return doc = NO_MORE_DOCS;\n        }\n\n        ord++;\n\n        // Decode next doc/freq pair\n        final int code = freqIn.readVInt();\n\n        accum += code >>> 1;              // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = freqIn.readVInt();     // else read freq\n        }\n        posPendingCount += freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          break;\n        }\n      }\n\n      position = 0;\n\n      // if (DEBUG) System.out.println(\"  return doc=\" + doc);\n      return (doc = accum);\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      // if (DEBUG) System.out.println(\"SPR.nextDoc seg=\" + segment + \" freqIn.fp=\" + freqIn.getFilePointer());\n      while(true) {\n        if (ord == limit) {\n          // if (DEBUG) System.out.println(\"  return END\");\n          return doc = NO_MORE_DOCS;\n        }\n\n        ord++;\n\n        // Decode next doc/freq pair\n        final int code = freqIn.readVInt();\n\n        accum += code >>> 1;              // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = freqIn.readVInt();     // else read freq\n        }\n        posPendingCount += freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          break;\n        }\n      }\n\n      position = 0;\n\n      // if (DEBUG) System.out.println(\"  return doc=\" + doc);\n      return (doc = accum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      // if (DEBUG) System.out.println(\"SPR.nextDoc seg=\" + segment + \" freqIn.fp=\" + freqIn.getFilePointer());\n      while(true) {\n        if (ord == limit) {\n          // if (DEBUG) System.out.println(\"  return END\");\n          return doc = NO_MORE_DOCS;\n        }\n\n        ord++;\n\n        // Decode next doc/freq pair\n        final int code = freqIn.readVInt();\n\n        accum += code >>> 1;              // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = freqIn.readVInt();     // else read freq\n        }\n        posPendingCount += freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          break;\n        }\n      }\n\n      position = 0;\n\n      // if (DEBUG) System.out.println(\"  return doc=\" + doc);\n      return (doc = accum);\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      // if (DEBUG) System.out.println(\"SPR.nextDoc seg=\" + segment + \" freqIn.fp=\" + freqIn.getFilePointer());\n      while(true) {\n        if (ord == limit) {\n          // if (DEBUG) System.out.println(\"  return END\");\n          return doc = NO_MORE_DOCS;\n        }\n\n        ord++;\n\n        // Decode next doc/freq pair\n        final int code = freqIn.readVInt();\n\n        accum += code >>> 1;              // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = freqIn.readVInt();     // else read freq\n        }\n        posPendingCount += freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          break;\n        }\n      }\n\n      position = 0;\n\n      // if (DEBUG) System.out.println(\"  return doc=\" + doc);\n      return (doc = accum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}