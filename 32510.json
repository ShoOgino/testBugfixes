{"path":"lucene/test-framework/src/java/org/apache/lucene/mockfile/WindowsFS#onOpen(Path,Object).mjava","commits":[{"id":"7cefb6c0aa217f293070c43e7a77682dd56e0a33","date":1416928878,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/WindowsFS#onOpen(Path,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void onOpen(Path path, Object stream) throws IOException {\n    Object key = getKey(path);\n    synchronized (openFiles) {\n      Integer v = openFiles.get(key);\n      if (v != null) {\n        v = Integer.valueOf(v.intValue()+1);\n        openFiles.put(key, v);\n      } else {\n        openFiles.put(key, Integer.valueOf(1));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfed6e3427046e2823569b34ac8a6a100b4e84cc","date":1432671921,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/WindowsFS#onOpen(Path,Object).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/WindowsFS#onOpen(Path,Object).mjava","sourceNew":"  @Override\n  protected void onOpen(Path path, Object stream) throws IOException {\n    synchronized (openFiles) {\n      final Object key = getKey(path);\n      // we have to read the key under the lock otherwise me might leak the openFile handle\n      // if we concurrently delete or move this file.\n      Integer v = openFiles.get(key);\n      if (v != null) {\n        v = Integer.valueOf(v.intValue()+1);\n        openFiles.put(key, v);\n      } else {\n        openFiles.put(key, Integer.valueOf(1));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void onOpen(Path path, Object stream) throws IOException {\n    Object key = getKey(path);\n    synchronized (openFiles) {\n      Integer v = openFiles.get(key);\n      if (v != null) {\n        v = Integer.valueOf(v.intValue()+1);\n        openFiles.put(key, v);\n      } else {\n        openFiles.put(key, Integer.valueOf(1));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23963f4ff234b34eac505a6e8cb93dc69bc7f693","date":1526628830,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/WindowsFS#onOpen(Path,Object).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/WindowsFS#onOpen(Path,Object).mjava","sourceNew":"  @Override\n  protected void onOpen(Path path, Object stream) throws IOException {\n    synchronized (openFiles) {\n      final Object key = getKey(path);\n      // we have to read the key under the lock otherwise me might leak the openFile handle\n      // if we concurrently delete or move this file.\n      Map<Path, Integer> pathMap = openFiles.computeIfAbsent(key, k -> new HashMap<>());\n      pathMap.put(path, pathMap.computeIfAbsent(path, p -> 0).intValue() +1);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void onOpen(Path path, Object stream) throws IOException {\n    synchronized (openFiles) {\n      final Object key = getKey(path);\n      // we have to read the key under the lock otherwise me might leak the openFile handle\n      // if we concurrently delete or move this file.\n      Integer v = openFiles.get(key);\n      if (v != null) {\n        v = Integer.valueOf(v.intValue()+1);\n        openFiles.put(key, v);\n      } else {\n        openFiles.put(key, Integer.valueOf(1));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfed6e3427046e2823569b34ac8a6a100b4e84cc":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"23963f4ff234b34eac505a6e8cb93dc69bc7f693":["bfed6e3427046e2823569b34ac8a6a100b4e84cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23963f4ff234b34eac505a6e8cb93dc69bc7f693"]},"commit2Childs":{"bfed6e3427046e2823569b34ac8a6a100b4e84cc":["23963f4ff234b34eac505a6e8cb93dc69bc7f693"],"23963f4ff234b34eac505a6e8cb93dc69bc7f693":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["bfed6e3427046e2823569b34ac8a6a100b4e84cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}