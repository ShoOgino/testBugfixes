{"path":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#decodeBuffer(LinkedList[Object],Map[String,String[]],CharsetDecoder).mjava","commits":[{"id":"92009ce6b3696f548a1c7eb9fcf8cab29b541426","date":1375140262,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#decodeBuffer(LinkedList[Object],Map[String,String[]],CharsetDecoder).mjava","pathOld":"/dev/null","sourceNew":"  private static void decodeBuffer(final LinkedList<Object> input, final Map<String,String[]> map, CharsetDecoder charsetDecoder) {\n    for (final Iterator<Object> it = input.iterator(); it.hasNext(); ) {\n      final byte[] keyBytes = (byte[]) it.next();\n      it.remove();\n      final Long keyPos = (Long) it.next();\n      it.remove();\n      final byte[] valueBytes = (byte[]) it.next();\n      it.remove();\n      final Long valuePos = (Long) it.next();\n      it.remove();\n      MultiMapSolrParams.addParam(decodeChars(keyBytes, keyPos.longValue(), charsetDecoder),\n          decodeChars(valueBytes, valuePos.longValue(), charsetDecoder), map);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#decodeBuffer(LinkedList[Object],Map[String,String[]],CharsetDecoder).mjava","pathOld":"/dev/null","sourceNew":"  private static void decodeBuffer(final LinkedList<Object> input, final Map<String,String[]> map, CharsetDecoder charsetDecoder) {\n    for (final Iterator<Object> it = input.iterator(); it.hasNext(); ) {\n      final byte[] keyBytes = (byte[]) it.next();\n      it.remove();\n      final Long keyPos = (Long) it.next();\n      it.remove();\n      final byte[] valueBytes = (byte[]) it.next();\n      it.remove();\n      final Long valuePos = (Long) it.next();\n      it.remove();\n      MultiMapSolrParams.addParam(decodeChars(keyBytes, keyPos.longValue(), charsetDecoder),\n          decodeChars(valueBytes, valuePos.longValue(), charsetDecoder), map);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d17ec5164debc23076db7fd11d0331f201583b5","date":1426658173,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#decodeBuffer(LinkedList[Object],Map[String,String[]],CharsetDecoder).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#decodeBuffer(LinkedList[Object],Map[String,String[]],CharsetDecoder).mjava","sourceNew":"  private static void decodeBuffer(final LinkedList<Object> input, final Map<String,String[]> map, CharsetDecoder charsetDecoder) {\n    for (final Iterator<Object> it = input.iterator(); it.hasNext(); ) {\n      final byte[] keyBytes = (byte[]) it.next();\n      it.remove();\n      final Long keyPos = (Long) it.next();\n      it.remove();\n      final byte[] valueBytes = (byte[]) it.next();\n      it.remove();\n      final Long valuePos = (Long) it.next();\n      it.remove();\n      MultiMapSolrParams.addParam(decodeChars(keyBytes, keyPos.longValue(), charsetDecoder).trim(),\n          decodeChars(valueBytes, valuePos.longValue(), charsetDecoder), map);\n    }\n  }\n\n","sourceOld":"  private static void decodeBuffer(final LinkedList<Object> input, final Map<String,String[]> map, CharsetDecoder charsetDecoder) {\n    for (final Iterator<Object> it = input.iterator(); it.hasNext(); ) {\n      final byte[] keyBytes = (byte[]) it.next();\n      it.remove();\n      final Long keyPos = (Long) it.next();\n      it.remove();\n      final byte[] valueBytes = (byte[]) it.next();\n      it.remove();\n      final Long valuePos = (Long) it.next();\n      it.remove();\n      MultiMapSolrParams.addParam(decodeChars(keyBytes, keyPos.longValue(), charsetDecoder),\n          decodeChars(valueBytes, valuePos.longValue(), charsetDecoder), map);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#decodeBuffer(LinkedList[Object],Map[String,String[]],CharsetDecoder).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#decodeBuffer(LinkedList[Object],Map[String,String[]],CharsetDecoder).mjava","sourceNew":"  private static void decodeBuffer(final LinkedList<Object> input, final Map<String,String[]> map, CharsetDecoder charsetDecoder) {\n    for (final Iterator<Object> it = input.iterator(); it.hasNext(); ) {\n      final byte[] keyBytes = (byte[]) it.next();\n      it.remove();\n      final Long keyPos = (Long) it.next();\n      it.remove();\n      final byte[] valueBytes = (byte[]) it.next();\n      it.remove();\n      final Long valuePos = (Long) it.next();\n      it.remove();\n      MultiMapSolrParams.addParam(decodeChars(keyBytes, keyPos.longValue(), charsetDecoder).trim(),\n          decodeChars(valueBytes, valuePos.longValue(), charsetDecoder), map);\n    }\n  }\n\n","sourceOld":"  private static void decodeBuffer(final LinkedList<Object> input, final Map<String,String[]> map, CharsetDecoder charsetDecoder) {\n    for (final Iterator<Object> it = input.iterator(); it.hasNext(); ) {\n      final byte[] keyBytes = (byte[]) it.next();\n      it.remove();\n      final Long keyPos = (Long) it.next();\n      it.remove();\n      final byte[] valueBytes = (byte[]) it.next();\n      it.remove();\n      final Long valuePos = (Long) it.next();\n      it.remove();\n      MultiMapSolrParams.addParam(decodeChars(keyBytes, keyPos.longValue(), charsetDecoder),\n          decodeChars(valueBytes, valuePos.longValue(), charsetDecoder), map);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["92009ce6b3696f548a1c7eb9fcf8cab29b541426","0d17ec5164debc23076db7fd11d0331f201583b5"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","92009ce6b3696f548a1c7eb9fcf8cab29b541426"],"0d17ec5164debc23076db7fd11d0331f201583b5":["92009ce6b3696f548a1c7eb9fcf8cab29b541426"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92009ce6b3696f548a1c7eb9fcf8cab29b541426":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d17ec5164debc23076db7fd11d0331f201583b5"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"0d17ec5164debc23076db7fd11d0331f201583b5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","92009ce6b3696f548a1c7eb9fcf8cab29b541426"],"92009ce6b3696f548a1c7eb9fcf8cab29b541426":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","0d17ec5164debc23076db7fd11d0331f201583b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}