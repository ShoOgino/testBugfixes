{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController#getAutoScalingConfig().mjava","commits":[{"id":"c32a8448145a74a8902798f2e63e322827757ff2","date":1496834422,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getAutoScalingConfig().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   *\n   * @return current configuration from <code>autoscaling.json</code>. NOTE:\n   * this data is retrieved from ZK on each call.\n   */\n  public AutoScalingConfig getAutoScalingConfig() throws KeeperException, InterruptedException {\n    Map<String, Object> jsonMap = zkClient.getJson(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH, true);\n    return new AutoScalingConfig(jsonMap);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"664ff2b928393480d9655010aa700656b0fcade0","date":1496842764,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getAutoScalingConfig().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   *\n   * @return current configuration from <code>autoscaling.json</code>. NOTE:\n   * this data is retrieved from ZK on each call.\n   */\n  public AutoScalingConfig getAutoScalingConfig() throws KeeperException, InterruptedException {\n    Map<String, Object> jsonMap = zkClient.getJson(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH, true);\n    return new AutoScalingConfig(jsonMap);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee4f83c392cabe2a9950dce0c3b8600e5634129b","date":1498030441,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getAutoScalingConfig().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getAutoScalingConfig().mjava","sourceNew":"  /**\n   *\n   * @return current configuration from <code>autoscaling.json</code>. NOTE:\n   * this data is retrieved from ZK on each call.\n   */\n  public AutoScalingConfig getAutoScalingConfig() throws KeeperException, InterruptedException {\n    Map<String, Object> jsonMap = Utils.getJson(zkClient, ZkStateReader.SOLR_AUTOSCALING_CONF_PATH, true);\n    return new AutoScalingConfig(jsonMap);\n  }\n\n","sourceOld":"  /**\n   *\n   * @return current configuration from <code>autoscaling.json</code>. NOTE:\n   * this data is retrieved from ZK on each call.\n   */\n  public AutoScalingConfig getAutoScalingConfig() throws KeeperException, InterruptedException {\n    Map<String, Object> jsonMap = zkClient.getJson(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH, true);\n    return new AutoScalingConfig(jsonMap);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getAutoScalingConfig().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getAutoScalingConfig().mjava","sourceNew":"  /**\n   * Get current {@link AutoScalingConfig}.\n   * @return current configuration from <code>autoscaling.json</code>. NOTE:\n   * this data is retrieved from ZK on each call.\n   */\n  public AutoScalingConfig getAutoScalingConfig() throws KeeperException, InterruptedException {\n    return getAutoScalingConfig(null);\n  }\n\n","sourceOld":"  /**\n   *\n   * @return current configuration from <code>autoscaling.json</code>. NOTE:\n   * this data is retrieved from ZK on each call.\n   */\n  public AutoScalingConfig getAutoScalingConfig() throws KeeperException, InterruptedException {\n    Map<String, Object> jsonMap = Utils.getJson(zkClient, ZkStateReader.SOLR_AUTOSCALING_CONF_PATH, true);\n    return new AutoScalingConfig(jsonMap);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee4f83c392cabe2a9950dce0c3b8600e5634129b":["664ff2b928393480d9655010aa700656b0fcade0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c32a8448145a74a8902798f2e63e322827757ff2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["ee4f83c392cabe2a9950dce0c3b8600e5634129b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"664ff2b928393480d9655010aa700656b0fcade0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c32a8448145a74a8902798f2e63e322827757ff2"]},"commit2Childs":{"ee4f83c392cabe2a9950dce0c3b8600e5634129b":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c32a8448145a74a8902798f2e63e322827757ff2","cd5edd1f2b162a5cfa08efd17851a07373a96817","664ff2b928393480d9655010aa700656b0fcade0"],"c32a8448145a74a8902798f2e63e322827757ff2":["664ff2b928393480d9655010aa700656b0fcade0"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":[],"664ff2b928393480d9655010aa700656b0fcade0":["ee4f83c392cabe2a9950dce0c3b8600e5634129b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}