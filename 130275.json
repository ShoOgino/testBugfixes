{"path":"backwards/src/test/org/apache/lucene/store/TestWindowsMMap#testMmapIndex().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/store/TestWindowsMMap#testMmapIndex().mjava","pathOld":"/dev/null","sourceNew":"  public void testMmapIndex() throws Exception {\n    FSDirectory storeDirectory;\n    storeDirectory = new MMapDirectory(new File(storePathname), null);\n\n    // plan to add a set of useful stopwords, consider changing some of the\n    // interior filters.\n    StandardAnalyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, Collections.emptySet());\n    // TODO: something about lock timeouts and leftover locks.\n    IndexWriter writer = new IndexWriter(storeDirectory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    IndexSearcher searcher = new IndexSearcher(storeDirectory, true);\n    \n    for(int dx = 0; dx < 1000; dx ++) {\n      String f = randomField();\n      Document doc = new Document();\n      doc.add(new Field(\"data\", f, Field.Store.YES, Field.Index.ANALYZED));\t\n      writer.addDocument(doc);\n    }\n    \n    searcher.close();\n    writer.close();\n                rmDir(new File(storePathname));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/store/TestWindowsMMap#testMmapIndex().mjava","pathOld":"backwards/src/test/org/apache/lucene/store/TestWindowsMMap#testMmapIndex().mjava","sourceNew":"  public void testMmapIndex() throws Exception {\n    FSDirectory storeDirectory;\n    storeDirectory = new MMapDirectory(new File(storePathname), null);\n\n    // plan to add a set of useful stopwords, consider changing some of the\n    // interior filters.\n    StandardAnalyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, Collections.emptySet());\n    // TODO: something about lock timeouts and leftover locks.\n    IndexWriter writer = new IndexWriter(storeDirectory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    IndexSearcher searcher = new IndexSearcher(storeDirectory, true);\n    \n    for(int dx = 0; dx < 1000; dx ++) {\n      String f = randomField();\n      Document doc = new Document();\n      doc.add(new Field(\"data\", f, Field.Store.YES, Field.Index.ANALYZED));\t\n      writer.addDocument(doc);\n    }\n    \n    searcher.close();\n    writer.close();\n                rmDir(new File(storePathname));\n  }\n\n","sourceOld":"  public void testMmapIndex() throws Exception {\n    FSDirectory storeDirectory;\n    storeDirectory = new MMapDirectory(new File(storePathname), null);\n\n    // plan to add a set of useful stopwords, consider changing some of the\n    // interior filters.\n    StandardAnalyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, Collections.emptySet());\n    // TODO: something about lock timeouts and leftover locks.\n    IndexWriter writer = new IndexWriter(storeDirectory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n    IndexSearcher searcher = new IndexSearcher(storeDirectory, true);\n    \n    for(int dx = 0; dx < 1000; dx ++) {\n      String f = randomField();\n      Document doc = new Document();\n      doc.add(new Field(\"data\", f, Field.Store.YES, Field.Index.ANALYZED));\t\n      writer.addDocument(doc);\n    }\n    \n    searcher.close();\n    writer.close();\n                rmDir(new File(storePathname));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}