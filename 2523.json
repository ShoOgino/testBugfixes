{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","sourceNew":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","sourceNew":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","sourceNew":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      @Override\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","sourceNew":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      @Override\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","sourceNew":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<>();\n    final List<Map<String, Object>> x = new ArrayList<>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      @Override\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<Map<String, Object>>();\n    final List<Map<String, Object>> x = new ArrayList<Map<String, Object>>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      @Override\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68b2523bf6d81a99aa007384dc8a69a71fec1cce","date":1477560907,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","sourceNew":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<>();\n    final List<Map<String, Object>> x = new ArrayList<>();\n    rr.streamRecords(new StringReader(xml), (record, xpath) -> {\n      if (record == null) return;\n      if (xpath.equals(\"/root/a\")) a.add(record);\n      if (xpath.equals(\"/root/x\")) x.add(record);\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<>();\n    final List<Map<String, Object>> x = new ArrayList<>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      @Override\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","sourceNew":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<>();\n    final List<Map<String, Object>> x = new ArrayList<>();\n    rr.streamRecords(new StringReader(xml), (record, xpath) -> {\n      if (record == null) return;\n      if (xpath.equals(\"/root/a\")) a.add(record);\n      if (xpath.equals(\"/root/x\")) x.add(record);\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","sourceOld":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<>();\n    final List<Map<String, Object>> x = new ArrayList<>();\n    rr.streamRecords(new StringReader(xml), new XPathRecordReader.Handler() {\n      @Override\n      public void handle(Map<String, Object> record, String xpath) {\n        if (record == null) return;\n        if (xpath.equals(\"/root/a\")) a.add(record);\n        if (xpath.equals(\"/root/x\")) x.add(record);\n      }\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAttributes2LevelHetero().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testAttributes2LevelHetero() {\n    String xml=\"<root>\\n\"\n             + \"<a>\\n   <b a=\\\"x0\\\" b=\\\"y0\\\" />\\n\"\n             + \"        <b a=\\\"x1\\\" b=\\\"y1\\\" />\\n\"\n             + \"        <b a=\\\"x2\\\" b=\\\"y2\\\" />\\n\"\n             + \"        </a>\"\n             + \"<x>\\n   <b a=\\\"x4\\\" b=\\\"y4\\\" />\\n\"\n             + \"        <b a=\\\"x5\\\" b=\\\"y5\\\" />\\n\"\n             + \"        <b a=\\\"x6\\\" b=\\\"y6\\\" />\\n\"\n             + \"        </x>\"\n             + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a | /root/x\");\n    rr.addField(\"a\", \"/root/a/b/@a\", false);\n    rr.addField(\"b\", \"/root/a/b/@b\", false);\n    rr.addField(\"a\", \"/root/x/b/@a\", false);\n    rr.addField(\"b\", \"/root/x/b/@b\", false);\n\n    final List<Map<String, Object>> a = new ArrayList<>();\n    final List<Map<String, Object>> x = new ArrayList<>();\n    rr.streamRecords(new StringReader(xml), (record, xpath) -> {\n      if (record == null) return;\n      if (xpath.equals(\"/root/a\")) a.add(record);\n      if (xpath.equals(\"/root/x\")) x.add(record);\n    });\n\n    assertEquals(1, a.size());\n    assertEquals(1, x.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7530de27b87b961b51f01bd1299b7004d46e8823"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"68b2523bf6d81a99aa007384dc8a69a71fec1cce":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"68b2523bf6d81a99aa007384dc8a69a71fec1cce":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}