{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testFilterStream().mjava","commits":[{"id":"91814ce09be68efd0626969632e79ae47d8876d4","date":1425951537,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testFilterStream().mjava","pathOld":"/dev/null","sourceNew":"  private void testFilterStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"0\");\n    indexr(id, \"2\", \"a_s\", \"hello2\", \"a_i\", \"2\", \"a_f\", \"0\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello1\", \"a_i\", \"1\", \"a_f\", \"1\");\n\n    commit();\n\n    //Test CloudSolrStream and SumStream over an int field\n    String zkHost = zkServer.getZkAddress();\n\n    Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i\",\"sort\", \"a_s asc\");\n    CloudSolrStream streamA = new CloudSolrStream(zkHost, \"collection1\", paramsA);\n\n    Map paramsB = mapParams(\"q\",\"id:(0 2)\",\"fl\",\"a_s\",\"sort\", \"a_s asc\");\n    CloudSolrStream streamB = new CloudSolrStream(zkHost, \"collection1\", paramsB);\n\n\n    FilterStream fstream = new FilterStream(streamA, streamB, new AscFieldComp(\"a_s\"));\n    List<Tuple> tuples = getTuples(fstream);\n\n    assert(tuples.size() == 2);\n    assertOrder(tuples, 0,2);\n\n    del(\"*:*\");\n    commit();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f03b407cd85abd6edd2a1fe7cab9990164aa4b","date":1427303865,"type":4,"author":"Joel Bernstein","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#testFilterStream().mjava","sourceNew":null,"sourceOld":"  private void testFilterStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"0\");\n    indexr(id, \"2\", \"a_s\", \"hello2\", \"a_i\", \"2\", \"a_f\", \"0\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello1\", \"a_i\", \"1\", \"a_f\", \"1\");\n\n    commit();\n\n    //Test CloudSolrStream and SumStream over an int field\n    String zkHost = zkServer.getZkAddress();\n\n    Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i\",\"sort\", \"a_s asc\");\n    CloudSolrStream streamA = new CloudSolrStream(zkHost, \"collection1\", paramsA);\n\n    Map paramsB = mapParams(\"q\",\"id:(0 2)\",\"fl\",\"a_s\",\"sort\", \"a_s asc\");\n    CloudSolrStream streamB = new CloudSolrStream(zkHost, \"collection1\", paramsB);\n\n\n    FilterStream fstream = new FilterStream(streamA, streamB, new AscFieldComp(\"a_s\"));\n    List<Tuple> tuples = getTuples(fstream);\n\n    assert(tuples.size() == 2);\n    assertOrder(tuples, 0,2);\n\n    del(\"*:*\");\n    commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"42f03b407cd85abd6edd2a1fe7cab9990164aa4b":["91814ce09be68efd0626969632e79ae47d8876d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"91814ce09be68efd0626969632e79ae47d8876d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42f03b407cd85abd6edd2a1fe7cab9990164aa4b"]},"commit2Childs":{"42f03b407cd85abd6edd2a1fe7cab9990164aa4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91814ce09be68efd0626969632e79ae47d8876d4"],"91814ce09be68efd0626969632e79ae47d8876d4":["42f03b407cd85abd6edd2a1fe7cab9990164aa4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}