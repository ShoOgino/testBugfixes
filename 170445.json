{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionSecondPassGroupingCollector#FunctionSecondPassGroupingCollector(Collection[SearchGroup[MutableValue]],Sort,Sort,int,boolean,boolean,boolean,ValueSource,Map).mjava","commits":[{"id":"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","date":1317931776,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionSecondPassGroupingCollector#FunctionSecondPassGroupingCollector(Collection[SearchGroup[MutableValue]],Sort,Sort,int,boolean,boolean,boolean,ValueSource,Map).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructs a {@link FunctionSecondPassGroupingCollector} instance.\n   *\n   * @param searchGroups The {@link SearchGroup} instances collected during the first phase.\n   * @param groupSort The group sort\n   * @param withinGroupSort The sort inside a group\n   * @param maxDocsPerGroup The maximum number of documents to collect inside a group\n   * @param getScores Whether to include the scores\n   * @param getMaxScores Whether to include the maximum score\n   * @param fillSortFields Whether to fill the sort values in {@link TopGroups#withinGroupSort}\n   * @param groupByVS The {@link ValueSource} to group by\n   * @param vsContext The value source context\n   * @throws IOException IOException When I/O related errors occur\n   */\n  public FunctionSecondPassGroupingCollector(Collection<SearchGroup<MutableValue>> searchGroups, Sort groupSort, Sort withinGroupSort, int maxDocsPerGroup, boolean getScores, boolean getMaxScores, boolean fillSortFields, ValueSource groupByVS, Map vsContext) throws IOException {\n    super(searchGroups, groupSort, withinGroupSort, maxDocsPerGroup, getScores, getMaxScores, fillSortFields);\n    this.groupByVS = groupByVS;\n    this.vsContext = vsContext;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"beac87a1a5dbb19e3803d52b56690043fbc6671d","date":1331196058,"type":5,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionSecondPassGroupingCollector#FunctionSecondPassGroupingCollector(Collection[SearchGroup[MutableValue]],Sort,Sort,int,boolean,boolean,boolean,ValueSource,Map[#,#]).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionSecondPassGroupingCollector#FunctionSecondPassGroupingCollector(Collection[SearchGroup[MutableValue]],Sort,Sort,int,boolean,boolean,boolean,ValueSource,Map).mjava","sourceNew":"  /**\n   * Constructs a {@link FunctionSecondPassGroupingCollector} instance.\n   *\n   * @param searchGroups The {@link SearchGroup} instances collected during the first phase.\n   * @param groupSort The group sort\n   * @param withinGroupSort The sort inside a group\n   * @param maxDocsPerGroup The maximum number of documents to collect inside a group\n   * @param getScores Whether to include the scores\n   * @param getMaxScores Whether to include the maximum score\n   * @param fillSortFields Whether to fill the sort values in {@link TopGroups#withinGroupSort}\n   * @param groupByVS The {@link ValueSource} to group by\n   * @param vsContext The value source context\n   * @throws IOException IOException When I/O related errors occur\n   */\n  public FunctionSecondPassGroupingCollector(Collection<SearchGroup<MutableValue>> searchGroups, Sort groupSort, Sort withinGroupSort, int maxDocsPerGroup, boolean getScores, boolean getMaxScores, boolean fillSortFields, ValueSource groupByVS, Map<?, ?> vsContext) throws IOException {\n    super(searchGroups, groupSort, withinGroupSort, maxDocsPerGroup, getScores, getMaxScores, fillSortFields);\n    this.groupByVS = groupByVS;\n    this.vsContext = vsContext;\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link FunctionSecondPassGroupingCollector} instance.\n   *\n   * @param searchGroups The {@link SearchGroup} instances collected during the first phase.\n   * @param groupSort The group sort\n   * @param withinGroupSort The sort inside a group\n   * @param maxDocsPerGroup The maximum number of documents to collect inside a group\n   * @param getScores Whether to include the scores\n   * @param getMaxScores Whether to include the maximum score\n   * @param fillSortFields Whether to fill the sort values in {@link TopGroups#withinGroupSort}\n   * @param groupByVS The {@link ValueSource} to group by\n   * @param vsContext The value source context\n   * @throws IOException IOException When I/O related errors occur\n   */\n  public FunctionSecondPassGroupingCollector(Collection<SearchGroup<MutableValue>> searchGroups, Sort groupSort, Sort withinGroupSort, int maxDocsPerGroup, boolean getScores, boolean getMaxScores, boolean fillSortFields, ValueSource groupByVS, Map vsContext) throws IOException {\n    super(searchGroups, groupSort, withinGroupSort, maxDocsPerGroup, getScores, getMaxScores, fillSortFields);\n    this.groupByVS = groupByVS;\n    this.vsContext = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":5,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionSecondPassGroupingCollector#FunctionSecondPassGroupingCollector(Collection[SearchGroup[MutableValue]],Sort,Sort,int,boolean,boolean,boolean,ValueSource,Map[#,#]).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionSecondPassGroupingCollector#FunctionSecondPassGroupingCollector(Collection[SearchGroup[MutableValue]],Sort,Sort,int,boolean,boolean,boolean,ValueSource,Map).mjava","sourceNew":"  /**\n   * Constructs a {@link FunctionSecondPassGroupingCollector} instance.\n   *\n   * @param searchGroups The {@link SearchGroup} instances collected during the first phase.\n   * @param groupSort The group sort\n   * @param withinGroupSort The sort inside a group\n   * @param maxDocsPerGroup The maximum number of documents to collect inside a group\n   * @param getScores Whether to include the scores\n   * @param getMaxScores Whether to include the maximum score\n   * @param fillSortFields Whether to fill the sort values in {@link TopGroups#withinGroupSort}\n   * @param groupByVS The {@link ValueSource} to group by\n   * @param vsContext The value source context\n   * @throws IOException IOException When I/O related errors occur\n   */\n  public FunctionSecondPassGroupingCollector(Collection<SearchGroup<MutableValue>> searchGroups, Sort groupSort, Sort withinGroupSort, int maxDocsPerGroup, boolean getScores, boolean getMaxScores, boolean fillSortFields, ValueSource groupByVS, Map<?, ?> vsContext) throws IOException {\n    super(searchGroups, groupSort, withinGroupSort, maxDocsPerGroup, getScores, getMaxScores, fillSortFields);\n    this.groupByVS = groupByVS;\n    this.vsContext = vsContext;\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link FunctionSecondPassGroupingCollector} instance.\n   *\n   * @param searchGroups The {@link SearchGroup} instances collected during the first phase.\n   * @param groupSort The group sort\n   * @param withinGroupSort The sort inside a group\n   * @param maxDocsPerGroup The maximum number of documents to collect inside a group\n   * @param getScores Whether to include the scores\n   * @param getMaxScores Whether to include the maximum score\n   * @param fillSortFields Whether to fill the sort values in {@link TopGroups#withinGroupSort}\n   * @param groupByVS The {@link ValueSource} to group by\n   * @param vsContext The value source context\n   * @throws IOException IOException When I/O related errors occur\n   */\n  public FunctionSecondPassGroupingCollector(Collection<SearchGroup<MutableValue>> searchGroups, Sort groupSort, Sort withinGroupSort, int maxDocsPerGroup, boolean getScores, boolean getMaxScores, boolean fillSortFields, ValueSource groupByVS, Map vsContext) throws IOException {\n    super(searchGroups, groupSort, withinGroupSort, maxDocsPerGroup, getScores, getMaxScores, fillSortFields);\n    this.groupByVS = groupByVS;\n    this.vsContext = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","beac87a1a5dbb19e3803d52b56690043fbc6671d"],"beac87a1a5dbb19e3803d52b56690043fbc6671d":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["beac87a1a5dbb19e3803d52b56690043fbc6671d"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"beac87a1a5dbb19e3803d52b56690043fbc6671d":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["38e3b736c7ca086d61b7dbb841c905ee115490da","beac87a1a5dbb19e3803d52b56690043fbc6671d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}