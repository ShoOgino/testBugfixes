{"path":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","commits":[{"id":"77f2eb0d13b43db148a5e4f61c166fa3688a2df9","date":1096404326,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openFile(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  public final IndexInput openInput(String name) {\n    RAMFile file = (RAMFile)files.get(name);\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  public final InputStream openFile(String name) {\n    RAMFile file = (RAMFile)files.get(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  public final IndexInput openInput(String name) throws IOException {\n    RAMFile file = (RAMFile)files.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  public final IndexInput openInput(String name) {\n    RAMFile file = (RAMFile)files.get(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":["6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5657b669e16b843aac69f0ba7e89def1f93f6ea0","date":1164163669,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  public final IndexInput openInput(String name) throws IOException {\n    RAMFile file;\n    synchronized (this) {\n      file = (RAMFile)fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  public final IndexInput openInput(String name) throws IOException {\n    RAMFile file = (RAMFile)files.get(name);\n    if (file == null) {\n      throw new FileNotFoundException(name);\n    }\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9","date":1172996731,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  public IndexInput openInput(String name) throws IOException {\n    RAMFile file;\n    synchronized (this) {\n      file = (RAMFile)fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  public final IndexInput openInput(String name) throws IOException {\n    RAMFile file;\n    synchronized (this) {\n      file = (RAMFile)fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = (RAMFile)fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  public IndexInput openInput(String name) throws IOException {\n    RAMFile file;\n    synchronized (this) {\n      file = (RAMFile)fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = (RAMFile)fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#openInput(String).mjava","sourceNew":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","sourceOld":"  /** Returns a stream reading an existing file. */\n  @Override\n  public IndexInput openInput(String name) throws IOException {\n    ensureOpen();\n    RAMFile file;\n    synchronized (this) {\n      file = fileMap.get(name);\n    }\n    if (file == null)\n      throw new FileNotFoundException(name);\n    return new RAMInputStream(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"328c1568e471f0c6eaa49ec00334ca59e573710f":["6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9"],"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"],"8a9e385641d717e641408d8fbbc62be8fc766357":["ef82ff03e4016c705811b2658e81471a645c0e49"],"ef82ff03e4016c705811b2658e81471a645c0e49":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5657b669e16b843aac69f0ba7e89def1f93f6ea0":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"328c1568e471f0c6eaa49ec00334ca59e573710f":["ef82ff03e4016c705811b2658e81471a645c0e49"],"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ef82ff03e4016c705811b2658e81471a645c0e49":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"5657b669e16b843aac69f0ba7e89def1f93f6ea0":["6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}