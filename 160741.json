{"path":"src/java/org/apache/solr/search/ConstantScorePrefixQuery#toString(String).mjava","commits":[{"id":"366fcca5de1fe02aa77c7aca163ce4c0dbf30112","date":1138917988,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/ConstantScorePrefixQuery#toString(String).mjava","pathOld":"src/lucene_extras/org/apache/lucene/search/ConstantScorePrefixQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  public String toString(String field)\n  {\n    StringBuffer buffer = new StringBuffer();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    if (getBoost() != 1.0f) {\n      buffer.append(\"^\");\n      buffer.append(Float.toString(getBoost()));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field)\n  {\n    StringBuffer buffer = new StringBuffer();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    if (getBoost() != 1.0f) {\n      buffer.append(\"^\");\n      buffer.append(Float.toString(getBoost()));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2e5bfa22b27d858fb940b70befda09798b82dd2","date":1233862915,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/search/ConstantScorePrefixQuery#toString(String).mjava","pathOld":"src/java/org/apache/solr/search/ConstantScorePrefixQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  public String toString(String field)\n  {\n    StringBuilder buffer = new StringBuilder();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    if (getBoost() != 1.0f) {\n      buffer.append(\"^\");\n      buffer.append(Float.toString(getBoost()));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field)\n  {\n    StringBuffer buffer = new StringBuffer();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    if (getBoost() != 1.0f) {\n      buffer.append(\"^\");\n      buffer.append(Float.toString(getBoost()));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/ConstantScorePrefixQuery#toString(String).mjava","pathOld":"src/java/org/apache/solr/search/ConstantScorePrefixQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  public String toString(String field)\n  {\n    StringBuilder buffer = new StringBuilder();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    if (getBoost() != 1.0f) {\n      buffer.append(\"^\");\n      buffer.append(Float.toString(getBoost()));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field)\n  {\n    StringBuilder buffer = new StringBuilder();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    if (getBoost() != 1.0f) {\n      buffer.append(\"^\");\n      buffer.append(Float.toString(getBoost()));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c2e5bfa22b27d858fb940b70befda09798b82dd2"],"c2e5bfa22b27d858fb940b70befda09798b82dd2":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["c2e5bfa22b27d858fb940b70befda09798b82dd2"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c2e5bfa22b27d858fb940b70befda09798b82dd2":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}