{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","commits":[{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60679157c78fc286ee35471398529a1e5749621c","date":1292841330,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"/dev/null","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cca56866c19997e28ef073622656669c15210540","date":1307449014,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, IOContext.DEFAULT));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, newIOContext(random)));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, IOContext.DEFAULT));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, newIOContext(random)));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, newIOContext(random)));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, newIOContext(random)));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, newIOContext(random)));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      w.setInfoStream(VERBOSE ? System.out : null);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testForceMergeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","sourceNew":"  public void testForceMergeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, newIOContext(random)));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.forceMerge(1);\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"forceMerge threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    int iter = TEST_NIGHTLY ? 200 : 20;\n    for(int i=0;i<iter;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: iter \" + i);\n      }\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory(startDir, newIOContext(random)));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["cca56866c19997e28ef073622656669c15210540"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["06584e6e98d592b34e1329b384182f368d2025e8"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60679157c78fc286ee35471398529a1e5749621c"],"c19f985e36a65cc969e8e564fe337a0d41512075":["60679157c78fc286ee35471398529a1e5749621c"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["c19f985e36a65cc969e8e564fe337a0d41512075"],"60679157c78fc286ee35471398529a1e5749621c":["53a31399f2471493d67b19a95c028a74e0113b6a"],"53a31399f2471493d67b19a95c028a74e0113b6a":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["cca56866c19997e28ef073622656669c15210540","b6f9be74ca7baaef11857ad002cad40419979516"],"cca56866c19997e28ef073622656669c15210540":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a3776dccca01c11e7046323cfad46a3b4a471233","cca56866c19997e28ef073622656669c15210540"],"70ad682703b8585f5d0a637efec044d57ec05efb":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","60679157c78fc286ee35471398529a1e5749621c"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["85a883878c0af761245ab048babc63d099f835f3","53a31399f2471493d67b19a95c028a74e0113b6a"],"06584e6e98d592b34e1329b384182f368d2025e8":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","cca56866c19997e28ef073622656669c15210540"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"]},"commit2Childs":{"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c19f985e36a65cc969e8e564fe337a0d41512075":["f2c5f0cb44df114db4228c8f77861714b5cabaea","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","a3776dccca01c11e7046323cfad46a3b4a471233"],"60679157c78fc286ee35471398529a1e5749621c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075","70ad682703b8585f5d0a637efec044d57ec05efb"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["cca56866c19997e28ef073622656669c15210540","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"53a31399f2471493d67b19a95c028a74e0113b6a":["60679157c78fc286ee35471398529a1e5749621c","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","85a883878c0af761245ab048babc63d099f835f3","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","06584e6e98d592b34e1329b384182f368d2025e8"],"cca56866c19997e28ef073622656669c15210540":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","ddc4c914be86e34b54f70023f45a60fa7f04e929","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["70ad682703b8585f5d0a637efec044d57ec05efb"],"06584e6e98d592b34e1329b384182f368d2025e8":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"85a883878c0af761245ab048babc63d099f835f3":["9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"962d04139994fce5193143ef35615499a9a96d78":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["53a31399f2471493d67b19a95c028a74e0113b6a","85a883878c0af761245ab048babc63d099f835f3"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","962d04139994fce5193143ef35615499a9a96d78","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}