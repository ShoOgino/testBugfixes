{"path":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,String,String,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,LogWatcherConfig,CloudConfig,int,int,boolean,String,SolrResourceLoader,Properties).mjava","commits":[{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,String,String,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,LogWatcherConfig,CloudConfig,int,int,boolean,String,SolrResourceLoader,Properties).mjava","pathOld":"/dev/null","sourceNew":"  private NodeConfig(String nodeName, String coreRootDirectory, String configSetBaseDirectory, String sharedLibDirectory,\n                     PluginInfo shardHandlerFactoryConfig, UpdateShardHandlerConfig updateShardHandlerConfig,\n                     String coreAdminHandlerClass, String collectionsAdminHandlerClass, String infoHandlerClass,\n                     LogWatcherConfig logWatcherConfig, CloudConfig cloudConfig, int coreLoadThreads,\n                     int transientCacheSize, boolean useSchemaCache, String managementPath,\n                     SolrResourceLoader loader, Properties solrProperties) {\n    this.nodeName = nodeName;\n    this.coreRootDirectory = coreRootDirectory;\n    this.configSetBaseDirectory = configSetBaseDirectory;\n    this.sharedLibDirectory = sharedLibDirectory;\n    this.shardHandlerFactoryConfig = shardHandlerFactoryConfig;\n    this.updateShardHandlerConfig = updateShardHandlerConfig;\n    this.coreAdminHandlerClass = coreAdminHandlerClass;\n    this.collectionsAdminHandlerClass = collectionsAdminHandlerClass;\n    this.infoHandlerClass = infoHandlerClass;\n    this.logWatcherConfig = logWatcherConfig;\n    this.cloudConfig = cloudConfig;\n    this.coreLoadThreads = coreLoadThreads;\n    this.transientCacheSize = transientCacheSize;\n    this.useSchemaCache = useSchemaCache;\n    this.managementPath = managementPath;\n    this.loader = loader;\n    this.solrProperties = solrProperties;\n\n    if (this.cloudConfig != null && this.coreLoadThreads < 2) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"SolrCloud requires a value of at least 2 for coreLoadThreads (configured value = \" + this.coreLoadThreads + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,String,String,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,LogWatcherConfig,CloudConfig,int,int,boolean,String,SolrResourceLoader,Properties).mjava","pathOld":"/dev/null","sourceNew":"  private NodeConfig(String nodeName, String coreRootDirectory, String configSetBaseDirectory, String sharedLibDirectory,\n                     PluginInfo shardHandlerFactoryConfig, UpdateShardHandlerConfig updateShardHandlerConfig,\n                     String coreAdminHandlerClass, String collectionsAdminHandlerClass, String infoHandlerClass,\n                     LogWatcherConfig logWatcherConfig, CloudConfig cloudConfig, int coreLoadThreads,\n                     int transientCacheSize, boolean useSchemaCache, String managementPath,\n                     SolrResourceLoader loader, Properties solrProperties) {\n    this.nodeName = nodeName;\n    this.coreRootDirectory = coreRootDirectory;\n    this.configSetBaseDirectory = configSetBaseDirectory;\n    this.sharedLibDirectory = sharedLibDirectory;\n    this.shardHandlerFactoryConfig = shardHandlerFactoryConfig;\n    this.updateShardHandlerConfig = updateShardHandlerConfig;\n    this.coreAdminHandlerClass = coreAdminHandlerClass;\n    this.collectionsAdminHandlerClass = collectionsAdminHandlerClass;\n    this.infoHandlerClass = infoHandlerClass;\n    this.logWatcherConfig = logWatcherConfig;\n    this.cloudConfig = cloudConfig;\n    this.coreLoadThreads = coreLoadThreads;\n    this.transientCacheSize = transientCacheSize;\n    this.useSchemaCache = useSchemaCache;\n    this.managementPath = managementPath;\n    this.loader = loader;\n    this.solrProperties = solrProperties;\n\n    if (this.cloudConfig != null && this.coreLoadThreads < 2) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"SolrCloud requires a value of at least 2 for coreLoadThreads (configured value = \" + this.coreLoadThreads + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,String,String,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,String,LogWatcherConfig,CloudConfig,int,int,boolean,String,SolrResourceLoader,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig#NodeConfig(String,String,String,String,PluginInfo,UpdateShardHandlerConfig,String,String,String,LogWatcherConfig,CloudConfig,int,int,boolean,String,SolrResourceLoader,Properties).mjava","sourceNew":"  private NodeConfig(String nodeName, String coreRootDirectory, String configSetBaseDirectory, String sharedLibDirectory,\n                     PluginInfo shardHandlerFactoryConfig, UpdateShardHandlerConfig updateShardHandlerConfig,\n                     String coreAdminHandlerClass, String collectionsAdminHandlerClass,\n                     String infoHandlerClass, String configSetsHandlerClass,\n                     LogWatcherConfig logWatcherConfig, CloudConfig cloudConfig, int coreLoadThreads,\n                     int transientCacheSize, boolean useSchemaCache, String managementPath,\n                     SolrResourceLoader loader, Properties solrProperties) {\n    this.nodeName = nodeName;\n    this.coreRootDirectory = coreRootDirectory;\n    this.configSetBaseDirectory = configSetBaseDirectory;\n    this.sharedLibDirectory = sharedLibDirectory;\n    this.shardHandlerFactoryConfig = shardHandlerFactoryConfig;\n    this.updateShardHandlerConfig = updateShardHandlerConfig;\n    this.coreAdminHandlerClass = coreAdminHandlerClass;\n    this.collectionsAdminHandlerClass = collectionsAdminHandlerClass;\n    this.infoHandlerClass = infoHandlerClass;\n    this.configSetsHandlerClass = configSetsHandlerClass;\n    this.logWatcherConfig = logWatcherConfig;\n    this.cloudConfig = cloudConfig;\n    this.coreLoadThreads = coreLoadThreads;\n    this.transientCacheSize = transientCacheSize;\n    this.useSchemaCache = useSchemaCache;\n    this.managementPath = managementPath;\n    this.loader = loader;\n    this.solrProperties = solrProperties;\n\n    if (this.cloudConfig != null && this.coreLoadThreads < 2) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"SolrCloud requires a value of at least 2 for coreLoadThreads (configured value = \" + this.coreLoadThreads + \")\");\n    }\n  }\n\n","sourceOld":"  private NodeConfig(String nodeName, String coreRootDirectory, String configSetBaseDirectory, String sharedLibDirectory,\n                     PluginInfo shardHandlerFactoryConfig, UpdateShardHandlerConfig updateShardHandlerConfig,\n                     String coreAdminHandlerClass, String collectionsAdminHandlerClass, String infoHandlerClass,\n                     LogWatcherConfig logWatcherConfig, CloudConfig cloudConfig, int coreLoadThreads,\n                     int transientCacheSize, boolean useSchemaCache, String managementPath,\n                     SolrResourceLoader loader, Properties solrProperties) {\n    this.nodeName = nodeName;\n    this.coreRootDirectory = coreRootDirectory;\n    this.configSetBaseDirectory = configSetBaseDirectory;\n    this.sharedLibDirectory = sharedLibDirectory;\n    this.shardHandlerFactoryConfig = shardHandlerFactoryConfig;\n    this.updateShardHandlerConfig = updateShardHandlerConfig;\n    this.coreAdminHandlerClass = coreAdminHandlerClass;\n    this.collectionsAdminHandlerClass = collectionsAdminHandlerClass;\n    this.infoHandlerClass = infoHandlerClass;\n    this.logWatcherConfig = logWatcherConfig;\n    this.cloudConfig = cloudConfig;\n    this.coreLoadThreads = coreLoadThreads;\n    this.transientCacheSize = transientCacheSize;\n    this.useSchemaCache = useSchemaCache;\n    this.managementPath = managementPath;\n    this.loader = loader;\n    this.solrProperties = solrProperties;\n\n    if (this.cloudConfig != null && this.coreLoadThreads < 2) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"SolrCloud requires a value of at least 2 for coreLoadThreads (configured value = \" + this.coreLoadThreads + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e15199583d3635cb940942caed05132dd6c4c7c6"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["e15199583d3635cb940942caed05132dd6c4c7c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2209af2c265d2258ec4b29c8cc78622d36994a15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2209af2c265d2258ec4b29c8cc78622d36994a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}