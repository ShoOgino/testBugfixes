{"path":"lucene/src/test/org/apache/lucene/util/TestSortedVIntList#tstViaBitSet(int[],int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestSortedVIntList#tstViaBitSet(int[],int).mjava","pathOld":"src/test/org/apache/lucene/util/TestSortedVIntList#tstViaBitSet(int[],int).mjava","sourceNew":"  public void tstViaBitSet(int [] ints, int expectedByteSize) throws IOException {\n    final int MAX_INT_FOR_BITSET = 1024 * 1024;\n    BitSet bs = new BitSet();\n    for (int i = 0; i < ints.length; i++) {\n      if (ints[i] > MAX_INT_FOR_BITSET) {\n        return; // BitSet takes too much memory\n      }\n      if ((i > 0) && (ints[i-1] == ints[i])) {\n        return; // BitSet cannot store duplicate.\n      }\n      bs.set(ints[i]);\n    }\n    SortedVIntList svil = new SortedVIntList(bs);\n    tstVIntList(svil, ints, expectedByteSize);\n    tstVIntList(new SortedVIntList(svil.iterator()), ints, expectedByteSize);\n  }\n\n","sourceOld":"  public void tstViaBitSet(int [] ints, int expectedByteSize) throws IOException {\n    final int MAX_INT_FOR_BITSET = 1024 * 1024;\n    BitSet bs = new BitSet();\n    for (int i = 0; i < ints.length; i++) {\n      if (ints[i] > MAX_INT_FOR_BITSET) {\n        return; // BitSet takes too much memory\n      }\n      if ((i > 0) && (ints[i-1] == ints[i])) {\n        return; // BitSet cannot store duplicate.\n      }\n      bs.set(ints[i]);\n    }\n    SortedVIntList svil = new SortedVIntList(bs);\n    tstVIntList(svil, ints, expectedByteSize);\n    tstVIntList(new SortedVIntList(svil.iterator()), ints, expectedByteSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSortedVIntList#tstViaBitSet(int[],int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestSortedVIntList#tstViaBitSet(int[],int).mjava","sourceNew":"  public void tstViaBitSet(int [] ints, int expectedByteSize) throws IOException {\n    final int MAX_INT_FOR_BITSET = 1024 * 1024;\n    BitSet bs = new BitSet();\n    for (int i = 0; i < ints.length; i++) {\n      if (ints[i] > MAX_INT_FOR_BITSET) {\n        return; // BitSet takes too much memory\n      }\n      if ((i > 0) && (ints[i-1] == ints[i])) {\n        return; // BitSet cannot store duplicate.\n      }\n      bs.set(ints[i]);\n    }\n    SortedVIntList svil = new SortedVIntList(bs);\n    tstVIntList(svil, ints, expectedByteSize);\n    tstVIntList(new SortedVIntList(svil.iterator()), ints, expectedByteSize);\n  }\n\n","sourceOld":"  public void tstViaBitSet(int [] ints, int expectedByteSize) throws IOException {\n    final int MAX_INT_FOR_BITSET = 1024 * 1024;\n    BitSet bs = new BitSet();\n    for (int i = 0; i < ints.length; i++) {\n      if (ints[i] > MAX_INT_FOR_BITSET) {\n        return; // BitSet takes too much memory\n      }\n      if ((i > 0) && (ints[i-1] == ints[i])) {\n        return; // BitSet cannot store duplicate.\n      }\n      bs.set(ints[i]);\n    }\n    SortedVIntList svil = new SortedVIntList(bs);\n    tstVIntList(svil, ints, expectedByteSize);\n    tstVIntList(new SortedVIntList(svil.iterator()), ints, expectedByteSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}