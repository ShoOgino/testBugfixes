{"path":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testOperatorsAndMultiWordSynonyms().mjava","commits":[{"id":"e55782fb51a6e9789542818eb2161a3247f39ace","date":1489707707,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testOperatorsAndMultiWordSynonyms().mjava","pathOld":"/dev/null","sourceNew":"  public void testOperatorsAndMultiWordSynonyms() throws Exception {\n    // The \"syn\" field has synonyms loaded from synonyms.txt\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wifi\", \"sow\", \"true\") // retrieve the single document containing literal \"wifi\"\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi\", \"sow\", \"false\") // trigger the \"wi fi => wifi\" synonym\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi* fi\", \"sow\", \"false\")    // matches because wi* matches wifi\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"w? fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi~1 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^=2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi +fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi -fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi !fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi*\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi?\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi~1\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^=2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi syn:fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi NOT fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi\\\" fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi \\\"fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi) fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi (fi)\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"/wi/ fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi /fi/\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    Map all = (Map)ObjectBuilder.fromJSON(h.query(req(\"q\", \"*:*\", \"rows\", \"0\", \"wt\", \"json\")));\n    int totalDocs = Integer.parseInt(((Map)all.get(\"response\")).get(\"numFound\").toString());\n    int allDocsExceptOne = totalDocs - 1;\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^=2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT* wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT? wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"ATM\\\" wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi +ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT*\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT?\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi \\\"ATM\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi fi\\\"~2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:\\\"wi fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c03778630c4604270d88c148afb8c7de35b51d3c","date":1490280010,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testOperatorsAndMultiWordSynonyms().mjava","pathOld":"/dev/null","sourceNew":"  public void testOperatorsAndMultiWordSynonyms() throws Exception {\n    // The \"syn\" field has synonyms loaded from synonyms.txt\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wifi\", \"sow\", \"true\") // retrieve the single document containing literal \"wifi\"\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi\", \"sow\", \"false\") // trigger the \"wi fi => wifi\" synonym\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi* fi\", \"sow\", \"false\")    // matches because wi* matches wifi\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"w? fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi~1 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^=2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi +fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi -fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi !fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi*\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi?\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi~1\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^=2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi syn:fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi NOT fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi\\\" fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi \\\"fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi) fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi (fi)\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"/wi/ fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi /fi/\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    Map all = (Map)ObjectBuilder.fromJSON(h.query(req(\"q\", \"*:*\", \"rows\", \"0\", \"wt\", \"json\")));\n    int totalDocs = Integer.parseInt(((Map)all.get(\"response\")).get(\"numFound\").toString());\n    int allDocsExceptOne = totalDocs - 1;\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^=2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT* wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT? wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"ATM\\\" wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi +ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT*\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT?\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi \\\"ATM\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi fi\\\"~2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:\\\"wi fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3714bcf66a68a1600e9dd11442fc1b33b62ef088","date":1556832005,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testOperatorsAndMultiWordSynonyms().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testOperatorsAndMultiWordSynonyms().mjava","sourceNew":"  public void testOperatorsAndMultiWordSynonyms() throws Exception {\n    // The \"syn\" field has synonyms loaded from synonyms.txt\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wifi\", \"sow\", \"true\") // retrieve the single document containing literal \"wifi\"\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi\", \"sow\", \"false\") // trigger the \"wi fi => wifi\" synonym\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi* fi\", \"sow\", \"false\")    // matches because wi* matches wifi\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"w? fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi~1 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^=2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi +fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi -fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi !fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi*\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi?\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi~1\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^=2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi syn:fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi NOT fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi\\\" fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi \\\"fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi) fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi (fi)\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"/wi/ fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi /fi/\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    Map all = (Map) Utils.fromJSONString(h.query(req(\"q\", \"*:*\", \"rows\", \"0\", \"wt\", \"json\")));\n    int totalDocs = Integer.parseInt(((Map)all.get(\"response\")).get(\"numFound\").toString());\n    int allDocsExceptOne = totalDocs - 1;\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^=2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT* wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT? wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"ATM\\\" wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi +ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT*\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT?\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi \\\"ATM\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi fi\\\"~2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:\\\"wi fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n  }\n\n","sourceOld":"  public void testOperatorsAndMultiWordSynonyms() throws Exception {\n    // The \"syn\" field has synonyms loaded from synonyms.txt\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wifi\", \"sow\", \"true\") // retrieve the single document containing literal \"wifi\"\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi\", \"sow\", \"false\") // trigger the \"wi fi => wifi\" synonym\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi* fi\", \"sow\", \"false\")    // matches because wi* matches wifi\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"w? fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi~1 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^=2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi +fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi -fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi !fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi*\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi?\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi~1\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^=2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi syn:fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi NOT fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi\\\" fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi \\\"fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi) fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi (fi)\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"/wi/ fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi /fi/\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    Map all = (Map)ObjectBuilder.fromJSON(h.query(req(\"q\", \"*:*\", \"rows\", \"0\", \"wt\", \"json\")));\n    int totalDocs = Integer.parseInt(((Map)all.get(\"response\")).get(\"numFound\").toString());\n    int allDocsExceptOne = totalDocs - 1;\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^=2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT* wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT? wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"ATM\\\" wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi +ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT*\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT?\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi \\\"ATM\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi fi\\\"~2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:\\\"wi fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testOperatorsAndMultiWordSynonyms().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testOperatorsAndMultiWordSynonyms().mjava","sourceNew":"  public void testOperatorsAndMultiWordSynonyms() throws Exception {\n    // The \"syn\" field has synonyms loaded from synonyms.txt\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wifi\", \"sow\", \"true\") // retrieve the single document containing literal \"wifi\"\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi\", \"sow\", \"false\") // trigger the \"wi fi => wifi\" synonym\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi* fi\", \"sow\", \"false\")    // matches because wi* matches wifi\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"w? fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi~1 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^=2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi +fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi -fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi !fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi*\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi?\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi~1\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^=2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi syn:fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi NOT fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi\\\" fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi \\\"fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi) fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi (fi)\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"/wi/ fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi /fi/\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    @SuppressWarnings({\"rawtypes\"})\n    Map all = (Map) Utils.fromJSONString(h.query(req(\"q\", \"*:*\", \"rows\", \"0\", \"wt\", \"json\")));\n    int totalDocs = Integer.parseInt(((Map)all.get(\"response\")).get(\"numFound\").toString());\n    int allDocsExceptOne = totalDocs - 1;\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^=2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT* wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT? wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"ATM\\\" wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi +ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT*\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT?\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi \\\"ATM\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi fi\\\"~2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:\\\"wi fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n  }\n\n","sourceOld":"  public void testOperatorsAndMultiWordSynonyms() throws Exception {\n    // The \"syn\" field has synonyms loaded from synonyms.txt\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wifi\", \"sow\", \"true\") // retrieve the single document containing literal \"wifi\"\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi\", \"sow\", \"false\") // trigger the \"wi fi => wifi\" synonym\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='20'\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi* fi\", \"sow\", \"false\")    // matches because wi* matches wifi\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"w? fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi~1 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi^=2 fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi +fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi -fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi !fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi*\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi?\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi~1\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi^=2\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi syn:fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi NOT fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) AND ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM AND (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) && ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"ATM && (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) OR NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll OR (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi) || NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NotThereAtAll || (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi\\\" fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi \\\"fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi) fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi (fi)\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"/wi/ fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi /fi/\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n\n    Map all = (Map) Utils.fromJSONString(h.query(req(\"q\", \"*:*\", \"rows\", \"0\", \"wt\", \"json\")));\n    int totalDocs = Integer.parseInt(((Map)all.get(\"response\")).get(\"numFound\").toString());\n    int allDocsExceptOne = totalDocs - 1;\n\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT (wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==\" + allDocsExceptOne  // one doc contains \"wifi\" in the syn field\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"(wi fi)^=2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:(wi fi)\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"+ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"-NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"!NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT ATM wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"NOT NotThereAtAll wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT* wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"AT? wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"ATM\\\" wi fi\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi +ATM\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi -NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi !NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT ATM\", \"sow\", \"false\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi NOT NotThereAtAll\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT*\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi AT?\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"wi fi \\\"ATM\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"\\\"wi fi\\\"~2\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n    assertJQ(req(\"df\", \"syn\", \"q\", \"syn:\\\"wi fi\\\"\", \"sow\", \"false\")\n        , \"/response/numFound==1\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["e55782fb51a6e9789542818eb2161a3247f39ace"],"c03778630c4604270d88c148afb8c7de35b51d3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e55782fb51a6e9789542818eb2161a3247f39ace":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c03778630c4604270d88c148afb8c7de35b51d3c","e55782fb51a6e9789542818eb2161a3247f39ace"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["e98520789adb1d5ad05afb4956eca0944a929688"],"c03778630c4604270d88c148afb8c7de35b51d3c":[],"e55782fb51a6e9789542818eb2161a3247f39ace":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["c03778630c4604270d88c148afb8c7de35b51d3c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}