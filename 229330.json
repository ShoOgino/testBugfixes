{"path":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","commits":[{"id":"f366ce28775e2b8ea4e06355009471328711666d","date":1360551293,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** If {@code key} exists, returns its ordinal, else\n   *  returns {@code -insertionPoint-1}, like {@code\n   *  Arrays.binarySearch}.\n   *\n   *  @param key Key to look up\n   **/\n  public long lookupTerm(BytesRef key) {\n    BytesRef spare = new BytesRef();\n    long low = 0;\n    long high = getValueCount()-1;\n\n    while (low <= high) {\n      long mid = (low + high) >>> 1;\n      lookupOrd(mid, spare);\n      int cmp = spare.compareTo(key);\n\n      if (cmp < 0) {\n        low = mid + 1;\n      } else if (cmp > 0) {\n        high = mid - 1;\n      } else {\n        return mid; // key found\n      }\n    }\n\n    return -(low + 1);  // key not found.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f7558b5077dd4abd457be151475f13b541f4f13e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** If {@code key} exists, returns its ordinal, else\n   *  returns {@code -insertionPoint-1}, like {@code\n   *  Arrays.binarySearch}.\n   *\n   *  @param key Key to look up\n   **/\n  public long lookupTerm(BytesRef key) {\n    BytesRef spare = new BytesRef();\n    long low = 0;\n    long high = getValueCount()-1;\n\n    while (low <= high) {\n      long mid = (low + high) >>> 1;\n      lookupOrd(mid, spare);\n      int cmp = spare.compareTo(key);\n\n      if (cmp < 0) {\n        low = mid + 1;\n      } else if (cmp > 0) {\n        high = mid - 1;\n      } else {\n        return mid; // key found\n      }\n    }\n\n    return -(low + 1);  // key not found.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","sourceNew":"  /** If {@code key} exists, returns its ordinal, else\n   *  returns {@code -insertionPoint-1}, like {@code\n   *  Arrays.binarySearch}.\n   *\n   *  @param key Key to look up\n   **/\n  public long lookupTerm(BytesRef key) {\n    long low = 0;\n    long high = getValueCount()-1;\n\n    while (low <= high) {\n      long mid = (low + high) >>> 1;\n      final BytesRef term = lookupOrd(mid);\n      int cmp = term.compareTo(key);\n\n      if (cmp < 0) {\n        low = mid + 1;\n      } else if (cmp > 0) {\n        high = mid - 1;\n      } else {\n        return mid; // key found\n      }\n    }\n\n    return -(low + 1);  // key not found.\n  }\n\n","sourceOld":"  /** If {@code key} exists, returns its ordinal, else\n   *  returns {@code -insertionPoint-1}, like {@code\n   *  Arrays.binarySearch}.\n   *\n   *  @param key Key to look up\n   **/\n  public long lookupTerm(BytesRef key) {\n    BytesRef spare = new BytesRef();\n    long low = 0;\n    long high = getValueCount()-1;\n\n    while (low <= high) {\n      long mid = (low + high) >>> 1;\n      lookupOrd(mid, spare);\n      int cmp = spare.compareTo(key);\n\n      if (cmp < 0) {\n        low = mid + 1;\n      } else if (cmp > 0) {\n        high = mid - 1;\n      } else {\n        return mid; // key found\n      }\n    }\n\n    return -(low + 1);  // key not found.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f7558b5077dd4abd457be151475f13b541f4f13e","date":1475830751,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","sourceNew":"  /** If {@code key} exists, returns its ordinal, else\n   *  returns {@code -insertionPoint-1}, like {@code\n   *  Arrays.binarySearch}.\n   *\n   *  @param key Key to look up\n   **/\n  public long lookupTerm(BytesRef key) throws IOException {\n    long low = 0;\n    long high = getValueCount()-1;\n\n    while (low <= high) {\n      long mid = (low + high) >>> 1;\n      final BytesRef term = lookupOrd(mid);\n      int cmp = term.compareTo(key);\n\n      if (cmp < 0) {\n        low = mid + 1;\n      } else if (cmp > 0) {\n        high = mid - 1;\n      } else {\n        return mid; // key found\n      }\n    }\n\n    return -(low + 1);  // key not found.\n  }\n\n","sourceOld":"  /** If {@code key} exists, returns its ordinal, else\n   *  returns {@code -insertionPoint-1}, like {@code\n   *  Arrays.binarySearch}.\n   *\n   *  @param key Key to look up\n   **/\n  public long lookupTerm(BytesRef key) {\n    long low = 0;\n    long high = getValueCount()-1;\n\n    while (low <= high) {\n      long mid = (low + high) >>> 1;\n      final BytesRef term = lookupOrd(mid);\n      int cmp = term.compareTo(key);\n\n      if (cmp < 0) {\n        low = mid + 1;\n      } else if (cmp > 0) {\n        high = mid - 1;\n      } else {\n        return mid; // key found\n      }\n    }\n\n    return -(low + 1);  // key not found.\n  }\n\n","bugFix":["f366ce28775e2b8ea4e06355009471328711666d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedSetDocValues#lookupTerm(BytesRef).mjava","sourceNew":"  /** If {@code key} exists, returns its ordinal, else\n   *  returns {@code -insertionPoint-1}, like {@code\n   *  Arrays.binarySearch}.\n   *\n   *  @param key Key to look up\n   **/\n  public long lookupTerm(BytesRef key) throws IOException {\n    long low = 0;\n    long high = getValueCount()-1;\n\n    while (low <= high) {\n      long mid = (low + high) >>> 1;\n      final BytesRef term = lookupOrd(mid);\n      int cmp = term.compareTo(key);\n\n      if (cmp < 0) {\n        low = mid + 1;\n      } else if (cmp > 0) {\n        high = mid - 1;\n      } else {\n        return mid; // key found\n      }\n    }\n\n    return -(low + 1);  // key not found.\n  }\n\n","sourceOld":"  /** If {@code key} exists, returns its ordinal, else\n   *  returns {@code -insertionPoint-1}, like {@code\n   *  Arrays.binarySearch}.\n   *\n   *  @param key Key to look up\n   **/\n  public long lookupTerm(BytesRef key) {\n    long low = 0;\n    long high = getValueCount()-1;\n\n    while (low <= high) {\n      long mid = (low + high) >>> 1;\n      final BytesRef term = lookupOrd(mid);\n      int cmp = term.compareTo(key);\n\n      if (cmp < 0) {\n        low = mid + 1;\n      } else if (cmp > 0) {\n        high = mid - 1;\n      } else {\n        return mid; // key found\n      }\n    }\n\n    return -(low + 1);  // key not found.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f7558b5077dd4abd457be151475f13b541f4f13e":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f366ce28775e2b8ea4e06355009471328711666d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f366ce28775e2b8ea4e06355009471328711666d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","f7558b5077dd4abd457be151475f13b541f4f13e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7558b5077dd4abd457be151475f13b541f4f13e"]},"commit2Childs":{"f7558b5077dd4abd457be151475f13b541f4f13e":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["f7558b5077dd4abd457be151475f13b541f4f13e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f366ce28775e2b8ea4e06355009471328711666d","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"f366ce28775e2b8ea4e06355009471328711666d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}