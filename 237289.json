{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bda199b8d7306e8d4ca9a07dd7c7297524d381f","date":1288285466,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","date":1288424244,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8bda199b8d7306e8d4ca9a07dd7c7297524d381f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"70ad682703b8585f5d0a637efec044d57ec05efb":["ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["8bda199b8d7306e8d4ca9a07dd7c7297524d381f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","8bda199b8d7306e8d4ca9a07dd7c7297524d381f"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["9454a6510e2db155fb01faa5c049b06ece95fab9","8bda199b8d7306e8d4ca9a07dd7c7297524d381f"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8bda199b8d7306e8d4ca9a07dd7c7297524d381f":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["70ad682703b8585f5d0a637efec044d57ec05efb"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8bda199b8d7306e8d4ca9a07dd7c7297524d381f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}