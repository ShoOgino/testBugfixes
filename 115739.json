{"path":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrInputDocument).mjava","commits":[{"id":"9e2656623e57ced6c16aae473bab02019c951802","date":1342126181,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    return processAdd(chain, new ModifiableSolrParams(), docIn);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    return processAdd(chain, new ModifiableSolrParams(), docIn);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    return processAdd(chain, new ModifiableSolrParams(), docIn);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc5b4b2446e392448f36ae4f5a164540f2ccb65","date":1513355058,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    return processAdd(chain, new ModifiableSolrParams(), docIn);\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    return processAdd(chain, new ModifiableSolrParams(), docIn);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e2656623e57ced6c16aae473bab02019c951802":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["9e2656623e57ced6c16aae473bab02019c951802"]},"commit2Childs":{"9e2656623e57ced6c16aae473bab02019c951802":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e2656623e57ced6c16aae473bab02019c951802","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}