{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(TermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(TermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7347509fad0711ac30cb15a746e9a3830a38ebd","date":1275388513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(CharTermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(TermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"34934968e33dadf8cbcfa6d3b11779a3ced129d9","date":1314332179,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(CharTermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n\n        @Override\n        public void reset() throws IOException {\n          super.reset();\n          this.p = 0;\n        }\n      };\n      return ts;\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(CharTermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n      };\n      return ts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"53ae89cd75b0acbdfb8890710c6742f3fb80e65d","date":1315806626,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#createComponents(String,Reader).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest.TokenArrayAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    @Override\n    public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Tokenizer ts = new Tokenizer(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(CharTermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n\n        @Override\n        public void reset() throws IOException {\n          super.reset();\n          this.p = 0;\n        }\n      };\n      return new TokenStreamComponents(ts);\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStream(String fieldName, Reader reader) {      \n      TokenStream ts = new TokenStream(Token.TOKEN_ATTRIBUTE_FACTORY) {\n        final AttributeImpl reusableToken = (AttributeImpl) addAttribute(CharTermAttribute.class);\n        int p = 0;\n        \n        @Override\n        public boolean incrementToken() throws IOException {\n          if( p >= tokens.length ) return false;\n          clearAttributes();\n          tokens[p++].copyTo(reusableToken);\n          return true;\n        }\n\n        @Override\n        public void reset() throws IOException {\n          super.reset();\n          this.p = 0;\n        }\n      };\n      return ts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"34934968e33dadf8cbcfa6d3b11779a3ced129d9":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["53ae89cd75b0acbdfb8890710c6742f3fb80e65d"],"53ae89cd75b0acbdfb8890710c6742f3fb80e65d":["34934968e33dadf8cbcfa6d3b11779a3ced129d9"]},"commit2Childs":{"34934968e33dadf8cbcfa6d3b11779a3ced129d9":["53ae89cd75b0acbdfb8890710c6742f3fb80e65d"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["34934968e33dadf8cbcfa6d3b11779a3ced129d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"53ae89cd75b0acbdfb8890710c6742f3fb80e65d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}