{"path":"lucene/backwards/src/java/org/apache/lucene/store/MMapDirectory#setUseUnmap(boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/store/MMapDirectory#setUseUnmap(boolean).mjava","pathOld":"backwards/src/java/org/apache/lucene/store/MMapDirectory#setUseUnmap(boolean).mjava","sourceNew":"  /**\n   * This method enables the workaround for unmapping the buffers\n   * from address space after closing {@link IndexInput}, that is\n   * mentioned in the bug report. This hack may fail on non-Sun JVMs.\n   * It forcefully unmaps the buffer on close by using\n   * an undocumented internal cleanup functionality.\n   * <p><b>NOTE:</b> Enabling this is completely unsupported\n   * by Java and may lead to JVM crashes if <code>IndexInput</code>\n   * is closed while another thread is still accessing it (SIGSEGV).\n   * @throws IllegalArgumentException if {@link #UNMAP_SUPPORTED}\n   * is <code>false</code> and the workaround cannot be enabled.\n   */\n  public void setUseUnmap(final boolean useUnmapHack) {\n    if (useUnmapHack && !UNMAP_SUPPORTED)\n      throw new IllegalArgumentException(\"Unmap hack not supported on this platform!\");\n    this.useUnmapHack=useUnmapHack;\n  }\n\n","sourceOld":"  /**\n   * This method enables the workaround for unmapping the buffers\n   * from address space after closing {@link IndexInput}, that is\n   * mentioned in the bug report. This hack may fail on non-Sun JVMs.\n   * It forcefully unmaps the buffer on close by using\n   * an undocumented internal cleanup functionality.\n   * <p><b>NOTE:</b> Enabling this is completely unsupported\n   * by Java and may lead to JVM crashes if <code>IndexInput</code>\n   * is closed while another thread is still accessing it (SIGSEGV).\n   * @throws IllegalArgumentException if {@link #UNMAP_SUPPORTED}\n   * is <code>false</code> and the workaround cannot be enabled.\n   */\n  public void setUseUnmap(final boolean useUnmapHack) {\n    if (useUnmapHack && !UNMAP_SUPPORTED)\n      throw new IllegalArgumentException(\"Unmap hack not supported on this platform!\");\n    this.useUnmapHack=useUnmapHack;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/store/MMapDirectory#setUseUnmap(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * This method enables the workaround for unmapping the buffers\n   * from address space after closing {@link IndexInput}, that is\n   * mentioned in the bug report. This hack may fail on non-Sun JVMs.\n   * It forcefully unmaps the buffer on close by using\n   * an undocumented internal cleanup functionality.\n   * <p><b>NOTE:</b> Enabling this is completely unsupported\n   * by Java and may lead to JVM crashes if <code>IndexInput</code>\n   * is closed while another thread is still accessing it (SIGSEGV).\n   * @throws IllegalArgumentException if {@link #UNMAP_SUPPORTED}\n   * is <code>false</code> and the workaround cannot be enabled.\n   */\n  public void setUseUnmap(final boolean useUnmapHack) {\n    if (useUnmapHack && !UNMAP_SUPPORTED)\n      throw new IllegalArgumentException(\"Unmap hack not supported on this platform!\");\n    this.useUnmapHack=useUnmapHack;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}