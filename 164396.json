{"path":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","commits":[{"id":"988e3f44fe797ee94a0135abfe27e5872b99844d","date":1360563792,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.getGlobalOrd(currentSubIndex, segmentOrd);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.getGlobalOrd(currentSubIndex, segmentOrd);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595","date":1402950824,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.segmentToGlobalOrds[currentSubIndex].get(segmentOrd);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.getGlobalOrd(currentSubIndex, segmentOrd);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","date":1402998114,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.segmentToGlobalOrds[currentSubIndex].get(segmentOrd);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.getGlobalOrd(currentSubIndex, segmentOrd);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bcfd864fb8b916f7d21f2579d2010a31892055d","date":1403359094,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return currentGlobalOrds.get(segmentOrd);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.segmentToGlobalOrds[currentSubIndex].get(segmentOrd);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      long segmentOrd = currentValues.nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.getGlobalOrds(nextLeaf-1).get(segmentOrd);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return currentGlobalOrds.get(segmentOrd);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      long segmentOrd = currentValues.nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.getGlobalOrds(nextLeaf-1).get(segmentOrd);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return currentGlobalOrds.get(segmentOrd);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      long segmentOrd = currentValues.nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return mapping.getGlobalOrds(nextLeaf-1).get(segmentOrd);\n      }\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      long segmentOrd = values[currentSubIndex].nextOrd();\n      if (segmentOrd == NO_MORE_ORDS) {\n        return segmentOrd;\n      } else {\n        return currentGlobalOrds.get(segmentOrd);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b":["ddbb72a33557d2b5bc22ee95daf3281c43560502","9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["5bcfd864fb8b916f7d21f2579d2010a31892055d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["5bcfd864fb8b916f7d21f2579d2010a31892055d"],"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","988e3f44fe797ee94a0135abfe27e5872b99844d"],"5bcfd864fb8b916f7d21f2579d2010a31892055d":["9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"988e3f44fe797ee94a0135abfe27e5872b99844d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5bcfd864fb8b916f7d21f2579d2010a31892055d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ddbb72a33557d2b5bc22ee95daf3281c43560502","988e3f44fe797ee94a0135abfe27e5872b99844d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","5bcfd864fb8b916f7d21f2579d2010a31892055d"],"5bcfd864fb8b916f7d21f2579d2010a31892055d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"988e3f44fe797ee94a0135abfe27e5872b99844d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}