{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RankEvaluator#evaluate(Tuple).mjava","commits":[{"id":"dd6a53b9ba9722b0f89d0f554e8ee0ca56ccd807","date":1494861965,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RankEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval = subEvaluators.get(0);\n\n    List<Number> numbers = (List<Number>)colEval.evaluate(tuple);\n    double[] values = new double[numbers.size()];\n    for(int i=0; i<numbers.size(); i++) {\n      values[i] = numbers.get(i).doubleValue();\n    }\n\n    NaturalRanking rank = new NaturalRanking();\n    double[] ranked = rank.rank(values);\n    List<Number> rankedList = new ArrayList();\n    for(int i=0; i<numbers.size(); i++) {\n      rankedList.add(ranked[i]);\n    }\n\n    return rankedList;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","date":1495081498,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RankEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval = subEvaluators.get(0);\n\n    List<Number> numbers = (List<Number>)colEval.evaluate(tuple);\n    double[] values = new double[numbers.size()];\n    for(int i=0; i<numbers.size(); i++) {\n      values[i] = numbers.get(i).doubleValue();\n    }\n\n    NaturalRanking rank = new NaturalRanking();\n    double[] ranked = rank.rank(values);\n    List<Number> rankedList = new ArrayList();\n    for(int i=0; i<numbers.size(); i++) {\n      rankedList.add(ranked[i]);\n    }\n\n    return rankedList;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12cb83a3f761dc612e1ece020f46e1886fc2550e","date":1495722768,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RankEvaluator#evaluate(Tuple).mjava","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval = subEvaluators.get(0);\n\n    List<Number> numbers = (List<Number>)colEval.evaluate(tuple);\n    double[] values = new double[numbers.size()];\n    for(int i=0; i<numbers.size(); i++) {\n      values[i] = numbers.get(i).doubleValue();\n    }\n\n    NaturalRanking rank = new NaturalRanking();\n    double[] ranked = rank.rank(values);\n    List<Number> rankedList = new ArrayList();\n    for(int i=0; i<numbers.size(); i++) {\n      rankedList.add(ranked[i]);\n    }\n\n    return rankedList;\n  }\n\n","sourceOld":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval = subEvaluators.get(0);\n\n    List<Number> numbers = (List<Number>)colEval.evaluate(tuple);\n    double[] values = new double[numbers.size()];\n    for(int i=0; i<numbers.size(); i++) {\n      values[i] = numbers.get(i).doubleValue();\n    }\n\n    NaturalRanking rank = new NaturalRanking();\n    double[] ranked = rank.rank(values);\n    List<Number> rankedList = new ArrayList();\n    for(int i=0; i<numbers.size(); i++) {\n      rankedList.add(ranked[i]);\n    }\n\n    return rankedList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RankEvaluator#evaluate(Tuple).mjava","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval = subEvaluators.get(0);\n\n    List<Number> numbers = (List<Number>)colEval.evaluate(tuple);\n    double[] values = new double[numbers.size()];\n    for(int i=0; i<numbers.size(); i++) {\n      values[i] = numbers.get(i).doubleValue();\n    }\n\n    NaturalRanking rank = new NaturalRanking();\n    double[] ranked = rank.rank(values);\n    List<Number> rankedList = new ArrayList();\n    for(int i=0; i<numbers.size(); i++) {\n      rankedList.add(ranked[i]);\n    }\n\n    return rankedList;\n  }\n\n","sourceOld":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval = subEvaluators.get(0);\n\n    List<Number> numbers = (List<Number>)colEval.evaluate(tuple);\n    double[] values = new double[numbers.size()];\n    for(int i=0; i<numbers.size(); i++) {\n      values[i] = numbers.get(i).doubleValue();\n    }\n\n    NaturalRanking rank = new NaturalRanking();\n    double[] ranked = rank.rank(values);\n    List<Number> rankedList = new ArrayList();\n    for(int i=0; i<numbers.size(); i++) {\n      rankedList.add(ranked[i]);\n    }\n\n    return rankedList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12cb83a3f761dc612e1ece020f46e1886fc2550e":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dd6a53b9ba9722b0f89d0f554e8ee0ca56ccd807"],"dd6a53b9ba9722b0f89d0f554e8ee0ca56ccd807":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","12cb83a3f761dc612e1ece020f46e1886fc2550e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"12cb83a3f761dc612e1ece020f46e1886fc2550e":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","dd6a53b9ba9722b0f89d0f554e8ee0ca56ccd807"],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["12cb83a3f761dc612e1ece020f46e1886fc2550e","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"dd6a53b9ba9722b0f89d0f554e8ee0ca56ccd807":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}