{"path":"src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","commits":[{"id":"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b","date":1217355237,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.log(Level.WARNING, \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.log(Level.WARNING, \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b"],"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}