{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimClusterStateProvider#SimClusterStateProvider(LiveNodesSet,SimCloudManager).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimClusterStateProvider#SimClusterStateProvider(LiveNodesSet,SimCloudManager).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The instance needs to be initialized using the <code>sim*</code> methods in order\n   * to ensure proper behavior, otherwise it will behave as a cluster with zero replicas.\n   */\n  public SimClusterStateProvider(LiveNodesSet liveNodes, SimCloudManager cloudManager) throws Exception {\n    this.liveNodes = liveNodes;\n    for (String nodeId : liveNodes.get()) {\n      createEphemeralLiveNode(nodeId);\n    }\n    this.cloudManager = cloudManager;\n    this.stateManager = cloudManager.getSimDistribStateManager();\n    this.leaderThrottle = new ActionThrottle(\"leader\", 5000, cloudManager.getTimeSource());\n    // names are CollectionAction operation names, delays are in ms (simulated time)\n    defaultOpDelays.put(CollectionParams.CollectionAction.MOVEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.ADDREPLICA.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.SPLITSHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATE.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETE.name(), 5000L);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4422b331d00607258b0ed3e43934306e67764aa","date":1513943901,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimClusterStateProvider#SimClusterStateProvider(LiveNodesSet,SimCloudManager).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimClusterStateProvider#SimClusterStateProvider(LiveNodesSet,SimCloudManager).mjava","sourceNew":"  /**\n   * The instance needs to be initialized using the <code>sim*</code> methods in order\n   * to ensure proper behavior, otherwise it will behave as a cluster with zero replicas.\n   */\n  public SimClusterStateProvider(LiveNodesSet liveNodes, SimCloudManager cloudManager) throws Exception {\n    this.liveNodes = liveNodes;\n    for (String nodeId : liveNodes.get()) {\n      createEphemeralLiveNode(nodeId);\n    }\n    this.cloudManager = cloudManager;\n    this.stateManager = cloudManager.getSimDistribStateManager();\n    // names are CollectionAction operation names, delays are in ms (simulated time)\n    defaultOpDelays.put(CollectionParams.CollectionAction.MOVEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.ADDREPLICA.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.SPLITSHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATE.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETE.name(), 5000L);\n  }\n\n","sourceOld":"  /**\n   * The instance needs to be initialized using the <code>sim*</code> methods in order\n   * to ensure proper behavior, otherwise it will behave as a cluster with zero replicas.\n   */\n  public SimClusterStateProvider(LiveNodesSet liveNodes, SimCloudManager cloudManager) throws Exception {\n    this.liveNodes = liveNodes;\n    for (String nodeId : liveNodes.get()) {\n      createEphemeralLiveNode(nodeId);\n    }\n    this.cloudManager = cloudManager;\n    this.stateManager = cloudManager.getSimDistribStateManager();\n    this.leaderThrottle = new ActionThrottle(\"leader\", 5000, cloudManager.getTimeSource());\n    // names are CollectionAction operation names, delays are in ms (simulated time)\n    defaultOpDelays.put(CollectionParams.CollectionAction.MOVEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.ADDREPLICA.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.SPLITSHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATE.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETE.name(), 5000L);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimClusterStateProvider#SimClusterStateProvider(LiveNodesSet,SimCloudManager).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimClusterStateProvider#SimClusterStateProvider(LiveNodesSet,SimCloudManager).mjava","sourceNew":"  /**\n   * The instance needs to be initialized using the <code>sim*</code> methods in order\n   * to ensure proper behavior, otherwise it will behave as a cluster with zero replicas.\n   */\n  public SimClusterStateProvider(LiveNodesSet liveNodes, SimCloudManager cloudManager) throws Exception {\n    this.liveNodes = liveNodes;\n    for (String nodeId : liveNodes.get()) {\n      createEphemeralLiveNode(nodeId);\n    }\n    this.cloudManager = cloudManager;\n    this.stateManager = cloudManager.getSimDistribStateManager();\n    // names are CollectionAction operation names, delays are in ms (simulated time)\n    defaultOpDelays.put(CollectionParams.CollectionAction.MOVEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.ADDREPLICA.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.SPLITSHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATE.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETE.name(), 5000L);\n  }\n\n","sourceOld":"  /**\n   * The instance needs to be initialized using the <code>sim*</code> methods in order\n   * to ensure proper behavior, otherwise it will behave as a cluster with zero replicas.\n   */\n  public SimClusterStateProvider(LiveNodesSet liveNodes, SimCloudManager cloudManager) throws Exception {\n    this.liveNodes = liveNodes;\n    for (String nodeId : liveNodes.get()) {\n      createEphemeralLiveNode(nodeId);\n    }\n    this.cloudManager = cloudManager;\n    this.stateManager = cloudManager.getSimDistribStateManager();\n    // names are CollectionAction operation names, delays are in ms (simulated time)\n    defaultOpDelays.put(CollectionParams.CollectionAction.MOVEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETEREPLICA.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.ADDREPLICA.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.SPLITSHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETESHARD.name(), 5000L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.CREATE.name(), 500L);\n    defaultOpDelays.put(CollectionParams.CollectionAction.DELETE.name(), 5000L);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4422b331d00607258b0ed3e43934306e67764aa":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["a4422b331d00607258b0ed3e43934306e67764aa"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"a4422b331d00607258b0ed3e43934306e67764aa":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a4422b331d00607258b0ed3e43934306e67764aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}