{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternCaptureGroupTokenFilter#testRandomString().mjava","commits":[{"id":"40e1523ffd1c98c46180e96f5e5e3612267d09d0","date":1366798864,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternCaptureGroupTokenFilter#testRandomString().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomString() throws Exception {\n    Analyzer a = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName,\n          Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader,\n            MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer,\n            new PatternCaptureGroupTokenFilter(tokenizer, false,\n                Pattern.compile(\"((..)(..))\")));\n      }\n    };\n\n    checkRandomData(random(), a, 1000 * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternCaptureGroupTokenFilter#testRandomString().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternCaptureGroupTokenFilter#testRandomString().mjava","sourceNew":"  public void testRandomString() throws Exception {\n    Analyzer a = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer,\n            new PatternCaptureGroupTokenFilter(tokenizer, false,\n                Pattern.compile(\"((..)(..))\")));\n      }\n    };\n\n    checkRandomData(random(), a, 1000 * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  public void testRandomString() throws Exception {\n    Analyzer a = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName,\n          Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader,\n            MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer,\n            new PatternCaptureGroupTokenFilter(tokenizer, false,\n                Pattern.compile(\"((..)(..))\")));\n      }\n    };\n\n    checkRandomData(random(), a, 1000 * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternCaptureGroupTokenFilter#testRandomString().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternCaptureGroupTokenFilter#testRandomString().mjava","sourceNew":"  public void testRandomString() throws Exception {\n    Analyzer a = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer,\n            new PatternCaptureGroupTokenFilter(tokenizer, false,\n                Pattern.compile(\"((..)(..))\")));\n      }\n    };\n\n    checkRandomData(random(), a, 1000 * RANDOM_MULTIPLIER);\n    a.close();\n  }\n\n","sourceOld":"  public void testRandomString() throws Exception {\n    Analyzer a = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer,\n            new PatternCaptureGroupTokenFilter(tokenizer, false,\n                Pattern.compile(\"((..)(..))\")));\n      }\n    };\n\n    checkRandomData(random(), a, 1000 * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternCaptureGroupTokenFilter#testRandomString().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternCaptureGroupTokenFilter#testRandomString().mjava","sourceNew":"  public void testRandomString() throws Exception {\n    Analyzer a = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer,\n            new PatternCaptureGroupTokenFilter(tokenizer, false,\n                Pattern.compile(\"((..)(..))\")));\n      }\n    };\n\n    checkRandomData(random(), a, 1000 * RANDOM_MULTIPLIER);\n    a.close();\n  }\n\n","sourceOld":"  public void testRandomString() throws Exception {\n    Analyzer a = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer,\n            new PatternCaptureGroupTokenFilter(tokenizer, false,\n                Pattern.compile(\"((..)(..))\")));\n      }\n    };\n\n    checkRandomData(random(), a, 1000 * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","a56958d7f71a28824f20031ffbb2e13502a0274e"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["40e1523ffd1c98c46180e96f5e5e3612267d09d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"40e1523ffd1c98c46180e96f5e5e3612267d09d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40e1523ffd1c98c46180e96f5e5e3612267d09d0"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"40e1523ffd1c98c46180e96f5e5e3612267d09d0":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}