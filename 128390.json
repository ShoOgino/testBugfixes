{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#isTotal(Automaton).mjava","commits":[{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#isTotal(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/BasicOperations#isTotal(LightAutomaton).mjava","sourceNew":"  /**\n   * Returns true if the given automaton accepts all strings.  The automaton must be minimized.\n   */\n  public static boolean isTotal(Automaton a) {\n    if (a.isAccept(0) && a.getNumTransitions(0) == 1) {\n      Transition t = new Transition();\n      a.getTransition(0, 0, t);\n      return t.dest == 0 && t.min == Character.MIN_CODE_POINT\n          && t.max == Character.MAX_CODE_POINT;\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns true if the given automaton accepts all strings.  The automaton must be minimized.\n   */\n  public static boolean isTotal(LightAutomaton a) {\n    if (a.isAccept(0) && a.getNumTransitions(0) == 1) {\n      Transition t = new Transition();\n      a.getTransition(0, 0, t);\n      return t.dest == 0 && t.min == Character.MIN_CODE_POINT\n          && t.max == Character.MAX_CODE_POINT;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#isTotal(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/BasicOperations#isTotal(Automaton).mjava","sourceNew":"  /**\n   * Returns true if the given automaton accepts all strings.  The automaton must be minimized.\n   */\n  public static boolean isTotal(Automaton a) {\n    if (a.isAccept(0) && a.getNumTransitions(0) == 1) {\n      Transition t = new Transition();\n      a.getTransition(0, 0, t);\n      return t.dest == 0 && t.min == Character.MIN_CODE_POINT\n          && t.max == Character.MAX_CODE_POINT;\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns true if the given automaton accepts all strings.\n   */\n  public static boolean isTotal(Automaton a) {\n    if (a.isSingleton()) return false;\n    if (a.initial.accept && a.initial.numTransitions() == 1) {\n      Transition t = a.initial.getTransitions().iterator().next();\n      return t.to == a.initial && t.min == Character.MIN_CODE_POINT\n          && t.max == Character.MAX_CODE_POINT;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0088660bdc1c051f58fbc38626d61ccf22dfd3e0","date":1427444574,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#isTotal(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#isTotal(Automaton).mjava","sourceNew":"  /**\n   * Returns true if the given automaton accepts all strings.  The automaton must be minimized.\n   */\n  public static boolean isTotal(Automaton a) {\n    return isTotal(a, Character.MIN_CODE_POINT, Character.MAX_CODE_POINT);\n  }\n\n","sourceOld":"  /**\n   * Returns true if the given automaton accepts all strings.  The automaton must be minimized.\n   */\n  public static boolean isTotal(Automaton a) {\n    if (a.isAccept(0) && a.getNumTransitions(0) == 1) {\n      Transition t = new Transition();\n      a.getTransition(0, 0, t);\n      return t.dest == 0 && t.min == Character.MIN_CODE_POINT\n          && t.max == Character.MAX_CODE_POINT;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#isTotal(Automaton).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#isTotal(Automaton).mjava","sourceNew":"  /**\n   * Returns true if the given automaton accepts all strings.  The automaton must be minimized.\n   */\n  public static boolean isTotal(Automaton a) {\n    return isTotal(a, Character.MIN_CODE_POINT, Character.MAX_CODE_POINT);\n  }\n\n","sourceOld":"  /**\n   * Returns true if the given automaton accepts all strings.  The automaton must be minimized.\n   */\n  public static boolean isTotal(Automaton a) {\n    if (a.isAccept(0) && a.getNumTransitions(0) == 1) {\n      Transition t = new Transition();\n      a.getTransition(0, 0, t);\n      return t.dest == 0 && t.min == Character.MIN_CODE_POINT\n          && t.max == Character.MAX_CODE_POINT;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["5c84485629d80d203608e8975a1139de9933cc38","0088660bdc1c051f58fbc38626d61ccf22dfd3e0"],"0088660bdc1c051f58fbc38626d61ccf22dfd3e0":["5c84485629d80d203608e8975a1139de9933cc38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5c84485629d80d203608e8975a1139de9933cc38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0088660bdc1c051f58fbc38626d61ccf22dfd3e0"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0088660bdc1c051f58fbc38626d61ccf22dfd3e0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0088660bdc1c051f58fbc38626d61ccf22dfd3e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}