{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,IOContext,IntStreamFactory,int).mjava","commits":[{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,IOContext,IntStreamFactory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,int,IntStreamFactory,int).mjava","sourceNew":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, IOContext context, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName, context);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), context);\n\n      if (segmentInfo.getHasProx()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION), context);\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), context);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), context);\n      } else {\n        posIn = null;\n        payloadIn = null;\n        freqIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","sourceOld":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, int readBufferSize, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), readBufferSize);\n\n      if (segmentInfo.getHasProx()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION));\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), readBufferSize);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), readBufferSize);\n      } else {\n        posIn = null;\n        payloadIn = null;\n        freqIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,IOContext,IntStreamFactory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,int,IntStreamFactory,int).mjava","sourceNew":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, IOContext context, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName, context);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), context);\n\n      if (segmentInfo.getHasProx()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION), context);\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), context);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), context);\n      } else {\n        posIn = null;\n        payloadIn = null;\n        freqIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","sourceOld":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, int readBufferSize, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), readBufferSize);\n\n      if (segmentInfo.getHasProx()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION));\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), readBufferSize);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), readBufferSize);\n      } else {\n        posIn = null;\n        payloadIn = null;\n        freqIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,IOContext,IntStreamFactory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,int,IntStreamFactory,int).mjava","sourceNew":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, IOContext context, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName, context);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), context);\n\n      if (segmentInfo.getHasProx()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION), context);\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), context);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), context);\n      } else {\n        posIn = null;\n        payloadIn = null;\n        freqIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","sourceOld":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, int readBufferSize, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), readBufferSize);\n\n      if (segmentInfo.getHasProx()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION));\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), readBufferSize);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), readBufferSize);\n      } else {\n        posIn = null;\n        payloadIn = null;\n        freqIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,IOContext,IntStreamFactory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,IOContext,IntStreamFactory,int).mjava","sourceNew":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, IOContext context, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName, context);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), context);\n\n      if (segmentInfo.getFieldInfos().hasFreq()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION), context);        \n      } else {\n        freqIn = null;\n      }\n      if (segmentInfo.getHasProx()) {\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), context);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), context);\n      } else {\n        posIn = null;\n        payloadIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","sourceOld":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, IOContext context, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName, context);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), context);\n\n      if (segmentInfo.getHasProx()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION), context);\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), context);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), context);\n      } else {\n        posIn = null;\n        payloadIn = null;\n        freqIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#SepPostingsReader(Directory,SegmentInfo,IOContext,IntStreamFactory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#SepPostingsReaderImpl(Directory,SegmentInfo,IOContext,IntStreamFactory,int).mjava","sourceNew":"  public SepPostingsReader(Directory dir, SegmentInfo segmentInfo, IOContext context, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriter.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName, context);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriter.SKIP_EXTENSION), context);\n\n      if (segmentInfo.getFieldInfos().hasFreq()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriter.FREQ_EXTENSION), context);        \n      } else {\n        freqIn = null;\n      }\n      if (segmentInfo.getHasProx()) {\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriter.POS_EXTENSION), context);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriter.PAYLOAD_EXTENSION), context);\n      } else {\n        posIn = null;\n        payloadIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","sourceOld":"  public SepPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, IOContext context, IntStreamFactory intFactory, int codecId) throws IOException {\n    boolean success = false;\n    try {\n\n      final String docFileName = IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.DOC_EXTENSION);\n      docIn = intFactory.openInput(dir, docFileName, context);\n\n      skipIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.SKIP_EXTENSION), context);\n\n      if (segmentInfo.getFieldInfos().hasFreq()) {\n        freqIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.FREQ_EXTENSION), context);        \n      } else {\n        freqIn = null;\n      }\n      if (segmentInfo.getHasProx()) {\n        posIn = intFactory.openInput(dir, IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.POS_EXTENSION), context);\n        payloadIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, codecId, SepPostingsWriterImpl.PAYLOAD_EXTENSION), context);\n      } else {\n        posIn = null;\n        payloadIn = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}