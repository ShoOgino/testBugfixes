{"path":"solr/core/src/java/org/apache/solr/handler/CdcrReplicator#isTargetCluster(Object).mjava","commits":[{"id":"e7da9d8536c11576df10e348efa79d2739170936","date":1509475399,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrReplicator#isTargetCluster(Object).mjava","pathOld":"/dev/null","sourceNew":"  /** check whether the update read from TLog is received from source\n   *  or received via solr client\n   */\n  private boolean isTargetCluster(Object o) {\n    List entry = (List) o;\n    int operationAndFlags = (Integer) entry.get(0);\n    int oper = operationAndFlags & UpdateLog.OPERATION_MASK;\n    Boolean isTarget = false;\n    if (oper == UpdateLog.DELETE_BY_QUERY ||  oper == UpdateLog.DELETE) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 1);\n      }\n    } else if (oper == UpdateLog.UPDATE_INPLACE) {\n      if (entry.size() == 6) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    } else if (oper == UpdateLog.ADD) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    }\n    return isTarget;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","date":1509475828,"type":4,"author":"Varun Thacker","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrReplicator#isTargetCluster(Object).mjava","sourceNew":null,"sourceOld":"  /** check whether the update read from TLog is received from source\n   *  or received via solr client\n   */\n  private boolean isTargetCluster(Object o) {\n    List entry = (List) o;\n    int operationAndFlags = (Integer) entry.get(0);\n    int oper = operationAndFlags & UpdateLog.OPERATION_MASK;\n    Boolean isTarget = false;\n    if (oper == UpdateLog.DELETE_BY_QUERY ||  oper == UpdateLog.DELETE) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 1);\n      }\n    } else if (oper == UpdateLog.UPDATE_INPLACE) {\n      if (entry.size() == 6) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    } else if (oper == UpdateLog.ADD) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    }\n    return isTarget;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","date":1509748659,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrReplicator#isTargetCluster(Object).mjava","pathOld":"/dev/null","sourceNew":"  /** check whether the update read from TLog is received from source\n   *  or received via solr client\n   */\n  private boolean isTargetCluster(Object o) {\n    List entry = (List) o;\n    int operationAndFlags = (Integer) entry.get(0);\n    int oper = operationAndFlags & UpdateLog.OPERATION_MASK;\n    Boolean isTarget = false;\n    if (oper == UpdateLog.DELETE_BY_QUERY ||  oper == UpdateLog.DELETE) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 1);\n      }\n    } else if (oper == UpdateLog.UPDATE_INPLACE) {\n      if (entry.size() == 6) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    } else if (oper == UpdateLog.ADD) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    }\n    return isTarget;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrReplicator#isTargetCluster(Object).mjava","pathOld":"/dev/null","sourceNew":"  /** check whether the update read from TLog is received from source\n   *  or received via solr client\n   */\n  private boolean isTargetCluster(Object o) {\n    List entry = (List) o;\n    int operationAndFlags = (Integer) entry.get(0);\n    int oper = operationAndFlags & UpdateLog.OPERATION_MASK;\n    Boolean isTarget = false;\n    if (oper == UpdateLog.DELETE_BY_QUERY ||  oper == UpdateLog.DELETE) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 1);\n      }\n    } else if (oper == UpdateLog.UPDATE_INPLACE) {\n      if (entry.size() == 6) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    } else if (oper == UpdateLog.ADD) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    }\n    return isTarget;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5","date":1591384964,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrReplicator#isTargetCluster(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrReplicator#isTargetCluster(Object).mjava","sourceNew":"  /** check whether the update read from TLog is received from source\n   *  or received via solr client\n   */\n  private boolean isTargetCluster(Object o) {\n    @SuppressWarnings({\"rawtypes\"})\n    List entry = (List) o;\n    int operationAndFlags = (Integer) entry.get(0);\n    int oper = operationAndFlags & UpdateLog.OPERATION_MASK;\n    Boolean isTarget = false;\n    if (oper == UpdateLog.DELETE_BY_QUERY ||  oper == UpdateLog.DELETE) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 1);\n      }\n    } else if (oper == UpdateLog.UPDATE_INPLACE) {\n      if (entry.size() == 6) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    } else if (oper == UpdateLog.ADD) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    }\n    return isTarget;\n  }\n\n","sourceOld":"  /** check whether the update read from TLog is received from source\n   *  or received via solr client\n   */\n  private boolean isTargetCluster(Object o) {\n    List entry = (List) o;\n    int operationAndFlags = (Integer) entry.get(0);\n    int oper = operationAndFlags & UpdateLog.OPERATION_MASK;\n    Boolean isTarget = false;\n    if (oper == UpdateLog.DELETE_BY_QUERY ||  oper == UpdateLog.DELETE) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 1);\n      }\n    } else if (oper == UpdateLog.UPDATE_INPLACE) {\n      if (entry.size() == 6) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    } else if (oper == UpdateLog.ADD) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    }\n    return isTarget;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrReplicator#isTargetCluster(Object).mjava","sourceNew":null,"sourceOld":"  /** check whether the update read from TLog is received from source\n   *  or received via solr client\n   */\n  private boolean isTargetCluster(Object o) {\n    @SuppressWarnings({\"rawtypes\"})\n    List entry = (List) o;\n    int operationAndFlags = (Integer) entry.get(0);\n    int oper = operationAndFlags & UpdateLog.OPERATION_MASK;\n    Boolean isTarget = false;\n    if (oper == UpdateLog.DELETE_BY_QUERY ||  oper == UpdateLog.DELETE) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 1);\n      }\n    } else if (oper == UpdateLog.UPDATE_INPLACE) {\n      if (entry.size() == 6) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    } else if (oper == UpdateLog.ADD) {\n      if (entry.size() == 4) { //back-combat - skip for previous versions\n        isTarget = (Boolean) entry.get(entry.size() - 2);\n      }\n    }\n    return isTarget;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"e7da9d8536c11576df10e348efa79d2739170936":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","fba58147c9753bb58bbfbd2ebbbf02aecc1eafde"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["e7da9d8536c11576df10e348efa79d2739170936"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"e7da9d8536c11576df10e348efa79d2739170936":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7da9d8536c11576df10e348efa79d2739170936"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}