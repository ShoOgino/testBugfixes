{"path":"src/test/org/apache/solr/TestDistributedSearch#compare(Object,Object,int,Map[String,Integer]).mjava","commits":[{"id":"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76","date":1204055227,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/TestDistributedSearch#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"/dev/null","sourceNew":"  static String compare(Object a, Object b, int flags, Map<String,Integer> handle) {\n    if (a==b) return null;\n    if (a==null || b==null) return \":\" +a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList)a, (NamedList)b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList)a, (SolrDocumentList)b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument)a, (SolrDocument)b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map)a, (Map)b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[])a, (Object[])b, flags, handle);\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da0acfe5ceed804451d76c8f887855b3d060e132","date":1208287358,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/TestDistributedSearch#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"src/test/org/apache/solr/TestDistributedSearch#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  static String compare(Object a, Object b, int flags, Map<String,Integer> handle) {\n    if (a==b) return null;\n    if (a==null || b==null) return \":\" +a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList)a, (NamedList)b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList)a, (SolrDocumentList)b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument)a, (SolrDocument)b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map)a, (Map)b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[])a, (Object[])b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[])a, (byte[])b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List)a).toArray(), ((List)b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  static String compare(Object a, Object b, int flags, Map<String,Integer> handle) {\n    if (a==b) return null;\n    if (a==null || b==null) return \":\" +a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList)a, (NamedList)b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList)a, (SolrDocumentList)b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument)a, (SolrDocument)b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map)a, (Map)b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[])a, (Object[])b, flags, handle);\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b57d1523f42368168ea21982dd84effd69453d3","date":1260216800,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"src/test/org/apache/solr/TestDistributedSearch#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  static String compare(Object a, Object b, int flags, Map<String,Integer> handle) {\n    if (a==b) return null;\n    if (a==null || b==null) return \":\" +a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList)a, (NamedList)b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList)a, (SolrDocumentList)b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument)a, (SolrDocument)b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map)a, (Map)b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[])a, (Object[])b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[])a, (byte[])b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List)a).toArray(), ((List)b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":["d1c5c000a4f7db9f84794088342aa428d80dfa37","d1c5c000a4f7db9f84794088342aa428d80dfa37","d1c5c000a4f7db9f84794088342aa428d80dfa37"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"da0acfe5ceed804451d76c8f887855b3d060e132":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"0b57d1523f42368168ea21982dd84effd69453d3":["da0acfe5ceed804451d76c8f887855b3d060e132"],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"da0acfe5ceed804451d76c8f887855b3d060e132":["0b57d1523f42368168ea21982dd84effd69453d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"0b57d1523f42368168ea21982dd84effd69453d3":[],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["da0acfe5ceed804451d76c8f887855b3d060e132"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0b57d1523f42368168ea21982dd84effd69453d3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}