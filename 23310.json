{"path":"lucene/core/src/java/org/apache/lucene/document/Document#removeField(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Document#removeField(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Document#removeField(String).mjava","sourceNew":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<IndexableField> it = fields.iterator();\n    while (it.hasNext()) {\n      IndexableField field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<IndexableField> it = fields.iterator();\n    while (it.hasNext()) {\n      IndexableField field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Document#removeField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Document#removeField(String).mjava","sourceNew":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<Field> it = fields.iterator();\n    while (it.hasNext()) {\n      Field field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<IndexableField> it = fields.iterator();\n    while (it.hasNext()) {\n      IndexableField field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Document#removeField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Document#removeField(String).mjava","sourceNew":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<Field> it = fields.iterator();\n    while (it.hasNext()) {\n      Field field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<IndexableField> it = fields.iterator();\n    while (it.hasNext()) {\n      IndexableField field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Document#removeField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Document#removeField(String).mjava","sourceNew":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<IndexableField> it = fields.iterator();\n    while (it.hasNext()) {\n      IndexableField field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<Field> it = fields.iterator();\n    while (it.hasNext()) {\n      Field field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d028314cced5858683a1bb4741423d0f934257b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["1d028314cced5858683a1bb4741423d0f934257b"]},"commit2Childs":{"1d028314cced5858683a1bb4741423d0f934257b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["1d028314cced5858683a1bb4741423d0f934257b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1d028314cced5858683a1bb4741423d0f934257b","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}