{"path":"lucene/core/src/test/org/apache/lucene/search/TermInSetQueryTest.TermsCountingDirectoryReaderWrapper.TermsCountingLeafReaderWrapper#fields().mjava","commits":[{"id":"8d73510b39df24d6b65de48e56f8dccb136b9d01","date":1483971905,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TermInSetQueryTest.TermsCountingDirectoryReaderWrapper.TermsCountingLeafReaderWrapper#fields().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TermsQueryTest.TermsCountingDirectoryReaderWrapper.TermsCountingLeafReaderWrapper#fields().mjava","sourceNew":"      @Override\n      public Fields fields() throws IOException {\n        return new FilterFields(in.fields()) {\n          @Override\n          public Terms terms(String field) throws IOException {\n            final Terms in = this.in.terms(field);\n            if (in == null) {\n              return null;\n            }\n            return new FilterTerms(in) {\n              @Override\n              public TermsEnum iterator() throws IOException {\n                counter.incrementAndGet();\n                return super.iterator();\n              }\n            };\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public Fields fields() throws IOException {\n        return new FilterFields(in.fields()) {\n          @Override\n          public Terms terms(String field) throws IOException {\n            final Terms in = this.in.terms(field);\n            if (in == null) {\n              return null;\n            }\n            return new FilterTerms(in) {\n              @Override\n              public TermsEnum iterator() throws IOException {\n                counter.incrementAndGet();\n                return super.iterator();\n              }\n            };\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TermInSetQueryTest.TermsCountingDirectoryReaderWrapper.TermsCountingLeafReaderWrapper#fields().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TermsQueryTest.TermsCountingDirectoryReaderWrapper.TermsCountingLeafReaderWrapper#fields().mjava","sourceNew":"      @Override\n      public Fields fields() throws IOException {\n        return new FilterFields(in.fields()) {\n          @Override\n          public Terms terms(String field) throws IOException {\n            final Terms in = this.in.terms(field);\n            if (in == null) {\n              return null;\n            }\n            return new FilterTerms(in) {\n              @Override\n              public TermsEnum iterator() throws IOException {\n                counter.incrementAndGet();\n                return super.iterator();\n              }\n            };\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public Fields fields() throws IOException {\n        return new FilterFields(in.fields()) {\n          @Override\n          public Terms terms(String field) throws IOException {\n            final Terms in = this.in.terms(field);\n            if (in == null) {\n              return null;\n            }\n            return new FilterTerms(in) {\n              @Override\n              public TermsEnum iterator() throws IOException {\n                counter.incrementAndGet();\n                return super.iterator();\n              }\n            };\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b6f36bb733c575dd04fdfa785127ebf82b0033f","date":1497502741,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TermInSetQueryTest.TermsCountingDirectoryReaderWrapper.TermsCountingLeafReaderWrapper#fields().mjava","sourceNew":null,"sourceOld":"      @Override\n      public Fields fields() throws IOException {\n        return new FilterFields(in.fields()) {\n          @Override\n          public Terms terms(String field) throws IOException {\n            final Terms in = this.in.terms(field);\n            if (in == null) {\n              return null;\n            }\n            return new FilterTerms(in) {\n              @Override\n              public TermsEnum iterator() throws IOException {\n                counter.incrementAndGet();\n                return super.iterator();\n              }\n            };\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TermInSetQueryTest.TermsCountingDirectoryReaderWrapper.TermsCountingLeafReaderWrapper#fields().mjava","sourceNew":null,"sourceOld":"      @Override\n      public Fields fields() throws IOException {\n        return new FilterFields(in.fields()) {\n          @Override\n          public Terms terms(String field) throws IOException {\n            final Terms in = this.in.terms(field);\n            if (in == null) {\n              return null;\n            }\n            return new FilterTerms(in) {\n              @Override\n              public TermsEnum iterator() throws IOException {\n                counter.incrementAndGet();\n                return super.iterator();\n              }\n            };\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TermInSetQueryTest.TermsCountingDirectoryReaderWrapper.TermsCountingLeafReaderWrapper#fields().mjava","sourceNew":null,"sourceOld":"      @Override\n      public Fields fields() throws IOException {\n        return new FilterFields(in.fields()) {\n          @Override\n          public Terms terms(String field) throws IOException {\n            final Terms in = this.in.terms(field);\n            if (in == null) {\n              return null;\n            }\n            return new FilterTerms(in) {\n              @Override\n              public TermsEnum iterator() throws IOException {\n                counter.incrementAndGet();\n                return super.iterator();\n              }\n            };\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["8d73510b39df24d6b65de48e56f8dccb136b9d01"],"8d73510b39df24d6b65de48e56f8dccb136b9d01":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8d73510b39df24d6b65de48e56f8dccb136b9d01"],"28288370235ed02234a64753cdbf0c6ec096304a":["8d73510b39df24d6b65de48e56f8dccb136b9d01","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["8d73510b39df24d6b65de48e56f8dccb136b9d01","2b6f36bb733c575dd04fdfa785127ebf82b0033f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8d73510b39df24d6b65de48e56f8dccb136b9d01","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"2b6f36bb733c575dd04fdfa785127ebf82b0033f":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"8d73510b39df24d6b65de48e56f8dccb136b9d01":["2b6f36bb733c575dd04fdfa785127ebf82b0033f","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}