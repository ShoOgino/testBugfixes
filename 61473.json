{"path":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","commits":[{"id":"568a645b11ac7a39e75da7b1cbea441a16e47635","date":1345226141,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRef scratch) {\n    final int charLimit = s.length();\n    scratch.grow(charLimit);\n    int idx = 0;\n    while(idx < charLimit) {\n      scratch.ints[idx] = (int) s.charAt(idx);\n      idx++;\n    }\n    scratch.offset = 0;\n    scratch.length = idx;\n    return scratch;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27cbdd6eaf81f9fada7736ab457efbd65b1d9271","date":1345226378,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","sourceNew":null,"sourceOld":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRef scratch) {\n    final int charLimit = s.length();\n    scratch.grow(charLimit);\n    int idx = 0;\n    while(idx < charLimit) {\n      scratch.ints[idx] = (int) s.charAt(idx);\n      idx++;\n    }\n    scratch.offset = 0;\n    scratch.length = idx;\n    return scratch;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfa2e3018325e8460563f18bd453cb779254c5f0","date":1345227284,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRef scratch) {\n    final int charLimit = s.length();\n    scratch.grow(charLimit);\n    int idx = 0;\n    while(idx < charLimit) {\n      scratch.ints[idx] = (int) s.charAt(idx);\n      idx++;\n    }\n    scratch.offset = 0;\n    scratch.length = idx;\n    return scratch;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92c7abbc12ce5842e673bbcb631b18d715b0dbf2","date":1345236376,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","sourceNew":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRef scratch) {\n    final int charLimit = s.length();\n    scratch.offset = 0;\n    scratch.length = charLimit;\n    scratch.grow(charLimit);\n    for (int idx = 0; idx < charLimit; idx++) {\n      scratch.ints[idx] = (int) s.charAt(idx);\n    }\n    return scratch;\n  }    \n\n","sourceOld":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRef scratch) {\n    final int charLimit = s.length();\n    scratch.grow(charLimit);\n    int idx = 0;\n    while(idx < charLimit) {\n      scratch.ints[idx] = (int) s.charAt(idx);\n      idx++;\n    }\n    scratch.offset = 0;\n    scratch.length = idx;\n    return scratch;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRef scratch) {\n    final int charLimit = s.length();\n    scratch.offset = 0;\n    scratch.length = charLimit;\n    scratch.grow(charLimit);\n    for (int idx = 0; idx < charLimit; idx++) {\n      scratch.ints[idx] = (int) s.charAt(idx);\n    }\n    return scratch;\n  }    \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRef scratch) {\n    final int charLimit = s.length();\n    scratch.offset = 0;\n    scratch.length = charLimit;\n    scratch.grow(charLimit);\n    for (int idx = 0; idx < charLimit; idx++) {\n      scratch.ints[idx] = (int) s.charAt(idx);\n    }\n    return scratch;\n  }    \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRefBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util#toUTF16(CharSequence,IntsRef).mjava","sourceNew":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRefBuilder scratch) {\n    final int charLimit = s.length();\n    scratch.setLength(charLimit);\n    scratch.grow(charLimit);\n    for (int idx = 0; idx < charLimit; idx++) {\n      scratch.setIntAt(idx, (int) s.charAt(idx));\n    }\n    return scratch.get();\n  }    \n\n","sourceOld":"  /** Just maps each UTF16 unit (char) to the ints in an\n   *  IntsRef. */\n  public static IntsRef toUTF16(CharSequence s, IntsRef scratch) {\n    final int charLimit = s.length();\n    scratch.offset = 0;\n    scratch.length = charLimit;\n    scratch.grow(charLimit);\n    for (int idx = 0; idx < charLimit; idx++) {\n      scratch.ints[idx] = (int) s.charAt(idx);\n    }\n    return scratch;\n  }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"568a645b11ac7a39e75da7b1cbea441a16e47635":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"92c7abbc12ce5842e673bbcb631b18d715b0dbf2":["cfa2e3018325e8460563f18bd453cb779254c5f0"],"cfa2e3018325e8460563f18bd453cb779254c5f0":["27cbdd6eaf81f9fada7736ab457efbd65b1d9271"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","92c7abbc12ce5842e673bbcb631b18d715b0dbf2"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","92c7abbc12ce5842e673bbcb631b18d715b0dbf2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["92c7abbc12ce5842e673bbcb631b18d715b0dbf2"],"27cbdd6eaf81f9fada7736ab457efbd65b1d9271":["568a645b11ac7a39e75da7b1cbea441a16e47635"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"568a645b11ac7a39e75da7b1cbea441a16e47635":["27cbdd6eaf81f9fada7736ab457efbd65b1d9271"],"92c7abbc12ce5842e673bbcb631b18d715b0dbf2":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cfa2e3018325e8460563f18bd453cb779254c5f0":["92c7abbc12ce5842e673bbcb631b18d715b0dbf2"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["568a645b11ac7a39e75da7b1cbea441a16e47635","616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"27cbdd6eaf81f9fada7736ab457efbd65b1d9271":["cfa2e3018325e8460563f18bd453cb779254c5f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}