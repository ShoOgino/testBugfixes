{"path":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getInsanityWrapper(String,Collector).mjava","commits":[{"id":"7de000bbb5f66603221a528f0fe972afe72a6b97","date":1483586729,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getInsanityWrapper(String,Collector).mjava","pathOld":"/dev/null","sourceNew":"  private Collector getInsanityWrapper(final String field, Collector collector) {\n    SchemaField sf = searcher.getSchema().getFieldOrNull(field);\n    if (sf != null && !sf.hasDocValues() && !sf.multiValued() && sf.getType().getNumericType() != null) {\n      // it's a single-valued numeric field: we must currently create insanity :(\n      // there isn't a GroupedFacetCollector that works on numerics right now...\n      return new FilterCollector(collector) {\n        @Override\n        public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n          LeafReader insane = Insanity.wrapInsanity(context.reader(), field);\n          return in.getLeafCollector(insane.getContext());\n        }\n      };\n    } else {\n      return collector;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getInsanityWrapper(String,Collector).mjava","pathOld":"/dev/null","sourceNew":"  private Collector getInsanityWrapper(final String field, Collector collector) {\n    SchemaField sf = searcher.getSchema().getFieldOrNull(field);\n    if (sf != null && !sf.hasDocValues() && !sf.multiValued() && sf.getType().getNumericType() != null) {\n      // it's a single-valued numeric field: we must currently create insanity :(\n      // there isn't a GroupedFacetCollector that works on numerics right now...\n      return new FilterCollector(collector) {\n        @Override\n        public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n          LeafReader insane = Insanity.wrapInsanity(context.reader(), field);\n          return in.getLeafCollector(insane.getContext());\n        }\n      };\n    } else {\n      return collector;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d81baa64023bbb9b43f6d929ee168b105940d30","date":1486492702,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getInsanityWrapper(String,Collector).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getInsanityWrapper(String,Collector).mjava","sourceNew":"  private Collector getInsanityWrapper(final String field, Collector collector) {\n    SchemaField sf = searcher.getSchema().getFieldOrNull(field);\n    if (sf != null && !sf.hasDocValues() && !sf.multiValued() && sf.getType().getNumberType() != null) {\n      // it's a single-valued numeric field: we must currently create insanity :(\n      // there isn't a GroupedFacetCollector that works on numerics right now...\n      return new FilterCollector(collector) {\n        @Override\n        public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n          LeafReader insane = Insanity.wrapInsanity(context.reader(), field);\n          return in.getLeafCollector(insane.getContext());\n        }\n      };\n    } else {\n      return collector;\n    }\n  }\n\n","sourceOld":"  private Collector getInsanityWrapper(final String field, Collector collector) {\n    SchemaField sf = searcher.getSchema().getFieldOrNull(field);\n    if (sf != null && !sf.hasDocValues() && !sf.multiValued() && sf.getType().getNumericType() != null) {\n      // it's a single-valued numeric field: we must currently create insanity :(\n      // there isn't a GroupedFacetCollector that works on numerics right now...\n      return new FilterCollector(collector) {\n        @Override\n        public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n          LeafReader insane = Insanity.wrapInsanity(context.reader(), field);\n          return in.getLeafCollector(insane.getContext());\n        }\n      };\n    } else {\n      return collector;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3d81baa64023bbb9b43f6d929ee168b105940d30":["7de000bbb5f66603221a528f0fe972afe72a6b97"],"7de000bbb5f66603221a528f0fe972afe72a6b97":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3d81baa64023bbb9b43f6d929ee168b105940d30"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7de000bbb5f66603221a528f0fe972afe72a6b97"]},"commit2Childs":{"3d81baa64023bbb9b43f6d929ee168b105940d30":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7de000bbb5f66603221a528f0fe972afe72a6b97":["3d81baa64023bbb9b43f6d929ee168b105940d30","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7de000bbb5f66603221a528f0fe972afe72a6b97","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}