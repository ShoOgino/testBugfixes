{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdownNow().mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdownNow().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#shutdownNow().mjava","sourceNew":"  public void shutdownNow() {\n    client.shutdown();\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); // Cancel currently executing tasks\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n\n","sourceOld":"  public void shutdownNow() {\n    server.shutdown();\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); // Cancel currently executing tasks\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d519fd6bb2f1e455826e1d7975e002606e1da23","date":1422448098,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdownNow().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdownNow().mjava","sourceNew":"  public void shutdownNow() {\n    IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); // Cancel currently executing tasks\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n\n","sourceOld":"  public void shutdownNow() {\n    client.shutdown();\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); // Cancel currently executing tasks\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n\n","bugFix":null,"bugIntro":["b339788267eb30c612687451d431b6120c4289f4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b339788267eb30c612687451d431b6120c4289f4","date":1452619067,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdownNow().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdownNow().mjava","sourceNew":"  public void shutdownNow() {\n    if (internalHttpClient) IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); // Cancel currently executing tasks\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n\n","sourceOld":"  public void shutdownNow() {\n    IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); // Cancel currently executing tasks\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n\n","bugFix":["7d519fd6bb2f1e455826e1d7975e002606e1da23"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7ca1cace44c816965501b934686a2354382f000","date":1487792658,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdownNow().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdownNow().mjava","sourceNew":"  public void shutdownNow() {\n    if (closed) {\n      return;\n    }\n    closed = true;\n    try {\n\n      if (shutdownExecutor) {\n        scheduler.shutdown();\n        interruptRunnerThreadsPolling();\n        scheduler.shutdownNow(); // Cancel currently executing tasks\n        try {\n          if (!scheduler.awaitTermination(30, TimeUnit.SECONDS))\n            log.error(\"ExecutorService did not terminate\");\n        } catch (InterruptedException ie) {\n          scheduler.shutdownNow();\n          Thread.currentThread().interrupt();\n        }\n      } else {\n        interruptRunnerThreadsPolling();\n      }\n    } finally {\n      if (internalHttpClient) IOUtils.closeQuietly(client);\n    }\n  }\n\n","sourceOld":"  public void shutdownNow() {\n    if (internalHttpClient) IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); // Cancel currently executing tasks\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b339788267eb30c612687451d431b6120c4289f4":["7d519fd6bb2f1e455826e1d7975e002606e1da23"],"7d519fd6bb2f1e455826e1d7975e002606e1da23":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7ca1cace44c816965501b934686a2354382f000":["b339788267eb30c612687451d431b6120c4289f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7ca1cace44c816965501b934686a2354382f000"]},"commit2Childs":{"b339788267eb30c612687451d431b6120c4289f4":["c7ca1cace44c816965501b934686a2354382f000"],"7d519fd6bb2f1e455826e1d7975e002606e1da23":["b339788267eb30c612687451d431b6120c4289f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["7d519fd6bb2f1e455826e1d7975e002606e1da23"],"c7ca1cace44c816965501b934686a2354382f000":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}