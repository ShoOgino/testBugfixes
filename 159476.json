{"path":"solr/core/src/java/org/apache/solr/search/SolrCache#computeIfAbsent(K,Function[#-super-K,#-extends-V]).mjava","commits":[{"id":"bfa27be7bde9d711ce2b418fadc555654849383f","date":1573652589,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrCache#computeIfAbsent(K,Function[#-super-K,#-extends-V]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get an existing element or atomically compute it if missing.\n   * @param key key\n   * @param mappingFunction function to compute the element. If the function returns a null\n   *                        result the cache mapping will not be created. NOTE: this function\n   *                        must NOT attempt to modify any mappings in the cache.\n   * @return existing or newly computed value, null if there was no existing value and\n   * it was not possible to compute a new value (in which case the new mapping won't be created).\n   */\n  public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfa27be7bde9d711ce2b418fadc555654849383f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bfa27be7bde9d711ce2b418fadc555654849383f"]},"commit2Childs":{"bfa27be7bde9d711ce2b418fadc555654849383f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bfa27be7bde9d711ce2b418fadc555654849383f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}