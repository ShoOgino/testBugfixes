{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","sourceNew":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","sourceOld":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","sourceNew":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","sourceOld":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","sourceNew":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","sourceOld":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}