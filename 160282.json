{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer#r_adjectival().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer#r_adjectival().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/RussianStemmer#r_adjectival().mjava","sourceNew":"        private boolean r_adjectival() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 101\n            // call adjective, line 102\n            if (!r_adjective())\n            {\n                return false;\n            }\n            // try, line 109\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 109\n                // [, line 110\n                ket = cursor;\n                // substring, line 110\n                among_var = find_among_b(a_2, 8);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 110\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 115\n                        // or, line 115\n                        lab1: do {\n                            v_2 = limit - cursor;\n                            lab2: do {\n                                // literal, line 115\n                                if (!(eq_s_b(1, \"\\u0430\")))\n                                {\n                                    break lab2;\n                                }\n                                break lab1;\n                            } while (false);\n                            cursor = limit - v_2;\n                            // literal, line 115\n                            if (!(eq_s_b(1, \"\\u044F\")))\n                            {\n                                cursor = limit - v_1;\n                                break lab0;\n                            }\n                        } while (false);\n                        // delete, line 115\n                        slice_del();\n                        break;\n                    case 2:\n                        // (, line 122\n                        // delete, line 122\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        private boolean r_adjectival() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 101\n            // call adjective, line 102\n            if (!r_adjective())\n            {\n                return false;\n            }\n            // try, line 109\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 109\n                // [, line 110\n                ket = cursor;\n                // substring, line 110\n                among_var = find_among_b(a_2, 8);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 110\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 115\n                        // or, line 115\n                        lab1: do {\n                            v_2 = limit - cursor;\n                            lab2: do {\n                                // literal, line 115\n                                if (!(eq_s_b(1, \"\\u0430\")))\n                                {\n                                    break lab2;\n                                }\n                                break lab1;\n                            } while (false);\n                            cursor = limit - v_2;\n                            // literal, line 115\n                            if (!(eq_s_b(1, \"\\u044F\")))\n                            {\n                                cursor = limit - v_1;\n                                break lab0;\n                            }\n                        } while (false);\n                        // delete, line 115\n                        slice_del();\n                        break;\n                    case 2:\n                        // (, line 122\n                        // delete, line 122\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer#r_adjectival().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer#r_adjectival().mjava","sourceNew":"        private boolean r_adjectival() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 101\n            // call adjective, line 102\n            if (!r_adjective())\n            {\n                return false;\n            }\n            // try, line 109\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 109\n                // [, line 110\n                ket = cursor;\n                // substring, line 110\n                among_var = find_among_b(a_2, 8);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 110\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 115\n                        // or, line 115\n                        lab1: do {\n                            v_2 = limit - cursor;\n                            lab2: do {\n                                // literal, line 115\n                                if (!(eq_s_b(1, \"\\u0430\")))\n                                {\n                                    break lab2;\n                                }\n                                break lab1;\n                            } while (false);\n                            cursor = limit - v_2;\n                            // literal, line 115\n                            if (!(eq_s_b(1, \"\\u044F\")))\n                            {\n                                cursor = limit - v_1;\n                                break lab0;\n                            }\n                        } while (false);\n                        // delete, line 115\n                        slice_del();\n                        break;\n                    case 2:\n                        // (, line 122\n                        // delete, line 122\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        private boolean r_adjectival() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 101\n            // call adjective, line 102\n            if (!r_adjective())\n            {\n                return false;\n            }\n            // try, line 109\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 109\n                // [, line 110\n                ket = cursor;\n                // substring, line 110\n                among_var = find_among_b(a_2, 8);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 110\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 115\n                        // or, line 115\n                        lab1: do {\n                            v_2 = limit - cursor;\n                            lab2: do {\n                                // literal, line 115\n                                if (!(eq_s_b(1, \"\\u0430\")))\n                                {\n                                    break lab2;\n                                }\n                                break lab1;\n                            } while (false);\n                            cursor = limit - v_2;\n                            // literal, line 115\n                            if (!(eq_s_b(1, \"\\u044F\")))\n                            {\n                                cursor = limit - v_1;\n                                break lab0;\n                            }\n                        } while (false);\n                        // delete, line 115\n                        slice_del();\n                        break;\n                    case 2:\n                        // (, line 122\n                        // delete, line 122\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}