{"path":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#numDeletesToMerge(MergePolicy,IOSupplier[CodecReader]).mjava","commits":[{"id":"36d13f271b6649357e07f71f7e46559479f69b5b","date":1523888226,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#numDeletesToMerge(MergePolicy,IOSupplier[CodecReader]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  int numDeletesToMerge(MergePolicy policy, IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    if (dvGeneration == -2) {\n      FieldInfos fieldInfos = readFieldInfos();\n      FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n      // we try to only open a reader if it's really necessary ie. indices that are mainly append only might have\n      // big segments that don't even have any docs in the soft deletes field. In such a case it's simply\n      // enough to look at the FieldInfo for the field and check if the field has DocValues\n      if (fieldInfo != null && fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n        // in order to get accurate numbers we need to have a least one reader see here.\n        onNewReader(readerIOSupplier.get(), info);\n      } else {\n        // we are safe here since we don't have any doc values for the soft-delete field on disk\n        // no need to open a new reader\n        dvGeneration = fieldInfo == null ? -1 : fieldInfo.getDocValuesGen();\n      }\n    }\n    return super.numDeletesToMerge(policy, readerIOSupplier);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e716649e2bd79a98b5e68c464154ea4c44677a","date":1523975212,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#numDeletesToMerge(MergePolicy,IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#numDeletesToMerge(MergePolicy,IOSupplier[CodecReader]).mjava","sourceNew":"  @Override\n  int numDeletesToMerge(MergePolicy policy, IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    ensureInitialized(readerIOSupplier); // initialize to ensure we have accurate counts\n    return super.numDeletesToMerge(policy, readerIOSupplier);\n  }\n\n","sourceOld":"  @Override\n  int numDeletesToMerge(MergePolicy policy, IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    if (dvGeneration == -2) {\n      FieldInfos fieldInfos = readFieldInfos();\n      FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n      // we try to only open a reader if it's really necessary ie. indices that are mainly append only might have\n      // big segments that don't even have any docs in the soft deletes field. In such a case it's simply\n      // enough to look at the FieldInfo for the field and check if the field has DocValues\n      if (fieldInfo != null && fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n        // in order to get accurate numbers we need to have a least one reader see here.\n        onNewReader(readerIOSupplier.get(), info);\n      } else {\n        // we are safe here since we don't have any doc values for the soft-delete field on disk\n        // no need to open a new reader\n        dvGeneration = fieldInfo == null ? -1 : fieldInfo.getDocValuesGen();\n      }\n    }\n    return super.numDeletesToMerge(policy, readerIOSupplier);\n  }\n\n","bugFix":["36d13f271b6649357e07f71f7e46559479f69b5b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36d13f271b6649357e07f71f7e46559479f69b5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["36d13f271b6649357e07f71f7e46559479f69b5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15e716649e2bd79a98b5e68c464154ea4c44677a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36d13f271b6649357e07f71f7e46559479f69b5b"],"36d13f271b6649357e07f71f7e46559479f69b5b":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}