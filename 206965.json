{"path":"lucene/src/java/org/apache/lucene/index/MultiTerms#intersect(CompiledAutomaton,BytesRef).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiTerms#intersect(CompiledAutomaton,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public TermsEnum intersect(CompiledAutomaton compiled, BytesRef startTerm) throws IOException {\n    final List<MultiTermsEnum.TermsEnumIndex> termsEnums = new ArrayList<MultiTermsEnum.TermsEnumIndex>();\n    for(int i=0;i<subs.length;i++) {\n      final TermsEnum termsEnum = subs[i].intersect(compiled, startTerm);\n      if (termsEnum != null) {\n        termsEnums.add(new MultiTermsEnum.TermsEnumIndex(termsEnum, i));\n      }\n    }\n\n    if (termsEnums.size() > 0) {\n      return new MultiTermsEnum(subSlices).reset(termsEnums.toArray(MultiTermsEnum.TermsEnumIndex.EMPTY_ARRAY));\n    } else {\n      return TermsEnum.EMPTY;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiTerms#intersect(CompiledAutomaton,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiTerms#intersect(CompiledAutomaton,BytesRef).mjava","sourceNew":"  @Override\n  public TermsEnum intersect(CompiledAutomaton compiled, BytesRef startTerm) throws IOException {\n    final List<MultiTermsEnum.TermsEnumIndex> termsEnums = new ArrayList<MultiTermsEnum.TermsEnumIndex>();\n    for(int i=0;i<subs.length;i++) {\n      final TermsEnum termsEnum = subs[i].intersect(compiled, startTerm);\n      if (termsEnum != null) {\n        termsEnums.add(new MultiTermsEnum.TermsEnumIndex(termsEnum, i));\n      }\n    }\n\n    if (termsEnums.size() > 0) {\n      return new MultiTermsEnum(subSlices).reset(termsEnums.toArray(MultiTermsEnum.TermsEnumIndex.EMPTY_ARRAY));\n    } else {\n      return TermsEnum.EMPTY;\n    }\n  }\n\n","sourceOld":"  @Override\n  public TermsEnum intersect(CompiledAutomaton compiled, BytesRef startTerm) throws IOException {\n    final List<MultiTermsEnum.TermsEnumIndex> termsEnums = new ArrayList<MultiTermsEnum.TermsEnumIndex>();\n    for(int i=0;i<subs.length;i++) {\n      final TermsEnum termsEnum = subs[i].intersect(compiled, startTerm);\n      if (termsEnum != null) {\n        termsEnums.add(new MultiTermsEnum.TermsEnumIndex(termsEnum, i));\n      }\n    }\n\n    if (termsEnums.size() > 0) {\n      return new MultiTermsEnum(subSlices).reset(termsEnums.toArray(MultiTermsEnum.TermsEnumIndex.EMPTY_ARRAY));\n    } else {\n      return TermsEnum.EMPTY;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}