{"path":"lucene/facet/src/test/org/apache/lucene/facet/complements/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/complements/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Create our index/taxonomy writers\n    IndexWriter indexWriter = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetIndexingParams iParams = FacetIndexingParams.ALL_PARENTS;\n\n    // Add a facet to the index\n    addFacets(iParams, indexWriter, taxoWriter, \"a\", \"b\");\n\n    // Commit Changes\n    indexWriter.commit();\n    taxoWriter.commit();\n\n    // Open readers\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, indexWriter, taxoWriter, \"c\", \"d\");\n    IOUtils.close(indexWriter, taxoWriter);\n\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newTaxoReader);\n    assertTrue(\"should have received more cagtegories in updated taxonomy\", newTaxoReader.getSize() > taxoReader.getSize());\n    taxoReader.close();\n    taxoReader = newTaxoReader;\n    \n    DirectoryReader r2 = DirectoryReader.openIfChanged(indexReader);\n    assertNotNull(r2);\n    indexReader.close();\n    indexReader = r2;\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n    \n    IOUtils.close(indexReader, taxoReader);\n    outputFile.delete();\n    IOUtils.close(indexDir, taxoDir);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Create our index/taxonomy writers\n    IndexWriter indexWriter = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetIndexingParams iParams = FacetIndexingParams.ALL_PARENTS;\n\n    // Add a facet to the index\n    addFacets(iParams, indexWriter, taxoWriter, \"a\", \"b\");\n\n    // Commit Changes\n    indexWriter.commit();\n    taxoWriter.commit();\n\n    // Open readers\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, indexWriter, taxoWriter, \"c\", \"d\");\n    IOUtils.close(indexWriter, taxoWriter);\n\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newTaxoReader);\n    assertTrue(\"should have received more cagtegories in updated taxonomy\", newTaxoReader.getSize() > taxoReader.getSize());\n    taxoReader.close();\n    taxoReader = newTaxoReader;\n    \n    DirectoryReader r2 = DirectoryReader.openIfChanged(indexReader);\n    assertNotNull(r2);\n    indexReader.close();\n    indexReader = r2;\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n    \n    IOUtils.close(indexReader, taxoReader);\n    outputFile.delete();\n    IOUtils.close(indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ab129f02d1eab2dd2407cfe612f47affe88803","date":1360701006,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/complements/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/complements/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Create our index/taxonomy writers\n    IndexWriter indexWriter = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetIndexingParams iParams = FacetIndexingParams.DEFAULT;\n\n    // Add a facet to the index\n    addFacets(iParams, indexWriter, taxoWriter, \"a\", \"b\");\n\n    // Commit Changes\n    indexWriter.commit();\n    taxoWriter.commit();\n\n    // Open readers\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, indexWriter, taxoWriter, \"c\", \"d\");\n    IOUtils.close(indexWriter, taxoWriter);\n\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newTaxoReader);\n    assertTrue(\"should have received more cagtegories in updated taxonomy\", newTaxoReader.getSize() > taxoReader.getSize());\n    taxoReader.close();\n    taxoReader = newTaxoReader;\n    \n    DirectoryReader r2 = DirectoryReader.openIfChanged(indexReader);\n    assertNotNull(r2);\n    indexReader.close();\n    indexReader = r2;\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n    \n    IOUtils.close(indexReader, taxoReader);\n    outputFile.delete();\n    IOUtils.close(indexDir, taxoDir);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Create our index/taxonomy writers\n    IndexWriter indexWriter = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetIndexingParams iParams = FacetIndexingParams.ALL_PARENTS;\n\n    // Add a facet to the index\n    addFacets(iParams, indexWriter, taxoWriter, \"a\", \"b\");\n\n    // Commit Changes\n    indexWriter.commit();\n    taxoWriter.commit();\n\n    // Open readers\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, indexWriter, taxoWriter, \"c\", \"d\");\n    IOUtils.close(indexWriter, taxoWriter);\n\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newTaxoReader);\n    assertTrue(\"should have received more cagtegories in updated taxonomy\", newTaxoReader.getSize() > taxoReader.getSize());\n    taxoReader.close();\n    taxoReader = newTaxoReader;\n    \n    DirectoryReader r2 = DirectoryReader.openIfChanged(indexReader);\n    assertNotNull(r2);\n    indexReader.close();\n    indexReader = r2;\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n    \n    IOUtils.close(indexReader, taxoReader);\n    outputFile.delete();\n    IOUtils.close(indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","date":1360780178,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/complements/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/complements/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Create our index/taxonomy writers\n    IndexWriter indexWriter = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetIndexingParams iParams = FacetIndexingParams.DEFAULT;\n\n    // Add a facet to the index\n    addFacets(iParams, indexWriter, taxoWriter, \"a\", \"b\");\n\n    // Commit Changes\n    indexWriter.commit();\n    taxoWriter.commit();\n\n    // Open readers\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, indexWriter, taxoWriter, \"c\", \"d\");\n    IOUtils.close(indexWriter, taxoWriter);\n\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newTaxoReader);\n    assertTrue(\"should have received more cagtegories in updated taxonomy\", newTaxoReader.getSize() > taxoReader.getSize());\n    taxoReader.close();\n    taxoReader = newTaxoReader;\n    \n    DirectoryReader r2 = DirectoryReader.openIfChanged(indexReader);\n    assertNotNull(r2);\n    indexReader.close();\n    indexReader = r2;\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n    \n    IOUtils.close(indexReader, taxoReader);\n    outputFile.delete();\n    IOUtils.close(indexDir, taxoDir);\n  }\n\n","sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Create our index/taxonomy writers\n    IndexWriter indexWriter = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetIndexingParams iParams = FacetIndexingParams.ALL_PARENTS;\n\n    // Add a facet to the index\n    addFacets(iParams, indexWriter, taxoWriter, \"a\", \"b\");\n\n    // Commit Changes\n    indexWriter.commit();\n    taxoWriter.commit();\n\n    // Open readers\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, indexWriter, taxoWriter, \"c\", \"d\");\n    IOUtils.close(indexWriter, taxoWriter);\n\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newTaxoReader);\n    assertTrue(\"should have received more cagtegories in updated taxonomy\", newTaxoReader.getSize() > taxoReader.getSize());\n    taxoReader.close();\n    taxoReader = newTaxoReader;\n    \n    DirectoryReader r2 = DirectoryReader.openIfChanged(indexReader);\n    assertNotNull(r2);\n    indexReader.close();\n    indexReader = r2;\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n    \n    IOUtils.close(indexReader, taxoReader);\n    outputFile.delete();\n    IOUtils.close(indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/complements/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":null,"sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Create our index/taxonomy writers\n    IndexWriter indexWriter = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetIndexingParams iParams = FacetIndexingParams.DEFAULT;\n\n    // Add a facet to the index\n    addFacets(iParams, indexWriter, taxoWriter, \"a\", \"b\");\n\n    // Commit Changes\n    indexWriter.commit();\n    taxoWriter.commit();\n\n    // Open readers\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, indexWriter, taxoWriter, \"c\", \"d\");\n    IOUtils.close(indexWriter, taxoWriter);\n\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newTaxoReader);\n    assertTrue(\"should have received more cagtegories in updated taxonomy\", newTaxoReader.getSize() > taxoReader.getSize());\n    taxoReader.close();\n    taxoReader = newTaxoReader;\n    \n    DirectoryReader r2 = DirectoryReader.openIfChanged(indexReader);\n    assertNotNull(r2);\n    indexReader.close();\n    indexReader = r2;\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n    \n    IOUtils.close(indexReader, taxoReader);\n    outputFile.delete();\n    IOUtils.close(indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/complements/TestTotalFacetCountsCache#testGenerationalConsistency().mjava","sourceNew":null,"sourceOld":"  /**\n   * Simple test to make sure the TotalFacetCountsManager updates the\n   * TotalFacetCounts array only when it is supposed to, and whether it\n   * is recomputed or read from disk.\n   */\n  @Test\n  public void testGenerationalConsistency() throws Exception {\n    // Create temporary RAMDirectories\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Create our index/taxonomy writers\n    IndexWriter indexWriter = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    FacetIndexingParams iParams = FacetIndexingParams.DEFAULT;\n\n    // Add a facet to the index\n    addFacets(iParams, indexWriter, taxoWriter, \"a\", \"b\");\n\n    // Commit Changes\n    indexWriter.commit();\n    taxoWriter.commit();\n\n    // Open readers\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // As this is the first time we have invoked the TotalFacetCountsManager, \n    // we should expect to compute and not read from disk.\n    TotalFacetCounts totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    int prevGen = assertRecomputed(totalCounts, 0, \"after first attempt to get it!\");\n\n    // Repeating same operation should pull from the cache - not recomputed. \n    assertTrue(\"Should be obtained from cache at 2nd attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n\n    // Repeat the same operation as above. but clear first - now should recompute again\n    initCache();\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 3rd attempt to get it!\");\n    \n    //store to file\n    File outputFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n    initCache();\n    TFC.store(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after cache clear, 4th attempt to get it!\");\n\n    //clear and load\n    initCache();\n    TFC.load(outputFile, indexReader, taxoReader, iParams);\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertReadFromDisc(totalCounts, prevGen, \"after 5th attempt to get it!\");\n\n    // Add a new facet to the index, commit and refresh readers\n    addFacets(iParams, indexWriter, taxoWriter, \"c\", \"d\");\n    IOUtils.close(indexWriter, taxoWriter);\n\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newTaxoReader);\n    assertTrue(\"should have received more cagtegories in updated taxonomy\", newTaxoReader.getSize() > taxoReader.getSize());\n    taxoReader.close();\n    taxoReader = newTaxoReader;\n    \n    DirectoryReader r2 = DirectoryReader.openIfChanged(indexReader);\n    assertNotNull(r2);\n    indexReader.close();\n    indexReader = r2;\n\n    // now use the new reader - should recompute\n    totalCounts = TFC.getTotalCounts(indexReader, taxoReader, iParams);\n    prevGen = assertRecomputed(totalCounts, prevGen, \"after updating the index - 7th attempt!\");\n\n    // try again - should not recompute\n    assertTrue(\"Should be obtained from cache at 8th attempt\",totalCounts == \n      TFC.getTotalCounts(indexReader, taxoReader, iParams));\n    \n    IOUtils.close(indexReader, taxoReader);\n    outputFile.delete();\n    IOUtils.close(indexDir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["68ab129f02d1eab2dd2407cfe612f47affe88803"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":["607428da722dcb3e86bbd11c63de8986e6275c36","68ab129f02d1eab2dd2407cfe612f47affe88803"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68ab129f02d1eab2dd2407cfe612f47affe88803":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["68ab129f02d1eab2dd2407cfe612f47affe88803","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","68ab129f02d1eab2dd2407cfe612f47affe88803"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"68ab129f02d1eab2dd2407cfe612f47affe88803":["d33e19a97046248623a7591aeaa6547233fd15e2","6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}