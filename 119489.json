{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","commits":[{"id":"a0d196318cb8ce39ae32035f290cd1397833e472","date":1418140712,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","pathOld":"/dev/null","sourceNew":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter(){\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        rawWriter.write(out);\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        return BinaryResponseParser.BINARY_CONTENT_TYPE;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5a70f7ff0756e3668447bffbbf8bce8e7c361b9","date":1420028708,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","sourceNew":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter(){\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if(rawWriter!=null) rawWriter.write(out);\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        return BinaryResponseParser.BINARY_CONTENT_TYPE;\n      }\n    };\n  }\n\n","sourceOld":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter(){\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        rawWriter.write(out);\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        return BinaryResponseParser.BINARY_CONTENT_TYPE;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","sourceNew":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter(){\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if (rawWriter != null) {\n          rawWriter.write(out);\n          if (rawWriter instanceof Closeable) ((Closeable) rawWriter).close();\n        }\n\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if (rawWriter != null) {\n          return rawWriter.getContentType();\n        } else {\n          return BinaryResponseParser.BINARY_CONTENT_TYPE;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter(){\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if(rawWriter!=null) rawWriter.write(out);\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        return BinaryResponseParser.BINARY_CONTENT_TYPE;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","sourceNew":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter(){\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if (rawWriter != null) {\n          rawWriter.write(out);\n          if (rawWriter instanceof Closeable) ((Closeable) rawWriter).close();\n        }\n\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if (rawWriter != null) {\n          return rawWriter.getContentType();\n        } else {\n          return BinaryResponseParser.BINARY_CONTENT_TYPE;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter(){\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if(rawWriter!=null) rawWriter.write(out);\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        return BinaryResponseParser.BINARY_CONTENT_TYPE;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getFileStreamWriter().mjava","sourceNew":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter() {\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if (rawWriter != null) {\n          rawWriter.write(out);\n          if (rawWriter instanceof Closeable) ((Closeable) rawWriter).close();\n        }\n\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if (rawWriter != null) {\n          return rawWriter.getContentType();\n        } else {\n          return BinaryResponseParser.BINARY_CONTENT_TYPE;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static BinaryResponseWriter getFileStreamWriter() {\n    return new BinaryResponseWriter(){\n      @Override\n      public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if (rawWriter != null) {\n          rawWriter.write(out);\n          if (rawWriter instanceof Closeable) ((Closeable) rawWriter).close();\n        }\n\n      }\n\n      @Override\n      public String getContentType(SolrQueryRequest request, SolrQueryResponse response) {\n        RawWriter rawWriter = (RawWriter) response.getValues().get(ReplicationHandler.FILE_STREAM);\n        if (rawWriter != null) {\n          return rawWriter.getContentType();\n        } else {\n          return BinaryResponseParser.BINARY_CONTENT_TYPE;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["b5a70f7ff0756e3668447bffbbf8bce8e7c361b9"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"a0d196318cb8ce39ae32035f290cd1397833e472":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["b5a70f7ff0756e3668447bffbbf8bce8e7c361b9","50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"b5a70f7ff0756e3668447bffbbf8bce8e7c361b9":["a0d196318cb8ce39ae32035f290cd1397833e472"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["2668c99990e4c94a78bac005aa682b7c5986d23a","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d196318cb8ce39ae32035f290cd1397833e472":["b5a70f7ff0756e3668447bffbbf8bce8e7c361b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d196318cb8ce39ae32035f290cd1397833e472"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"b5a70f7ff0756e3668447bffbbf8bce8e7c361b9":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}