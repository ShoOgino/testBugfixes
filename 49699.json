{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","commits":[{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags, final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    donePoints(returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final List<GeoPoint> pointList, final BitSet internalEdgeFlags, final boolean returnEdgeInternal) {\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    donePoints(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":1,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags, final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    donePoints(returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final List<GeoPoint> pointList, final BitSet internalEdgeFlags, final boolean returnEdgeInternal) {\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    donePoints(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"535df84251be5af3be84d750beba0021aff9132d","date":1434649368,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags, final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    donePoints(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["535df84251be5af3be84d750beba0021aff9132d"],"535df84251be5af3be84d750beba0021aff9132d":["fec06d6753751ae302c7d35866763e6cb414112d"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"fec06d6753751ae302c7d35866763e6cb414112d":["535df84251be5af3be84d750beba0021aff9132d"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"535df84251be5af3be84d750beba0021aff9132d":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}