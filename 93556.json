{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","commits":[{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#getDateResolution(String).mjava","sourceNew":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field.\n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","sourceOld":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field.\n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#getDateResolution(String).mjava","sourceNew":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field.\n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","sourceOld":"  /**\n   * Returns the date resolution that is used by RangeQueries for the given field.\n   * Returns null, if no default or field specific date resolution has been set\n   * for the given field.\n   *\n   */\n  public DateTools.Resolution getDateResolution(String fieldName) {\n    if (fieldName == null) {\n      throw new IllegalArgumentException(\"Field cannot be null.\");\n    }\n\n    if (fieldToDateResolution == null) {\n      // no field specific date resolutions set; return default date resolution instead\n      return this.dateResolution;\n    }\n\n    DateTools.Resolution resolution = fieldToDateResolution.get(fieldName);\n    if (resolution == null) {\n      // no date resolutions set for the given field; return default date resolution instead\n      resolution = this.dateResolution;\n    }\n\n    return resolution;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}