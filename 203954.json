{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#prepareConjunction(LeafReaderContext,Bits,Postings).mjava","commits":[{"id":"29aea3139c4326c0501d75d51059855463220279","date":1433952060,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#prepareConjunction(LeafReaderContext,Bits,Postings).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#prepareConjunction(LeafReaderContext,Bits,SpanCollector).mjava","sourceNew":"    ArrayList<Spans> prepareConjunction(final LeafReaderContext context, final Bits acceptDocs, Postings postings) throws IOException {\n      Spans bigSpans = bigWeight.getSpans(context, acceptDocs, postings);\n      if (bigSpans == null) {\n        return null;\n      }\n      Spans littleSpans = littleWeight.getSpans(context, acceptDocs, postings);\n      if (littleSpans == null) {\n        return null;\n      }\n      ArrayList<Spans> bigAndLittle = new ArrayList<>();\n      bigAndLittle.add(bigSpans);\n      bigAndLittle.add(littleSpans);\n      return bigAndLittle;\n    }\n\n","sourceOld":"    ArrayList<Spans> prepareConjunction(final LeafReaderContext context, final Bits acceptDocs, SpanCollector collector) throws IOException {\n      Spans bigSpans = bigWeight.getSpans(context, acceptDocs, collector);\n      if (bigSpans == null) {\n        return null;\n      }\n      Spans littleSpans = littleWeight.getSpans(context, acceptDocs, collector);\n      if (littleSpans == null) {\n        return null;\n      }\n      ArrayList<Spans> bigAndLittle = new ArrayList<>();\n      bigAndLittle.add(bigSpans);\n      bigAndLittle.add(littleSpans);\n      return bigAndLittle;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#prepareConjunction(LeafReaderContext,Postings).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#prepareConjunction(LeafReaderContext,Bits,Postings).mjava","sourceNew":"    ArrayList<Spans> prepareConjunction(final LeafReaderContext context, Postings postings) throws IOException {\n      Spans bigSpans = bigWeight.getSpans(context, postings);\n      if (bigSpans == null) {\n        return null;\n      }\n      Spans littleSpans = littleWeight.getSpans(context, postings);\n      if (littleSpans == null) {\n        return null;\n      }\n      ArrayList<Spans> bigAndLittle = new ArrayList<>();\n      bigAndLittle.add(bigSpans);\n      bigAndLittle.add(littleSpans);\n      return bigAndLittle;\n    }\n\n","sourceOld":"    ArrayList<Spans> prepareConjunction(final LeafReaderContext context, final Bits acceptDocs, Postings postings) throws IOException {\n      Spans bigSpans = bigWeight.getSpans(context, acceptDocs, postings);\n      if (bigSpans == null) {\n        return null;\n      }\n      Spans littleSpans = littleWeight.getSpans(context, acceptDocs, postings);\n      if (littleSpans == null) {\n        return null;\n      }\n      ArrayList<Spans> bigAndLittle = new ArrayList<>();\n      bigAndLittle.add(bigSpans);\n      bigAndLittle.add(littleSpans);\n      return bigAndLittle;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["29aea3139c4326c0501d75d51059855463220279"],"29aea3139c4326c0501d75d51059855463220279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29aea3139c4326c0501d75d51059855463220279":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29aea3139c4326c0501d75d51059855463220279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}