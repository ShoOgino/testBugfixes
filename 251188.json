{"path":"solr/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","commits":[{"id":"92005ead3266d7b3283282717d5ecffba1594136","date":1283464759,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HighlightComponent#removeNulls(NamedList).mjava","sourceNew":"  public static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","sourceOld":"  static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  public static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","sourceNew":"  public static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","sourceOld":"  public static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","sourceNew":"  public static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","sourceOld":"  public static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#removeNulls(NamedList).mjava","sourceNew":"  public static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","sourceOld":"  public static NamedList removeNulls(NamedList nl) {\n    for (int i=0; i<nl.size(); i++) {\n      if (nl.getName(i)==null) {\n        NamedList newList = nl instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();\n        for (int j=0; j<nl.size(); j++) {\n          String n = nl.getName(j);\n          if (n != null) {\n            newList.add(n, nl.getVal(j));\n          }\n        }\n        return newList;\n      }\n    }\n    return nl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92005ead3266d7b3283282717d5ecffba1594136":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["92005ead3266d7b3283282717d5ecffba1594136"],"c26f00b574427b55127e869b935845554afde1fa":["92005ead3266d7b3283282717d5ecffba1594136","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["92005ead3266d7b3283282717d5ecffba1594136"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","92005ead3266d7b3283282717d5ecffba1594136"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"92005ead3266d7b3283282717d5ecffba1594136":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92005ead3266d7b3283282717d5ecffba1594136","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}