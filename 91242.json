{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest.LookupThread#run().mjava","commits":[{"id":"a371aa649cc243e82cb8677ca960a1e0232ecedf","date":1393605574,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest.LookupThread#run().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void run() {\n      while (stop == false) {\n        String query = randomText();\n        int topN = TestUtil.nextInt(random(), 1, 100);\n        boolean allTermsRequired = random().nextBoolean();\n        boolean doHilite = random().nextBoolean();\n        // We don't verify the results; just doing\n        // simultaneous lookups while adding/updating to\n        // see if there are any thread hazards:\n        try {\n          suggester.lookup(TestUtil.stringToCharSequence(query, random()),\n                           topN, allTermsRequired, doHilite);\n        } catch (IOException ioe) {\n          throw new RuntimeException(ioe);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a371aa649cc243e82cb8677ca960a1e0232ecedf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a371aa649cc243e82cb8677ca960a1e0232ecedf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a371aa649cc243e82cb8677ca960a1e0232ecedf"],"a371aa649cc243e82cb8677ca960a1e0232ecedf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}