{"path":"lucene/backwards/src/java/org/apache/lucene/document/DateField#timeToString(long).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/document/DateField#timeToString(long).mjava","pathOld":"backwards/src/java/org/apache/lucene/document/DateField#timeToString(long).mjava","sourceNew":"  /**\n   * Converts a millisecond time to a string suitable for indexing.\n   * @throws RuntimeException if the time specified in the\n   * method argument is negative, that is, before 1970\n   */\n  public static String timeToString(long time) {\n    if (time < 0)\n      throw new RuntimeException(\"time '\" + time + \"' is too early, must be >= 0\");\n\n    String s = Long.toString(time, Character.MAX_RADIX);\n\n    if (s.length() > DATE_LEN)\n      throw new RuntimeException(\"time '\" + time + \"' is too late, length of string \" +\n          \"representation must be <= \" + DATE_LEN);\n\n    // Pad with leading zeros\n    if (s.length() < DATE_LEN) {\n      StringBuilder sb = new StringBuilder(s);\n      while (sb.length() < DATE_LEN)\n        sb.insert(0, 0);\n      s = sb.toString();\n    }\n\n    return s;\n  }\n\n","sourceOld":"  /**\n   * Converts a millisecond time to a string suitable for indexing.\n   * @throws RuntimeException if the time specified in the\n   * method argument is negative, that is, before 1970\n   */\n  public static String timeToString(long time) {\n    if (time < 0)\n      throw new RuntimeException(\"time '\" + time + \"' is too early, must be >= 0\");\n\n    String s = Long.toString(time, Character.MAX_RADIX);\n\n    if (s.length() > DATE_LEN)\n      throw new RuntimeException(\"time '\" + time + \"' is too late, length of string \" +\n          \"representation must be <= \" + DATE_LEN);\n\n    // Pad with leading zeros\n    if (s.length() < DATE_LEN) {\n      StringBuilder sb = new StringBuilder(s);\n      while (sb.length() < DATE_LEN)\n        sb.insert(0, 0);\n      s = sb.toString();\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/document/DateField#timeToString(long).mjava","sourceNew":null,"sourceOld":"  /**\n   * Converts a millisecond time to a string suitable for indexing.\n   * @throws RuntimeException if the time specified in the\n   * method argument is negative, that is, before 1970\n   */\n  public static String timeToString(long time) {\n    if (time < 0)\n      throw new RuntimeException(\"time '\" + time + \"' is too early, must be >= 0\");\n\n    String s = Long.toString(time, Character.MAX_RADIX);\n\n    if (s.length() > DATE_LEN)\n      throw new RuntimeException(\"time '\" + time + \"' is too late, length of string \" +\n          \"representation must be <= \" + DATE_LEN);\n\n    // Pad with leading zeros\n    if (s.length() < DATE_LEN) {\n      StringBuilder sb = new StringBuilder(s);\n      while (sb.length() < DATE_LEN)\n        sb.insert(0, 0);\n      s = sb.toString();\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}