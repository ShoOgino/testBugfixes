{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/ForUtil#decompress(IntBuffer,int[],int).mjava","sourceNew":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n\n    int numBits = ((header >> 8) & MASK[6]);\n\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","sourceOld":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n\n    int numBits = ((header >> 8) & MASK[6]);\n\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8081d5018e8846bf4080f2809432c759996e749f","date":1344206372,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","sourceNew":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   * @param header      header of current block, which contains numFrameBits\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n    int numBits = ((header >> 8) & MASK[6]);\n\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","sourceOld":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n\n    int numBits = ((header >> 8) & MASK[6]);\n\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa54045fe14bda8ec7956613105eef2c722f4d18","date":1344339954,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","sourceNew":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   * @param header      header of current block, which contains numFrameBits\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n    decompressCore(intBuffer, data, getNumBits(header));\n  }\n\n","sourceOld":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   * @param header      header of current block, which contains numFrameBits\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n    int numBits = ((header >> 8) & MASK[6]);\n\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b26a6a87f8d4abff54e2d160286e34f9418075b","date":1344342307,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","sourceNew":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   * @param header      header of current block, which contains numFrameBits\n   */\n  static void decompress(IntBuffer intBuffer, int[] data, int numBits) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","sourceOld":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   * @param header      header of current block, which contains numFrameBits\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n    decompressCore(intBuffer, data, getNumBits(header));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa","date":1344355287,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","sourceNew":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   * @param header      header of current block, which contains numFrameBits\n   */\n  static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // NOTE: header == numBits now, but we may change that\n    final int numBits = header;\n    assert numBits >=0 && numBits < 32;\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","sourceOld":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   * @param header      header of current block, which contains numFrameBits\n   */\n  static void decompress(IntBuffer intBuffer, int[] data, int numBits) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // nocommit assert header isn't \"malformed\", ie besides\n    // numBytes / bit-width there is nothing else!\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#decompress(IntBuffer,int[],int).mjava","sourceNew":null,"sourceOld":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   * @param header      header of current block, which contains numFrameBits\n   */\n  static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    // NOTE: header == numBits now, but we may change that\n    final int numBits = header;\n    assert numBits >=0 && numBits < 32;\n    decompressCore(intBuffer, data, numBits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fa54045fe14bda8ec7956613105eef2c722f4d18":["8081d5018e8846bf4080f2809432c759996e749f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1b26a6a87f8d4abff54e2d160286e34f9418075b":["fa54045fe14bda8ec7956613105eef2c722f4d18"],"8081d5018e8846bf4080f2809432c759996e749f":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa":["1b26a6a87f8d4abff54e2d160286e34f9418075b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["8081d5018e8846bf4080f2809432c759996e749f"],"fa54045fe14bda8ec7956613105eef2c722f4d18":["1b26a6a87f8d4abff54e2d160286e34f9418075b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1b26a6a87f8d4abff54e2d160286e34f9418075b":["f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa"],"8081d5018e8846bf4080f2809432c759996e749f":["fa54045fe14bda8ec7956613105eef2c722f4d18"],"f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}