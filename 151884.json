{"path":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","commits":[{"id":"27274410c91546fcfc28e692abd2dd77ca99be4b","date":1042501834,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(TermDocs,Similarity,byte[],float).mjava","sourceNew":"  TermScorer(Weight weight, TermDocs td, Similarity similarity,\n             byte[] norms) throws IOException {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n\n    pointerMax = termDocs.read(docs, freqs);\t  // fill buffers\n\n    if (pointerMax != 0)\n      doc = docs[0];\n    else {\n      termDocs.close();\t\t\t\t  // close stream\n      doc = Integer.MAX_VALUE;\t\t\t  // set to sentinel value\n    }\n  }\n\n","sourceOld":"  TermScorer(TermDocs td, Similarity similarity, byte[] norms, float weight)\n    throws IOException {\n    super(similarity);\n    this.termDocs = td;\n    this.norms = norms;\n    this.weight = weight;\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weight;\n\n    pointerMax = termDocs.read(docs, freqs);\t  // fill buffers\n\n    if (pointerMax != 0)\n      doc = docs[0];\n    else {\n      termDocs.close();\t\t\t\t  // close stream\n      doc = Integer.MAX_VALUE;\t\t\t  // set to sentinel value\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","sourceNew":"  TermScorer(Weight weight, TermDocs td, Similarity similarity,\n             byte[] norms) throws IOException {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","sourceOld":"  TermScorer(Weight weight, TermDocs td, Similarity similarity,\n             byte[] norms) throws IOException {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n\n    pointerMax = termDocs.read(docs, freqs);\t  // fill buffers\n\n    if (pointerMax != 0)\n      doc = docs[0];\n    else {\n      termDocs.close();\t\t\t\t  // close stream\n      doc = Integer.MAX_VALUE;\t\t\t  // set to sentinel value\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f314029fc991d70f9c6a7fd0b01f36da98c1c32","date":1091823553,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","sourceNew":"  TermScorer(Weight weight, TermDocs td, Similarity similarity,\n             byte[] norms) {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","sourceOld":"  TermScorer(Weight weight, TermDocs td, Similarity similarity,\n             byte[] norms) throws IOException {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"591e76e4f4581ee94453dd46609d65b9c2e825ee","date":1092775126,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","sourceNew":"  /** Construct a <code>TermScorer</code>.\n   * @param weight The weight of the <code>Term</code> in the query.\n   * @param td An iterator over the documents matching the <code>Term</code>.\n   * @param similarity The </code>Similarity</code> implementation to be used for score computations.\n   * @param norms The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity,\n             byte[] norms) {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","sourceOld":"  TermScorer(Weight weight, TermDocs td, Similarity similarity,\n             byte[] norms) {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","sourceNew":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   * \n   * @deprecated use delete in 3.0, kept around for TestTermScorer in tag which\n   *             creates TermScorer directly, and cannot pass in a QueryWeight\n   *             object.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity, byte[] norms) {\n    this(new QueryWeightWrapper(weight), td, similarity, norms);\n  }\n\n","sourceOld":"  /** Construct a <code>TermScorer</code>.\n   * @param weight The weight of the <code>Term</code> in the query.\n   * @param td An iterator over the documents matching the <code>Term</code>.\n   * @param similarity The </code>Similarity</code> implementation to be used for score computations.\n   * @param norms The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity,\n             byte[] norms) {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","sourceNew":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity, byte[] norms) {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","sourceOld":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   * \n   * @deprecated use delete in 3.0, kept around for TestTermScorer in tag which\n   *             creates TermScorer directly, and cannot pass in a QueryWeight\n   *             object.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity, byte[] norms) {\n    this(new QueryWeightWrapper(weight), td, similarity, norms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0eb5b0b5b98c777dad412afbfb347d2c0889327","date":1259094367,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","sourceNew":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity, byte[] norms) {\n    super(similarity);\n    \n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","sourceOld":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity, byte[] norms) {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,TermDocs,Similarity,byte[]).mjava","sourceNew":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity, byte[] norms) {\n    super(similarity);\n    \n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","sourceOld":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(Weight weight, TermDocs td, Similarity similarity, byte[] norms) {\n    super(similarity);\n    \n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f314029fc991d70f9c6a7fd0b01f36da98c1c32":["15c469602973ef1a33c9a07367a380d278ffab20"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"b0eb5b0b5b98c777dad412afbfb347d2c0889327":["fe941135bdfc28c81e20b4d21422f8726af34925"],"052fac7830290bd38a04cddee1a121ee07656b56":["591e76e4f4581ee94453dd46609d65b9c2e825ee"],"591e76e4f4581ee94453dd46609d65b9c2e825ee":["3f314029fc991d70f9c6a7fd0b01f36da98c1c32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b0eb5b0b5b98c777dad412afbfb347d2c0889327"],"15c469602973ef1a33c9a07367a380d278ffab20":["27274410c91546fcfc28e692abd2dd77ca99be4b"]},"commit2Childs":{"3f314029fc991d70f9c6a7fd0b01f36da98c1c32":["591e76e4f4581ee94453dd46609d65b9c2e825ee"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["15c469602973ef1a33c9a07367a380d278ffab20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"fe941135bdfc28c81e20b4d21422f8726af34925":["b0eb5b0b5b98c777dad412afbfb347d2c0889327"],"b0eb5b0b5b98c777dad412afbfb347d2c0889327":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"591e76e4f4581ee94453dd46609d65b9c2e825ee":["052fac7830290bd38a04cddee1a121ee07656b56"],"15c469602973ef1a33c9a07367a380d278ffab20":["3f314029fc991d70f9c6a7fd0b01f36da98c1c32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}