{"path":"src/java/org/apache/lucene/search/spans/SpanFirstQuery#rewrite(IndexReader).mjava","commits":[{"id":"a41defcc937912bab1b97f83c666668b3e7e7831","date":1126880252,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanFirstQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public Query rewrite(IndexReader reader) throws IOException {\n    SpanFirstQuery clone = null;\n\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      clone = (SpanFirstQuery) this.clone();\n      clone.match = rewritten;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanFirstQuery#rewrite(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanFirstQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanFirstQuery clone = null;\n\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      clone = (SpanFirstQuery) this.clone();\n      clone.match = rewritten;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","sourceOld":"  public Query rewrite(IndexReader reader) throws IOException {\n    SpanFirstQuery clone = null;\n\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      clone = (SpanFirstQuery) this.clone();\n      clone.match = rewritten;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanFirstQuery#rewrite(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanFirstQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanFirstQuery clone = null;\n\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      clone = (SpanFirstQuery) this.clone();\n      clone.match = rewritten;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanFirstQuery clone = null;\n\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      clone = (SpanFirstQuery) this.clone();\n      clone.match = rewritten;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a9e385641d717e641408d8fbbc62be8fc766357":["a41defcc937912bab1b97f83c666668b3e7e7831"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a41defcc937912bab1b97f83c666668b3e7e7831":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a41defcc937912bab1b97f83c666668b3e7e7831"],"a41defcc937912bab1b97f83c666668b3e7e7831":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}