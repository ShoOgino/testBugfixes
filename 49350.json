{"path":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#testRecreateCollectionAfterFailure().mjava","commits":[{"id":"95cd5a38a855e021b63ce0a52cd6e43d358c8c61","date":1556473589,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#testRecreateCollectionAfterFailure().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * After a failed attempt to create a collection (due to bad configs), assert that\n   * the collection can be created with a good collection.\n   */\n  @Test\n  @ShardsFixed(num = 2)\n  public void testRecreateCollectionAfterFailure() throws Exception {\n    // Upload a bad configset\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), ZkTestServer.TIMEOUT,\n        ZkTestServer.TIMEOUT, null);\n    ZkTestServer.putConfig(\"badconf\", zkClient, \"/solr\", ZkTestServer.SOLRHOME, \"bad-error-solrconfig.xml\", \"solrconfig.xml\");\n    ZkTestServer.putConfig(\"badconf\", zkClient, \"/solr\", ZkTestServer.SOLRHOME, \"schema-minimal.xml\", \"schema.xml\");\n    zkClient.close();\n\n    try (CloudSolrClient client = createCloudClient(null)) {\n      // first, try creating a collection with badconf\n      HttpSolrClient.RemoteSolrException rse = expectThrows(HttpSolrClient.RemoteSolrException.class, () -> {\n          CollectionAdminResponse rsp = CollectionAdminRequest.createCollection\n              (\"testcollection\", \"badconf\", 1, 2).process(client);\n      });\n      assertNotNull(rse.getMessage());\n      assertNotSame(0, rse.code());\n\n      CollectionAdminResponse rsp = CollectionAdminRequest.createCollection\n          (\"testcollection\", \"conf1\", 1, 2).process(client);\n      assertNull(rsp.getErrorMessages());\n      assertSame(0, rsp.getStatus());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db96734b79e26d948b59f68bd4564c4836a71acf","date":1585375566,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#testRecreateCollectionAfterFailure().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestCollectionAPI#testRecreateCollectionAfterFailure().mjava","sourceNew":"  /**\n   * After a failed attempt to create a collection (due to bad configs), assert that\n   * the collection can be created with a good collection.\n   */\n  @Test\n  @ShardsFixed(num = 2)\n  public void testRecreateCollectionAfterFailure() throws Exception {\n    // Upload a bad configset\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), ZkTestServer.TIMEOUT,\n        ZkTestServer.TIMEOUT, null);\n    ZkTestServer.putConfig(\"badconf\", zkClient, \"/solr\", ZkTestServer.SOLRHOME, \"bad-error-solrconfig.xml\", \"solrconfig.xml\");\n    ZkTestServer.putConfig(\"badconf\", zkClient, \"/solr\", ZkTestServer.SOLRHOME, \"schema-minimal.xml\", \"schema.xml\");\n    zkClient.close();\n\n    try (CloudSolrClient client = createCloudClient(null)) {\n      // first, try creating a collection with badconf\n      BaseHttpSolrClient.RemoteSolrException rse = expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> {\n          CollectionAdminResponse rsp = CollectionAdminRequest.createCollection\n              (\"testcollection\", \"badconf\", 1, 2).process(client);\n      });\n      assertNotNull(rse.getMessage());\n      assertNotSame(0, rse.code());\n\n      CollectionAdminResponse rsp = CollectionAdminRequest.createCollection\n          (\"testcollection\", \"conf1\", 1, 2).process(client);\n      assertNull(rsp.getErrorMessages());\n      assertSame(0, rsp.getStatus());\n    }\n  }\n\n","sourceOld":"  /**\n   * After a failed attempt to create a collection (due to bad configs), assert that\n   * the collection can be created with a good collection.\n   */\n  @Test\n  @ShardsFixed(num = 2)\n  public void testRecreateCollectionAfterFailure() throws Exception {\n    // Upload a bad configset\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), ZkTestServer.TIMEOUT,\n        ZkTestServer.TIMEOUT, null);\n    ZkTestServer.putConfig(\"badconf\", zkClient, \"/solr\", ZkTestServer.SOLRHOME, \"bad-error-solrconfig.xml\", \"solrconfig.xml\");\n    ZkTestServer.putConfig(\"badconf\", zkClient, \"/solr\", ZkTestServer.SOLRHOME, \"schema-minimal.xml\", \"schema.xml\");\n    zkClient.close();\n\n    try (CloudSolrClient client = createCloudClient(null)) {\n      // first, try creating a collection with badconf\n      HttpSolrClient.RemoteSolrException rse = expectThrows(HttpSolrClient.RemoteSolrException.class, () -> {\n          CollectionAdminResponse rsp = CollectionAdminRequest.createCollection\n              (\"testcollection\", \"badconf\", 1, 2).process(client);\n      });\n      assertNotNull(rse.getMessage());\n      assertNotSame(0, rse.code());\n\n      CollectionAdminResponse rsp = CollectionAdminRequest.createCollection\n          (\"testcollection\", \"conf1\", 1, 2).process(client);\n      assertNull(rsp.getErrorMessages());\n      assertSame(0, rsp.getStatus());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db96734b79e26d948b59f68bd4564c4836a71acf":["95cd5a38a855e021b63ce0a52cd6e43d358c8c61"],"95cd5a38a855e021b63ce0a52cd6e43d358c8c61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db96734b79e26d948b59f68bd4564c4836a71acf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["95cd5a38a855e021b63ce0a52cd6e43d358c8c61"],"db96734b79e26d948b59f68bd4564c4836a71acf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"95cd5a38a855e021b63ce0a52cd6e43d358c8c61":["db96734b79e26d948b59f68bd4564c4836a71acf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}