{"path":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","commits":[{"id":"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","date":1323543613,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiReader#getTermVectors(int).mjava","sourceNew":"  @Override\n  public Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","sourceOld":"  @Override\n  public Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57dea241098eaf5af8a4789a62634f655d226641","date":1323618214,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","sourceNew":"  @Override\n  public Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","sourceOld":"  @Override\n  public Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getTermVectors(int).mjava","sourceNew":"  @Override\n  public Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","sourceOld":"  @Override\n  public Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","date":1328092914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","sourceNew":"  @Override\n  public final Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","sourceOld":"  @Override\n  public Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","sourceNew":"  @Override\n  public final Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","sourceOld":"  @Override\n  public final Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","57dea241098eaf5af8a4789a62634f655d226641"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57dea241098eaf5af8a4789a62634f655d226641":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["57dea241098eaf5af8a4789a62634f655d226641"]},"commit2Childs":{"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["57dea241098eaf5af8a4789a62634f655d226641"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"57dea241098eaf5af8a4789a62634f655d226641":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}