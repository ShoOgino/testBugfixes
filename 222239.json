{"path":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4958642f967bfbd6f083ddf50f141bcde89b9ec1","date":1489572234,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? Integer.valueOf(0) : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bca83a747f8e297ee4412c0d18bdd3a98c09df3b","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? Integer.valueOf(0) : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? Integer.valueOf(0) : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? 0 : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50dfd19525c8d73e856dca6edb64b7aea074037f","date":1591579225,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#commonResponse().mjava","sourceNew":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? Integer.valueOf(0) : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","sourceOld":"    protected NamedList commonResponse() {\n      NamedList groupResult = new SimpleOrderedMap();\n      grouped.add(key, groupResult);  // grouped={ key={\n\n      int matches = getMatches();\n      groupResult.add(\"matches\", matches);\n      if (totalCount == TotalCount.grouped) {\n        Integer totalNrOfGroups = getNumberOfGroups();\n        groupResult.add(\"ngroups\", totalNrOfGroups == null ? Integer.valueOf(0) : totalNrOfGroups);\n      }\n      maxMatches = Math.max(maxMatches, matches);\n      return groupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4958642f967bfbd6f083ddf50f141bcde89b9ec1":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","19275ba31e621f6da1b83bf13af75233876fd3d4"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["4958642f967bfbd6f083ddf50f141bcde89b9ec1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"bca83a747f8e297ee4412c0d18bdd3a98c09df3b":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab68488225b6a6c357dda72ed11dedca9914a192":["19275ba31e621f6da1b83bf13af75233876fd3d4","bca83a747f8e297ee4412c0d18bdd3a98c09df3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50dfd19525c8d73e856dca6edb64b7aea074037f"]},"commit2Childs":{"4958642f967bfbd6f083ddf50f141bcde89b9ec1":["50dfd19525c8d73e856dca6edb64b7aea074037f"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"50dfd19525c8d73e856dca6edb64b7aea074037f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["4958642f967bfbd6f083ddf50f141bcde89b9ec1","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","bca83a747f8e297ee4412c0d18bdd3a98c09df3b","ab68488225b6a6c357dda72ed11dedca9914a192"],"bca83a747f8e297ee4412c0d18bdd3a98c09df3b":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}