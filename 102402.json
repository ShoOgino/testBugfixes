{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions(), field.docValuesType()); \n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#add(Document,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  public static void add(Document doc, FieldInfos fieldInfos) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      fieldInfos.add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":null,"sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions(), field.docValuesType()); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":null,"sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["9454a6510e2db155fb01faa5c049b06ece95fab9","1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","1224a4027481acce15495b03bce9b48b93b42722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1224a4027481acce15495b03bce9b48b93b42722"],"1224a4027481acce15495b03bce9b48b93b42722":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","ab5cb6a74aefb78aa0569857970b9151dfe2e787","1224a4027481acce15495b03bce9b48b93b42722"],"1224a4027481acce15495b03bce9b48b93b42722":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}