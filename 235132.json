{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 ||\n      deletesInRAM.numTerms != 0 ||\n      deletesInRAM.docIDs.size() != 0 ||\n      deletesInRAM.queries.size() != 0;\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 ||\n      deletesInRAM.numTerms != 0 ||\n      deletesInRAM.docIDs.size() != 0 ||\n      deletesInRAM.queries.size() != 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b832cbed6eb3d54a8bb9339296bdda8eeb53014","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 ||\n      deletesInRAM.hasDeletes();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 ||\n      deletesInRAM.numTerms != 0 ||\n      deletesInRAM.docIDs.size() != 0 ||\n      deletesInRAM.queries.size() != 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"334c1175813aea771a71728cd2c4ee4754fd0603","date":1279710173,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 ||\n      deletesInRAM.numTerms != 0 ||\n      deletesInRAM.docIDs.size() != 0 ||\n      deletesInRAM.queries.size() != 0;\n  }\n\n","sourceOld":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 ||\n      deletesInRAM.hasDeletes();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe956d65251358d755c56f14fe8380644790e47","date":1279711318,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 ||\n      deletesInRAM.hasDeletes();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 ||\n      deletesInRAM.numTerms != 0 ||\n      deletesInRAM.docIDs.size() != 0 ||\n      deletesInRAM.queries.size() != 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 || pendingDeletes.any();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 ||\n      deletesInRAM.numTerms != 0 ||\n      deletesInRAM.docIDs.size() != 0 ||\n      deletesInRAM.queries.size() != 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  synchronized boolean anyChanges() {\n    return numDocs != 0 || pendingDeletes.any();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 || pendingDeletes.any();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  synchronized boolean anyChanges() {\n    return numDocs != 0 || pendingDeletes.any();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocsInRAM != 0 ||\n      deletesInRAM.numTerms != 0 ||\n      deletesInRAM.docIDs.size() != 0 ||\n      deletesInRAM.queries.size() != 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  synchronized boolean anyChanges() {\n    // nocommit\n    return numDocsInRAM.get() != 0;\n    //return numDocsInRAM.get() != 0 || pendingDeletes.any();\n  }\n\n","sourceOld":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 ||\n      deletesInRAM.hasDeletes();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86c34ea6a885f625f2e464756450d45b72653ef3","date":1295256222,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  synchronized boolean anyChanges() {\n    return numDocsInRAM.get() != 0 || anyDeletions();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    // nocommit\n    return numDocsInRAM.get() != 0;\n    //return numDocsInRAM.get() != 0 || pendingDeletes.any();\n  }\n\n","bugFix":null,"bugIntro":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf","date":1298618128,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 || anyDeletions();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocsInRAM.get() != 0 || anyDeletions();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 || anyDeletions();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocs != 0 || pendingDeletes.any();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 || anyDeletions();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocs != 0 || pendingDeletes.any();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 || anyDeletions();\n  }\n\n","sourceOld":"  synchronized boolean anyChanges() {\n    return numDocs != 0 || pendingDeletes.any();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1c3710e755dc60691ac0d7fe23c9fcba0537bdc","date":1320437768,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    if (infoStream != null) {\n      message(\"docWriter: anyChanges? numDocsInRam=\" + numDocsInRAM.get()\n          + \" deletes=\" + anyDeletions() + \" hasTickets:\"\n          + ticketQueue.hasTickets() + \" pendingChangesInFullFlush: \"\n          + pendingChangesInCurrentFullFlush);\n    }\n    /*\n     * changes are either in a DWPT or in the deleteQueue.\n     * yet if we currently flush deletes and / or dwpt there\n     * could be a window where all changes are in the ticket queue\n     * before they are published to the IW. ie we need to check if the \n     * ticket queue has any tickets.\n     */\n    return numDocsInRAM.get() != 0 || anyDeletions() || ticketQueue.hasTickets() || pendingChangesInCurrentFullFlush;\n  }\n\n","sourceOld":"  boolean anyChanges() {\n    return numDocsInRAM.get() != 0 || anyDeletions();\n  }\n\n","bugFix":["86c34ea6a885f625f2e464756450d45b72653ef3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    if (infoStream != null) {\n      infoStream.message(\"DW\", \"anyChanges? numDocsInRam=\" + numDocsInRAM.get()\n          + \" deletes=\" + anyDeletions() + \" hasTickets:\"\n          + ticketQueue.hasTickets() + \" pendingChangesInFullFlush: \"\n          + pendingChangesInCurrentFullFlush);\n    }\n    /*\n     * changes are either in a DWPT or in the deleteQueue.\n     * yet if we currently flush deletes and / or dwpt there\n     * could be a window where all changes are in the ticket queue\n     * before they are published to the IW. ie we need to check if the \n     * ticket queue has any tickets.\n     */\n    return numDocsInRAM.get() != 0 || anyDeletions() || ticketQueue.hasTickets() || pendingChangesInCurrentFullFlush;\n  }\n\n","sourceOld":"  boolean anyChanges() {\n    if (infoStream != null) {\n      message(\"docWriter: anyChanges? numDocsInRam=\" + numDocsInRAM.get()\n          + \" deletes=\" + anyDeletions() + \" hasTickets:\"\n          + ticketQueue.hasTickets() + \" pendingChangesInFullFlush: \"\n          + pendingChangesInCurrentFullFlush);\n    }\n    /*\n     * changes are either in a DWPT or in the deleteQueue.\n     * yet if we currently flush deletes and / or dwpt there\n     * could be a window where all changes are in the ticket queue\n     * before they are published to the IW. ie we need to check if the \n     * ticket queue has any tickets.\n     */\n    return numDocsInRAM.get() != 0 || anyDeletions() || ticketQueue.hasTickets() || pendingChangesInCurrentFullFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58c6bbc222f074c844e736e6fb23647e3db9cfe3","date":1322743940,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    if (infoStream.isEnabled(\"DW\")) {\n      infoStream.message(\"DW\", \"anyChanges? numDocsInRam=\" + numDocsInRAM.get()\n          + \" deletes=\" + anyDeletions() + \" hasTickets:\"\n          + ticketQueue.hasTickets() + \" pendingChangesInFullFlush: \"\n          + pendingChangesInCurrentFullFlush);\n    }\n    /*\n     * changes are either in a DWPT or in the deleteQueue.\n     * yet if we currently flush deletes and / or dwpt there\n     * could be a window where all changes are in the ticket queue\n     * before they are published to the IW. ie we need to check if the \n     * ticket queue has any tickets.\n     */\n    return numDocsInRAM.get() != 0 || anyDeletions() || ticketQueue.hasTickets() || pendingChangesInCurrentFullFlush;\n  }\n\n","sourceOld":"  boolean anyChanges() {\n    if (infoStream != null) {\n      infoStream.message(\"DW\", \"anyChanges? numDocsInRam=\" + numDocsInRAM.get()\n          + \" deletes=\" + anyDeletions() + \" hasTickets:\"\n          + ticketQueue.hasTickets() + \" pendingChangesInFullFlush: \"\n          + pendingChangesInCurrentFullFlush);\n    }\n    /*\n     * changes are either in a DWPT or in the deleteQueue.\n     * yet if we currently flush deletes and / or dwpt there\n     * could be a window where all changes are in the ticket queue\n     * before they are published to the IW. ie we need to check if the \n     * ticket queue has any tickets.\n     */\n    return numDocsInRAM.get() != 0 || anyDeletions() || ticketQueue.hasTickets() || pendingChangesInCurrentFullFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#anyChanges().mjava","sourceNew":"  boolean anyChanges() {\n    if (infoStream.isEnabled(\"DW\")) {\n      infoStream.message(\"DW\", \"anyChanges? numDocsInRam=\" + numDocsInRAM.get()\n          + \" deletes=\" + anyDeletions() + \" hasTickets:\"\n          + ticketQueue.hasTickets() + \" pendingChangesInFullFlush: \"\n          + pendingChangesInCurrentFullFlush);\n    }\n    /*\n     * changes are either in a DWPT or in the deleteQueue.\n     * yet if we currently flush deletes and / or dwpt there\n     * could be a window where all changes are in the ticket queue\n     * before they are published to the IW. ie we need to check if the \n     * ticket queue has any tickets.\n     */\n    return numDocsInRAM.get() != 0 || anyDeletions() || ticketQueue.hasTickets() || pendingChangesInCurrentFullFlush;\n  }\n\n","sourceOld":"  boolean anyChanges() {\n    if (infoStream.isEnabled(\"DW\")) {\n      infoStream.message(\"DW\", \"anyChanges? numDocsInRam=\" + numDocsInRAM.get()\n          + \" deletes=\" + anyDeletions() + \" hasTickets:\"\n          + ticketQueue.hasTickets() + \" pendingChangesInFullFlush: \"\n          + pendingChangesInCurrentFullFlush);\n    }\n    /*\n     * changes are either in a DWPT or in the deleteQueue.\n     * yet if we currently flush deletes and / or dwpt there\n     * could be a window where all changes are in the ticket queue\n     * before they are published to the IW. ie we need to check if the \n     * ticket queue has any tickets.\n     */\n    return numDocsInRAM.get() != 0 || anyDeletions() || ticketQueue.hasTickets() || pendingChangesInCurrentFullFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["06584e6e98d592b34e1329b384182f368d2025e8"],"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["334c1175813aea771a71728cd2c4ee4754fd0603"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"06584e6e98d592b34e1329b384182f368d2025e8":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["334c1175813aea771a71728cd2c4ee4754fd0603","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"334c1175813aea771a71728cd2c4ee4754fd0603":["9b832cbed6eb3d54a8bb9339296bdda8eeb53014"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["8fe956d65251358d755c56f14fe8380644790e47","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a1c3710e755dc60691ac0d7fe23c9fcba0537bdc":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86c34ea6a885f625f2e464756450d45b72653ef3":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"8fe956d65251358d755c56f14fe8380644790e47":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf":["86c34ea6a885f625f2e464756450d45b72653ef3"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"06584e6e98d592b34e1329b384182f368d2025e8":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"334c1175813aea771a71728cd2c4ee4754fd0603":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["86c34ea6a885f625f2e464756450d45b72653ef3"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["334c1175813aea771a71728cd2c4ee4754fd0603"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a1c3710e755dc60691ac0d7fe23c9fcba0537bdc":["06584e6e98d592b34e1329b384182f368d2025e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8fe956d65251358d755c56f14fe8380644790e47":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"86c34ea6a885f625f2e464756450d45b72653ef3":["bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf"],"bfaa69f5e3b29a90ec41762bfbfa166a9e52eccf":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a3776dccca01c11e7046323cfad46a3b4a471233"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9b832cbed6eb3d54a8bb9339296bdda8eeb53014","8fe956d65251358d755c56f14fe8380644790e47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}