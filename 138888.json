{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/NumberRangePrefixTreeStrategy#calcFacets(IndexReaderContext,Bits,Shape,int).mjava","commits":[{"id":"b2c05e4efde014c90e420f5f7c2966499682635c","date":1419397169,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/NumberRangePrefixTreeStrategy#calcFacets(IndexReaderContext,Bits,Shape,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calculates facets (aggregated counts) given a range shape (start-end span) and a level, which specifies the detail.\n   * To get the level of an existing shape, say a Calendar, call\n   * {@link org.apache.lucene.spatial.prefix.tree.NumberRangePrefixTree#toUnitShape(Object)} then call\n   * {@link org.apache.lucene.spatial.prefix.tree.NumberRangePrefixTree.UnitNRShape#getLevel()}.\n   * Facet computation is implemented by navigating the underlying indexed terms efficiently.\n   */\n  public Facets calcFacets(IndexReaderContext context, final Bits acceptDocs, Shape facetRange, int level)\n      throws IOException {\n    return NumberRangePrefixTreeFacets.compute(this, context, acceptDocs, facetRange, level);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"478e85d406c2ea05f4e5028248b9a8e43f300885","date":1421346780,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/NumberRangePrefixTreeStrategy#calcFacets(IndexReaderContext,Bits,Shape,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Calculates facets (aggregated counts) given a range shape (start-end span) and a level, which specifies the detail.\n   * To get the level of an existing shape, say a Calendar, call\n   * {@link org.apache.lucene.spatial.prefix.tree.NumberRangePrefixTree#toUnitShape(Object)} then call\n   * {@link org.apache.lucene.spatial.prefix.tree.NumberRangePrefixTree.UnitNRShape#getLevel()}.\n   * Facet computation is implemented by navigating the underlying indexed terms efficiently.\n   */\n  public Facets calcFacets(IndexReaderContext context, final Bits acceptDocs, Shape facetRange, int level)\n      throws IOException {\n    return NumberRangePrefixTreeFacets.compute(this, context, acceptDocs, facetRange, level);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"478e85d406c2ea05f4e5028248b9a8e43f300885":["b2c05e4efde014c90e420f5f7c2966499682635c"],"b2c05e4efde014c90e420f5f7c2966499682635c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["478e85d406c2ea05f4e5028248b9a8e43f300885"]},"commit2Childs":{"478e85d406c2ea05f4e5028248b9a8e43f300885":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b2c05e4efde014c90e420f5f7c2966499682635c":["478e85d406c2ea05f4e5028248b9a8e43f300885"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2c05e4efde014c90e420f5f7c2966499682635c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}