{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets().mjava","commits":[{"id":"02e2650f264d07432d3cd716538163ca711df73d","date":1340003800,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimpleGroupedQueryRangeFacets() throws Exception {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3685dcafc9195b0631414aa4d422f788479e62b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c373346edd4f4f04a263a25219db1f8cbf86877b","date":1364045775,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets().mjava","sourceNew":"  @Test\n  public void testSimpleGroupedQueryRangeFacets() throws Exception {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleGroupedQueryRangeFacets() throws Exception {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":["3685dcafc9195b0631414aa4d422f788479e62b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3685dcafc9195b0631414aa4d422f788479e62b7","date":1364492243,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets().mjava","sourceNew":"  @Test\n  public void testSimpleGroupedQueryRangeFacets() throws Exception {\n    // for the purposes of our test data, it shouldn't matter \n    // if we use facet.limit -100, -1, or 100 ...\n    // our set of values is small enough either way\n    testSimpleGroupedQueryRangeFacets(\"-100\");\n    testSimpleGroupedQueryRangeFacets(\"-1\");\n    testSimpleGroupedQueryRangeFacets(\"100\");\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleGroupedQueryRangeFacets() throws Exception {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","bugFix":["c373346edd4f4f04a263a25219db1f8cbf86877b","02e2650f264d07432d3cd716538163ca711df73d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c373346edd4f4f04a263a25219db1f8cbf86877b":["02e2650f264d07432d3cd716538163ca711df73d"],"3685dcafc9195b0631414aa4d422f788479e62b7":["c373346edd4f4f04a263a25219db1f8cbf86877b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3685dcafc9195b0631414aa4d422f788479e62b7"],"02e2650f264d07432d3cd716538163ca711df73d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["02e2650f264d07432d3cd716538163ca711df73d"],"c373346edd4f4f04a263a25219db1f8cbf86877b":["3685dcafc9195b0631414aa4d422f788479e62b7"],"3685dcafc9195b0631414aa4d422f788479e62b7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"02e2650f264d07432d3cd716538163ca711df73d":["c373346edd4f4f04a263a25219db1f8cbf86877b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}