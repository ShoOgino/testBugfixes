{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms and queries are applied and flushed.\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * <p>\n   * NOTE:  This setting won't trigger a segment flush.\n   * </p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   * @see #setFlushPolicy(FlushPolicy)\n   *\n   * <p>Takes effect immediately, but only the next time a\n   * document is added, updated or deleted.\n   */\n  public IndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms and queries are applied and flushed.\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * <p>\n   * NOTE:  This setting won't trigger a segment flush.\n   * </p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   * @see #setFlushPolicy(FlushPolicy)\n   *\n   * <p>Takes effect immediately, but only the next time a\n   * document is added, updated or deleted.\n   */\n  public IndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4e54ed7cef46f86888b5fb547594f62160395c","date":1340006971,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":"  @Override\n  public IndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    return (IndexWriterConfig) super.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","sourceOld":"  /**\n   * Determines the minimal number of delete terms required before the buffered\n   * in-memory delete terms and queries are applied and flushed.\n   * <p>Disabled by default (writer flushes by RAM usage).</p>\n   * <p>\n   * NOTE:  This setting won't trigger a segment flush.\n   * </p>\n   * \n   * @throws IllegalArgumentException if maxBufferedDeleteTerms\n   * is enabled but smaller than 1\n   * @see #setRAMBufferSizeMB\n   * @see #setFlushPolicy(FlushPolicy)\n   *\n   * <p>Takes effect immediately, but only the next time a\n   * document is added, updated or deleted.\n   */\n  public IndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH\n        && maxBufferedDeleteTerms < 1)\n      throw new IllegalArgumentException(\n          \"maxBufferedDeleteTerms must at least be 1 when enabled\");\n    this.maxBufferedDeleteTerms = maxBufferedDeleteTerms;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public IndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    return (IndexWriterConfig) super.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public IndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    return (IndexWriterConfig) super.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setMaxBufferedDeleteTerms(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public IndexWriterConfig setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {\n    return (IndexWriterConfig) super.setMaxBufferedDeleteTerms(maxBufferedDeleteTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f4e54ed7cef46f86888b5fb547594f62160395c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["7f4e54ed7cef46f86888b5fb547594f62160395c","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["7f4e54ed7cef46f86888b5fb547594f62160395c","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7f4e54ed7cef46f86888b5fb547594f62160395c":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}