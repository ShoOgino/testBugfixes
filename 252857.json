{"path":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetDateInclude#parseParam(String[]).mjava","commits":[{"id":"870336f01c94cf29d0cc6d2824875c7c813b2aec","date":1272910885,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetDateInclude#parseParam(String[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Convinience method for parsing the param value according to the correct semantics.\n     */\n    public static EnumSet<FacetDateInclude> parseParam(final String[] param) {\n      // short circut for default behavior\n      if (null == param || 0 == param.length ) \n        return EnumSet.of(LOWER, UPPER, EDGE);\n\n      // build up set containing whatever is specified\n      final EnumSet<FacetDateInclude> include = EnumSet.noneOf(FacetDateInclude.class);\n      for (final String o : param) {\n        include.add(FacetDateInclude.get(o));\n      }\n\n      // if set contains all, then we're back to short circuting\n      if (include.contains(FacetDateInclude.ALL)) \n        return EnumSet.allOf(FacetDateInclude.class);\n\n      // use whatever we've got.\n      return include;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"432127b09840b2b70209e404d242e7029421ef0a","date":1280433941,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetRangeInclude#parseParam(String[]).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetDateInclude#parseParam(String[]).mjava","sourceNew":"    /**\n     * Convinience method for parsing the param value according to the \n     * correct semantics.\n     */\n    public static EnumSet<FacetRangeInclude> parseParam(final String[] param) {\n      // short circut for default behavior\n      if (null == param || 0 == param.length ) \n        return EnumSet.of(LOWER, UPPER, EDGE);\n\n      // build up set containing whatever is specified\n      final EnumSet<FacetRangeInclude> include = EnumSet.noneOf(FacetRangeInclude.class);\n      for (final String o : param) {\n        include.add(FacetRangeInclude.get(o));\n      }\n\n      // if set contains all, then we're back to short circuting\n      if (include.contains(FacetRangeInclude.ALL)) \n        return EnumSet.allOf(FacetRangeInclude.class);\n\n      // use whatever we've got.\n      return include;\n    }\n\n","sourceOld":"    /**\n     * Convinience method for parsing the param value according to the correct semantics.\n     */\n    public static EnumSet<FacetDateInclude> parseParam(final String[] param) {\n      // short circut for default behavior\n      if (null == param || 0 == param.length ) \n        return EnumSet.of(LOWER, UPPER, EDGE);\n\n      // build up set containing whatever is specified\n      final EnumSet<FacetDateInclude> include = EnumSet.noneOf(FacetDateInclude.class);\n      for (final String o : param) {\n        include.add(FacetDateInclude.get(o));\n      }\n\n      // if set contains all, then we're back to short circuting\n      if (include.contains(FacetDateInclude.ALL)) \n        return EnumSet.allOf(FacetDateInclude.class);\n\n      // use whatever we've got.\n      return include;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/common/org/apache/solr/common/params/FacetParams.FacetDateInclude#parseParam(String[]).mjava","sourceNew":null,"sourceOld":"    /**\n     * Convinience method for parsing the param value according to the correct semantics.\n     */\n    public static EnumSet<FacetDateInclude> parseParam(final String[] param) {\n      // short circut for default behavior\n      if (null == param || 0 == param.length ) \n        return EnumSet.of(LOWER, UPPER, EDGE);\n\n      // build up set containing whatever is specified\n      final EnumSet<FacetDateInclude> include = EnumSet.noneOf(FacetDateInclude.class);\n      for (final String o : param) {\n        include.add(FacetDateInclude.get(o));\n      }\n\n      // if set contains all, then we're back to short circuting\n      if (include.contains(FacetDateInclude.ALL)) \n        return EnumSet.allOf(FacetDateInclude.class);\n\n      // use whatever we've got.\n      return include;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"870336f01c94cf29d0cc6d2824875c7c813b2aec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"432127b09840b2b70209e404d242e7029421ef0a":["870336f01c94cf29d0cc6d2824875c7c813b2aec"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["870336f01c94cf29d0cc6d2824875c7c813b2aec","432127b09840b2b70209e404d242e7029421ef0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["432127b09840b2b70209e404d242e7029421ef0a"]},"commit2Childs":{"870336f01c94cf29d0cc6d2824875c7c813b2aec":["432127b09840b2b70209e404d242e7029421ef0a","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["870336f01c94cf29d0cc6d2824875c7c813b2aec"],"432127b09840b2b70209e404d242e7029421ef0a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}