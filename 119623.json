{"path":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#doTestFuncs().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#doTestFuncs().mjava","pathOld":"/dev/null","sourceNew":"  public void doTestFuncs() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"foo_d\", \"9\"));\n    assertU(commit());    \n\n    dofunc(\"1.0\", 1.0);\n    dofunc(\"e()\", Math.E);\n    dofunc(\"pi()\", Math.PI);\n    dofunc(\"add(2,3)\", 2+3);\n    dofunc(\"mul(2,3)\", 2*3);\n    dofunc(\"rad(45)\", Math.toRadians(45));\n    dofunc(\"deg(.5)\", Math.toDegrees(.5));\n    dofunc(\"sqrt(9)\", Math.sqrt(9));\n    dofunc(\"cbrt(8)\", Math.cbrt(8));\n    dofunc(\"log(100)\", Math.log10(100));\n    dofunc(\"ln(3)\", Math.log(3));\n    dofunc(\"exp(1)\", Math.exp(1));\n    dofunc(\"sin(.5)\", Math.sin(.5));\n    dofunc(\"cos(.5)\", Math.cos(.5));\n    dofunc(\"tan(.5)\", Math.tan(.5));\n    dofunc(\"asin(.5)\", Math.asin(.5));\n    dofunc(\"acos(.5)\", Math.acos(.5));\n    dofunc(\"atan(.5)\", Math.atan(.5));\n    dofunc(\"sinh(.5)\", Math.sinh(.5));\n    dofunc(\"cosh(.5)\", Math.cosh(.5));\n    dofunc(\"tanh(.5)\", Math.tanh(.5));\n    dofunc(\"ceil(2.3)\", Math.ceil(2.3));\n    dofunc(\"floor(2.3)\", Math.floor(2.3));\n    dofunc(\"rint(2.3)\", Math.rint(2.3));\n    dofunc(\"pow(2,0.5)\", Math.pow(2,0.5));\n    dofunc(\"hypot(3,4)\", Math.hypot(3,4));\n    dofunc(\"atan2(.25,.5)\", Math.atan2(.25,.5));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#doTestFuncs().mjava","sourceNew":null,"sourceOld":"  public void doTestFuncs() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"foo_d\", \"9\"));\n    assertU(commit());    \n\n    dofunc(\"1.0\", 1.0);\n    dofunc(\"e()\", Math.E);\n    dofunc(\"pi()\", Math.PI);\n    dofunc(\"add(2,3)\", 2+3);\n    dofunc(\"mul(2,3)\", 2*3);\n    dofunc(\"rad(45)\", Math.toRadians(45));\n    dofunc(\"deg(.5)\", Math.toDegrees(.5));\n    dofunc(\"sqrt(9)\", Math.sqrt(9));\n    dofunc(\"cbrt(8)\", Math.cbrt(8));\n    dofunc(\"log(100)\", Math.log10(100));\n    dofunc(\"ln(3)\", Math.log(3));\n    dofunc(\"exp(1)\", Math.exp(1));\n    dofunc(\"sin(.5)\", Math.sin(.5));\n    dofunc(\"cos(.5)\", Math.cos(.5));\n    dofunc(\"tan(.5)\", Math.tan(.5));\n    dofunc(\"asin(.5)\", Math.asin(.5));\n    dofunc(\"acos(.5)\", Math.acos(.5));\n    dofunc(\"atan(.5)\", Math.atan(.5));\n    dofunc(\"sinh(.5)\", Math.sinh(.5));\n    dofunc(\"cosh(.5)\", Math.cosh(.5));\n    dofunc(\"tanh(.5)\", Math.tanh(.5));\n    dofunc(\"ceil(2.3)\", Math.ceil(2.3));\n    dofunc(\"floor(2.3)\", Math.floor(2.3));\n    dofunc(\"rint(2.3)\", Math.rint(2.3));\n    dofunc(\"pow(2,0.5)\", Math.pow(2,0.5));\n    dofunc(\"hypot(3,4)\", Math.hypot(3,4));\n    dofunc(\"atan2(.25,.5)\", Math.atan2(.25,.5));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#doTestFuncs().mjava","pathOld":"src/test/org/apache/solr/search/function/TestFunctionQuery#doTestFuncs().mjava","sourceNew":"  public void doTestFuncs() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"foo_d\", \"9\"));\n    assertU(commit());    \n\n    dofunc(\"1.0\", 1.0);\n    dofunc(\"e()\", Math.E);\n    dofunc(\"pi()\", Math.PI);\n    dofunc(\"add(2,3)\", 2+3);\n    dofunc(\"mul(2,3)\", 2*3);\n    dofunc(\"rad(45)\", Math.toRadians(45));\n    dofunc(\"deg(.5)\", Math.toDegrees(.5));\n    dofunc(\"sqrt(9)\", Math.sqrt(9));\n    dofunc(\"cbrt(8)\", Math.cbrt(8));\n    dofunc(\"log(100)\", Math.log10(100));\n    dofunc(\"ln(3)\", Math.log(3));\n    dofunc(\"exp(1)\", Math.exp(1));\n    dofunc(\"sin(.5)\", Math.sin(.5));\n    dofunc(\"cos(.5)\", Math.cos(.5));\n    dofunc(\"tan(.5)\", Math.tan(.5));\n    dofunc(\"asin(.5)\", Math.asin(.5));\n    dofunc(\"acos(.5)\", Math.acos(.5));\n    dofunc(\"atan(.5)\", Math.atan(.5));\n    dofunc(\"sinh(.5)\", Math.sinh(.5));\n    dofunc(\"cosh(.5)\", Math.cosh(.5));\n    dofunc(\"tanh(.5)\", Math.tanh(.5));\n    dofunc(\"ceil(2.3)\", Math.ceil(2.3));\n    dofunc(\"floor(2.3)\", Math.floor(2.3));\n    dofunc(\"rint(2.3)\", Math.rint(2.3));\n    dofunc(\"pow(2,0.5)\", Math.pow(2,0.5));\n    dofunc(\"hypot(3,4)\", Math.hypot(3,4));\n    dofunc(\"atan2(.25,.5)\", Math.atan2(.25,.5));\n  }\n\n","sourceOld":"  public void doTestFuncs() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"foo_d\", \"9\"));\n    assertU(commit());    \n\n    dofunc(\"1.0\", 1.0);\n    dofunc(\"e()\", Math.E);\n    dofunc(\"pi()\", Math.PI);\n    dofunc(\"add(2,3)\", 2+3);\n    dofunc(\"mul(2,3)\", 2*3);\n    dofunc(\"rad(45)\", Math.toRadians(45));\n    dofunc(\"deg(.5)\", Math.toDegrees(.5));\n    dofunc(\"sqrt(9)\", Math.sqrt(9));\n    dofunc(\"cbrt(8)\", Math.cbrt(8));\n    dofunc(\"log(100)\", Math.log10(100));\n    dofunc(\"ln(3)\", Math.log(3));\n    dofunc(\"exp(1)\", Math.exp(1));\n    dofunc(\"sin(.5)\", Math.sin(.5));\n    dofunc(\"cos(.5)\", Math.cos(.5));\n    dofunc(\"tan(.5)\", Math.tan(.5));\n    dofunc(\"asin(.5)\", Math.asin(.5));\n    dofunc(\"acos(.5)\", Math.acos(.5));\n    dofunc(\"atan(.5)\", Math.atan(.5));\n    dofunc(\"sinh(.5)\", Math.sinh(.5));\n    dofunc(\"cosh(.5)\", Math.cosh(.5));\n    dofunc(\"tanh(.5)\", Math.tanh(.5));\n    dofunc(\"ceil(2.3)\", Math.ceil(2.3));\n    dofunc(\"floor(2.3)\", Math.floor(2.3));\n    dofunc(\"rint(2.3)\", Math.rint(2.3));\n    dofunc(\"pow(2,0.5)\", Math.pow(2,0.5));\n    dofunc(\"hypot(3,4)\", Math.hypot(3,4));\n    dofunc(\"atan2(.25,.5)\", Math.atan2(.25,.5));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#doTestFuncs().mjava","pathOld":"/dev/null","sourceNew":"  public void doTestFuncs() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"foo_d\", \"9\"));\n    assertU(commit());    \n\n    dofunc(\"1.0\", 1.0);\n    dofunc(\"e()\", Math.E);\n    dofunc(\"pi()\", Math.PI);\n    dofunc(\"add(2,3)\", 2+3);\n    dofunc(\"mul(2,3)\", 2*3);\n    dofunc(\"rad(45)\", Math.toRadians(45));\n    dofunc(\"deg(.5)\", Math.toDegrees(.5));\n    dofunc(\"sqrt(9)\", Math.sqrt(9));\n    dofunc(\"cbrt(8)\", Math.cbrt(8));\n    dofunc(\"log(100)\", Math.log10(100));\n    dofunc(\"ln(3)\", Math.log(3));\n    dofunc(\"exp(1)\", Math.exp(1));\n    dofunc(\"sin(.5)\", Math.sin(.5));\n    dofunc(\"cos(.5)\", Math.cos(.5));\n    dofunc(\"tan(.5)\", Math.tan(.5));\n    dofunc(\"asin(.5)\", Math.asin(.5));\n    dofunc(\"acos(.5)\", Math.acos(.5));\n    dofunc(\"atan(.5)\", Math.atan(.5));\n    dofunc(\"sinh(.5)\", Math.sinh(.5));\n    dofunc(\"cosh(.5)\", Math.cosh(.5));\n    dofunc(\"tanh(.5)\", Math.tanh(.5));\n    dofunc(\"ceil(2.3)\", Math.ceil(2.3));\n    dofunc(\"floor(2.3)\", Math.floor(2.3));\n    dofunc(\"rint(2.3)\", Math.rint(2.3));\n    dofunc(\"pow(2,0.5)\", Math.pow(2,0.5));\n    dofunc(\"hypot(3,4)\", Math.hypot(3,4));\n    dofunc(\"atan2(.25,.5)\", Math.atan2(.25,.5));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68759a52d8da5c4ac149c4484a1dbc071b480bb3","date":1276544744,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testFuncs().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#doTestFuncs().mjava","sourceNew":"  @Test\n  public void testFuncs() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"foo_d\", \"9\"));\n    assertU(commit());    \n\n    dofunc(\"1.0\", 1.0);\n    dofunc(\"e()\", Math.E);\n    dofunc(\"pi()\", Math.PI);\n    dofunc(\"add(2,3)\", 2+3);\n    dofunc(\"mul(2,3)\", 2*3);\n    dofunc(\"rad(45)\", Math.toRadians(45));\n    dofunc(\"deg(.5)\", Math.toDegrees(.5));\n    dofunc(\"sqrt(9)\", Math.sqrt(9));\n    dofunc(\"cbrt(8)\", Math.cbrt(8));\n    dofunc(\"log(100)\", Math.log10(100));\n    dofunc(\"ln(3)\", Math.log(3));\n    dofunc(\"exp(1)\", Math.exp(1));\n    dofunc(\"sin(.5)\", Math.sin(.5));\n    dofunc(\"cos(.5)\", Math.cos(.5));\n    dofunc(\"tan(.5)\", Math.tan(.5));\n    dofunc(\"asin(.5)\", Math.asin(.5));\n    dofunc(\"acos(.5)\", Math.acos(.5));\n    dofunc(\"atan(.5)\", Math.atan(.5));\n    dofunc(\"sinh(.5)\", Math.sinh(.5));\n    dofunc(\"cosh(.5)\", Math.cosh(.5));\n    dofunc(\"tanh(.5)\", Math.tanh(.5));\n    dofunc(\"ceil(2.3)\", Math.ceil(2.3));\n    dofunc(\"floor(2.3)\", Math.floor(2.3));\n    dofunc(\"rint(2.3)\", Math.rint(2.3));\n    dofunc(\"pow(2,0.5)\", Math.pow(2,0.5));\n    dofunc(\"hypot(3,4)\", Math.hypot(3,4));\n    dofunc(\"atan2(.25,.5)\", Math.atan2(.25,.5));\n  }\n\n","sourceOld":"  public void doTestFuncs() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"foo_d\", \"9\"));\n    assertU(commit());    \n\n    dofunc(\"1.0\", 1.0);\n    dofunc(\"e()\", Math.E);\n    dofunc(\"pi()\", Math.PI);\n    dofunc(\"add(2,3)\", 2+3);\n    dofunc(\"mul(2,3)\", 2*3);\n    dofunc(\"rad(45)\", Math.toRadians(45));\n    dofunc(\"deg(.5)\", Math.toDegrees(.5));\n    dofunc(\"sqrt(9)\", Math.sqrt(9));\n    dofunc(\"cbrt(8)\", Math.cbrt(8));\n    dofunc(\"log(100)\", Math.log10(100));\n    dofunc(\"ln(3)\", Math.log(3));\n    dofunc(\"exp(1)\", Math.exp(1));\n    dofunc(\"sin(.5)\", Math.sin(.5));\n    dofunc(\"cos(.5)\", Math.cos(.5));\n    dofunc(\"tan(.5)\", Math.tan(.5));\n    dofunc(\"asin(.5)\", Math.asin(.5));\n    dofunc(\"acos(.5)\", Math.acos(.5));\n    dofunc(\"atan(.5)\", Math.atan(.5));\n    dofunc(\"sinh(.5)\", Math.sinh(.5));\n    dofunc(\"cosh(.5)\", Math.cosh(.5));\n    dofunc(\"tanh(.5)\", Math.tanh(.5));\n    dofunc(\"ceil(2.3)\", Math.ceil(2.3));\n    dofunc(\"floor(2.3)\", Math.floor(2.3));\n    dofunc(\"rint(2.3)\", Math.rint(2.3));\n    dofunc(\"pow(2,0.5)\", Math.pow(2,0.5));\n    dofunc(\"hypot(3,4)\", Math.hypot(3,4));\n    dofunc(\"atan2(.25,.5)\", Math.atan2(.25,.5));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#doTestFuncs().mjava","sourceNew":null,"sourceOld":"  public void doTestFuncs() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"foo_d\", \"9\"));\n    assertU(commit());    \n\n    dofunc(\"1.0\", 1.0);\n    dofunc(\"e()\", Math.E);\n    dofunc(\"pi()\", Math.PI);\n    dofunc(\"add(2,3)\", 2+3);\n    dofunc(\"mul(2,3)\", 2*3);\n    dofunc(\"rad(45)\", Math.toRadians(45));\n    dofunc(\"deg(.5)\", Math.toDegrees(.5));\n    dofunc(\"sqrt(9)\", Math.sqrt(9));\n    dofunc(\"cbrt(8)\", Math.cbrt(8));\n    dofunc(\"log(100)\", Math.log10(100));\n    dofunc(\"ln(3)\", Math.log(3));\n    dofunc(\"exp(1)\", Math.exp(1));\n    dofunc(\"sin(.5)\", Math.sin(.5));\n    dofunc(\"cos(.5)\", Math.cos(.5));\n    dofunc(\"tan(.5)\", Math.tan(.5));\n    dofunc(\"asin(.5)\", Math.asin(.5));\n    dofunc(\"acos(.5)\", Math.acos(.5));\n    dofunc(\"atan(.5)\", Math.atan(.5));\n    dofunc(\"sinh(.5)\", Math.sinh(.5));\n    dofunc(\"cosh(.5)\", Math.cosh(.5));\n    dofunc(\"tanh(.5)\", Math.tanh(.5));\n    dofunc(\"ceil(2.3)\", Math.ceil(2.3));\n    dofunc(\"floor(2.3)\", Math.floor(2.3));\n    dofunc(\"rint(2.3)\", Math.rint(2.3));\n    dofunc(\"pow(2,0.5)\", Math.pow(2,0.5));\n    dofunc(\"hypot(3,4)\", Math.hypot(3,4));\n    dofunc(\"atan2(.25,.5)\", Math.atan2(.25,.5));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"68759a52d8da5c4ac149c4484a1dbc071b480bb3":["1da8d55113b689b06716246649de6f62430f15c0"],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","68759a52d8da5c4ac149c4484a1dbc071b480bb3"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68759a52d8da5c4ac149c4484a1dbc071b480bb3"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["68759a52d8da5c4ac149c4484a1dbc071b480bb3","5f4e87790277826a2aea119328600dfb07761f32"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"68759a52d8da5c4ac149c4484a1dbc071b480bb3":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f4e87790277826a2aea119328600dfb07761f32":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}