{"path":"lucene/backwards/src/test/org/apache/lucene/document/TestDocument#doAssert(Document,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/document/TestDocument#doAssert(Document,boolean).mjava","pathOld":"backwards/src/test/org/apache/lucene/document/TestDocument#doAssert(Document,boolean).mjava","sourceNew":"    private void doAssert(Document doc, boolean fromIndex)\n    {\n        String[] keywordFieldValues   = doc.getValues(\"keyword\");\n        String[] textFieldValues      = doc.getValues(\"text\");\n        String[] unindexedFieldValues = doc.getValues(\"unindexed\");\n        String[] unstoredFieldValues  = doc.getValues(\"unstored\");\n\n        assertTrue(keywordFieldValues.length   == 2);\n        assertTrue(textFieldValues.length      == 2);\n        assertTrue(unindexedFieldValues.length == 2);\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues.length  == 2);\n        }\n\n        assertTrue(keywordFieldValues[0].equals(\"test1\"));\n        assertTrue(keywordFieldValues[1].equals(\"test2\"));\n        assertTrue(textFieldValues[0].equals(\"test1\"));\n        assertTrue(textFieldValues[1].equals(\"test2\"));\n        assertTrue(unindexedFieldValues[0].equals(\"test1\"));\n        assertTrue(unindexedFieldValues[1].equals(\"test2\"));\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues[0].equals(\"test1\"));\n            assertTrue(unstoredFieldValues[1].equals(\"test2\"));\n        }\n    }\n\n","sourceOld":"    private void doAssert(Document doc, boolean fromIndex)\n    {\n        String[] keywordFieldValues   = doc.getValues(\"keyword\");\n        String[] textFieldValues      = doc.getValues(\"text\");\n        String[] unindexedFieldValues = doc.getValues(\"unindexed\");\n        String[] unstoredFieldValues  = doc.getValues(\"unstored\");\n\n        assertTrue(keywordFieldValues.length   == 2);\n        assertTrue(textFieldValues.length      == 2);\n        assertTrue(unindexedFieldValues.length == 2);\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues.length  == 2);\n        }\n\n        assertTrue(keywordFieldValues[0].equals(\"test1\"));\n        assertTrue(keywordFieldValues[1].equals(\"test2\"));\n        assertTrue(textFieldValues[0].equals(\"test1\"));\n        assertTrue(textFieldValues[1].equals(\"test2\"));\n        assertTrue(unindexedFieldValues[0].equals(\"test1\"));\n        assertTrue(unindexedFieldValues[1].equals(\"test2\"));\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues[0].equals(\"test1\"));\n            assertTrue(unstoredFieldValues[1].equals(\"test2\"));\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/document/TestDocument#doAssert(Document,boolean).mjava","sourceNew":null,"sourceOld":"    private void doAssert(Document doc, boolean fromIndex)\n    {\n        String[] keywordFieldValues   = doc.getValues(\"keyword\");\n        String[] textFieldValues      = doc.getValues(\"text\");\n        String[] unindexedFieldValues = doc.getValues(\"unindexed\");\n        String[] unstoredFieldValues  = doc.getValues(\"unstored\");\n\n        assertTrue(keywordFieldValues.length   == 2);\n        assertTrue(textFieldValues.length      == 2);\n        assertTrue(unindexedFieldValues.length == 2);\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues.length  == 2);\n        }\n\n        assertTrue(keywordFieldValues[0].equals(\"test1\"));\n        assertTrue(keywordFieldValues[1].equals(\"test2\"));\n        assertTrue(textFieldValues[0].equals(\"test1\"));\n        assertTrue(textFieldValues[1].equals(\"test2\"));\n        assertTrue(unindexedFieldValues[0].equals(\"test1\"));\n        assertTrue(unindexedFieldValues[1].equals(\"test2\"));\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues[0].equals(\"test1\"));\n            assertTrue(unstoredFieldValues[1].equals(\"test2\"));\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}