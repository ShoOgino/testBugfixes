{"path":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","date":1297938719,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.context, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId, state.context);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.context,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.context, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId, state.context);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.context,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.context, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId, state.context);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.context,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.readBufferSize, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.readBufferSize,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReader(state.dir, state.segmentInfo,\n        state.context, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId, state.context);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.context,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReaderImpl(state.dir, state.segmentInfo,\n        state.context, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId, state.context);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.context,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/mocksep/MockSepPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReader(state.dir, state.segmentInfo,\n        state.context, new MockSingleIntFactory(), state.segmentSuffix);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.segmentSuffix, state.context);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.context,\n                                                Lucene40PostingsFormat.TERMS_CACHE_SIZE,\n                                                state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    PostingsReaderBase postingsReader = new SepPostingsReader(state.dir, state.segmentInfo,\n        state.context, new MockSingleIntFactory(), state.codecId);\n\n    TermsIndexReaderBase indexReader;\n    boolean success = false;\n    try {\n      indexReader = new FixedGapTermsIndexReader(state.dir,\n                                                       state.fieldInfos,\n                                                       state.segmentInfo.name,\n                                                       state.termsIndexDivisor,\n                                                       BytesRef.getUTF8SortedAsUnicodeComparator(),\n                                                       state.codecId, state.context);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsReader.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsProducer ret = new BlockTermsReader(indexReader,\n                                                state.dir,\n                                                state.fieldInfos,\n                                                state.segmentInfo.name,\n                                                postingsReader,\n                                                state.context,\n                                                StandardCodec.TERMS_CACHE_SIZE,\n                                                state.codecId);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsReader.close();\n        } finally {\n          indexReader.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"7b91922b55d15444d554721b352861d028eb8278":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["7b91922b55d15444d554721b352861d028eb8278"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["f1bdbf92da222965b46c0a942c3857ba56e5c638","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["60ba444201d2570214b6fcf1d15600dc1a01f548","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","5d004d0e0b3f65bb40da76d476d659d7888270e8","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}