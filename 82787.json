{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntOpenHashMap).mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntOpenHashMap).mjava","pathOld":"/dev/null","sourceNew":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongOpenHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntHashMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntOpenHashMap).mjava","sourceNew":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n\n","sourceOld":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongOpenHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}