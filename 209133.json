{"path":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#testSmallerFragSizeThanPhraseQuery().mjava","commits":[{"id":"f36534a028c02b5614279462640ab4495e692b63","date":1255008883,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#testSmallerFragSizeThanPhraseQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testSmallerFragSizeThanPhraseQuery() throws Exception {\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl( \"\\\"abcdefgh jklmnopqrs\\\"\", \"abcdefgh   jklmnopqrs\" ), SimpleFragListBuilder.MIN_FRAG_CHAR_SIZE );\n    assertEquals( 1, ffl.fragInfos.size() );\n    System.out.println( ffl.fragInfos.get( 0 ).toString() );\n    assertEquals( \"subInfos=(abcdefghjklmnopqrs((0,21)))/1.0(0,21)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#testSmallerFragSizeThanPhraseQuery().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#testSmallerFragSizeThanPhraseQuery().mjava","sourceNew":"  public void testSmallerFragSizeThanPhraseQuery() throws Exception {\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl( \"\\\"abcdefgh jklmnopqrs\\\"\", \"abcdefgh   jklmnopqrs\" ), SimpleFragListBuilder.MIN_FRAG_CHAR_SIZE );\n    assertEquals( 1, ffl.fragInfos.size() );\n    if (VERBOSE) System.out.println( ffl.fragInfos.get( 0 ).toString() );\n    assertEquals( \"subInfos=(abcdefghjklmnopqrs((0,21)))/1.0(0,21)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void testSmallerFragSizeThanPhraseQuery() throws Exception {\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl( \"\\\"abcdefgh jklmnopqrs\\\"\", \"abcdefgh   jklmnopqrs\" ), SimpleFragListBuilder.MIN_FRAG_CHAR_SIZE );\n    assertEquals( 1, ffl.fragInfos.size() );\n    System.out.println( ffl.fragInfos.get( 0 ).toString() );\n    assertEquals( \"subInfos=(abcdefghjklmnopqrs((0,21)))/1.0(0,21)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#testSmallerFragSizeThanPhraseQuery().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#testSmallerFragSizeThanPhraseQuery().mjava","sourceNew":"  public void testSmallerFragSizeThanPhraseQuery() throws Exception {\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl( \"\\\"abcdefgh jklmnopqrs\\\"\", \"abcdefgh   jklmnopqrs\" ), SimpleFragListBuilder.MIN_FRAG_CHAR_SIZE );\n    assertEquals( 1, ffl.fragInfos.size() );\n    if (VERBOSE) System.out.println( ffl.fragInfos.get( 0 ).toString() );\n    assertEquals( \"subInfos=(abcdefghjklmnopqrs((0,21)))/1.0(0,21)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void testSmallerFragSizeThanPhraseQuery() throws Exception {\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl( \"\\\"abcdefgh jklmnopqrs\\\"\", \"abcdefgh   jklmnopqrs\" ), SimpleFragListBuilder.MIN_FRAG_CHAR_SIZE );\n    assertEquals( 1, ffl.fragInfos.size() );\n    if (VERBOSE) System.out.println( ffl.fragInfos.get( 0 ).toString() );\n    assertEquals( \"subInfos=(abcdefghjklmnopqrs((0,21)))/1.0(0,21)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f36534a028c02b5614279462640ab4495e692b63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"42607aa380c892dc1ec0ab26e86a575c28e13618":["f36534a028c02b5614279462640ab4495e692b63"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"f36534a028c02b5614279462640ab4495e692b63":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f36534a028c02b5614279462640ab4495e692b63"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}