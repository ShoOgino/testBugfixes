{"path":"src/java/org/apache/lucene/util/BitVector#writeDgaps(IndexOutput).mjava","commits":[{"id":"5e9c92541487f346938eae718677aac806afcdab","date":1165802618,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#writeDgaps(IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"  /** Write as a d-gaps list */\n  private void writeDgaps(IndexOutput output) throws IOException {\n    output.writeInt(-1);            // mark using d-gaps                         \n    output.writeInt(size());        // write size\n    output.writeInt(count());       // write count\n    int last=0;\n    int n = count();\n    int m = bits.length;\n    for (int i=0; i<m && n>0; i++) {\n      if (bits[i]!=0) {\n        output.writeVInt(i-last);\n        output.writeByte(bits[i]);\n        last = i;\n        n -= BYTE_COUNTS[bits[i] & 0xFF];\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BitVector#writeDgaps(IndexOutput).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#writeDgaps(IndexOutput).mjava","sourceNew":"  /** Write as a d-gaps list */\n  private void writeDgaps(IndexOutput output) throws IOException {\n    output.writeInt(-1);            // mark using d-gaps                         \n    output.writeInt(size());        // write size\n    output.writeInt(count());       // write count\n    int last=0;\n    int n = count();\n    int m = bits.length;\n    for (int i=0; i<m && n>0; i++) {\n      if (bits[i]!=0) {\n        output.writeVInt(i-last);\n        output.writeByte(bits[i]);\n        last = i;\n        n -= BYTE_COUNTS[bits[i] & 0xFF];\n      }\n    }\n  }\n\n","sourceOld":"  /** Write as a d-gaps list */\n  private void writeDgaps(IndexOutput output) throws IOException {\n    output.writeInt(-1);            // mark using d-gaps                         \n    output.writeInt(size());        // write size\n    output.writeInt(count());       // write count\n    int last=0;\n    int n = count();\n    int m = bits.length;\n    for (int i=0; i<m && n>0; i++) {\n      if (bits[i]!=0) {\n        output.writeVInt(i-last);\n        output.writeByte(bits[i]);\n        last = i;\n        n -= BYTE_COUNTS[bits[i] & 0xFF];\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e9c92541487f346938eae718677aac806afcdab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5e9c92541487f346938eae718677aac806afcdab"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e9c92541487f346938eae718677aac806afcdab"],"5e9c92541487f346938eae718677aac806afcdab":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}