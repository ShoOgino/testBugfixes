{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testEmptyCommits().mjava","commits":[{"id":"25bbd8e76cd29f2d4b262a24d6a42c754706b143","date":1365910543,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testEmptyCommits().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Verify that empty commits and/or commits with openSearcher=false \n   * on the master do not cause subsequent replication problems on the slave \n   */\n  public void testEmptyCommits() throws Exception {\n    clearIndexWithReplication();\n    \n    // add a doc to master and commit\n    index(masterClient, \"id\", \"1\", \"name\", \"empty1\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    // force replication\n    pullFromMasterToSlave();\n    // verify doc is on slave\n    rQuery(1, \"name:empty1\", slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n    // do a completely empty commit on master and force replication\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    pullFromMasterToSlave();\n\n    // add another doc and verify slave gets it\n    index(masterClient, \"id\", \"2\", \"name\", \"empty2\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    // force replication\n    pullFromMasterToSlave();\n\n    rQuery(1, \"name:empty2\", slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n    // add a third doc but don't open a new searcher on master\n    index(masterClient, \"id\", \"3\", \"name\", \"empty3\");\n    emptyUpdate(masterClient, \"commit\", \"true\", \"openSearcher\", \"false\");\n    pullFromMasterToSlave();\n    \n    // verify slave can search the doc, but master doesn't\n    rQuery(0, \"name:empty3\", masterClient);\n    rQuery(1, \"name:empty3\", slaveClient);\n\n    // final doc with hard commit, slave and master both showing all docs\n    index(masterClient, \"id\", \"4\", \"name\", \"empty4\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    pullFromMasterToSlave();\n\n    String q = \"name:(empty1 empty2 empty3 empty4)\";\n    rQuery(4, q, masterClient);\n    rQuery(4, q, slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac2f1cdbdc54a889e88543cc1d939a931cb96883","date":1420554488,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testEmptyCommits().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testEmptyCommits().mjava","sourceNew":"  /**\n   * Verify that empty commits and/or commits with openSearcher=false\n   * on the master do not cause subsequent replication problems on the slave \n   */\n  public void testEmptyCommits() throws Exception {\n    clearIndexWithReplication();\n    \n    // add a doc to master and commit\n    index(masterClient, \"id\", \"1\", \"name\", \"empty1\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    // force replication\n    pullFromMasterToSlave();\n    // verify doc is on slave\n    rQuery(1, \"name:empty1\", slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n    // do a completely empty commit on master and force replication\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    pullFromMasterToSlave();\n\n    // add another doc and verify slave gets it\n    index(masterClient, \"id\", \"2\", \"name\", \"empty2\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    // force replication\n    pullFromMasterToSlave();\n\n    rQuery(1, \"name:empty2\", slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n    // add a third doc but don't open a new searcher on master\n    index(masterClient, \"id\", \"3\", \"name\", \"empty3\");\n    emptyUpdate(masterClient, \"commit\", \"true\", \"openSearcher\", \"false\");\n    pullFromMasterToSlave();\n    \n    // verify slave can search the doc, but master doesn't\n    rQuery(0, \"name:empty3\", masterClient);\n    rQuery(1, \"name:empty3\", slaveClient);\n\n    // final doc with hard commit, slave and master both showing all docs\n    index(masterClient, \"id\", \"4\", \"name\", \"empty4\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    pullFromMasterToSlave();\n\n    String q = \"name:(empty1 empty2 empty3 empty4)\";\n    rQuery(4, q, masterClient);\n    rQuery(4, q, slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n  }\n\n","sourceOld":"  /**\n   * Verify that empty commits and/or commits with openSearcher=false \n   * on the master do not cause subsequent replication problems on the slave \n   */\n  public void testEmptyCommits() throws Exception {\n    clearIndexWithReplication();\n    \n    // add a doc to master and commit\n    index(masterClient, \"id\", \"1\", \"name\", \"empty1\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    // force replication\n    pullFromMasterToSlave();\n    // verify doc is on slave\n    rQuery(1, \"name:empty1\", slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n    // do a completely empty commit on master and force replication\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    pullFromMasterToSlave();\n\n    // add another doc and verify slave gets it\n    index(masterClient, \"id\", \"2\", \"name\", \"empty2\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    // force replication\n    pullFromMasterToSlave();\n\n    rQuery(1, \"name:empty2\", slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n    // add a third doc but don't open a new searcher on master\n    index(masterClient, \"id\", \"3\", \"name\", \"empty3\");\n    emptyUpdate(masterClient, \"commit\", \"true\", \"openSearcher\", \"false\");\n    pullFromMasterToSlave();\n    \n    // verify slave can search the doc, but master doesn't\n    rQuery(0, \"name:empty3\", masterClient);\n    rQuery(1, \"name:empty3\", slaveClient);\n\n    // final doc with hard commit, slave and master both showing all docs\n    index(masterClient, \"id\", \"4\", \"name\", \"empty4\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    pullFromMasterToSlave();\n\n    String q = \"name:(empty1 empty2 empty3 empty4)\";\n    rQuery(4, q, masterClient);\n    rQuery(4, q, slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testEmptyCommits().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testEmptyCommits().mjava","sourceNew":"  /**\n   * Verify that empty commits and/or commits with openSearcher=false\n   * on the leader do not cause subsequent replication problems on the follower\n   */\n  public void testEmptyCommits() throws Exception {\n    clearIndexWithReplication();\n    \n    // add a doc to leader and commit\n    index(leaderClient, \"id\", \"1\", \"name\", \"empty1\");\n    emptyUpdate(leaderClient, \"commit\", \"true\");\n    // force replication\n    pullFromLeaderToFollower();\n    // verify doc is on follower\n    rQuery(1, \"name:empty1\", followerClient);\n    assertVersions(leaderClient, followerClient);\n\n    // do a completely empty commit on leader and force replication\n    emptyUpdate(leaderClient, \"commit\", \"true\");\n    pullFromLeaderToFollower();\n\n    // add another doc and verify follower gets it\n    index(leaderClient, \"id\", \"2\", \"name\", \"empty2\");\n    emptyUpdate(leaderClient, \"commit\", \"true\");\n    // force replication\n    pullFromLeaderToFollower();\n\n    rQuery(1, \"name:empty2\", followerClient);\n    assertVersions(leaderClient, followerClient);\n\n    // add a third doc but don't open a new searcher on leader\n    index(leaderClient, \"id\", \"3\", \"name\", \"empty3\");\n    emptyUpdate(leaderClient, \"commit\", \"true\", \"openSearcher\", \"false\");\n    pullFromLeaderToFollower();\n    \n    // verify follower can search the doc, but leader doesn't\n    rQuery(0, \"name:empty3\", leaderClient);\n    rQuery(1, \"name:empty3\", followerClient);\n\n    // final doc with hard commit, follower and leader both showing all docs\n    index(leaderClient, \"id\", \"4\", \"name\", \"empty4\");\n    emptyUpdate(leaderClient, \"commit\", \"true\");\n    pullFromLeaderToFollower();\n\n    String q = \"name:(empty1 empty2 empty3 empty4)\";\n    rQuery(4, q, leaderClient);\n    rQuery(4, q, followerClient);\n    assertVersions(leaderClient, followerClient);\n\n  }\n\n","sourceOld":"  /**\n   * Verify that empty commits and/or commits with openSearcher=false\n   * on the master do not cause subsequent replication problems on the slave \n   */\n  public void testEmptyCommits() throws Exception {\n    clearIndexWithReplication();\n    \n    // add a doc to master and commit\n    index(masterClient, \"id\", \"1\", \"name\", \"empty1\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    // force replication\n    pullFromMasterToSlave();\n    // verify doc is on slave\n    rQuery(1, \"name:empty1\", slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n    // do a completely empty commit on master and force replication\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    pullFromMasterToSlave();\n\n    // add another doc and verify slave gets it\n    index(masterClient, \"id\", \"2\", \"name\", \"empty2\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    // force replication\n    pullFromMasterToSlave();\n\n    rQuery(1, \"name:empty2\", slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n    // add a third doc but don't open a new searcher on master\n    index(masterClient, \"id\", \"3\", \"name\", \"empty3\");\n    emptyUpdate(masterClient, \"commit\", \"true\", \"openSearcher\", \"false\");\n    pullFromMasterToSlave();\n    \n    // verify slave can search the doc, but master doesn't\n    rQuery(0, \"name:empty3\", masterClient);\n    rQuery(1, \"name:empty3\", slaveClient);\n\n    // final doc with hard commit, slave and master both showing all docs\n    index(masterClient, \"id\", \"4\", \"name\", \"empty4\");\n    emptyUpdate(masterClient, \"commit\", \"true\");\n    pullFromMasterToSlave();\n\n    String q = \"name:(empty1 empty2 empty3 empty4)\";\n    rQuery(4, q, masterClient);\n    rQuery(4, q, slaveClient);\n    assertVersions(masterClient, slaveClient);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"]},"commit2Childs":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}