{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#hashCode().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#hashCode().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#hashCode().mjava","sourceNew":"  /**\n   * Returns a hash code value for the object.\n   * \n   * @return the hash code.\n   */\n  @Override\n  public int hashCode() {\n    if (this == DEFAULT_ANALYZER) return -1218418418; // fast path\n    if (this == EXTENDED_ANALYZER) return 1303507063; // fast path\n    \n    int h = 1;\n    h = 31*h + pattern.pattern().hashCode();\n    h = 31*h + pattern.flags();\n    h = 31*h + (toLowerCase ? 1231 : 1237);\n    h = 31*h + (stopWords != null ? stopWords.hashCode() : 0);\n    return h;\n  }\n\n","sourceOld":"  /**\n   * Returns a hash code value for the object.\n   * \n   * @return the hash code.\n   */\n  @Override\n  public int hashCode() {\n    if (this == DEFAULT_ANALYZER) return -1218418418; // fast path\n    if (this == EXTENDED_ANALYZER) return 1303507063; // fast path\n    \n    int h = 1;\n    h = 31*h + pattern.pattern().hashCode();\n    h = 31*h + pattern.flags();\n    h = 31*h + (toLowerCase ? 1231 : 1237);\n    h = 31*h + (stopWords != null ? stopWords.hashCode() : 0);\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#hashCode().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#hashCode().mjava","sourceNew":"  /**\n   * Returns a hash code value for the object.\n   * \n   * @return the hash code.\n   */\n  @Override\n  public int hashCode() {\n    if (this == DEFAULT_ANALYZER) return -1218418418; // fast path\n    if (this == EXTENDED_ANALYZER) return 1303507063; // fast path\n    \n    int h = 1;\n    h = 31*h + pattern.pattern().hashCode();\n    h = 31*h + pattern.flags();\n    h = 31*h + (toLowerCase ? 1231 : 1237);\n    h = 31*h + (stopWords != null ? stopWords.hashCode() : 0);\n    return h;\n  }\n\n","sourceOld":"  /**\n   * Returns a hash code value for the object.\n   * \n   * @return the hash code.\n   */\n  @Override\n  public int hashCode() {\n    if (this == DEFAULT_ANALYZER) return -1218418418; // fast path\n    if (this == EXTENDED_ANALYZER) return 1303507063; // fast path\n    \n    int h = 1;\n    h = 31*h + pattern.pattern().hashCode();\n    h = 31*h + pattern.flags();\n    h = 31*h + (toLowerCase ? 1231 : 1237);\n    h = 31*h + (stopWords != null ? stopWords.hashCode() : 0);\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}