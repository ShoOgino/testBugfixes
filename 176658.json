{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector,Vector).mjava","commits":[{"id":"8ff44d836e8863507fa8711d2b1b2dd723516ca0","date":1461653163,"type":1,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector,Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.CrossingEdgeIterator#CrossingEdgeIterator(Plane,Plane,Plane,Membership,Membership,Vector).mjava","sourceNew":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Vector testPoint, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePoint, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePoint);\n      this.thePoint = thePoint;\n    }\n\n","sourceOld":"    public CrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Membership bound1, final Membership bound2, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = bound1;\n      this.bound2 = bound2;\n      this.thePoint = thePoint;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0","date":1461888019,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector,Vector).mjava","pathOld":"/dev/null","sourceNew":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Vector testPoint, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePoint, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePoint);\n      this.thePoint = thePoint;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector,Vector).mjava","pathOld":"/dev/null","sourceNew":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Vector testPoint, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePoint, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePoint);\n      this.thePoint = thePoint;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9f156572c6e1245055b705603088061b42ab3a1","date":1462449249,"type":5,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector,Vector).mjava","sourceNew":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePoint, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePoint);\n      this.thePoint = thePoint;\n    }\n\n","sourceOld":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Vector testPoint, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePoint, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePoint);\n      this.thePoint = thePoint;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc08f02757dd10637b16a5c65eaaef839a91a9a","date":1462455462,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector,Vector).mjava","sourceNew":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePoint, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePoint);\n      this.thePoint = thePoint;\n    }\n\n","sourceOld":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Vector testPoint, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePoint, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePoint);\n      this.thePoint = thePoint;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon.LinearCrossingEdgeIterator#LinearCrossingEdgeIterator(Plane,Plane,Plane,Vector,Vector).mjava","sourceNew":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final double thePointX, final double thePointY, final double thePointZ) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePointX, thePointY, thePointZ, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePointX, thePointY, thePointZ);\n      this.thePointX = thePointX;\n      this.thePointY = thePointY;\n      this.thePointZ = thePointZ;\n    }\n\n","sourceOld":"    public LinearCrossingEdgeIterator(final Plane plane, final Plane abovePlane, final Plane belowPlane, final Vector testPoint, final Vector thePoint) {\n      this.plane = plane;\n      this.abovePlane = abovePlane;\n      this.belowPlane = belowPlane;\n      this.bound1 = new SidedPlane(thePoint, plane, testPoint);\n      this.bound2 = new SidedPlane(testPoint, plane, thePoint);\n      this.thePoint = thePoint;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7dc08f02757dd10637b16a5c65eaaef839a91a9a":["55b50463286869f584cf849d1587a0fcd54d1dfa","f9f156572c6e1245055b705603088061b42ab3a1"],"f9f156572c6e1245055b705603088061b42ab3a1":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0","f9f156572c6e1245055b705603088061b42ab3a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8ff44d836e8863507fa8711d2b1b2dd723516ca0"],"8ff44d836e8863507fa8711d2b1b2dd723516ca0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9f156572c6e1245055b705603088061b42ab3a1"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"]},"commit2Childs":{"7dc08f02757dd10637b16a5c65eaaef839a91a9a":[],"f9f156572c6e1245055b705603088061b42ab3a1":["7dc08f02757dd10637b16a5c65eaaef839a91a9a","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0","8ff44d836e8863507fa8711d2b1b2dd723516ca0","55b50463286869f584cf849d1587a0fcd54d1dfa"],"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0":["f9f156572c6e1245055b705603088061b42ab3a1","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","55b50463286869f584cf849d1587a0fcd54d1dfa"],"8ff44d836e8863507fa8711d2b1b2dd723516ca0":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["7dc08f02757dd10637b16a5c65eaaef839a91a9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7dc08f02757dd10637b16a5c65eaaef839a91a9a","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}