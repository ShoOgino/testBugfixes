{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParallelTaxonomyArrays#ParallelTaxonomyArrays(IndexReader,ParallelTaxonomyArrays).mjava","commits":[{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParallelTaxonomyArrays#ParallelTaxonomyArrays(IndexReader,ParallelTaxonomyArrays).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParentArray#ParentArray(IndexReader,ParentArray).mjava","sourceNew":"  public ParallelTaxonomyArrays(IndexReader reader, ParallelTaxonomyArrays copyFrom) throws IOException {\n    assert copyFrom != null;\n\n    // note that copyParents.length may be equal to reader.maxDoc(). this is not a bug\n    // it may be caused if e.g. the taxonomy segments were merged, and so an updated\n    // NRT reader was obtained, even though nothing was changed. this is not very likely\n    // to happen.\n    int[] copyParents = copyFrom.parents();\n    this.parents = new int[reader.maxDoc()];\n    System.arraycopy(copyParents, 0, parents, 0, copyParents.length);\n    initParents(reader, copyParents.length);\n\n    if (copyFrom.initializedChildren) {\n      initChildrenSiblings(copyFrom);\n    }\n  }\n\n","sourceOld":"  public ParentArray(IndexReader reader, ParentArray copyFrom) throws IOException {\n    assert copyFrom != null;\n\n    // note that copyParents.length may be equal to reader.maxDoc(). this is not a bug\n    // it may be caused if e.g. the taxonomy segments were merged, and so an updated\n    // NRT reader was obtained, even though nothing was changed. this is not very likely\n    // to happen.\n    int[] copyParents = copyFrom.getArray();\n    this.parentOrdinals = new int[reader.maxDoc()];\n    System.arraycopy(copyParents, 0, parentOrdinals, 0, copyParents.length);\n    initFromReader(reader, copyParents.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParallelTaxonomyArrays#ParallelTaxonomyArrays(IndexReader,ParallelTaxonomyArrays).mjava","pathOld":"/dev/null","sourceNew":"  public ParallelTaxonomyArrays(IndexReader reader, ParallelTaxonomyArrays copyFrom) throws IOException {\n    assert copyFrom != null;\n\n    // note that copyParents.length may be equal to reader.maxDoc(). this is not a bug\n    // it may be caused if e.g. the taxonomy segments were merged, and so an updated\n    // NRT reader was obtained, even though nothing was changed. this is not very likely\n    // to happen.\n    int[] copyParents = copyFrom.parents();\n    this.parents = new int[reader.maxDoc()];\n    System.arraycopy(copyParents, 0, parents, 0, copyParents.length);\n    initParents(reader, copyParents.length);\n\n    if (copyFrom.initializedChildren) {\n      initChildrenSiblings(copyFrom);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2ae7e371df56ccde467b71db7e82066f05a5972","date":1363620258,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/TaxonomyIndexArrays#TaxonomyIndexArrays(IndexReader,TaxonomyIndexArrays).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParallelTaxonomyArrays#ParallelTaxonomyArrays(IndexReader,ParallelTaxonomyArrays).mjava","sourceNew":"  public TaxonomyIndexArrays(IndexReader reader, TaxonomyIndexArrays copyFrom) throws IOException {\n    assert copyFrom != null;\n\n    // note that copyParents.length may be equal to reader.maxDoc(). this is not a bug\n    // it may be caused if e.g. the taxonomy segments were merged, and so an updated\n    // NRT reader was obtained, even though nothing was changed. this is not very likely\n    // to happen.\n    int[] copyParents = copyFrom.parents();\n    this.parents = new int[reader.maxDoc()];\n    System.arraycopy(copyParents, 0, parents, 0, copyParents.length);\n    initParents(reader, copyParents.length);\n\n    if (copyFrom.initializedChildren) {\n      initChildrenSiblings(copyFrom);\n    }\n  }\n\n","sourceOld":"  public ParallelTaxonomyArrays(IndexReader reader, ParallelTaxonomyArrays copyFrom) throws IOException {\n    assert copyFrom != null;\n\n    // note that copyParents.length may be equal to reader.maxDoc(). this is not a bug\n    // it may be caused if e.g. the taxonomy segments were merged, and so an updated\n    // NRT reader was obtained, even though nothing was changed. this is not very likely\n    // to happen.\n    int[] copyParents = copyFrom.parents();\n    this.parents = new int[reader.maxDoc()];\n    System.arraycopy(copyParents, 0, parents, 0, copyParents.length);\n    initParents(reader, copyParents.length);\n\n    if (copyFrom.initializedChildren) {\n      initChildrenSiblings(copyFrom);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f2ae7e371df56ccde467b71db7e82066f05a5972":["3d58d08788c3fd51172ba34474cca42499d6391b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f2ae7e371df56ccde467b71db7e82066f05a5972"]},"commit2Childs":{"f2ae7e371df56ccde467b71db7e82066f05a5972":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","3d58d08788c3fd51172ba34474cca42499d6391b"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3d58d08788c3fd51172ba34474cca42499d6391b":["f2ae7e371df56ccde467b71db7e82066f05a5972","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}