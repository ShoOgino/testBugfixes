{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","commits":[{"id":"9ce667c6d3400b22523701c549c0d35e26da8b46","date":1324405053,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","pathOld":"/dev/null","sourceNew":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      final boolean didDelete = liveDocs.getAndClear(docID);\n      if (didDelete) {\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7ef72e62a8274dfe938df672f3c7c155dddbc4c","date":1327536246,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","sourceNew":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n        liveDocs.clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","sourceOld":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      final boolean didDelete = liveDocs.getAndClear(docID);\n      if (didDelete) {\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32feb7c2c571b402d2e231bd8e3b6add4af6d6eb","date":1327773585,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","sourceNew":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      assert !shared;\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n        liveDocs.clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","sourceOld":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n        liveDocs.clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8daf107908340529aa1381b475f2eb79b4f4865a","date":1327774969,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","sourceNew":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      assert !shared;\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n       ((MutableBits) liveDocs).clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","sourceOld":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      assert !shared;\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n        liveDocs.clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31","date":1327836826,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","sourceNew":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      assert !shared;\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n       ((MutableBits) liveDocs).clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","sourceOld":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      final boolean didDelete = liveDocs.getAndClear(docID);\n      if (didDelete) {\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","sourceNew":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      assert !shared;\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n       ((MutableBits) liveDocs).clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","sourceOld":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      final boolean didDelete = liveDocs.getAndClear(docID);\n      if (didDelete) {\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReadersAndLiveDocs#delete(int).mjava","sourceNew":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      assert !shared;\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n       ((MutableBits) liveDocs).clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","sourceOld":"    public synchronized boolean delete(int docID) {\n      assert liveDocs != null;\n      assert docID >= 0 && docID < liveDocs.length();\n      assert !shared;\n      final boolean didDelete = liveDocs.get(docID);\n      if (didDelete) {\n       ((MutableBits) liveDocs).clear(docID);\n        pendingDeleteCount++;\n        //System.out.println(\"  new del seg=\" + info + \" docID=\" + docID + \" pendingDelCount=\" + pendingDeleteCount + \" totDelCount=\" + (info.docCount-liveDocs.count()));\n      }\n      return didDelete;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8daf107908340529aa1381b475f2eb79b4f4865a":["32feb7c2c571b402d2e231bd8e3b6add4af6d6eb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"d7ef72e62a8274dfe938df672f3c7c155dddbc4c":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["9ce667c6d3400b22523701c549c0d35e26da8b46","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"32feb7c2c571b402d2e231bd8e3b6add4af6d6eb":["d7ef72e62a8274dfe938df672f3c7c155dddbc4c"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["9ce667c6d3400b22523701c549c0d35e26da8b46","8daf107908340529aa1381b475f2eb79b4f4865a"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"8daf107908340529aa1381b475f2eb79b4f4865a":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d7ef72e62a8274dfe938df672f3c7c155dddbc4c":["32feb7c2c571b402d2e231bd8e3b6add4af6d6eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"32feb7c2c571b402d2e231bd8e3b6add4af6d6eb":["8daf107908340529aa1381b475f2eb79b4f4865a"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fd92b8bcc88e969302510acf77bd6970da3994c4"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["d7ef72e62a8274dfe938df672f3c7c155dddbc4c","fd92b8bcc88e969302510acf77bd6970da3994c4","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}