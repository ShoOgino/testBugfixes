{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<String,Object>();\n      assert scorer != null;\n      context.put(\"scorer\", new ScoreFunctionValues(scorer));\n      context.put(\"valuesCache\", new HashMap<String, FunctionValues>());\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a397491f6601f7c45bc425f45e95c41c3a6d1ca3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<String,Object>();\n      assert scorer != null;\n      context.put(\"scorer\", new ScoreFunctionValues(scorer));\n      context.put(\"valuesCache\", new HashMap<String, FunctionValues>());\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4a2e0e19d6ee2740632e97e6248b49b1f6df7fb","date":1379734663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","sourceNew":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<String,Object>();\n      assert scorer != null;\n      context.put(\"scorer\", new ScoreFunctionValues(scorer));\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<String,Object>();\n      assert scorer != null;\n      context.put(\"scorer\", new ScoreFunctionValues(scorer));\n      context.put(\"valuesCache\", new HashMap<String, FunctionValues>());\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a397491f6601f7c45bc425f45e95c41c3a6d1ca3","date":1380651240,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","sourceNew":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<String,Object>();\n      assert scorer != null;\n      context.put(\"scorer\", scorer);\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<String,Object>();\n      assert scorer != null;\n      context.put(\"scorer\", new ScoreFunctionValues(scorer));\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","sourceNew":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<>();\n      assert scorer != null;\n      context.put(\"scorer\", scorer);\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<String,Object>();\n      assert scorer != null;\n      context.put(\"scorer\", scorer);\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","sourceNew":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<>();\n      assert scorer != null;\n      context.put(\"scorer\", scorer);\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    super.setScorer(scorer);\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<>();\n      assert scorer != null;\n      context.put(\"scorer\", scorer);\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae1ad302fc92a61505409a38838f2b1a4a2b092","date":1483787106,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","sourceNew":null,"sourceOld":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<>();\n      assert scorer != null;\n      context.put(\"scorer\", scorer);\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionComparator#setScorer(Scorer).mjava","sourceNew":null,"sourceOld":"  // TODO: change FieldComparator.setScorer to throw IOException and remove this try-catch\n  @Override\n  public void setScorer(Scorer scorer) {\n    // TODO: might be cleaner to lazy-init 'source' and set scorer after?\n    assert readerContext != null;\n    try {\n      Map<String,Object> context = new HashMap<>();\n      assert scorer != null;\n      context.put(\"scorer\", scorer);\n      scores = source.getValues(context, readerContext);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a397491f6601f7c45bc425f45e95c41c3a6d1ca3"],"c4a2e0e19d6ee2740632e97e6248b49b1f6df7fb":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["901e951cec2e6af4e503209a6721c8834db23279"],"901e951cec2e6af4e503209a6721c8834db23279":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["901e951cec2e6af4e503209a6721c8834db23279","7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"a397491f6601f7c45bc425f45e95c41c3a6d1ca3":["c4a2e0e19d6ee2740632e97e6248b49b1f6df7fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f18d4e1cdc7330101ca433af5e8564dfd894f2bf"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["901e951cec2e6af4e503209a6721c8834db23279"],"c4a2e0e19d6ee2740632e97e6248b49b1f6df7fb":["a397491f6601f7c45bc425f45e95c41c3a6d1ca3"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"901e951cec2e6af4e503209a6721c8834db23279":["7ae1ad302fc92a61505409a38838f2b1a4a2b092","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"a397491f6601f7c45bc425f45e95c41c3a6d1ca3":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["c4a2e0e19d6ee2740632e97e6248b49b1f6df7fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}