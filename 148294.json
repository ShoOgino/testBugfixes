{"path":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","commits":[{"id":"138923418367b4cadabaadb48c45f03a96cfde8b","date":1342359927,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close(); // checkindex\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close(); // checkindex\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close(); // checkindex\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","sourceNew":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.shutdown();\n    dir.close(); // checkindex\n  }\n\n","sourceOld":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close(); // checkindex\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","sourceNew":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.shutdown();\n    dir.close(); // checkindex\n  }\n\n","sourceOld":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.shutdown();\n    dir.close(); // checkindex\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","sourceNew":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close(); // checkindex\n  }\n\n","sourceOld":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.shutdown();\n    dir.close(); // checkindex\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca56618660563c407aafdbd4ee4175ba2c73e6dc","date":1448923608,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","sourceNew":"  @Test\n  public void testBogusTermVectors() throws IOException {\n    testBogusTermVectors(directory);\n  }\n\n","sourceOld":"  // LUCENE-4221: we have to let these thru, for now\n  public void testBogusTermVectors() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    ft.setStoreTermVectorOffsets(true);\n    Field field = new Field(\"foo\", \"\", ft);\n    field.setTokenStream(new CannedTokenStream(\n        new Token(\"bar\", 5, 10), new Token(\"bar\", 1, 4)\n    ));\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close(); // checkindex\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"762c80e29fe0c3bb83aabe2e64af6379273cec7b","date":1484347562,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testBogusTermVectors() throws IOException {\n    testBogusTermVectors(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"507e7decdf00981d09a74632ea30299a4ce6ba72","date":1484600874,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testBogusTermVectors().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testBogusTermVectors() throws IOException {\n    testBogusTermVectors(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","138923418367b4cadabaadb48c45f03a96cfde8b"],"762c80e29fe0c3bb83aabe2e64af6379273cec7b":["ca56618660563c407aafdbd4ee4175ba2c73e6dc"],"138923418367b4cadabaadb48c45f03a96cfde8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","138923418367b4cadabaadb48c45f03a96cfde8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["138923418367b4cadabaadb48c45f03a96cfde8b"],"ca56618660563c407aafdbd4ee4175ba2c73e6dc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"507e7decdf00981d09a74632ea30299a4ce6ba72":["ca56618660563c407aafdbd4ee4175ba2c73e6dc","762c80e29fe0c3bb83aabe2e64af6379273cec7b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["762c80e29fe0c3bb83aabe2e64af6379273cec7b"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"138923418367b4cadabaadb48c45f03a96cfde8b":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"762c80e29fe0c3bb83aabe2e64af6379273cec7b":["507e7decdf00981d09a74632ea30299a4ce6ba72","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","138923418367b4cadabaadb48c45f03a96cfde8b","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ca56618660563c407aafdbd4ee4175ba2c73e6dc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ca56618660563c407aafdbd4ee4175ba2c73e6dc":["762c80e29fe0c3bb83aabe2e64af6379273cec7b","507e7decdf00981d09a74632ea30299a4ce6ba72"],"507e7decdf00981d09a74632ea30299a4ce6ba72":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","507e7decdf00981d09a74632ea30299a4ce6ba72","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}