{"path":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/scraper/SolrStandaloneScraperTest#setupBeforeClass().mjava","commits":[{"id":"4cd8a9425419baa85ef4a56ed411ffb4c57964d3","date":1551677567,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/scraper/SolrStandaloneScraperTest#setupBeforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupBeforeClass() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    tmpSolrHome.deleteOnExit();\n\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    initCore(\"solrconfig.xml\", \"managed-schema\");\n\n    createJettyAndHarness(\n        tmpSolrHome.getAbsolutePath(),\n        \"solrconfig.xml\",\n        \"managed-schema\",\n        \"/solr\",\n        true,\n        null);\n\n    executor = ExecutorUtil.newMDCAwareFixedThreadPool(25, new DefaultSolrThreadFactory(\"solr-cloud-scraper-tests\"));\n    configuration = Helpers.loadConfiguration(\"conf/prometheus-solr-exporter-scraper-test-config.xml\");\n\n    solrClient = getHttpSolrClient(restTestHarness.getAdminURL());\n    solrScraper = new SolrStandaloneScraper(solrClient, executor);\n\n    NoOpResponseParser responseParser = new NoOpResponseParser();\n    responseParser.setWriterType(\"json\");\n\n    solrClient.setParser(responseParser);\n\n    Helpers.indexAllDocs(solrClient);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb03700c9690d16b15fb4f56f6ec36b128fd894e","date":1586745995,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/scraper/SolrStandaloneScraperTest#setupBeforeClass().mjava","pathOld":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/scraper/SolrStandaloneScraperTest#setupBeforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void setupBeforeClass() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    tmpSolrHome.deleteOnExit();\n\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    initCore(\"solrconfig.xml\", \"managed-schema\");\n\n    createJettyAndHarness(\n        tmpSolrHome.getAbsolutePath(),\n        \"solrconfig.xml\",\n        \"managed-schema\",\n        \"/solr\",\n        true,\n        null);\n\n    executor = ExecutorUtil.newMDCAwareFixedThreadPool(25, new SolrNamedThreadFactory(\"solr-cloud-scraper-tests\"));\n    configuration = Helpers.loadConfiguration(\"conf/prometheus-solr-exporter-scraper-test-config.xml\");\n\n    solrClient = getHttpSolrClient(restTestHarness.getAdminURL());\n    solrScraper = new SolrStandaloneScraper(solrClient, executor);\n\n    NoOpResponseParser responseParser = new NoOpResponseParser();\n    responseParser.setWriterType(\"json\");\n\n    solrClient.setParser(responseParser);\n\n    Helpers.indexAllDocs(solrClient);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupBeforeClass() throws Exception {\n    File tmpSolrHome = createTempDir().toFile();\n    tmpSolrHome.deleteOnExit();\n\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    initCore(\"solrconfig.xml\", \"managed-schema\");\n\n    createJettyAndHarness(\n        tmpSolrHome.getAbsolutePath(),\n        \"solrconfig.xml\",\n        \"managed-schema\",\n        \"/solr\",\n        true,\n        null);\n\n    executor = ExecutorUtil.newMDCAwareFixedThreadPool(25, new DefaultSolrThreadFactory(\"solr-cloud-scraper-tests\"));\n    configuration = Helpers.loadConfiguration(\"conf/prometheus-solr-exporter-scraper-test-config.xml\");\n\n    solrClient = getHttpSolrClient(restTestHarness.getAdminURL());\n    solrScraper = new SolrStandaloneScraper(solrClient, executor);\n\n    NoOpResponseParser responseParser = new NoOpResponseParser();\n    responseParser.setWriterType(\"json\");\n\n    solrClient.setParser(responseParser);\n\n    Helpers.indexAllDocs(solrClient);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"],"4cd8a9425419baa85ef4a56ed411ffb4c57964d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3"],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cd8a9425419baa85ef4a56ed411ffb4c57964d3":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}