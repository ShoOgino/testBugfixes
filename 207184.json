{"path":"solr/core/src/java/org/apache/solr/index/UninvertDocValuesMergePolicyFactory.UninvertingFilterCodecReader#UninvertingFilterCodecReader(CodecReader,Map[String,UninvertingReader.Type]).mjava","commits":[{"id":"6d7001ba0a3ddc786d0edd8cb60ec5e813920396","date":1489580117,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/UninvertDocValuesMergePolicyFactory.UninvertingFilterCodecReader#UninvertingFilterCodecReader(CodecReader,Map[String,UninvertingReader.Type]).mjava","pathOld":"/dev/null","sourceNew":"    public UninvertingFilterCodecReader(CodecReader in, Map<String,UninvertingReader.Type> uninversionMap) {\n      super(in);\n\n      this.uninvertingReader = new UninvertingReader(in, uninversionMap);\n      this.docValuesProducer = new DocValuesProducer() {\n\n        @Override\n        public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getNumericDocValues(field.name);\n        }\n\n        @Override\n        public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n          return uninvertingReader.getBinaryDocValues(field.name);\n        }\n\n        @Override\n        public SortedDocValues getSorted(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedDocValues(field.name);\n        }\n\n        @Override\n        public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedNumericDocValues(field.name);\n        }\n\n        @Override\n        public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedSetDocValues(field.name);\n        }\n\n        @Override\n        public void checkIntegrity() throws IOException {\n          if (!skipIntegrityCheck) {\n            uninvertingReader.checkIntegrity();\n          }\n        }\n\n        @Override\n        public void close() throws IOException {\n        }\n\n        @Override\n        public long ramBytesUsed() {\n          return 0;\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cb3a881440e661c981ce1f36d1533b359463aa","date":1489651910,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/UninvertDocValuesMergePolicyFactory.UninvertingFilterCodecReader#UninvertingFilterCodecReader(CodecReader,Map[String,UninvertingReader.Type]).mjava","pathOld":"/dev/null","sourceNew":"    public UninvertingFilterCodecReader(CodecReader in, Map<String,UninvertingReader.Type> uninversionMap) {\n      super(in);\n\n      this.uninvertingReader = new UninvertingReader(in, uninversionMap);\n      this.docValuesProducer = new DocValuesProducer() {\n\n        @Override\n        public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getNumericDocValues(field.name);\n        }\n\n        @Override\n        public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n          return uninvertingReader.getBinaryDocValues(field.name);\n        }\n\n        @Override\n        public SortedDocValues getSorted(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedDocValues(field.name);\n        }\n\n        @Override\n        public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedNumericDocValues(field.name);\n        }\n\n        @Override\n        public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedSetDocValues(field.name);\n        }\n\n        @Override\n        public void checkIntegrity() throws IOException {\n          if (!skipIntegrityCheck) {\n            uninvertingReader.checkIntegrity();\n          }\n        }\n\n        @Override\n        public void close() throws IOException {\n        }\n\n        @Override\n        public long ramBytesUsed() {\n          return 0;\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/index/UninvertDocValuesMergePolicyFactory.UninvertingFilterCodecReader#UninvertingFilterCodecReader(CodecReader,Map[String,UninvertingReader.Type]).mjava","pathOld":"/dev/null","sourceNew":"    public UninvertingFilterCodecReader(CodecReader in, Map<String,UninvertingReader.Type> uninversionMap) {\n      super(in);\n\n      this.uninvertingReader = new UninvertingReader(in, uninversionMap);\n      this.docValuesProducer = new DocValuesProducer() {\n\n        @Override\n        public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getNumericDocValues(field.name);\n        }\n\n        @Override\n        public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n          return uninvertingReader.getBinaryDocValues(field.name);\n        }\n\n        @Override\n        public SortedDocValues getSorted(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedDocValues(field.name);\n        }\n\n        @Override\n        public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedNumericDocValues(field.name);\n        }\n\n        @Override\n        public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedSetDocValues(field.name);\n        }\n\n        @Override\n        public void checkIntegrity() throws IOException {\n          if (!skipIntegrityCheck) {\n            uninvertingReader.checkIntegrity();\n          }\n        }\n\n        @Override\n        public void close() throws IOException {\n        }\n\n        @Override\n        public long ramBytesUsed() {\n          return 0;\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a07eeba66d4090af0095b50cbd1795a3d6182c1d","date":1538797239,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/UninvertDocValuesMergePolicyFactory.UninvertingFilterCodecReader#UninvertingFilterCodecReader(CodecReader,Map[String,UninvertingReader.Type]).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/UninvertDocValuesMergePolicyFactory.UninvertingFilterCodecReader#UninvertingFilterCodecReader(CodecReader,Map[String,UninvertingReader.Type]).mjava","sourceNew":"    public UninvertingFilterCodecReader(CodecReader in, Map<String,UninvertingReader.Type> uninversionMap) {\n      super(in);\n\n      this.uninvertingReader = UninvertingReader.wrap(in, uninversionMap::get);\n      this.docValuesProducer = new DocValuesProducer() {\n\n        @Override\n        public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getNumericDocValues(field.name);\n        }\n\n        @Override\n        public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n          return uninvertingReader.getBinaryDocValues(field.name);\n        }\n\n        @Override\n        public SortedDocValues getSorted(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedDocValues(field.name);\n        }\n\n        @Override\n        public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedNumericDocValues(field.name);\n        }\n\n        @Override\n        public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedSetDocValues(field.name);\n        }\n\n        @Override\n        public void checkIntegrity() throws IOException {\n          if (!skipIntegrityCheck) {\n            uninvertingReader.checkIntegrity();\n          }\n        }\n\n        @Override\n        public void close() throws IOException {\n        }\n\n        @Override\n        public long ramBytesUsed() {\n          return 0;\n        }\n      };\n    }\n\n","sourceOld":"    public UninvertingFilterCodecReader(CodecReader in, Map<String,UninvertingReader.Type> uninversionMap) {\n      super(in);\n\n      this.uninvertingReader = new UninvertingReader(in, uninversionMap);\n      this.docValuesProducer = new DocValuesProducer() {\n\n        @Override\n        public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getNumericDocValues(field.name);\n        }\n\n        @Override\n        public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n          return uninvertingReader.getBinaryDocValues(field.name);\n        }\n\n        @Override\n        public SortedDocValues getSorted(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedDocValues(field.name);\n        }\n\n        @Override\n        public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedNumericDocValues(field.name);\n        }\n\n        @Override\n        public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n          return uninvertingReader.getSortedSetDocValues(field.name);\n        }\n\n        @Override\n        public void checkIntegrity() throws IOException {\n          if (!skipIntegrityCheck) {\n            uninvertingReader.checkIntegrity();\n          }\n        }\n\n        @Override\n        public void close() throws IOException {\n        }\n\n        @Override\n        public long ramBytesUsed() {\n          return 0;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a07eeba66d4090af0095b50cbd1795a3d6182c1d":["6d7001ba0a3ddc786d0edd8cb60ec5e813920396"],"6d7001ba0a3ddc786d0edd8cb60ec5e813920396":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab68488225b6a6c357dda72ed11dedca9914a192":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b7cb3a881440e661c981ce1f36d1533b359463aa"],"b7cb3a881440e661c981ce1f36d1533b359463aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a07eeba66d4090af0095b50cbd1795a3d6182c1d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6d7001ba0a3ddc786d0edd8cb60ec5e813920396","ab68488225b6a6c357dda72ed11dedca9914a192","b7cb3a881440e661c981ce1f36d1533b359463aa"],"a07eeba66d4090af0095b50cbd1795a3d6182c1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d7001ba0a3ddc786d0edd8cb60ec5e813920396":["a07eeba66d4090af0095b50cbd1795a3d6182c1d"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"b7cb3a881440e661c981ce1f36d1533b359463aa":["ab68488225b6a6c357dda72ed11dedca9914a192"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}