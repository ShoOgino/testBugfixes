{"path":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","commits":[{"id":"1536855b62f453c22bb60258029b3b2a07b2532c","date":1385570079,"type":2,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumValueSource#getSpecificValue(String,String...).mjava","sourceNew":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","sourceOld":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","sourceNew":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","sourceOld":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8","date":1387415264,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","sourceNew":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    DimConfig dimConfig = verifyDim(dim);\n    if (path.length == 0) {\n      if (dimConfig.hierarchical && dimConfig.multiValued == false) {\n        // ok: rolled up at search time\n      } else if (dimConfig.requireDimCount && dimConfig.multiValued) {\n        // ok: we indexed all ords at index time\n      } else {\n        throw new IllegalArgumentException(\"cannot return dimension-level value alone; use getTopChildren instead\");\n      }\n    }\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","sourceOld":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","sourceNew":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    DimConfig dimConfig = verifyDim(dim);\n    if (path.length == 0) {\n      if (dimConfig.hierarchical && dimConfig.multiValued == false) {\n        // ok: rolled up at search time\n      } else if (dimConfig.requireDimCount && dimConfig.multiValued) {\n        // ok: we indexed all ords at index time\n      } else {\n        throw new IllegalArgumentException(\"cannot return dimension-level value alone; use getTopChildren instead\");\n      }\n    }\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","sourceOld":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    DimConfig dimConfig = verifyDim(dim);\n    if (path.length == 0) {\n      if (dimConfig.hierarchical && dimConfig.multiValued == false) {\n        // ok: rolled up at search time\n      } else if (dimConfig.requireDimCount && dimConfig.multiValued) {\n        // ok: we indexed all ords at index time\n      } else {\n        throw new IllegalArgumentException(\"cannot return dimension-level value alone; use getTopChildren instead\");\n      }\n    }\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["1536855b62f453c22bb60258029b3b2a07b2532c"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"1536855b62f453c22bb60258029b3b2a07b2532c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1536855b62f453c22bb60258029b3b2a07b2532c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"fd83550e4b0bdd36e7d9dca9273264100782440b":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"1536855b62f453c22bb60258029b3b2a07b2532c":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}