{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","sourceNew":"  /**\n   * The name of the category-list to put this category in, or null if this\n   * category should not be aggregatable.\n   * <P>\n   * By default, all categories are written to the same category list, but\n   * applications which know in advance that in some situations only parts\n   * of the category hierarchy needs to be counted can divide the categories\n   * into two or more different category lists.\n   * <P>\n   * If null is returned for a category, it means that this category should\n   * not appear in any category list, and thus counts for it cannot be\n   * aggregated. This category can still be used for drill-down, even though\n   * the count for it is not known.\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category);\n\n","sourceOld":"  /**\n   * The name of the category-list to put this category in, or null if this\n   * category should not be aggregatable.\n   * <P>\n   * By default, all categories are written to the same category list, but\n   * applications which know in advance that in some situations only parts\n   * of the category hierarchy needs to be counted can divide the categories\n   * into two or more different category lists.\n   * <P>\n   * If null is returned for a category, it means that this category should\n   * not appear in any category list, and thus counts for it cannot be\n   * aggregated. This category can still be used for drill-down, even though\n   * the count for it is not known.\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","sourceNew":"  /**\n   * The name of the category list to put this category in, or {@code null} if\n   * this category should not be aggregatable.\n   * <p>\n   * By default, all categories are written to the same category list, but\n   * applications which know in advance that in some situations only parts of\n   * the category hierarchy needs to be counted can divide the categories into\n   * two or more different category lists.\n   * <p>\n   * If {@code null} is returned for a category, it means that this category\n   * should not appear in any category list, and thus weights for it cannot be\n   * aggregated. This category can still be used for drill-down, even though the\n   * its weight is unknown.\n   * \n   * @see PerDimensionIndexingParams\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category) {\n    return clParams;\n  }\n\n","sourceOld":"  /**\n   * The name of the category-list to put this category in, or null if this\n   * category should not be aggregatable.\n   * <P>\n   * By default, all categories are written to the same category list, but\n   * applications which know in advance that in some situations only parts\n   * of the category hierarchy needs to be counted can divide the categories\n   * into two or more different category lists.\n   * <P>\n   * If null is returned for a category, it means that this category should\n   * not appear in any category list, and thus counts for it cannot be\n   * aggregated. This category can still be used for drill-down, even though\n   * the count for it is not known.\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","sourceNew":"  /**\n   * The name of the category list to put this category in, or {@code null} if\n   * this category should not be aggregatable.\n   * <p>\n   * By default, all categories are written to the same category list, but\n   * applications which know in advance that in some situations only parts of\n   * the category hierarchy needs to be counted can divide the categories into\n   * two or more different category lists.\n   * <p>\n   * If {@code null} is returned for a category, it means that this category\n   * should not appear in any category list, and thus weights for it cannot be\n   * aggregated. This category can still be used for drill-down, even though the\n   * its weight is unknown.\n   * \n   * @see PerDimensionIndexingParams\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category) {\n    return clParams;\n  }\n\n","sourceOld":"  /**\n   * The name of the category-list to put this category in, or null if this\n   * category should not be aggregatable.\n   * <P>\n   * By default, all categories are written to the same category list, but\n   * applications which know in advance that in some situations only parts\n   * of the category hierarchy needs to be counted can divide the categories\n   * into two or more different category lists.\n   * <P>\n   * If null is returned for a category, it means that this category should\n   * not appear in any category list, and thus counts for it cannot be\n   * aggregated. This category can still be used for drill-down, even though\n   * the count for it is not known.\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bceb02c33032dd9bbf107cd06d0b74e5db4f110a","date":1357909746,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","sourceNew":"  /**\n   * Returns the {@link CategoryListParams} for this {@link CategoryPath}. The\n   * default implementation returns the same {@link CategoryListParams} for all\n   * categories (even if {@code category} is {@code null}).\n   * \n   * @see PerDimensionIndexingParams\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category) {\n    return clParams;\n  }\n\n","sourceOld":"  /**\n   * The name of the category list to put this category in, or {@code null} if\n   * this category should not be aggregatable.\n   * <p>\n   * By default, all categories are written to the same category list, but\n   * applications which know in advance that in some situations only parts of\n   * the category hierarchy needs to be counted can divide the categories into\n   * two or more different category lists.\n   * <p>\n   * If {@code null} is returned for a category, it means that this category\n   * should not appear in any category list, and thus weights for it cannot be\n   * aggregated. This category can still be used for drill-down, even though the\n   * its weight is unknown.\n   * \n   * @see PerDimensionIndexingParams\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category) {\n    return clParams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","sourceNew":"  /**\n   * Returns the {@link CategoryListParams} for this {@link CategoryPath}. The\n   * default implementation returns the same {@link CategoryListParams} for all\n   * categories (even if {@code category} is {@code null}).\n   * \n   * @see PerDimensionIndexingParams\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category) {\n    return clParams;\n  }\n\n","sourceOld":"  /**\n   * The name of the category list to put this category in, or {@code null} if\n   * this category should not be aggregatable.\n   * <p>\n   * By default, all categories are written to the same category list, but\n   * applications which know in advance that in some situations only parts of\n   * the category hierarchy needs to be counted can divide the categories into\n   * two or more different category lists.\n   * <p>\n   * If {@code null} is returned for a category, it means that this category\n   * should not appear in any category list, and thus weights for it cannot be\n   * aggregated. This category can still be used for drill-down, even though the\n   * its weight is unknown.\n   * \n   * @see PerDimensionIndexingParams\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category) {\n    return clParams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getCategoryListParams(CategoryPath).mjava","sourceNew":"  /**\n   * Returns the {@link CategoryListParams} for this {@link CategoryPath}. The\n   * default implementation returns the same {@link CategoryListParams} for all\n   * categories (even if {@code category} is {@code null}).\n   * \n   * @see PerDimensionIndexingParams\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category) {\n    return clParams;\n  }\n\n","sourceOld":"  /**\n   * Returns the {@link CategoryListParams} for this {@link CategoryPath}. The\n   * default implementation returns the same {@link CategoryListParams} for all\n   * categories (even if {@code category} is {@code null}).\n   * \n   * @see PerDimensionIndexingParams\n   */\n  public CategoryListParams getCategoryListParams(CategoryPath category) {\n    return clParams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"607428da722dcb3e86bbd11c63de8986e6275c36":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["607428da722dcb3e86bbd11c63de8986e6275c36","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}