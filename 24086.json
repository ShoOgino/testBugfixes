{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/LessThanEvaluatorTest#ltTwoStrings().mjava","commits":[{"id":"88073e8783f450d4c0218decc2f001a1ac2c7e7c","date":1486705191,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/LessThanEvaluatorTest#ltTwoStrings().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void ltTwoStrings() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"lt(a,b)\");\n    Object result;\n    String foo = \"foo\";\n    String bar = \"bar\";\n    \n    values.clear();\n    values.put(\"a\", \"foo\");\n    values.put(\"b\", \"foo\");\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Boolean);\n    Assert.assertEquals(false, result);\n    \n    values.clear();\n    values.put(\"a\", \"foo\");\n    values.put(\"b\", \"bar\");\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Boolean);\n    Assert.assertEquals(false, result);\n    \n    values.clear();\n    values.put(\"a\", \"foo bar baz\");\n    values.put(\"b\", \"foo bar baz\");\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Boolean);\n    Assert.assertEquals(false, result);\n    \n    values.clear();\n    values.put(\"a\", \"foo bar baz\");\n    values.put(\"b\", \"foo bar jaz\");\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Boolean);\n    Assert.assertEquals(true, result);\n    \n    values.clear();\n    values.put(\"a\", foo);\n    values.put(\"b\", foo);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Boolean);\n    Assert.assertEquals(false, result);\n    \n    values.clear();\n    values.put(\"a\", foo);\n    values.put(\"b\", bar);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Boolean);\n    Assert.assertEquals(false, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"]},"commit2Childs":{"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}