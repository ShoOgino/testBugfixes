{"path":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testVeryLargeInputOfNonInertChars().mjava","commits":[{"id":"81b48d33779fd9654522a21c624c0f27e503f376","date":1504629245,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testVeryLargeInputOfNonInertChars().mjava","pathOld":"/dev/null","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-7956\n  public void testVeryLargeInputOfNonInertChars() throws Exception {\n    char[] text = new char[1000000];\n    Arrays.fill(text, 'a');\n    try (Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new KeywordTokenizer());\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    }) {\n      checkAnalysisConsistency(random(), a, false, new String(text));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21283ed01203901a7257aa4b7f0a0899c86e56e","date":1504689720,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testVeryLargeInputOfNonInertChars().mjava","pathOld":"/dev/null","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-7956\n  public void testVeryLargeInputOfNonInertChars() throws Exception {\n    char[] text = new char[1000000];\n    Arrays.fill(text, 'a');\n    try (Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new KeywordTokenizer());\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    }) {\n      checkAnalysisConsistency(random(), a, false, new String(text));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7","date":1504848000,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testVeryLargeInputOfNonInertChars().mjava","pathOld":"/dev/null","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-7956\n  public void testVeryLargeInputOfNonInertChars() throws Exception {\n    char[] text = new char[1000000];\n    Arrays.fill(text, 'a');\n    try (Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new KeywordTokenizer());\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    }) {\n      checkAnalysisConsistency(random(), a, false, new String(text));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testVeryLargeInputOfNonInertChars().mjava","pathOld":"/dev/null","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-7956\n  public void testVeryLargeInputOfNonInertChars() throws Exception {\n    char[] text = new char[1000000];\n    Arrays.fill(text, 'a');\n    try (Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new KeywordTokenizer());\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    }) {\n      checkAnalysisConsistency(random(), a, false, new String(text));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b21283ed01203901a7257aa4b7f0a0899c86e56e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81b48d33779fd9654522a21c624c0f27e503f376"],"685bd38810c206c93e9058f3c2cfa9827c086c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b21283ed01203901a7257aa4b7f0a0899c86e56e"],"81b48d33779fd9654522a21c624c0f27e503f376":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"]},"commit2Childs":{"b21283ed01203901a7257aa4b7f0a0899c86e56e":["104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"81b48d33779fd9654522a21c624c0f27e503f376":["b21283ed01203901a7257aa4b7f0a0899c86e56e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b21283ed01203901a7257aa4b7f0a0899c86e56e","685bd38810c206c93e9058f3c2cfa9827c086c27","104a3f62ee393d48b5596de76ed4d9a4e0ea6de7","81b48d33779fd9654522a21c624c0f27e503f376"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}