{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter#testEndWithShingles().mjava","commits":[{"id":"db1263335c94c357c60662f41adc87c6c3a59540","date":1526911952,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter#testEndWithShingles().mjava","pathOld":"/dev/null","sourceNew":"  public void testEndWithShingles() throws IOException {\n    TokenStream ts = whitespaceMockTokenizer(\"cyk jvboq \\u092e\\u0962\\u093f\");\n    ts = new GermanStemFilter(ts);\n    ts = new NonRandomSkippingFilter(ts, in -> new FixedShingleFilter(in, 2), true, false, true);\n    ts = new NonRandomSkippingFilter(ts, IndicNormalizationFilter::new, true);\n\n    assertTokenStreamContents(ts, new String[]{\"jvboq\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db1263335c94c357c60662f41adc87c6c3a59540":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db1263335c94c357c60662f41adc87c6c3a59540"]},"commit2Childs":{"db1263335c94c357c60662f41adc87c6c3a59540":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db1263335c94c357c60662f41adc87c6c3a59540"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}