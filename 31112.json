{"path":"src/test/org/apache/lucene/index/TestDirectoryReader#doTestDocument().mjava","commits":[{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestDirectoryReader#doTestDocument().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiSegmentReader#doTestDocument().mjava","sourceNew":"  public void doTestDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    TermFreqVector vector = reader.getTermFreqVector(0, DocHelper.TEXT_FIELD_2_KEY);\n    assertTrue(vector != null);\n    TestSegmentReader.checkNorms(reader);\n  }\n\n","sourceOld":"  public void doTestDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    TermFreqVector vector = reader.getTermFreqVector(0, DocHelper.TEXT_FIELD_2_KEY);\n    assertTrue(vector != null);\n    TestSegmentReader.checkNorms(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#doTestDocument().mjava","pathOld":"src/test/org/apache/lucene/index/TestDirectoryReader#doTestDocument().mjava","sourceNew":"  public void doTestDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    TermFreqVector vector = reader.getTermFreqVector(0, DocHelper.TEXT_FIELD_2_KEY);\n    assertTrue(vector != null);\n    TestSegmentReader.checkNorms(reader);\n  }\n\n","sourceOld":"  public void doTestDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    TermFreqVector vector = reader.getTermFreqVector(0, DocHelper.TEXT_FIELD_2_KEY);\n    assertTrue(vector != null);\n    TestSegmentReader.checkNorms(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}