{"path":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1805a9b39f81f70b33c67bd84a1d672c896ceca0","date":1271009061,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":["9079aceb3d611cfeb6922ebdf91003c30a08b745"],"bugIntro":["3a207aeb3e27baa146de0bead73cf0fd8883111c","3a207aeb3e27baa146de0bead73cf0fd8883111c","3a207aeb3e27baa146de0bead73cf0fd8883111c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6aab5206b894bf0ea232b059a45cf2de460726f","date":1284150281,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1","date":1287105540,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":null,"bugIntro":["9f53e30d1a17e72299f6e7a149cd1ca6d90b554c","9f53e30d1a17e72299f6e7a149cd1ca6d90b554c","9f53e30d1a17e72299f6e7a149cd1ca6d90b554c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/DistributedSpellCheckComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n  \tdel(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the spellcheck results\n    handle.put(\"response\", SKIP);\n    q(\"q\", \"*:*\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    \n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"toyata\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"*:*\", \"fl\", \"id,lowerfilt\", \"spellcheck.q\",\"bluo\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\");\n    query(\"q\", \"The quick reb fox jumped over the lazy brown dogs\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n    query(\"q\", \"lowerfilt:(+quock +reb)\", \"fl\", \"id,lowerfilt\", \"spellcheck\", \"true\", \"qt\", \"spellCheckCompRH\", \"shards.qt\", \"spellCheckCompRH\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", SpellCheckComponent.SPELLCHECK_COUNT, \"10\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\", SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"0\", SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\", SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"false\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d6aab5206b894bf0ea232b059a45cf2de460726f":["1805a9b39f81f70b33c67bd84a1d672c896ceca0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1805a9b39f81f70b33c67bd84a1d672c896ceca0":["1da8d55113b689b06716246649de6f62430f15c0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1805a9b39f81f70b33c67bd84a1d672c896ceca0","6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1"],"6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1":["d6aab5206b894bf0ea232b059a45cf2de460726f"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["d6aab5206b894bf0ea232b059a45cf2de460726f","6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d6aab5206b894bf0ea232b059a45cf2de460726f":["6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"1805a9b39f81f70b33c67bd84a1d672c896ceca0":["d6aab5206b894bf0ea232b059a45cf2de460726f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"6cee2d88cddadfdbf6a07ac928dfbd77bb6480c1":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"1da8d55113b689b06716246649de6f62430f15c0":["1805a9b39f81f70b33c67bd84a1d672c896ceca0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}