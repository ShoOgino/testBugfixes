{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","sourceNew":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * TokenStream <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n  }\n\n","sourceOld":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * TokenStream <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dda87e5ad7246b25d0da56a16ead95360499d86","date":1249273990,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","sourceNew":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * TokenStream <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n    this.termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    this.offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    this.posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    this.typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n    \n  }\n\n","sourceOld":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * TokenStream <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45b06c3ff8a4d9d3d751dd311e51c59303c2719c","date":1250600126,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","sourceNew":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n    this.termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    this.offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    this.posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    this.typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n    \n  }\n\n","sourceOld":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * TokenStream <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n    this.termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    this.offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    this.posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    this.typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6a10bd7a06139a7fe2285d8094a66bc2cdaeaf4","date":1252476174,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","sourceNew":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n    this.termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    this.offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    this.posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    this.typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n    this.termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    this.offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    this.posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    this.typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","sourceNew":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n    this.termAtt = addAttribute(TermAttribute.class);\n    this.offsetAtt = addAttribute(OffsetAttribute.class);\n    this.posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    this.typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n    this.termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    this.offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    this.posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    this.typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf5d35662f99ce0a5b777b6b1585aa3a3ffa8f39","date":1264946641,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","sourceNew":"  /**\n   * Constructs a ShingleFilter with the specified shingle size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    this(input, DEFAULT_MIN_SHINGLE_SIZE, maxShingleSize);\n  }\n\n","sourceOld":"  /**\n   * Constructs a ShingleFilter with the specified single size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    super(input);\n    setMaxShingleSize(maxShingleSize);\n    this.termAtt = addAttribute(TermAttribute.class);\n    this.offsetAtt = addAttribute(OffsetAttribute.class);\n    this.posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    this.typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#ShingleFilter(TokenStream,int).mjava","sourceNew":"  /**\n   * Constructs a ShingleFilter with the specified shingle size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    this(input, DEFAULT_MIN_SHINGLE_SIZE, maxShingleSize);\n  }\n\n","sourceOld":"  /**\n   * Constructs a ShingleFilter with the specified shingle size from the\n   * {@link TokenStream} <code>input</code>\n   *\n   * @param input input stream\n   * @param maxShingleSize maximum shingle size produced by the filter.\n   */\n  public ShingleFilter(TokenStream input, int maxShingleSize) {\n    this(input, DEFAULT_MIN_SHINGLE_SIZE, maxShingleSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cf5d35662f99ce0a5b777b6b1585aa3a3ffa8f39":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["f6a10bd7a06139a7fe2285d8094a66bc2cdaeaf4"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["0dda87e5ad7246b25d0da56a16ead95360499d86"],"0dda87e5ad7246b25d0da56a16ead95360499d86":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"f6a10bd7a06139a7fe2285d8094a66bc2cdaeaf4":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cf5d35662f99ce0a5b777b6b1585aa3a3ffa8f39"]},"commit2Childs":{"cf5d35662f99ce0a5b777b6b1585aa3a3ffa8f39":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["0dda87e5ad7246b25d0da56a16ead95360499d86"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["cf5d35662f99ce0a5b777b6b1585aa3a3ffa8f39"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["f6a10bd7a06139a7fe2285d8094a66bc2cdaeaf4"],"0dda87e5ad7246b25d0da56a16ead95360499d86":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"f6a10bd7a06139a7fe2285d8094a66bc2cdaeaf4":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}