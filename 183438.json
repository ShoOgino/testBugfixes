{"path":"solr/core/src/java/org/apache/solr/handler/export/PriorityQueue#lessThan(T,T).mjava","commits":[{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/PriorityQueue#lessThan(T,T).mjava","pathOld":"/dev/null","sourceNew":"  /** Determines the ordering of objects in this priority queue.  Subclasses\n   *  must define this one method.\n   *  @return <code>true</code> iff parameter <tt>a</tt> is less than parameter <tt>b</tt>.\n   */\n  protected abstract boolean lessThan(T a, T b);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/PriorityQueue#lessThan(T,T).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/export/PriorityQueue#lessThan(T,T).mjava","sourceNew":"  /** Determines the ordering of objects in this priority queue.  Subclasses\n   *  must define this one method.\n   *  @return <code>true</code> iff parameter <code>a</code> is less than parameter <code>b</code>.\n   */\n  protected abstract boolean lessThan(T a, T b);\n\n","sourceOld":"  /** Determines the ordering of objects in this priority queue.  Subclasses\n   *  must define this one method.\n   *  @return <code>true</code> iff parameter <tt>a</tt> is less than parameter <tt>b</tt>.\n   */\n  protected abstract boolean lessThan(T a, T b);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee","date":1593704090,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/export/PriorityQueue#lessThan(T,T).mjava","sourceNew":null,"sourceOld":"  /** Determines the ordering of objects in this priority queue.  Subclasses\n   *  must define this one method.\n   *  @return <code>true</code> iff parameter <code>a</code> is less than parameter <code>b</code>.\n   */\n  protected abstract boolean lessThan(T a, T b);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee"]},"commit2Childs":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee"],"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}