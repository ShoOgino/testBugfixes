{"path":"solr/core/src/test/org/apache/solr/cloud/AbstractCloudBackupRestoreTestCase#testConfigBackupOnly(String,String).mjava","commits":[{"id":"b2ad92550399520cc0148c3ee5ca087706f12da4","date":1478270512,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractCloudBackupRestoreTestCase#testConfigBackupOnly(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This test validates the backup of collection configuration using\n   *  {@linkplain CollectionAdminParams#NO_INDEX_BACKUP_STRATEGY}.\n   *\n   * @param configName The config name for the collection to be backed up.\n   * @param collectionName The name of the collection to be backed up.\n   * @throws Exception in case of errors.\n   */\n  protected void testConfigBackupOnly(String configName, String collectionName) throws Exception {\n    // This is deliberately no-op since we want to run this test only for one of the backup repository\n    // implementation (mainly to avoid redundant test execution). Currently HDFS backup repository test\n    // implements this.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractCloudBackupRestoreTestCase#testConfigBackupOnly(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This test validates the backup of collection configuration using\n   *  {@linkplain CollectionAdminParams#NO_INDEX_BACKUP_STRATEGY}.\n   *\n   * @param configName The config name for the collection to be backed up.\n   * @param collectionName The name of the collection to be backed up.\n   * @throws Exception in case of errors.\n   */\n  protected void testConfigBackupOnly(String configName, String collectionName) throws Exception {\n    // This is deliberately no-op since we want to run this test only for one of the backup repository\n    // implementation (mainly to avoid redundant test execution). Currently HDFS backup repository test\n    // implements this.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/AbstractCloudBackupRestoreTestCase#testConfigBackupOnly(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractCloudBackupRestoreTestCase#testConfigBackupOnly(String,String).mjava","sourceNew":"  /**\n   * This test validates the backup of collection configuration using\n   *  {@linkplain CollectionAdminParams#NO_INDEX_BACKUP_STRATEGY}.\n   *\n   * @param configName The config name for the collection to be backed up.\n   * @param collectionName The name of the collection to be backed up.\n   * @throws Exception in case of errors.\n   */\n  protected void testConfigBackupOnly(String configName, String collectionName) throws Exception {\n    // This is deliberately no-op since we want to run this test only for one of the backup repository\n    // implementation (mainly to avoid redundant test execution). Currently HDFS backup repository test\n    // implements this.\n  }\n\n","sourceOld":"  /**\n   * This test validates the backup of collection configuration using\n   *  {@linkplain CollectionAdminParams#NO_INDEX_BACKUP_STRATEGY}.\n   *\n   * @param configName The config name for the collection to be backed up.\n   * @param collectionName The name of the collection to be backed up.\n   * @throws Exception in case of errors.\n   */\n  protected void testConfigBackupOnly(String configName, String collectionName) throws Exception {\n    // This is deliberately no-op since we want to run this test only for one of the backup repository\n    // implementation (mainly to avoid redundant test execution). Currently HDFS backup repository test\n    // implements this.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/AbstractCloudBackupRestoreTestCase#testConfigBackupOnly(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractCloudBackupRestoreTestCase#testConfigBackupOnly(String,String).mjava","sourceNew":"  /**\n   * This test validates the backup of collection configuration using\n   *  {@linkplain CollectionAdminParams#NO_INDEX_BACKUP_STRATEGY}.\n   *\n   * @param configName The config name for the collection to be backed up.\n   * @param collectionName The name of the collection to be backed up.\n   * @throws Exception in case of errors.\n   */\n  protected void testConfigBackupOnly(String configName, String collectionName) throws Exception {\n    // This is deliberately no-op since we want to run this test only for one of the backup repository\n    // implementation (mainly to avoid redundant test execution). Currently HDFS backup repository test\n    // implements this.\n  }\n\n","sourceOld":"  /**\n   * This test validates the backup of collection configuration using\n   *  {@linkplain CollectionAdminParams#NO_INDEX_BACKUP_STRATEGY}.\n   *\n   * @param configName The config name for the collection to be backed up.\n   * @param collectionName The name of the collection to be backed up.\n   * @throws Exception in case of errors.\n   */\n  protected void testConfigBackupOnly(String configName, String collectionName) throws Exception {\n    // This is deliberately no-op since we want to run this test only for one of the backup repository\n    // implementation (mainly to avoid redundant test execution). Currently HDFS backup repository test\n    // implements this.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["b2ad92550399520cc0148c3ee5ca087706f12da4","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b2ad92550399520cc0148c3ee5ca087706f12da4"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b2ad92550399520cc0148c3ee5ca087706f12da4"],"b2ad92550399520cc0148c3ee5ca087706f12da4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["199dfa410f1fdbfd3294106b04096cce5ed34b21","b2ad92550399520cc0148c3ee5ca087706f12da4"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"b2ad92550399520cc0148c3ee5ca087706f12da4":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}