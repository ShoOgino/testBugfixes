{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#getLeafComparator(LeafReaderContext).mjava","commits":[{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#getLeafComparator(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(LeafReaderContext).mjava","sourceNew":"    @Override\n    public LeafFieldComparator getLeafComparator(LeafReaderContext context) throws IOException {\n      termsIndex = getSortedDocValues(context, field);\n      currentReaderGen++;\n\n      if (topValue != null) {\n        // Recompute topOrd/SameReader\n        int ord = termsIndex.lookupTerm(topValue);\n        if (ord >= 0) {\n          topSameReader = true;\n          topOrd = ord;\n        } else {\n          topSameReader = false;\n          topOrd = -ord-2;\n        }\n      } else {\n        topOrd = missingOrd;\n        topSameReader = true;\n      }\n      //System.out.println(\"  getLeafComparator topOrd=\" + topOrd + \" topSameReader=\" + topSameReader);\n\n      if (bottomSlot != -1) {\n        // Recompute bottomOrd/SameReader\n        setBottom(bottomSlot);\n      }\n\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator<BytesRef> setNextReader(LeafReaderContext context) throws IOException {\n      termsIndex = getSortedDocValues(context, field);\n      currentReaderGen++;\n\n      if (topValue != null) {\n        // Recompute topOrd/SameReader\n        int ord = termsIndex.lookupTerm(topValue);\n        if (ord >= 0) {\n          topSameReader = true;\n          topOrd = ord;\n        } else {\n          topSameReader = false;\n          topOrd = -ord-2;\n        }\n      } else {\n        topOrd = missingOrd;\n        topSameReader = true;\n      }\n      //System.out.println(\"  setNextReader topOrd=\" + topOrd + \" topSameReader=\" + topSameReader);\n\n      if (bottomSlot != -1) {\n        // Recompute bottomOrd/SameReader\n        setBottom(bottomSlot);\n      }\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"901e951cec2e6af4e503209a6721c8834db23279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["901e951cec2e6af4e503209a6721c8834db23279"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["901e951cec2e6af4e503209a6721c8834db23279"],"901e951cec2e6af4e503209a6721c8834db23279":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}