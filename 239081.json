{"path":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#alternateField(NamedList,SolrParams,Document,String).mjava","commits":[{"id":"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3","date":1263013040,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#alternateField(NamedList,SolrParams,Document,String).mjava","pathOld":"/dev/null","sourceNew":"  private void alternateField( NamedList docSummaries, SolrParams params, Document doc, String fieldName ){\n    String alternateField = params.getFieldParam(fieldName, HighlightParams.ALTERNATE_FIELD);\n    if (alternateField != null && alternateField.length() > 0) {\n      String[] altTexts = doc.getValues(alternateField);\n      if (altTexts != null && altTexts.length > 0){\n        int alternateFieldLen = params.getFieldInt(fieldName, HighlightParams.ALTERNATE_FIELD_LENGTH,0);\n        if( alternateFieldLen <= 0 ){\n          docSummaries.add(fieldName, altTexts);\n        }\n        else{\n          List<String> altList = new ArrayList<String>();\n          int len = 0;\n          for( String altText: altTexts ){\n            altList.add( len + altText.length() > alternateFieldLen ?\n                new String(altText.substring( 0, alternateFieldLen - len )) : altText );\n            len += altText.length();\n            if( len >= alternateFieldLen ) break;\n          }\n          docSummaries.add(fieldName, altList);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2f7e48a66cd0e0ab8ddb827c213e9480e738092d","2f7e48a66cd0e0ab8ddb827c213e9480e738092d","2f7e48a66cd0e0ab8ddb827c213e9480e738092d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#alternateField(NamedList,SolrParams,Document,String).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#alternateField(NamedList,SolrParams,Document,String).mjava","sourceNew":"  private void alternateField( NamedList docSummaries, SolrParams params, Document doc, String fieldName ){\n    String alternateField = params.getFieldParam(fieldName, HighlightParams.ALTERNATE_FIELD);\n    if (alternateField != null && alternateField.length() > 0) {\n      String[] altTexts = doc.getValues(alternateField);\n      if (altTexts != null && altTexts.length > 0){\n        int alternateFieldLen = params.getFieldInt(fieldName, HighlightParams.ALTERNATE_FIELD_LENGTH,0);\n        if( alternateFieldLen <= 0 ){\n          docSummaries.add(fieldName, altTexts);\n        }\n        else{\n          List<String> altList = new ArrayList<String>();\n          int len = 0;\n          for( String altText: altTexts ){\n            altList.add( len + altText.length() > alternateFieldLen ?\n                new String(altText.substring( 0, alternateFieldLen - len )) : altText );\n            len += altText.length();\n            if( len >= alternateFieldLen ) break;\n          }\n          docSummaries.add(fieldName, altList);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void alternateField( NamedList docSummaries, SolrParams params, Document doc, String fieldName ){\n    String alternateField = params.getFieldParam(fieldName, HighlightParams.ALTERNATE_FIELD);\n    if (alternateField != null && alternateField.length() > 0) {\n      String[] altTexts = doc.getValues(alternateField);\n      if (altTexts != null && altTexts.length > 0){\n        int alternateFieldLen = params.getFieldInt(fieldName, HighlightParams.ALTERNATE_FIELD_LENGTH,0);\n        if( alternateFieldLen <= 0 ){\n          docSummaries.add(fieldName, altTexts);\n        }\n        else{\n          List<String> altList = new ArrayList<String>();\n          int len = 0;\n          for( String altText: altTexts ){\n            altList.add( len + altText.length() > alternateFieldLen ?\n                new String(altText.substring( 0, alternateFieldLen - len )) : altText );\n            len += altText.length();\n            if( len >= alternateFieldLen ) break;\n          }\n          docSummaries.add(fieldName, altList);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3"],"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}