{"path":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","commits":[{"id":"c7c43bd440d08d05f1c7db15f7f4001790db5859","date":1373064328,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(File).mjava","sourceNew":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromFile(File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    String solrHome = configFile.getParent();\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome);\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","sourceNew":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(inputStream, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      return fromInputStream(loader, new ByteArrayInputStream(baos.toByteArray()), configFile, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","pathOld":"/dev/null","sourceNew":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(inputStream, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      return fromInputStream(loader, new ByteArrayInputStream(baos.toByteArray()), configFile, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7917a219001fa51c4289d6a8e1a98606995170b7","date":1376673362,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","sourceNew":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(inputStream, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      return fromInputStream(loader, new ByteArrayInputStream(baos.toByteArray()), configFile, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","bugFix":null,"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","sourceNew":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(inputStream, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      return fromInputStream(loader, new ByteArrayInputStream(baos.toByteArray()), configFile, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","date":1377475564,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","sourceNew":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"solr.xml does not exist in \" + configFile.getAbsolutePath() + \" cannot start Solr\");\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","bugFix":["7116474e2e390259937401cf928323e0cbc75e60"],"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","sourceNew":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"solr.xml does not exist in \" + configFile.getAbsolutePath() + \" cannot start Solr\");\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        log.info(\"{} does not exist, using default configuration\", configFile.getAbsolutePath());\n        inputStream = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(Charsets.UTF_8));\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(inputStream, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      return fromInputStream(loader, new ByteArrayInputStream(baos.toByteArray()), configFile, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","sourceNew":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    if (!configFile.exists()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"solr.xml does not exist in \" + configFile.getAbsolutePath() + \" cannot start Solr\");\n    }\n\n    try (InputStream inputStream = new FileInputStream(configFile)) {\n      return fromInputStream(loader, inputStream);\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception exc) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", exc);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    InputStream inputStream = null;\n\n    try {\n      if (!configFile.exists()) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"solr.xml does not exist in \" + configFile.getAbsolutePath() + \" cannot start Solr\");\n      }\n      else {\n        inputStream = new FileInputStream(configFile);\n      }\n      return fromInputStream(loader, inputStream);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", e);\n    }\n    finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n  }\n\n","bugFix":["7116474e2e390259937401cf928323e0cbc75e60","7917a219001fa51c4289d6a8e1a98606995170b7","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromFile(SolrResourceLoader,File).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","sourceNew":"  public static NodeConfig fromFile(SolrResourceLoader loader, File configFile) {\n\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    if (!configFile.exists()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"solr.xml does not exist in \" + configFile.getAbsolutePath() + \" cannot start Solr\");\n    }\n\n    try (InputStream inputStream = new FileInputStream(configFile)) {\n      return fromInputStream(loader, inputStream);\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception exc) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", exc);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    if (!configFile.exists()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"solr.xml does not exist in \" + configFile.getAbsolutePath() + \" cannot start Solr\");\n    }\n\n    try (InputStream inputStream = new FileInputStream(configFile)) {\n      return fromInputStream(loader, inputStream);\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception exc) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", exc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromFile(SolrResourceLoader,File).mjava","sourceNew":null,"sourceOld":"  public static ConfigSolr fromFile(SolrResourceLoader loader, File configFile) {\n    log.info(\"Loading container configuration from {}\", configFile.getAbsolutePath());\n\n    if (!configFile.exists()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"solr.xml does not exist in \" + configFile.getAbsolutePath() + \" cannot start Solr\");\n    }\n\n    try (InputStream inputStream = new FileInputStream(configFile)) {\n      return fromInputStream(loader, inputStream);\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception exc) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Could not load SOLR configuration\", exc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7c43bd440d08d05f1c7db15f7f4001790db5859":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a877077e0a22a42eebce7d1052c58e97d3afb12d","e15199583d3635cb940942caed05132dd6c4c7c6"],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["7917a219001fa51c4289d6a8e1a98606995170b7"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["37a0f60745e53927c4c876cfe5b5a58170f0646c","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"31d4861802ca404d78ca1d15f4550eec415b9199":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","7917a219001fa51c4289d6a8e1a98606995170b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"7917a219001fa51c4289d6a8e1a98606995170b7":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["c7c43bd440d08d05f1c7db15f7f4001790db5859"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e15199583d3635cb940942caed05132dd6c4c7c6"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a877077e0a22a42eebce7d1052c58e97d3afb12d"]},"commit2Childs":{"c7c43bd440d08d05f1c7db15f7f4001790db5859":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","a877077e0a22a42eebce7d1052c58e97d3afb12d"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7c43bd440d08d05f1c7db15f7f4001790db5859","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"7917a219001fa51c4289d6a8e1a98606995170b7":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","31d4861802ca404d78ca1d15f4550eec415b9199"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","31d4861802ca404d78ca1d15f4550eec415b9199","7917a219001fa51c4289d6a8e1a98606995170b7"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}