{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/util/SimpleCharArrayReader#skip(long).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/util/SimpleCharArrayReader#skip(long).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Skips <code>n</code> bytes of input from this input stream. Fewer \n     * bytes might be skipped if the end of the input stream is reached. \n     * The actual number <code>k</code>\n     * of bytes to be skipped is equal to the smaller\n     * of <code>n</code> and  <code>count-pos</code>.\n     * The value <code>k</code> is added into <code>pos</code>\n     * and <code>k</code> is returned.\n     *\n     * @param   n   the number of bytes to be skipped.\n     * @return  the actual number of bytes skipped.\n     */\n    public  long skip(long n) \n\t{\n\t\tif (pos + n > count) \n\t\t{\n\t\t    n = count - pos;\n\t\t}\n\t\tif (n < 0) \n\t\t{\n\t\t    return 0;\n\t\t}\n\t\tpos += n;\n\t\treturn n;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21b526e3e9974b2651365fbae52a976e6fc77aa4","date":1022108962,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/util/SimpleCharArrayReader#skip(long).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/util/SimpleCharArrayReader#skip(long).mjava","sourceNew":"    /**\n     * Skips <code>n</code> bytes of input from this input stream. Fewer\n     * bytes might be skipped if the end of the input stream is reached.\n     * The actual number <code>k</code>\n     * of bytes to be skipped is equal to the smaller\n     * of <code>n</code> and  <code>count-pos</code>.\n     * The value <code>k</code> is added into <code>pos</code>\n     * and <code>k</code> is returned.\n     *\n     * @param   n   the number of bytes to be skipped.\n     * @return  the actual number of bytes skipped.\n     */\n    public  long skip(long n)\n    {\n        if (pos + n > count)\n        {\n            n = count - pos;\n        }\n        if (n < 0)\n        {\n            return 0;\n        }\n        pos += n;\n        return n;\n    }\n\n","sourceOld":"    /**\n     * Skips <code>n</code> bytes of input from this input stream. Fewer \n     * bytes might be skipped if the end of the input stream is reached. \n     * The actual number <code>k</code>\n     * of bytes to be skipped is equal to the smaller\n     * of <code>n</code> and  <code>count-pos</code>.\n     * The value <code>k</code> is added into <code>pos</code>\n     * and <code>k</code> is returned.\n     *\n     * @param   n   the number of bytes to be skipped.\n     * @return  the actual number of bytes skipped.\n     */\n    public  long skip(long n) \n\t{\n\t\tif (pos + n > count) \n\t\t{\n\t\t    n = count - pos;\n\t\t}\n\t\tif (n < 0) \n\t\t{\n\t\t    return 0;\n\t\t}\n\t\tpos += n;\n\t\treturn n;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/util/SimpleCharArrayReader#skip(long).mjava","sourceNew":null,"sourceOld":"    /**\n     * Skips <code>n</code> bytes of input from this input stream. Fewer\n     * bytes might be skipped if the end of the input stream is reached.\n     * The actual number <code>k</code>\n     * of bytes to be skipped is equal to the smaller\n     * of <code>n</code> and  <code>count-pos</code>.\n     * The value <code>k</code> is added into <code>pos</code>\n     * and <code>k</code> is returned.\n     *\n     * @param   n   the number of bytes to be skipped.\n     * @return  the actual number of bytes skipped.\n     */\n    public  long skip(long n)\n    {\n        if (pos + n > count)\n        {\n            n = count - pos;\n        }\n        if (n < 0)\n        {\n            return 0;\n        }\n        pos += n;\n        return n;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21b526e3e9974b2651365fbae52a976e6fc77aa4":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"21b526e3e9974b2651365fbae52a976e6fc77aa4":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}