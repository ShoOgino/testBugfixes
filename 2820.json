{"path":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testScores().mjava","commits":[{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testScores().mjava","pathOld":"/dev/null","sourceNew":"  public void testScores() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"f\", \"a\", Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new StringField(\"f\", \"b\", Store.NO));\n    for (int i = 0; i < 10; ++i) {\n      w.addDocument(doc);\n    }\n\n    IndexReader reader = w.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    SynonymQuery query = new SynonymQuery(new Term(\"f\", \"a\"), new Term(\"f\", \"b\"));\n\n    TopDocs topDocs = searcher.search(query, 20);\n    assertEquals(11, topDocs.totalHits);\n    // All docs must have the same score\n    for (int i = 0; i < topDocs.scoreDocs.length; ++i) {\n      assertEquals(topDocs.scoreDocs[0].score, topDocs.scoreDocs[i].score, 0.0f);\n    }\n\n    reader.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f2c13220a828a78007cedb364e22dd8986ed650","date":1527233410,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testScores().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testScores().mjava","sourceNew":"  public void testScores() throws IOException {\n    doTestScores(false);\n    doTestScores(true);\n  }\n\n","sourceOld":"  public void testScores() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"f\", \"a\", Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new StringField(\"f\", \"b\", Store.NO));\n    for (int i = 0; i < 10; ++i) {\n      w.addDocument(doc);\n    }\n\n    IndexReader reader = w.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    SynonymQuery query = new SynonymQuery(new Term(\"f\", \"a\"), new Term(\"f\", \"b\"));\n\n    TopDocs topDocs = searcher.search(query, 20);\n    assertEquals(11, topDocs.totalHits);\n    // All docs must have the same score\n    for (int i = 0; i < topDocs.scoreDocs.length; ++i) {\n      assertEquals(topDocs.scoreDocs[0].score, topDocs.scoreDocs[i].score, 0.0f);\n    }\n\n    reader.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe3c6364bed04a73ad0884b05401d80ce96027a9","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testScores().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSynonymQuery#testScores().mjava","sourceNew":"  public void testScores() throws IOException {\n    doTestScores(2);\n    doTestScores(Integer.MAX_VALUE);\n  }\n\n","sourceOld":"  public void testScores() throws IOException {\n    doTestScores(false);\n    doTestScores(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f2c13220a828a78007cedb364e22dd8986ed650":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe3c6364bed04a73ad0884b05401d80ce96027a9"],"fe3c6364bed04a73ad0884b05401d80ce96027a9":["2f2c13220a828a78007cedb364e22dd8986ed650"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"2f2c13220a828a78007cedb364e22dd8986ed650":["fe3c6364bed04a73ad0884b05401d80ce96027a9"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["2f2c13220a828a78007cedb364e22dd8986ed650"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"fe3c6364bed04a73ad0884b05401d80ce96027a9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}