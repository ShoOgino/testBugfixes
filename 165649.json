{"path":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","commits":[{"id":"0667c7011259c2634991cf172c550f2c411df2ae","date":1350053156,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","pathOld":"/dev/null","sourceNew":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6efad415dcdbcca7d440f909743e6e3152eeb6c0","date":1350055371,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","pathOld":"/dev/null","sourceNew":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d82832af39f94dbb58a3130fd216ff1d49435589","date":1350147242,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","pathOld":"/dev/null","sourceNew":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","sourceNew":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n  }\n\n","sourceOld":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cb61792cbeba6c44e2530ca5836b96d956adb25","date":1372469272,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","sourceNew":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof PrintStreamInfoStream);\n  }\n\n","sourceOld":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddd7debaaa66447dc4b40413599ea8e3830cfdfd","date":1372775804,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","sourceNew":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof LoggingInfoStream);\n  }\n\n","sourceOld":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof PrintStreamInfoStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","sourceNew":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof LoggingInfoStream);\n  }\n\n","sourceOld":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505b4ec77395cb555366a54a97b24b0906a3d056","date":1375203457,"type":6,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#checkIndexWriterConfig(LiveIndexWriterConfig).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","sourceNew":"  private void checkIndexWriterConfig(LiveIndexWriterConfig iwc) {\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof LoggingInfoStream);\n    assertTrue(iwc.getMergePolicy().getClass().toString(),\n               iwc.getMergePolicy() instanceof RandomMergePolicy);\n\n  }\n\n","sourceOld":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof LoggingInfoStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505b4ec77395cb555366a54a97b24b0906a3d056","date":1375203457,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfigParsing().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","sourceNew":"  public void testIndexConfigParsing() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    checkIndexWriterConfig(iwc);\n  }\n\n","sourceOld":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof LoggingInfoStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":6,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#checkIndexWriterConfig(LiveIndexWriterConfig).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","sourceNew":"  private void checkIndexWriterConfig(LiveIndexWriterConfig iwc) {\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof LoggingInfoStream);\n    assertTrue(iwc.getMergePolicy().getClass().toString(),\n               iwc.getMergePolicy() instanceof RandomMergePolicy);\n\n  }\n\n","sourceOld":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof LoggingInfoStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":5,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfigParsing().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrIndexConfig#testIndexConfig().mjava","sourceNew":"  public void testIndexConfigParsing() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    checkIndexWriterConfig(iwc);\n  }\n\n","sourceOld":"  public void testIndexConfig() throws Exception {\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    assertEquals(123, iwc.getMaxThreadStates());\n    assertTrue(iwc.getInfoStream() instanceof LoggingInfoStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ddd7debaaa66447dc4b40413599ea8e3830cfdfd":["1cb61792cbeba6c44e2530ca5836b96d956adb25"],"505b4ec77395cb555366a54a97b24b0906a3d056":["ddd7debaaa66447dc4b40413599ea8e3830cfdfd"],"1cb61792cbeba6c44e2530ca5836b96d956adb25":["08970e5b8411182a29412c177eff67ec1110095b"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","505b4ec77395cb555366a54a97b24b0906a3d056"],"0667c7011259c2634991cf172c550f2c411df2ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["08970e5b8411182a29412c177eff67ec1110095b","ddd7debaaa66447dc4b40413599ea8e3830cfdfd"],"d82832af39f94dbb58a3130fd216ff1d49435589":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0667c7011259c2634991cf172c550f2c411df2ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["505b4ec77395cb555366a54a97b24b0906a3d056"],"08970e5b8411182a29412c177eff67ec1110095b":["0667c7011259c2634991cf172c550f2c411df2ae"],"6efad415dcdbcca7d440f909743e6e3152eeb6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0667c7011259c2634991cf172c550f2c411df2ae"]},"commit2Childs":{"ddd7debaaa66447dc4b40413599ea8e3830cfdfd":["505b4ec77395cb555366a54a97b24b0906a3d056","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"1cb61792cbeba6c44e2530ca5836b96d956adb25":["ddd7debaaa66447dc4b40413599ea8e3830cfdfd"],"505b4ec77395cb555366a54a97b24b0906a3d056":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"0667c7011259c2634991cf172c550f2c411df2ae":["d82832af39f94dbb58a3130fd216ff1d49435589","08970e5b8411182a29412c177eff67ec1110095b","6efad415dcdbcca7d440f909743e6e3152eeb6c0"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"d82832af39f94dbb58a3130fd216ff1d49435589":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0667c7011259c2634991cf172c550f2c411df2ae","d82832af39f94dbb58a3130fd216ff1d49435589","6efad415dcdbcca7d440f909743e6e3152eeb6c0"],"08970e5b8411182a29412c177eff67ec1110095b":["1cb61792cbeba6c44e2530ca5836b96d956adb25","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6efad415dcdbcca7d440f909743e6e3152eeb6c0":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","d82832af39f94dbb58a3130fd216ff1d49435589","cd5edd1f2b162a5cfa08efd17851a07373a96817","6efad415dcdbcca7d440f909743e6e3152eeb6c0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}