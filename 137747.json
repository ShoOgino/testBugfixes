{"path":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","sourceNew":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertFalse(r.getTopReaderContext().isAtomic);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getTopReaderContext().reader;\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    assertFalse(r.getTopReaderContext().isAtomic);  //still more than 1 segment\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertFalse(r.getTopReaderContext().isAtomic);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getTopReaderContext().reader;\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    assertFalse(r.getTopReaderContext().isAtomic);  //still more than 1 segment\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","sourceNew":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertFalse(r.getTopReaderContext().isAtomic);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getTopReaderContext().reader;\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    assertFalse(r.getTopReaderContext().isAtomic);  //still more than 1 segment\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertFalse(r.getTopReaderContext().isAtomic);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getTopReaderContext().reader;\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    assertFalse(r.getTopReaderContext().isAtomic);  //still more than 1 segment\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","sourceNew":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertFalse(r.getTopReaderContext().isAtomic);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getTopReaderContext().reader;\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    assertFalse(r.getTopReaderContext().isAtomic);  //still more than 1 segment\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertFalse(r.getTopReaderContext().isAtomic);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getTopReaderContext().reader;\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    assertFalse(r.getTopReaderContext().isAtomic);  //still more than 1 segment\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d207426bd26fa5c1014e26d21d87603aea68b7","date":1327944562,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","sourceNew":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = r = sr.getSearcher().getIndexReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertFalse(r.getTopReaderContext().isAtomic);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getTopReaderContext().reader;\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    assertFalse(r.getTopReaderContext().isAtomic);  //still more than 1 segment\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":["42e39829cb8f20a1de837983ec92bfc26bbef253"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","sourceNew":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = r = sr.getSearcher().getIndexReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertFalse(r.getTopReaderContext().isAtomic);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getTopReaderContext().reader;\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    assertFalse(r.getTopReaderContext().isAtomic);  //still more than 1 segment\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8d6d500d42449b0661ea6ae4954fa2db71b5af05","date":1375764302,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","sourceNew":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\")); // dup, triggers delete\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    assertTrue(\"maxDoc !> numDocs ... expected some deletions\",\n               r.maxDoc() > r.numDocs());\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = r = sr.getSearcher().getIndexReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = r = sr.getSearcher().getIndexReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","sourceNew":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\")); // dup, triggers delete\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    assertTrue(\"maxDoc !> numDocs ... expected some deletions\",\n               r.maxDoc() > r.numDocs());\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = r = sr.getSearcher().getIndexReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = r = sr.getSearcher().getIndexReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42e39829cb8f20a1de837983ec92bfc26bbef253","date":1457437355,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testExpungeDeletes().mjava","sourceNew":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\")); // dup, triggers delete\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    assertTrue(\"maxDoc !> numDocs ... expected some deletions\",\n               r.maxDoc() > r.numDocs());\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getIndexReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\")); // dup, triggers delete\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    assertTrue(\"maxDoc !> numDocs ... expected some deletions\",\n               r.maxDoc() > r.numDocs());\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = r = sr.getSearcher().getIndexReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertEquals(4,r.maxDoc());             // no dups\n    sr.close();\n  }\n\n","bugFix":["96d207426bd26fa5c1014e26d21d87603aea68b7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8d6d500d42449b0661ea6ae4954fa2db71b5af05":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["5cab9a86bd67202d20b6adc463008c8e982b070a","8d6d500d42449b0661ea6ae4954fa2db71b5af05"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96d207426bd26fa5c1014e26d21d87603aea68b7":["c26f00b574427b55127e869b935845554afde1fa"],"42e39829cb8f20a1de837983ec92bfc26bbef253":["8d6d500d42449b0661ea6ae4954fa2db71b5af05"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["c26f00b574427b55127e869b935845554afde1fa","96d207426bd26fa5c1014e26d21d87603aea68b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42e39829cb8f20a1de837983ec92bfc26bbef253"]},"commit2Childs":{"8d6d500d42449b0661ea6ae4954fa2db71b5af05":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","42e39829cb8f20a1de837983ec92bfc26bbef253"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["96d207426bd26fa5c1014e26d21d87603aea68b7","5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"96d207426bd26fa5c1014e26d21d87603aea68b7":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"42e39829cb8f20a1de837983ec92bfc26bbef253":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["8d6d500d42449b0661ea6ae4954fa2db71b5af05","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}