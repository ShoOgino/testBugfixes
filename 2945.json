{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoEncodingUtils#testGeoPrefixCoding().mjava","commits":[{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoEncodingUtils#testGeoPrefixCoding().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testGeoPrefixCoding().mjava","sourceNew":"  /**\n   * Tests stability of {@link GeoEncodingUtils#geoCodedToPrefixCoded}\n   */\n  public void testGeoPrefixCoding() throws Exception {\n    int numIters = atLeast(1000);\n    long hash;\n    long decodedHash;\n    BytesRefBuilder brb = new BytesRefBuilder();\n    while (numIters-- >= 0) {\n      hash = GeoEncodingUtils.mortonHash(nextLatitude(), nextLongitude());\n      for (int i=32; i<64; ++i) {\n        GeoEncodingUtils.geoCodedToPrefixCoded(hash, i, brb);\n        decodedHash = GeoEncodingUtils.prefixCodedToGeoCoded(brb.get());\n        assertEquals((hash >>> i) << i, decodedHash);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Tests stability of {@link GeoEncodingUtils#geoCodedToPrefixCoded}\n   */\n  public void testGeoPrefixCoding() throws Exception {\n    int numIters = atLeast(1000);\n    long hash;\n    long decodedHash;\n    BytesRefBuilder brb = new BytesRefBuilder();\n    while (numIters-- >= 0) {\n      hash = GeoEncodingUtils.mortonHash(randomLat(false), randomLon(false));\n      for (int i=32; i<64; ++i) {\n        GeoEncodingUtils.geoCodedToPrefixCoded(hash, i, brb);\n        decodedHash = GeoEncodingUtils.prefixCodedToGeoCoded(brb.get());\n        assertEquals((hash >>> i) << i, decodedHash);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"065f36185d91a7d825ce7adac5b0d8df5cb4f73f","date":1461251676,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoPointField#testGeoPrefixCoding().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoEncodingUtils#testGeoPrefixCoding().mjava","sourceNew":"  /**\n   * Tests stability of {@link GeoPointField#geoCodedToPrefixCoded}\n   */\n  public void testGeoPrefixCoding() throws Exception {\n    int numIters = atLeast(1000);\n    long hash;\n    long decodedHash;\n    BytesRefBuilder brb = new BytesRefBuilder();\n    while (numIters-- >= 0) {\n      hash = encodeLatLon(nextLatitude(), nextLongitude());\n      for (int i=32; i<64; ++i) {\n        geoCodedToPrefixCoded(hash, i, brb);\n        decodedHash = prefixCodedToGeoCoded(brb.get());\n        assertEquals((hash >>> i) << i, decodedHash);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Tests stability of {@link GeoEncodingUtils#geoCodedToPrefixCoded}\n   */\n  public void testGeoPrefixCoding() throws Exception {\n    int numIters = atLeast(1000);\n    long hash;\n    long decodedHash;\n    BytesRefBuilder brb = new BytesRefBuilder();\n    while (numIters-- >= 0) {\n      hash = GeoEncodingUtils.mortonHash(nextLatitude(), nextLongitude());\n      for (int i=32; i<64; ++i) {\n        GeoEncodingUtils.geoCodedToPrefixCoded(hash, i, brb);\n        decodedHash = GeoEncodingUtils.prefixCodedToGeoCoded(brb.get());\n        assertEquals((hash >>> i) << i, decodedHash);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca","date":1461308643,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoPointField#testGeoPrefixCoding().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoEncodingUtils#testGeoPrefixCoding().mjava","sourceNew":"  /**\n   * Tests stability of {@link GeoPointField#geoCodedToPrefixCoded}\n   */\n  public void testGeoPrefixCoding() throws Exception {\n    int numIters = atLeast(1000);\n    long hash;\n    long decodedHash;\n    BytesRefBuilder brb = new BytesRefBuilder();\n    while (numIters-- >= 0) {\n      hash = encodeLatLon(nextLatitude(), nextLongitude());\n      for (int i=32; i<64; ++i) {\n        geoCodedToPrefixCoded(hash, i, brb);\n        decodedHash = prefixCodedToGeoCoded(brb.get());\n        assertEquals((hash >>> i) << i, decodedHash);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Tests stability of {@link GeoEncodingUtils#geoCodedToPrefixCoded}\n   */\n  public void testGeoPrefixCoding() throws Exception {\n    int numIters = atLeast(1000);\n    long hash;\n    long decodedHash;\n    BytesRefBuilder brb = new BytesRefBuilder();\n    while (numIters-- >= 0) {\n      hash = GeoEncodingUtils.mortonHash(nextLatitude(), nextLongitude());\n      for (int i=32; i<64; ++i) {\n        GeoEncodingUtils.geoCodedToPrefixCoded(hash, i, brb);\n        decodedHash = GeoEncodingUtils.prefixCodedToGeoCoded(brb.get());\n        assertEquals((hash >>> i) << i, decodedHash);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"065f36185d91a7d825ce7adac5b0d8df5cb4f73f":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","065f36185d91a7d825ce7adac5b0d8df5cb4f73f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"]},"commit2Childs":{"065f36185d91a7d825ce7adac5b0d8df5cb4f73f":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["065f36185d91a7d825ce7adac5b0d8df5cb4f73f","ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}