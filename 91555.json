{"path":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","sourceOld":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","sourceOld":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","sourceOld":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      final IndexCommit commit = searcher.get().getIndexReader().getIndexCommit();\n      final Map<String,String> commitData = commit.getUserData();\n      String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n      if (commitTime != null) {\n        version[0] = Long.parseLong(commitTime);\n      }\n      version[1] = commit.getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","sourceOld":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","bugFix":["c220849f876de24a79f756f65b3eb045db59f63f"],"bugIntro":["8191177d7e99590f340be1dbfb1cb0f01bf2f993"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      final IndexCommit commit = searcher.get().getIndexReader().getIndexCommit();\n      final Map<String,String> commitData = commit.getUserData();\n      String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n      if (commitTime != null) {\n        version[0] = Long.parseLong(commitTime);\n      }\n      version[1] = commit.getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","sourceOld":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      final IndexCommit commit = searcher.get().getIndexReader().getIndexCommit();\n      final Map<String,String> commitData = commit.getUserData();\n      String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n      if (commitTime != null) {\n        version[0] = Long.parseLong(commitTime);\n      }\n      version[1] = commit.getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","sourceOld":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();\n      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8191177d7e99590f340be1dbfb1cb0f01bf2f993","date":1366233200,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  /** \n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    CommitVersionInfo v = null;\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      v = CommitVersionInfo.build(searcher.get().getIndexReader().getIndexCommit());\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n    } finally {\n      searcher.decref();\n    }\n    return v;\n  }\n\n","sourceOld":"  private long[] getIndexVersion() {\n    long version[] = new long[2];\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      final IndexCommit commit = searcher.get().getIndexReader().getIndexCommit();\n      final Map<String,String> commitData = commit.getUserData();\n      String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n      if (commitTime != null) {\n        version[0] = Long.parseLong(commitTime);\n      }\n      version[1] = commit.getGeneration();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index version : \", e);\n    } finally {\n      searcher.decref();\n    }\n    return version;\n  }\n\n","bugFix":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b13106276bb5ea342253dbf6aae7b675adb38d3","date":1428054414,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  /**\n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    CommitVersionInfo v = null;\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      v = CommitVersionInfo.build(searcher.get().getIndexReader().getIndexCommit());\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n    } finally {\n      searcher.decref();\n    }\n    return v;\n  }\n\n","sourceOld":"  /** \n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    CommitVersionInfo v = null;\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      v = CommitVersionInfo.build(searcher.get().getIndexReader().getIndexCommit());\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n    } finally {\n      searcher.decref();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  /**\n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    CommitVersionInfo v = null;\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      v = CommitVersionInfo.build(searcher.get().getIndexReader().getIndexCommit());\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n    } finally {\n      searcher.decref();\n    }\n    return v;\n  }\n\n","sourceOld":"  /** \n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    CommitVersionInfo v = null;\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      v = CommitVersionInfo.build(searcher.get().getIndexReader().getIndexCommit());\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n    } finally {\n      searcher.decref();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ab833f2b623042c834458d4cbcad05073a93793","date":1527625631,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  /**\n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    try {\n      return core.withSearcher(searcher -> CommitVersionInfo.build(searcher.getIndexReader().getIndexCommit()));\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    CommitVersionInfo v = null;\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      v = CommitVersionInfo.build(searcher.get().getIndexReader().getIndexCommit());\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n    } finally {\n      searcher.decref();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2138c838f1c8052d94d61eb1e205dce7fa6932ef","date":1527642223,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  /**\n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    try {\n      return core.withSearcher(searcher -> CommitVersionInfo.build(searcher.getIndexReader().getIndexCommit()));\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    CommitVersionInfo v = null;\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    try {\n      v = CommitVersionInfo.build(searcher.get().getIndexReader().getIndexCommit());\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n    } finally {\n      searcher.decref();\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getIndexVersion().mjava","sourceNew":"  /**\n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    try {\n      return core.withSearcher(searcher -> CommitVersionInfo.build(searcher.getIndexReader().getIndexCommit()));\n    } catch (IOException e) {\n      log.warn(\"Unable to get index commit: \", e);\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * returns the CommitVersionInfo for the current searcher, or null on error.\n   */\n  private CommitVersionInfo getIndexVersion() {\n    try {\n      return core.withSearcher(searcher -> CommitVersionInfo.build(searcher.getIndexReader().getIndexCommit()));\n    } catch (IOException e) {\n      LOG.warn(\"Unable to get index commit: \", e);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"8191177d7e99590f340be1dbfb1cb0f01bf2f993":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"4ab833f2b623042c834458d4cbcad05073a93793":["7b13106276bb5ea342253dbf6aae7b675adb38d3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["c26f00b574427b55127e869b935845554afde1fa","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["8191177d7e99590f340be1dbfb1cb0f01bf2f993","7b13106276bb5ea342253dbf6aae7b675adb38d3"],"5b6fdfce35d0adb18836cf8711abe487a934df33":["c26f00b574427b55127e869b935845554afde1fa","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b13106276bb5ea342253dbf6aae7b675adb38d3":["8191177d7e99590f340be1dbfb1cb0f01bf2f993"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"2138c838f1c8052d94d61eb1e205dce7fa6932ef":["7b13106276bb5ea342253dbf6aae7b675adb38d3","4ab833f2b623042c834458d4cbcad05073a93793"]},"commit2Childs":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["8191177d7e99590f340be1dbfb1cb0f01bf2f993","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"c26f00b574427b55127e869b935845554afde1fa":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"8191177d7e99590f340be1dbfb1cb0f01bf2f993":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","7b13106276bb5ea342253dbf6aae7b675adb38d3"],"4ab833f2b623042c834458d4cbcad05073a93793":["2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7b13106276bb5ea342253dbf6aae7b675adb38d3":["4ab833f2b623042c834458d4cbcad05073a93793","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2138c838f1c8052d94d61eb1e205dce7fa6932ef":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","5b6fdfce35d0adb18836cf8711abe487a934df33","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}