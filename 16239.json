{"path":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(\"collection1\", dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(\"collection1\", dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(\"collection1\", dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(\"collection1\", dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(\"collection1\", dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(\"collection1\", dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feb75c13cdf6b27b36407e4b15b35cf3142ab619","date":1310465075,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(\"collection1\", dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      \n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      \n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      \n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"829761a123d59d7a3c39e5f13fbc03de63f55ce5","date":1334686329,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      \n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63bbefe40470804b277907c301a4732f21e8c8d8","date":1347646043,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = \"collection1\";\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n          initShardHandler(null);\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n          initShardHandler(null);\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n          initShardHandler();\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n          initShardHandler(null);\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n          {\n            hostPort = System.getProperty(\"hostPort\");\n            hostContext = \"solr\";\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n        {\n          hostPort = System.getProperty(\"hostPort\");\n          hostContext = \"solr\";\n          defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n          initShardHandler();\n          initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n        }\n      };\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b29abed5661c7911e4b45d5a3d79a186268e28c4","date":1366675770,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\");\n            String hostContext = \"solr\";\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        container = new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())) {\n          {\n            hostPort = System.getProperty(\"hostPort\");\n            hostContext = \"solr\";\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            initZooKeeper(System.getProperty(\"zkHost\"), 10000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a757d77b8686d261b25acf542b0037bf65d8fa","date":1367436352,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\");\n            String hostContext = \"solr\";\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\");\n            String hostContext = \"solr\";\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig(), container);\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b9c2f673731eb874eddf5c503c3a8e6ed446bc6","date":1367988758,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\");\n            String hostContext = \"solr\";\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07e5c48260f0b3abf6daef83f4ce8bd72b0be5ce","date":1370818281,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      \n      if (container.getZkController() != null) {\n        container.preRegisterInZk(dcore);\n      }\n      \n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":null,"sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      \n      if (container.getZkController() != null) {\n        container.preRegisterInZk(dcore);\n      }\n      \n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      \n      if (container.getZkController() != null) {\n        container.preRegisterInZk(dcore);\n      }\n      \n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", true, 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      if (container.isZooKeeperAware()) {\n        container.getZkController().preRegister(dcore);\n      }\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      \n      if (container.getZkController() != null) {\n        container.preRegisterInZk(dcore);\n      }\n      \n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      \n      if (container.isZooKeeperAware() && Slice.CONSTRUCTION.equals(dcore.getCloudDescriptor().getShardState())) {\n        // set update log to buffer before publishing the core\n        core.getUpdateHandler().getUpdateLog().bufferUpdates();\n      }\n      \n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      \n      if (container.getZkController() != null) {\n        container.preRegisterInZk(dcore);\n      }\n      \n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":null,"sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", true, 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      if (container.isZooKeeperAware()) {\n        container.getZkController().preRegister(dcore);\n      }\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      \n      if (container.getZkController() != null) {\n        container.preRegisterInZk(dcore);\n      }\n      \n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      \n      if (container.isZooKeeperAware() && Slice.CONSTRUCTION.equals(dcore.getCloudDescriptor().getShardState())) {\n        // set update log to buffer before publishing the core\n        core.getUpdateHandler().getUpdateLog().bufferUpdates();\n      }\n      \n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness.Initializer#initialize().mjava","sourceNew":null,"sourceOld":"    @Override\n    public CoreContainer initialize() {\n      CoreContainer container;\n      try {\n        String solrHome = SolrResourceLoader.locateSolrHome();\n        container = new CoreContainer(new SolrResourceLoader(solrHome)) {\n          {\n            String hostPort = System.getProperty(\"hostPort\", \"8983\");\n            String hostContext = System.getProperty(\"hostContext\", \"solr\");\n            defaultCoreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n            initShardHandler();\n            zkSys.initZooKeeper(this, solrHome, System.getProperty(\"zkHost\"), 30000, hostPort, hostContext, null, \"30000\", 30000, 30000);\n            ByteArrayInputStream is = new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\"));\n            Config config = new Config(loader, null, new InputSource(is), null, false);\n            cfg = new ConfigSolrXmlOld(config, this);\n          }\n        };\n      } catch (ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      } catch (SAXException e) {\n        throw new RuntimeException(e);\n      }\n      LogWatcher<?> logging = new JulWatcher(\"test\");\n      logging.registerListener(new ListenerConfig());\n      container.setLogging(logging);\n      \n      CoreDescriptor dcore = new CoreDescriptor(container, coreName, solrConfig.getResourceLoader().getInstanceDir());\n      dcore.setConfigName(solrConfig.getResourceName());\n      dcore.setSchemaName(indexSchema.getResourceName());\n      \n      if (container.getZkController() != null) {\n        container.preRegisterInZk(dcore);\n      }\n      \n      SolrCore core = new SolrCore(coreName, dataDirectory, solrConfig, indexSchema, dcore);\n      container.register(coreName, core, false);\n\n      // TODO: we should be exercising the *same* core container initialization code, not equivalent code!\n      if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {\n        // always kick off recovery if we are in standalone mode.\n        core.getUpdateHandler().getUpdateLog().recoverFromLog();\n      }\n      return container;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["63bbefe40470804b277907c301a4732f21e8c8d8","a69439d0df009e0bb0038d1e427159f449dd670d"],"9b9c2f673731eb874eddf5c503c3a8e6ed446bc6":["85a757d77b8686d261b25acf542b0037bf65d8fa"],"7116474e2e390259937401cf928323e0cbc75e60":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"feb75c13cdf6b27b36407e4b15b35cf3142ab619":["c26f00b574427b55127e869b935845554afde1fa"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["07e5c48260f0b3abf6daef83f4ce8bd72b0be5ce","7116474e2e390259937401cf928323e0cbc75e60"],"07e5c48260f0b3abf6daef83f4ce8bd72b0be5ce":["9b9c2f673731eb874eddf5c503c3a8e6ed446bc6"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"a69439d0df009e0bb0038d1e427159f449dd670d":["63bbefe40470804b277907c301a4732f21e8c8d8"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["feb75c13cdf6b27b36407e4b15b35cf3142ab619","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d264f386d864b5751209060e8886ca9845f70469":["07e5c48260f0b3abf6daef83f4ce8bd72b0be5ce"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["a837c064b67fa63a9394136e31218b908cdcf783"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["feb75c13cdf6b27b36407e4b15b35cf3142ab619","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a757d77b8686d261b25acf542b0037bf65d8fa":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["feb75c13cdf6b27b36407e4b15b35cf3142ab619"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a837c064b67fa63a9394136e31218b908cdcf783":["a69439d0df009e0bb0038d1e427159f449dd670d"],"63bbefe40470804b277907c301a4732f21e8c8d8":["829761a123d59d7a3c39e5f13fbc03de63f55ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7116474e2e390259937401cf928323e0cbc75e60"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"9b9c2f673731eb874eddf5c503c3a8e6ed446bc6":["07e5c48260f0b3abf6daef83f4ce8bd72b0be5ce"],"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"feb75c13cdf6b27b36407e4b15b35cf3142ab619":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c26f00b574427b55127e869b935845554afde1fa":["feb75c13cdf6b27b36407e4b15b35cf3142ab619"],"07e5c48260f0b3abf6daef83f4ce8bd72b0be5ce":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"a69439d0df009e0bb0038d1e427159f449dd670d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a837c064b67fa63a9394136e31218b908cdcf783"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["63bbefe40470804b277907c301a4732f21e8c8d8"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["7116474e2e390259937401cf928323e0cbc75e60"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["85a757d77b8686d261b25acf542b0037bf65d8fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"85a757d77b8686d261b25acf542b0037bf65d8fa":["9b9c2f673731eb874eddf5c503c3a8e6ed446bc6"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","829761a123d59d7a3c39e5f13fbc03de63f55ce5","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"a837c064b67fa63a9394136e31218b908cdcf783":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"63bbefe40470804b277907c301a4732f21e8c8d8":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a69439d0df009e0bb0038d1e427159f449dd670d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}