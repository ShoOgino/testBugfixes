{"path":"lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule#setupHandler().mjava","commits":[{"id":"6c7c93dea6a7e2cd67285cfa6cc4f2404ae098cd","date":1331279405,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule#setupHandler().mjava","pathOld":"/dev/null","sourceNew":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule#setupHandler().mjava","pathOld":"/dev/null","sourceNew":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleReportUncaughtExceptions#setupHandler().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule#setupHandler().mjava","sourceNew":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","sourceOld":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6c7c93dea6a7e2cd67285cfa6cc4f2404ae098cd"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["6c7c93dea6a7e2cd67285cfa6cc4f2404ae098cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c7c93dea6a7e2cd67285cfa6cc4f2404ae098cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5da0b42730b6b99b31389ef94cb97384e83b9ede"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","6c7c93dea6a7e2cd67285cfa6cc4f2404ae098cd"],"6c7c93dea6a7e2cd67285cfa6cc4f2404ae098cd":["38e3b736c7ca086d61b7dbb841c905ee115490da","5da0b42730b6b99b31389ef94cb97384e83b9ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}