{"path":"src/java/org/apache/lucene/store/RAMInputStream#readInternal(byte[],int,int).mjava","commits":[{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream[RAMDirectory]#readInternal(byte[],int,int).mjava","sourceNew":"  public void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    int start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = start/BUFFER_SIZE;\n      int bufferOffset = start%BUFFER_SIZE;\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","sourceOld":"  /** InputStream methods */\n  public final void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    int start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = start/InputStream.BUFFER_SIZE;\n      int bufferOffset = start%InputStream.BUFFER_SIZE;\n      int bytesInBuffer = InputStream.BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5fd67243f95377506f3ddade7846ad939490bcb","date":1148396471,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#readInternal(byte[],int,int).mjava","sourceNew":"  public void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    long start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = (int)(start/BUFFER_SIZE);\n      int bufferOffset = (int)(start%BUFFER_SIZE);\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","sourceOld":"  public void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    int start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = start/BUFFER_SIZE;\n      int bufferOffset = start%BUFFER_SIZE;\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","bugFix":["15c469602973ef1a33c9a07367a380d278ffab20","ec5d72cdd3c8a9a2a525c26e4acaf3441063ad57"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5657b669e16b843aac69f0ba7e89def1f93f6ea0","date":1164163669,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#readInternal(byte[],int,int).mjava","sourceNew":"  public void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    long start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = (int)(start/BUFFER_SIZE);\n      int bufferOffset = (int)(start%BUFFER_SIZE);\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.get(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","sourceOld":"  public void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    long start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = (int)(start/BUFFER_SIZE);\n      int bufferOffset = (int)(start%BUFFER_SIZE);\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d568d474b2c3c00dd89047135bcb6ff8bfa7b559","date":1176840521,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#readInternal(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  public void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    long start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = (int)(start/BUFFER_SIZE);\n      int bufferOffset = (int)(start%BUFFER_SIZE);\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.get(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5657b669e16b843aac69f0ba7e89def1f93f6ea0":["f5fd67243f95377506f3ddade7846ad939490bcb"],"f5fd67243f95377506f3ddade7846ad939490bcb":["15c469602973ef1a33c9a07367a380d278ffab20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"15c469602973ef1a33c9a07367a380d278ffab20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15c469602973ef1a33c9a07367a380d278ffab20"],"5657b669e16b843aac69f0ba7e89def1f93f6ea0":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"f5fd67243f95377506f3ddade7846ad939490bcb":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"15c469602973ef1a33c9a07367a380d278ffab20":["f5fd67243f95377506f3ddade7846ad939490bcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}