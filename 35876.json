{"path":"backwards/src/demo/org/apache/lucene/demo/IndexFiles#indexDocs(IndexWriter,File).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/demo/org/apache/lucene/demo/IndexFiles#indexDocs(IndexWriter,File).mjava","pathOld":"/dev/null","sourceNew":"  static void indexDocs(IndexWriter writer, File file)\n    throws IOException {\n    // do not try to index files that cannot be read\n    if (file.canRead()) {\n      if (file.isDirectory()) {\n        String[] files = file.list();\n        // an IO error could occur\n        if (files != null) {\n          for (int i = 0; i < files.length; i++) {\n            indexDocs(writer, new File(file, files[i]));\n          }\n        }\n      } else {\n        System.out.println(\"adding \" + file);\n        try {\n          writer.addDocument(FileDocument.Document(file));\n        }\n        // at least on windows, some temporary files raise this exception with an \"access denied\" message\n        // checking if the file can be read doesn't help\n        catch (FileNotFoundException fnfe) {\n          ;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/demo/org/apache/lucene/demo/IndexFiles#indexDocs(IndexWriter,File).mjava","pathOld":"backwards/src/demo/org/apache/lucene/demo/IndexFiles#indexDocs(IndexWriter,File).mjava","sourceNew":"  static void indexDocs(IndexWriter writer, File file)\n    throws IOException {\n    // do not try to index files that cannot be read\n    if (file.canRead()) {\n      if (file.isDirectory()) {\n        String[] files = file.list();\n        // an IO error could occur\n        if (files != null) {\n          for (int i = 0; i < files.length; i++) {\n            indexDocs(writer, new File(file, files[i]));\n          }\n        }\n      } else {\n        System.out.println(\"adding \" + file);\n        try {\n          writer.addDocument(FileDocument.Document(file));\n        }\n        // at least on windows, some temporary files raise this exception with an \"access denied\" message\n        // checking if the file can be read doesn't help\n        catch (FileNotFoundException fnfe) {\n          ;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  static void indexDocs(IndexWriter writer, File file)\n    throws IOException {\n    // do not try to index files that cannot be read\n    if (file.canRead()) {\n      if (file.isDirectory()) {\n        String[] files = file.list();\n        // an IO error could occur\n        if (files != null) {\n          for (int i = 0; i < files.length; i++) {\n            indexDocs(writer, new File(file, files[i]));\n          }\n        }\n      } else {\n        System.out.println(\"adding \" + file);\n        try {\n          writer.addDocument(FileDocument.Document(file));\n        }\n        // at least on windows, some temporary files raise this exception with an \"access denied\" message\n        // checking if the file can be read doesn't help\n        catch (FileNotFoundException fnfe) {\n          ;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}