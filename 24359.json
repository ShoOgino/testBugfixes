{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","commits":[{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    BlockDocsEnum docsEnum;\n    if (reuse instanceof BlockDocsEnum) {\n      docsEnum = (BlockDocsEnum) reuse;\n      if (!docsEnum.canReuse(docIn, fieldInfo)) {\n        docsEnum = new BlockDocsEnum(fieldInfo);\n      }\n    } else {\n      docsEnum = new BlockDocsEnum(fieldInfo);\n    }\n    return docsEnum.reset(liveDocs, (IntBlockTermState) termState);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    BlockDocsEnum docsEnum;\n    if (reuse instanceof BlockDocsEnum) {\n      docsEnum = (BlockDocsEnum) reuse;\n      if (!docsEnum.canReuse(docIn, fieldInfo)) {\n        docsEnum = new BlockDocsEnum(fieldInfo);\n      }\n    } else {\n      docsEnum = new BlockDocsEnum(fieldInfo);\n    }\n    return docsEnum.reset(liveDocs, (IntBlockTermState) termState);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    BlockDocsEnum docsEnum;\n    if (reuse instanceof BlockDocsEnum) {\n      docsEnum = (BlockDocsEnum) reuse;\n      if (!docsEnum.canReuse(docIn, fieldInfo)) {\n        docsEnum = new BlockDocsEnum(fieldInfo);\n      }\n    } else {\n      docsEnum = new BlockDocsEnum(fieldInfo);\n    }\n    return docsEnum.reset(liveDocs, (IntBlockTermState) termState);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    BlockDocsEnum docsEnum;\n    if (reuse instanceof BlockDocsEnum) {\n      docsEnum = (BlockDocsEnum) reuse;\n      if (!docsEnum.canReuse(docIn, fieldInfo)) {\n        docsEnum = new BlockDocsEnum(fieldInfo);\n      }\n    } else {\n      docsEnum = new BlockDocsEnum(fieldInfo);\n    }\n    return docsEnum.reset(liveDocs, (IntBlockTermState) termState);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    BlockDocsEnum docsEnum;\n    if (reuse instanceof BlockDocsEnum) {\n      docsEnum = (BlockDocsEnum) reuse;\n      if (!docsEnum.canReuse(docIn, fieldInfo)) {\n        docsEnum = new BlockDocsEnum(fieldInfo);\n      }\n    } else {\n      docsEnum = new BlockDocsEnum(fieldInfo);\n    }\n    return docsEnum.reset(liveDocs, (IntBlockTermState) termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}