{"path":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","commits":[{"id":"849dbf8570155b8e5fd03d8c2274a0a60491051c","date":1570859954,"type":1,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String).mjava","sourceNew":"  @Override\n  public FileType getType(String path, boolean fetchMissing) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists() && fetchMissing) {\n      if (fetch(path, null)) {\n        file = getRealpath(path).toFile();\n      }\n      if (!file.exists()) return FileType.NOFILE;\n    }\n    if (file.isDirectory()) return FileType.DIRECTORY;\n    return isMetaDataFile(file.getName()) ? FileType.METADATA : FileType.FILE;\n  }\n\n","sourceOld":"  @Override\n  public synchronized FileType getType(String path) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists()) return FileType.NOFILE;\n    if (file.isDirectory()) return FileType.DIRECTORY;\n    return isMetaDataFile(file.getName()) ? FileType.METADATA : FileType.FILE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FileType getType(String path, boolean fetchMissing) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists() && fetchMissing) {\n      if (fetch(path, null)) {\n        file = getRealpath(path).toFile();\n      }\n      if (!file.exists()) return FileType.NOFILE;\n    }\n    if (file.isDirectory()) return FileType.DIRECTORY;\n    return isMetaDataFile(file.getName()) ? FileType.METADATA : FileType.FILE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc09d7c591d6661c79bcdfd1c661da97e638804d","date":1574295916,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","sourceNew":"  @Override\n  public FileType getType(String path, boolean fetchMissing) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists() && fetchMissing) {\n      if (fetch(path, null)) {\n        file = getRealpath(path).toFile();\n      }\n    }\n    if (!file.exists()) return FileType.NOFILE;\n    if (file.isDirectory()) return FileType.DIRECTORY;\n    return isMetaDataFile(file.getName()) ? FileType.METADATA : FileType.FILE;\n  }\n\n","sourceOld":"  @Override\n  public FileType getType(String path, boolean fetchMissing) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists() && fetchMissing) {\n      if (fetch(path, null)) {\n        file = getRealpath(path).toFile();\n      }\n      if (!file.exists()) return FileType.NOFILE;\n    }\n    if (file.isDirectory()) return FileType.DIRECTORY;\n    return isMetaDataFile(file.getName()) ? FileType.METADATA : FileType.FILE;\n  }\n\n","bugFix":null,"bugIntro":["d218decf811b7a0a4d86218c54c79c74a962374b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d218decf811b7a0a4d86218c54c79c74a962374b","date":1578632144,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","sourceNew":"  @Override\n  public FileType getType(String path, boolean fetchMissing) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists() && fetchMissing) {\n      if (fetch(path, null)) {\n        file = getRealpath(path).toFile();\n      }\n    }\n    return _getFileType(file);\n  }\n\n","sourceOld":"  @Override\n  public FileType getType(String path, boolean fetchMissing) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists() && fetchMissing) {\n      if (fetch(path, null)) {\n        file = getRealpath(path).toFile();\n      }\n    }\n    if (!file.exists()) return FileType.NOFILE;\n    if (file.isDirectory()) return FileType.DIRECTORY;\n    return isMetaDataFile(file.getName()) ? FileType.METADATA : FileType.FILE;\n  }\n\n","bugFix":["fc09d7c591d6661c79bcdfd1c661da97e638804d","849dbf8570155b8e5fd03d8c2274a0a60491051c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8f0a7504661c8e51be5c63e87f9d79a36d9116c","date":1578657638,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#getType(String,boolean).mjava","sourceNew":"  @Override\n  public FileType getType(String path, boolean fetchMissing) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists() && fetchMissing) {\n      if (fetch(path, null)) {\n        file = getRealpath(path).toFile();\n      }\n    }\n    return _getFileType(file);\n  }\n\n","sourceOld":"  @Override\n  public FileType getType(String path, boolean fetchMissing) {\n    File file = getRealpath(path).toFile();\n    if (!file.exists() && fetchMissing) {\n      if (fetch(path, null)) {\n        file = getRealpath(path).toFile();\n      }\n    }\n    if (!file.exists()) return FileType.NOFILE;\n    if (file.isDirectory()) return FileType.DIRECTORY;\n    return isMetaDataFile(file.getName()) ? FileType.METADATA : FileType.FILE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8f0a7504661c8e51be5c63e87f9d79a36d9116c":["fc09d7c591d6661c79bcdfd1c661da97e638804d","d218decf811b7a0a4d86218c54c79c74a962374b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d218decf811b7a0a4d86218c54c79c74a962374b":["fc09d7c591d6661c79bcdfd1c661da97e638804d"],"fc09d7c591d6661c79bcdfd1c661da97e638804d":["849dbf8570155b8e5fd03d8c2274a0a60491051c"],"849dbf8570155b8e5fd03d8c2274a0a60491051c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d218decf811b7a0a4d86218c54c79c74a962374b"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849dbf8570155b8e5fd03d8c2274a0a60491051c"]},"commit2Childs":{"b8f0a7504661c8e51be5c63e87f9d79a36d9116c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849dbf8570155b8e5fd03d8c2274a0a60491051c","b0b597c65628ca9e73913a07e81691f8229bae35"],"d218decf811b7a0a4d86218c54c79c74a962374b":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fc09d7c591d6661c79bcdfd1c661da97e638804d":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","d218decf811b7a0a4d86218c54c79c74a962374b"],"849dbf8570155b8e5fd03d8c2274a0a60491051c":["fc09d7c591d6661c79bcdfd1c661da97e638804d","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}