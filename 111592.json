{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#makeCommonSet(String[],boolean).mjava","commits":[{"id":"116545389190ea5d0d9a35977d09ef0fe49716ac","date":1272959441,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#makeCommonSet(String[],boolean).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#makeCommonSet(String[],boolean).mjava","sourceNew":"  /**\n   * Build a CharArraySet from an array of common words, appropriate for passing\n   * into the CommonGramsFilter constructor,case-sensitive if ignoreCase is\n   * false.\n   * \n   * @param commonWords Array of common words which will be converted into the CharArraySet\n   * @param ignoreCase If true, all words are lower cased first.\n   * @return a Set containing the words\n   * @deprecated create a CharArraySet with CharArraySet instead\n   */\n  @Deprecated\n  public static CharArraySet makeCommonSet(String[] commonWords, boolean ignoreCase) {\n    CharArraySet commonSet = new CharArraySet(commonWords.length, ignoreCase);\n    commonSet.addAll(Arrays.asList(commonWords));\n    return commonSet;\n  }\n\n","sourceOld":"  /**\n   * Build a CharArraySet from an array of common words, appropriate for passing\n   * into the CommonGramsFilter constructor,case-sensitive if ignoreCase is\n   * false.\n   * \n   * @param commonWords Array of common words which will be converted into the CharArraySet\n   * @param ignoreCase If true, all words are lower cased first.\n   * @return a Set containing the words\n   * @deprecated create a CharArraySet with CharArraySet instead\n   */\n  @Deprecated\n  public static CharArraySet makeCommonSet(String[] commonWords, boolean ignoreCase) {\n    CharArraySet commonSet = new CharArraySet(commonWords.length, ignoreCase);\n    commonSet.addAll(Arrays.asList(commonWords));\n    return commonSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#makeCommonSet(String[],boolean).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#makeCommonSet(String[],boolean).mjava","sourceNew":"  /**\n   * Build a CharArraySet from an array of common words, appropriate for passing\n   * into the CommonGramsFilter constructor,case-sensitive if ignoreCase is\n   * false.\n   * \n   * @param commonWords Array of common words which will be converted into the CharArraySet\n   * @param ignoreCase If true, all words are lower cased first.\n   * @return a Set containing the words\n   * @deprecated create a CharArraySet with CharArraySet instead\n   */\n  @Deprecated\n  public static CharArraySet makeCommonSet(String[] commonWords, boolean ignoreCase) {\n    CharArraySet commonSet = new CharArraySet(commonWords.length, ignoreCase);\n    commonSet.addAll(Arrays.asList(commonWords));\n    return commonSet;\n  }\n\n","sourceOld":"  /**\n   * Build a CharArraySet from an array of common words, appropriate for passing\n   * into the CommonGramsFilter constructor,case-sensitive if ignoreCase is\n   * false.\n   * \n   * @param commonWords Array of common words which will be converted into the CharArraySet\n   * @param ignoreCase If true, all words are lower cased first.\n   * @return a Set containing the words\n   * @deprecated create a CharArraySet with CharArraySet instead\n   */\n  @Deprecated\n  public static CharArraySet makeCommonSet(String[] commonWords, boolean ignoreCase) {\n    CharArraySet commonSet = new CharArraySet(commonWords.length, ignoreCase);\n    commonSet.addAll(Arrays.asList(commonWords));\n    return commonSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"116545389190ea5d0d9a35977d09ef0fe49716ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["116545389190ea5d0d9a35977d09ef0fe49716ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["116545389190ea5d0d9a35977d09ef0fe49716ac"],"116545389190ea5d0d9a35977d09ef0fe49716ac":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}