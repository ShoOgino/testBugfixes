{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValuesType) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    fi.setDocValues(docValuesType);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86c34ea6a885f625f2e464756450d45b72653ef3","date":1295256222,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector,\n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert localFieldInfos.get(fi.number) == null;\n    localFieldInfos.put(fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector,\n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert localFieldInfos.get(fi.number) == null;\n    localFieldInfos.put(fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector,\n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert localFieldInfos.get(fi.number) == null;\n    localFieldInfos.put(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert byNumber.get(fi.number) == null;\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86c34ea6a885f625f2e464756450d45b72653ef3":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["86c34ea6a885f625f2e464756450d45b72653ef3","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1224a4027481acce15495b03bce9b48b93b42722"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"86c34ea6a885f625f2e464756450d45b72653ef3":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b0c7a8f7304b75b1528814c5820fa23a96816c27","86c34ea6a885f625f2e464756450d45b72653ef3","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1224a4027481acce15495b03bce9b48b93b42722":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}