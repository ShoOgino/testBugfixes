{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestLazyBug#makeIndex().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestLazyBug#makeIndex().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestLazyBug#makeIndex().mjava","sourceNew":"  private Directory makeIndex() throws RuntimeException { \n    Directory dir = new RAMDirectory();\n    try {\n      Random r = newRandom();\n      Analyzer analyzer = new SimpleAnalyzer();\n      IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n      \n      writer.setUseCompoundFile(false);\n      \n      for (int d = 1; d <= NUM_DOCS; d++) {\n        Document doc = new Document();\n        for (int f = 1; f <= NUM_FIELDS; f++ ) {\n          doc.add(new Field(\"f\"+f, \n                            data[f % data.length] \n                            + '#' + data[r.nextInt(data.length)], \n                            Field.Store.YES, \n                            Field.Index.ANALYZED));\n        }\n        writer.addDocument(doc);\n      }\n      writer.close();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n    return dir;\n  }\n\n","sourceOld":"  private Directory makeIndex() throws RuntimeException { \n    Directory dir = new RAMDirectory();\n    try {\n      Random r = newRandom();\n      Analyzer analyzer = new SimpleAnalyzer();\n      IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n      \n      writer.setUseCompoundFile(false);\n      \n      for (int d = 1; d <= NUM_DOCS; d++) {\n        Document doc = new Document();\n        for (int f = 1; f <= NUM_FIELDS; f++ ) {\n          doc.add(new Field(\"f\"+f, \n                            data[f % data.length] \n                            + '#' + data[r.nextInt(data.length)], \n                            Field.Store.YES, \n                            Field.Index.ANALYZED));\n        }\n        writer.addDocument(doc);\n      }\n      writer.close();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestLazyBug#makeIndex().mjava","sourceNew":null,"sourceOld":"  private Directory makeIndex() throws RuntimeException { \n    Directory dir = new RAMDirectory();\n    try {\n      Random r = newRandom();\n      Analyzer analyzer = new SimpleAnalyzer();\n      IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n      \n      writer.setUseCompoundFile(false);\n      \n      for (int d = 1; d <= NUM_DOCS; d++) {\n        Document doc = new Document();\n        for (int f = 1; f <= NUM_FIELDS; f++ ) {\n          doc.add(new Field(\"f\"+f, \n                            data[f % data.length] \n                            + '#' + data[r.nextInt(data.length)], \n                            Field.Store.YES, \n                            Field.Index.ANALYZED));\n        }\n        writer.addDocument(doc);\n      }\n      writer.close();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}