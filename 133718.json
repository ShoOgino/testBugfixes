{"path":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testSpanTermQuery().mjava","commits":[{"id":"c8323d210478d76a02372693d254b69aac614689","date":1295877066,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testSpanTermQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testSpanTermQuery() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(term1, new int[]\n                             { 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170,\n        171, 172, 173, 174, 175, 176, 177, 178, 179, 270, 271, 272, 273, 274,\n        275, 276, 277, 278, 279, 370, 371, 372, 373, 374, 375, 376, 377, 378,\n        379, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572,\n        573, 574, 575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676,\n        677, 678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n        871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973, 974,\n        975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075, 1076,\n        1077, 1078, 1079, 1170, 1270, 1370, 1470, 1570, 1670, 1770, 1870, 1970,\n        1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1271, 1272, 1273,\n        1274, 1275, 1276, 1277, 1278, 1279, 1371, 1372, 1373, 1374, 1375, 1376,\n        1377, 1378, 1379, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n        1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1671, 1672, 1673,\n        1674, 1675, 1676, 1677, 1678, 1679, 1771, 1772, 1773, 1774, 1775, 1776,\n        1777, 1778, 1779, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,\n        1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testSpanTermQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testSpanTermQuery() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(term1, new int[]\n                             { 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170,\n        171, 172, 173, 174, 175, 176, 177, 178, 179, 270, 271, 272, 273, 274,\n        275, 276, 277, 278, 279, 370, 371, 372, 373, 374, 375, 376, 377, 378,\n        379, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572,\n        573, 574, 575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676,\n        677, 678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n        871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973, 974,\n        975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075, 1076,\n        1077, 1078, 1079, 1170, 1270, 1370, 1470, 1570, 1670, 1770, 1870, 1970,\n        1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1271, 1272, 1273,\n        1274, 1275, 1276, 1277, 1278, 1279, 1371, 1372, 1373, 1374, 1375, 1376,\n        1377, 1378, 1379, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n        1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1671, 1672, 1673,\n        1674, 1675, 1676, 1677, 1678, 1679, 1771, 1772, 1773, 1774, 1775, 1776,\n        1777, 1778, 1779, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,\n        1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testSpanTermQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testSpanTermQuery() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(term1, new int[]\n                             { 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170,\n        171, 172, 173, 174, 175, 176, 177, 178, 179, 270, 271, 272, 273, 274,\n        275, 276, 277, 278, 279, 370, 371, 372, 373, 374, 375, 376, 377, 378,\n        379, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572,\n        573, 574, 575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676,\n        677, 678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n        871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973, 974,\n        975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075, 1076,\n        1077, 1078, 1079, 1170, 1270, 1370, 1470, 1570, 1670, 1770, 1870, 1970,\n        1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1271, 1272, 1273,\n        1274, 1275, 1276, 1277, 1278, 1279, 1371, 1372, 1373, 1374, 1375, 1376,\n        1377, 1378, 1379, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n        1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1671, 1672, 1673,\n        1674, 1675, 1676, 1677, 1678, 1679, 1771, 1772, 1773, 1774, 1775, 1776,\n        1777, 1778, 1779, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,\n        1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testSpanTermQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testSpanTermQuery().mjava","sourceNew":"  public void testSpanTermQuery() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(term1, new int[]\n                             { 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170,\n        171, 172, 173, 174, 175, 176, 177, 178, 179, 270, 271, 272, 273, 274,\n        275, 276, 277, 278, 279, 370, 371, 372, 373, 374, 375, 376, 377, 378,\n        379, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572,\n        573, 574, 575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676,\n        677, 678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n        871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973, 974,\n        975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075, 1076,\n        1077, 1078, 1079, 1170, 1270, 1370, 1470, 1570, 1670, 1770, 1870, 1970,\n        1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1271, 1272, 1273,\n        1274, 1275, 1276, 1277, 1278, 1279, 1371, 1372, 1373, 1374, 1375, 1376,\n        1377, 1378, 1379, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n        1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1671, 1672, 1673,\n        1674, 1675, 1676, 1677, 1678, 1679, 1771, 1772, 1773, 1774, 1775, 1776,\n        1777, 1778, 1779, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,\n        1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979 });\n  }\n\n","sourceOld":"  public void testSpanTermQuery() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(term1, new int[]\n                             { 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170,\n        171, 172, 173, 174, 175, 176, 177, 178, 179, 270, 271, 272, 273, 274,\n        275, 276, 277, 278, 279, 370, 371, 372, 373, 374, 375, 376, 377, 378,\n        379, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572,\n        573, 574, 575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676,\n        677, 678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n        871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973, 974,\n        975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075, 1076,\n        1077, 1078, 1079, 1170, 1270, 1370, 1470, 1570, 1670, 1770, 1870, 1970,\n        1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1271, 1272, 1273,\n        1274, 1275, 1276, 1277, 1278, 1279, 1371, 1372, 1373, 1374, 1375, 1376,\n        1377, 1378, 1379, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n        1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1671, 1672, 1673,\n        1674, 1675, 1676, 1677, 1678, 1679, 1771, 1772, 1773, 1774, 1775, 1776,\n        1777, 1778, 1779, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,\n        1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c8323d210478d76a02372693d254b69aac614689":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c8323d210478d76a02372693d254b69aac614689"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8323d210478d76a02372693d254b69aac614689"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8323d210478d76a02372693d254b69aac614689"]},"commit2Childs":{"c8323d210478d76a02372693d254b69aac614689":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8323d210478d76a02372693d254b69aac614689","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}