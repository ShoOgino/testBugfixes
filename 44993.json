{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#dynamicFieldListToSortedArray(List[DynamicField]).mjava","commits":[{"id":"37e5b631c49de2fb88f245c36ecf87650cfa4a24","date":1409693105,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#dynamicFieldListToSortedArray(List[DynamicField]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sort the dynamic fields and stuff them in a normal array for faster access.\n   */\n  protected static DynamicField[] dynamicFieldListToSortedArray(List<DynamicField> dynamicFieldList) {\n    // Avoid creating the array twice by converting to an array first and using Arrays.sort(),\n    // rather than Collections.sort() then converting to an array, since Collections.sort()\n    // copies to an array first, then sets each collection member from the array. \n    DynamicField[] dFields = dynamicFieldList.toArray(new DynamicField[dynamicFieldList.size()]);\n    Arrays.sort(dFields);\n\n    log.trace(\"Dynamic Field Ordering:\" + Arrays.toString(dFields));\n\n    return dFields; \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9df8125ba9193a2e2e285ed92157810b1952a244","date":1587326330,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#dynamicFieldListToSortedArray(List[DynamicField]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#dynamicFieldListToSortedArray(List[DynamicField]).mjava","sourceNew":"  /**\n   * Sort the dynamic fields and stuff them in a normal array for faster access.\n   */\n  protected static DynamicField[] dynamicFieldListToSortedArray(List<DynamicField> dynamicFieldList) {\n    // Avoid creating the array twice by converting to an array first and using Arrays.sort(),\n    // rather than Collections.sort() then converting to an array, since Collections.sort()\n    // copies to an array first, then sets each collection member from the array. \n    DynamicField[] dFields = dynamicFieldList.toArray(new DynamicField[dynamicFieldList.size()]);\n    Arrays.sort(dFields);\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Dynamic Field Ordering: {}\", Arrays.toString(dFields));\n    }\n\n    return dFields; \n  }\n\n","sourceOld":"  /**\n   * Sort the dynamic fields and stuff them in a normal array for faster access.\n   */\n  protected static DynamicField[] dynamicFieldListToSortedArray(List<DynamicField> dynamicFieldList) {\n    // Avoid creating the array twice by converting to an array first and using Arrays.sort(),\n    // rather than Collections.sort() then converting to an array, since Collections.sort()\n    // copies to an array first, then sets each collection member from the array. \n    DynamicField[] dFields = dynamicFieldList.toArray(new DynamicField[dynamicFieldList.size()]);\n    Arrays.sort(dFields);\n\n    log.trace(\"Dynamic Field Ordering:\" + Arrays.toString(dFields));\n\n    return dFields; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4abf821a41a2fdca2a1dea148999931d22e20529","date":1587749643,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#dynamicFieldListToSortedArray(List[DynamicField]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#dynamicFieldListToSortedArray(List[DynamicField]).mjava","sourceNew":"  /**\n   * Sort the dynamic fields and stuff them in a normal array for faster access.\n   */\n  protected static DynamicField[] dynamicFieldListToSortedArray(List<DynamicField> dynamicFieldList) {\n    // Avoid creating the array twice by converting to an array first and using Arrays.sort(),\n    // rather than Collections.sort() then converting to an array, since Collections.sort()\n    // copies to an array first, then sets each collection member from the array. \n    DynamicField[] dFields = dynamicFieldList.toArray(new DynamicField[dynamicFieldList.size()]);\n    Arrays.sort(dFields);\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Dynamic Field Ordering: {}\", Arrays.toString(dFields)); // logok\n    }\n\n    return dFields; \n  }\n\n","sourceOld":"  /**\n   * Sort the dynamic fields and stuff them in a normal array for faster access.\n   */\n  protected static DynamicField[] dynamicFieldListToSortedArray(List<DynamicField> dynamicFieldList) {\n    // Avoid creating the array twice by converting to an array first and using Arrays.sort(),\n    // rather than Collections.sort() then converting to an array, since Collections.sort()\n    // copies to an array first, then sets each collection member from the array. \n    DynamicField[] dFields = dynamicFieldList.toArray(new DynamicField[dynamicFieldList.size()]);\n    Arrays.sort(dFields);\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Dynamic Field Ordering: {}\", Arrays.toString(dFields));\n    }\n\n    return dFields; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","date":1588172214,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#dynamicFieldListToSortedArray(List[DynamicField]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#dynamicFieldListToSortedArray(List[DynamicField]).mjava","sourceNew":"  /**\n   * Sort the dynamic fields and stuff them in a normal array for faster access.\n   */\n  protected static DynamicField[] dynamicFieldListToSortedArray(List<DynamicField> dynamicFieldList) {\n    // Avoid creating the array twice by converting to an array first and using Arrays.sort(),\n    // rather than Collections.sort() then converting to an array, since Collections.sort()\n    // copies to an array first, then sets each collection member from the array. \n    DynamicField[] dFields = dynamicFieldList.toArray(new DynamicField[dynamicFieldList.size()]);\n    Arrays.sort(dFields);\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Dynamic Field Ordering: {}\", Arrays.toString(dFields));\n    }\n\n    return dFields; \n  }\n\n","sourceOld":"  /**\n   * Sort the dynamic fields and stuff them in a normal array for faster access.\n   */\n  protected static DynamicField[] dynamicFieldListToSortedArray(List<DynamicField> dynamicFieldList) {\n    // Avoid creating the array twice by converting to an array first and using Arrays.sort(),\n    // rather than Collections.sort() then converting to an array, since Collections.sort()\n    // copies to an array first, then sets each collection member from the array. \n    DynamicField[] dFields = dynamicFieldList.toArray(new DynamicField[dynamicFieldList.size()]);\n    Arrays.sort(dFields);\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Dynamic Field Ordering: {}\", Arrays.toString(dFields)); // logok\n    }\n\n    return dFields; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4abf821a41a2fdca2a1dea148999931d22e20529":["9df8125ba9193a2e2e285ed92157810b1952a244"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["4abf821a41a2fdca2a1dea148999931d22e20529"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37e5b631c49de2fb88f245c36ecf87650cfa4a24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"9df8125ba9193a2e2e285ed92157810b1952a244":["37e5b631c49de2fb88f245c36ecf87650cfa4a24"]},"commit2Childs":{"4abf821a41a2fdca2a1dea148999931d22e20529":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37e5b631c49de2fb88f245c36ecf87650cfa4a24"],"37e5b631c49de2fb88f245c36ecf87650cfa4a24":["9df8125ba9193a2e2e285ed92157810b1952a244"],"9df8125ba9193a2e2e285ed92157810b1952a244":["4abf821a41a2fdca2a1dea148999931d22e20529"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}