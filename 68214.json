{"path":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    // We wrap StandardPostingsReader, but any StandardPostingsReader\n    // will work:\n    PostingsReaderBase docsReader = new StandardPostingsReader(state.dir, state.segmentInfo, state.context, state.codecId);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(docsReader);\n\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.codecId,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}