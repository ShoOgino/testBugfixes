{"path":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery#rewrite(IndexReader).mjava","commits":[{"id":"d12d70e099c29b55d2ec69265cd6bf67b6958f9c","date":1493320131,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query matchRewritten = wrappedQuery.rewrite(reader);\n    if (wrappedQuery != matchRewritten && matchRewritten instanceof SpanQuery) {\n      return new PayloadScoreQuery((SpanQuery)matchRewritten, function, includeSpanScore);\n    }\n    return super.rewrite(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ad966686d8994b78aff2375da1a0583bf0cf5ee","date":1493322197,"type":0,"author":"Erik Hatcher","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query matchRewritten = wrappedQuery.rewrite(reader);\n    if (wrappedQuery != matchRewritten && matchRewritten instanceof SpanQuery) {\n      return new PayloadScoreQuery((SpanQuery)matchRewritten, function, includeSpanScore);\n    }\n    return super.rewrite(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query matchRewritten = wrappedQuery.rewrite(reader);\n    if (wrappedQuery != matchRewritten && matchRewritten instanceof SpanQuery) {\n      return new PayloadScoreQuery((SpanQuery)matchRewritten, function, includeSpanScore);\n    }\n    return super.rewrite(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1abe64b887edbb37f6261531cf8a62d88d63fdcb","date":1510236307,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery#rewrite(IndexReader).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query matchRewritten = wrappedQuery.rewrite(reader);\n    if (wrappedQuery != matchRewritten && matchRewritten instanceof SpanQuery) {\n      return new PayloadScoreQuery((SpanQuery)matchRewritten, function, decoder, includeSpanScore);\n    }\n    return super.rewrite(reader);\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query matchRewritten = wrappedQuery.rewrite(reader);\n    if (wrappedQuery != matchRewritten && matchRewritten instanceof SpanQuery) {\n      return new PayloadScoreQuery((SpanQuery)matchRewritten, function, includeSpanScore);\n    }\n    return super.rewrite(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1abe64b887edbb37f6261531cf8a62d88d63fdcb":["9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"d12d70e099c29b55d2ec69265cd6bf67b6958f9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ad966686d8994b78aff2375da1a0583bf0cf5ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d12d70e099c29b55d2ec69265cd6bf67b6958f9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1abe64b887edbb37f6261531cf8a62d88d63fdcb"]},"commit2Childs":{"1abe64b887edbb37f6261531cf8a62d88d63fdcb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d12d70e099c29b55d2ec69265cd6bf67b6958f9c":["9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d12d70e099c29b55d2ec69265cd6bf67b6958f9c","e9017cf144952056066919f1ebc7897ff9bd71b1","9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"9ad966686d8994b78aff2375da1a0583bf0cf5ee":["1abe64b887edbb37f6261531cf8a62d88d63fdcb","e9017cf144952056066919f1ebc7897ff9bd71b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}