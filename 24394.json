{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoreProperty(Map[String,String],Node,String,String,String).mjava","commits":[{"id":"4901f8624f774c2b648e66567b63c59e901ac7c8","date":1329431044,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoreProperty(Map[String,String],Node,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void addCoreProperty(Map<String,String> coreAttribs, Node node, String name,\n      String value, String defaultValue) {\n    if (node == null) {\n      coreAttribs.put(name, value);\n      return;\n    }\n    \n    String attribValue = null;\n    if (node != null) {\n      String rawAttribValue = DOMUtil.getAttr(node, name, null);\n      if (value == null) {\n        coreAttribs.put(name, rawAttribValue);\n        return;\n      }\n      if (rawAttribValue == null && defaultValue != null && value.equals(defaultValue)) return;\n      if (rawAttribValue != null && value.equals(DOMUtil.substituteProperty(rawAttribValue, loader.getCoreProperties()))){\n        attribValue = rawAttribValue;\n      }\n    }\n    if (attribValue != null) {\n      coreAttribs.put(name, attribValue);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["abad9f9da3e1a25fe52dd31439ed7d11af1440a5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"abad9f9da3e1a25fe52dd31439ed7d11af1440a5","date":1330117371,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoreProperty(Map[String,String],Node,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoreProperty(Map[String,String],Node,String,String,String).mjava","sourceNew":"  private void addCoreProperty(Map<String,String> coreAttribs, Node node, String name,\n      String value, String defaultValue) {\n    if (node == null) {\n      coreAttribs.put(name, value);\n      return;\n    }\n    \n    if (node != null) {\n      String rawAttribValue = DOMUtil.getAttr(node, name, null);\n      if (value == null) {\n        coreAttribs.put(name, rawAttribValue);\n        return;\n      }\n      if (rawAttribValue == null && defaultValue != null && value.equals(defaultValue)) {\n        return;\n      }\n      if (rawAttribValue != null && value.equals(DOMUtil.substituteProperty(rawAttribValue, loader.getCoreProperties()))){\n        coreAttribs.put(name, rawAttribValue);\n      } else {\n        coreAttribs.put(name, value);\n      }\n    }\n\n  }\n\n","sourceOld":"  private void addCoreProperty(Map<String,String> coreAttribs, Node node, String name,\n      String value, String defaultValue) {\n    if (node == null) {\n      coreAttribs.put(name, value);\n      return;\n    }\n    \n    String attribValue = null;\n    if (node != null) {\n      String rawAttribValue = DOMUtil.getAttr(node, name, null);\n      if (value == null) {\n        coreAttribs.put(name, rawAttribValue);\n        return;\n      }\n      if (rawAttribValue == null && defaultValue != null && value.equals(defaultValue)) return;\n      if (rawAttribValue != null && value.equals(DOMUtil.substituteProperty(rawAttribValue, loader.getCoreProperties()))){\n        attribValue = rawAttribValue;\n      }\n    }\n    if (attribValue != null) {\n      coreAttribs.put(name, attribValue);\n    }\n  }\n\n","bugFix":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoreProperty(Map[String,String],Node,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoreProperty(Map[String,String],Node,String,String,String).mjava","sourceNew":"  private void addCoreProperty(Map<String,String> coreAttribs, Node node, String name,\n      String value, String defaultValue) {\n    if (node == null) {\n      coreAttribs.put(name, value);\n      return;\n    }\n    \n    if (node != null) {\n      String rawAttribValue = DOMUtil.getAttr(node, name, null);\n      if (value == null) {\n        coreAttribs.put(name, rawAttribValue);\n        return;\n      }\n      if (rawAttribValue == null && defaultValue != null && value.equals(defaultValue)) {\n        return;\n      }\n      if (rawAttribValue != null && value.equals(DOMUtil.substituteProperty(rawAttribValue, loader.getCoreProperties()))){\n        coreAttribs.put(name, rawAttribValue);\n      } else {\n        coreAttribs.put(name, value);\n      }\n    }\n\n  }\n\n","sourceOld":"  private void addCoreProperty(Map<String,String> coreAttribs, Node node, String name,\n      String value, String defaultValue) {\n    if (node == null) {\n      coreAttribs.put(name, value);\n      return;\n    }\n    \n    String attribValue = null;\n    if (node != null) {\n      String rawAttribValue = DOMUtil.getAttr(node, name, null);\n      if (value == null) {\n        coreAttribs.put(name, rawAttribValue);\n        return;\n      }\n      if (rawAttribValue == null && defaultValue != null && value.equals(defaultValue)) return;\n      if (rawAttribValue != null && value.equals(DOMUtil.substituteProperty(rawAttribValue, loader.getCoreProperties()))){\n        attribValue = rawAttribValue;\n      }\n    }\n    if (attribValue != null) {\n      coreAttribs.put(name, attribValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoreProperty(Map[String,String],Node,String,String,String).mjava","sourceNew":null,"sourceOld":"  private void addCoreProperty(Map<String,String> coreAttribs, Node node, String name,\n      String value, String defaultValue) {\n    if (node == null) {\n      coreAttribs.put(name, value);\n      return;\n    }\n    \n    if (node != null) {\n      String rawAttribValue = DOMUtil.getAttr(node, name, null);\n      if (value == null) {\n        coreAttribs.put(name, rawAttribValue);\n        return;\n      }\n      if (rawAttribValue == null && defaultValue != null && value.equals(defaultValue)) {\n        return;\n      }\n      if (rawAttribValue != null && value.equals(DOMUtil.substituteProperty(rawAttribValue, loader.getCoreProperties()))){\n        coreAttribs.put(name, rawAttribValue);\n      } else {\n        coreAttribs.put(name, value);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abad9f9da3e1a25fe52dd31439ed7d11af1440a5":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"4901f8624f774c2b648e66567b63c59e901ac7c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["4901f8624f774c2b648e66567b63c59e901ac7c8","abad9f9da3e1a25fe52dd31439ed7d11af1440a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a837c064b67fa63a9394136e31218b908cdcf783":["abad9f9da3e1a25fe52dd31439ed7d11af1440a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a837c064b67fa63a9394136e31218b908cdcf783"]},"commit2Childs":{"abad9f9da3e1a25fe52dd31439ed7d11af1440a5":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a837c064b67fa63a9394136e31218b908cdcf783"],"4901f8624f774c2b648e66567b63c59e901ac7c8":["abad9f9da3e1a25fe52dd31439ed7d11af1440a5","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"a837c064b67fa63a9394136e31218b908cdcf783":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}