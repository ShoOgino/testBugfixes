{"path":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FastVectorHighlighter#getBestFragments(FieldQuery,IndexReader,int,String,int,int,String[],String[],Encoder).mjava","commits":[{"id":"6357841f074d7585644052e27ac5ed03704759d5","date":1281050546,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FastVectorHighlighter#getBestFragments(FieldQuery,IndexReader,int,String,int,int,String[],String[],Encoder).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * return the best fragments.\n   * \n   * @param fieldQuery {@link FieldQuery} object\n   * @param reader {@link IndexReader} of the index\n   * @param docId document id to be highlighted\n   * @param fieldName field of the document to be highlighted\n   * @param fragCharSize the length (number of chars) of a fragment\n   * @param maxNumFragments maximum number of fragments\n   * @param preTags pre-tags to be used to highlight terms\n   * @param postTags post-tags to be used to highlight terms\n   * @param encoder an encoder that generates encoded text\n   * @return created fragments or null when no fragments created.\n   *         size of the array can be less than maxNumFragments\n   * @throws IOException\n   */\n  public final String[] getBestFragments( final FieldQuery fieldQuery, IndexReader reader, int docId,\n      String fieldName, int fragCharSize, int maxNumFragments, String[] preTags, String[] postTags,\n      Encoder encoder ) throws IOException {\n    FieldFragList fieldFragList = getFieldFragList( fieldQuery, reader, docId, fieldName, fragCharSize );\n    return fragmentsBuilder.createFragments( reader, docId, fieldName, fieldFragList, maxNumFragments,\n        preTags, postTags, encoder );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64b70045667e645d05ad37b9c98923d8dad53ccb","date":1282952527,"type":5,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FastVectorHighlighter#getBestFragments(FieldQuery,IndexReader,int,String,int,int,FragListBuilder,FragmentsBuilder,String[],String[],Encoder).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FastVectorHighlighter#getBestFragments(FieldQuery,IndexReader,int,String,int,int,String[],String[],Encoder).mjava","sourceNew":"  /**\n   * return the best fragments.\n   * \n   * @param fieldQuery {@link FieldQuery} object\n   * @param reader {@link IndexReader} of the index\n   * @param docId document id to be highlighted\n   * @param fieldName field of the document to be highlighted\n   * @param fragCharSize the length (number of chars) of a fragment\n   * @param maxNumFragments maximum number of fragments\n   * @param fragListBuilder {@link FragListBuilder} object\n   * @param fragmentsBuilder {@link FragmentsBuilder} object\n   * @param preTags pre-tags to be used to highlight terms\n   * @param postTags post-tags to be used to highlight terms\n   * @param encoder an encoder that generates encoded text\n   * @return created fragments or null when no fragments created.\n   *         size of the array can be less than maxNumFragments\n   * @throws IOException\n   */\n  public final String[] getBestFragments( final FieldQuery fieldQuery, IndexReader reader, int docId,\n      String fieldName, int fragCharSize, int maxNumFragments,\n      FragListBuilder fragListBuilder, FragmentsBuilder fragmentsBuilder,\n      String[] preTags, String[] postTags, Encoder encoder ) throws IOException {\n    FieldFragList fieldFragList =\n      getFieldFragList( fragListBuilder, fieldQuery, reader, docId, fieldName, fragCharSize );\n    return fragmentsBuilder.createFragments( reader, docId, fieldName, fieldFragList, maxNumFragments,\n        preTags, postTags, encoder );\n  }\n\n","sourceOld":"  /**\n   * return the best fragments.\n   * \n   * @param fieldQuery {@link FieldQuery} object\n   * @param reader {@link IndexReader} of the index\n   * @param docId document id to be highlighted\n   * @param fieldName field of the document to be highlighted\n   * @param fragCharSize the length (number of chars) of a fragment\n   * @param maxNumFragments maximum number of fragments\n   * @param preTags pre-tags to be used to highlight terms\n   * @param postTags post-tags to be used to highlight terms\n   * @param encoder an encoder that generates encoded text\n   * @return created fragments or null when no fragments created.\n   *         size of the array can be less than maxNumFragments\n   * @throws IOException\n   */\n  public final String[] getBestFragments( final FieldQuery fieldQuery, IndexReader reader, int docId,\n      String fieldName, int fragCharSize, int maxNumFragments, String[] preTags, String[] postTags,\n      Encoder encoder ) throws IOException {\n    FieldFragList fieldFragList = getFieldFragList( fieldQuery, reader, docId, fieldName, fragCharSize );\n    return fragmentsBuilder.createFragments( reader, docId, fieldName, fieldFragList, maxNumFragments,\n        preTags, postTags, encoder );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6357841f074d7585644052e27ac5ed03704759d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64b70045667e645d05ad37b9c98923d8dad53ccb":["6357841f074d7585644052e27ac5ed03704759d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64b70045667e645d05ad37b9c98923d8dad53ccb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6357841f074d7585644052e27ac5ed03704759d5"],"6357841f074d7585644052e27ac5ed03704759d5":["64b70045667e645d05ad37b9c98923d8dad53ccb"],"64b70045667e645d05ad37b9c98923d8dad53ccb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}