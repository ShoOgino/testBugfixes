{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simGetEventCounts().mjava","commits":[{"id":"278895e10265b1174eef1ab0be0cbeba446484a4","date":1515420497,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simGetEventCounts().mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Map<String, AtomicInteger>> simGetEventCounts() {\n    TreeMap<String, Map<String, AtomicInteger>> counts = new TreeMap<>();\n    synchronized (systemColl) {\n      for (SolrInputDocument d : systemColl) {\n        if (!\"autoscaling_event\".equals(d.getFieldValue(\"type\"))) {\n          continue;\n        }\n        counts.computeIfAbsent((String)d.getFieldValue(\"event.source_s\"), s -> new TreeMap<>())\n            .computeIfAbsent((String)d.getFieldValue(\"stage_s\"), s -> new AtomicInteger())\n            .incrementAndGet();\n      }\n    }\n    return counts;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simGetEventCounts().mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Map<String, AtomicInteger>> simGetEventCounts() {\n    TreeMap<String, Map<String, AtomicInteger>> counts = new TreeMap<>();\n    synchronized (systemColl) {\n      for (SolrInputDocument d : systemColl) {\n        if (!\"autoscaling_event\".equals(d.getFieldValue(\"type\"))) {\n          continue;\n        }\n        counts.computeIfAbsent((String)d.getFieldValue(\"event.source_s\"), s -> new TreeMap<>())\n            .computeIfAbsent((String)d.getFieldValue(\"stage_s\"), s -> new AtomicInteger())\n            .incrementAndGet();\n      }\n    }\n    return counts;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc18bc8ea2e2c1e308757ff50671c774438e9f3e","date":1538052583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simGetEventCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simGetEventCounts().mjava","sourceNew":"  public Map<String, Map<String, AtomicInteger>> simGetEventCounts() {\n    TreeMap<String, Map<String, AtomicInteger>> counts = new TreeMap<>(eventCounts);\n    return counts;\n  }\n\n","sourceOld":"  public Map<String, Map<String, AtomicInteger>> simGetEventCounts() {\n    TreeMap<String, Map<String, AtomicInteger>> counts = new TreeMap<>();\n    synchronized (systemColl) {\n      for (SolrInputDocument d : systemColl) {\n        if (!\"autoscaling_event\".equals(d.getFieldValue(\"type\"))) {\n          continue;\n        }\n        counts.computeIfAbsent((String)d.getFieldValue(\"event.source_s\"), s -> new TreeMap<>())\n            .computeIfAbsent((String)d.getFieldValue(\"stage_s\"), s -> new AtomicInteger())\n            .incrementAndGet();\n      }\n    }\n    return counts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simGetEventCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#simGetEventCounts().mjava","sourceNew":"  public Map<String, Map<String, AtomicInteger>> simGetEventCounts() {\n    TreeMap<String, Map<String, AtomicInteger>> counts = new TreeMap<>(eventCounts);\n    return counts;\n  }\n\n","sourceOld":"  public Map<String, Map<String, AtomicInteger>> simGetEventCounts() {\n    TreeMap<String, Map<String, AtomicInteger>> counts = new TreeMap<>(eventCounts);\n    return counts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc18bc8ea2e2c1e308757ff50671c774438e9f3e":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","278895e10265b1174eef1ab0be0cbeba446484a4"],"278895e10265b1174eef1ab0be0cbeba446484a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"]},"commit2Childs":{"fc18bc8ea2e2c1e308757ff50671c774438e9f3e":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"b94236357aaa22b76c10629851fe4e376e0cea82":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"278895e10265b1174eef1ab0be0cbeba446484a4":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","278895e10265b1174eef1ab0be0cbeba446484a4"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}