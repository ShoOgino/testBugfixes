{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","sourceNew":"public boolean stem() {\n  int v_1 = cursor;\n  r_initial_morph();\n  cursor = v_1;\n  r_mark_regions();\n  limit_backward = cursor;\n  cursor = limit;\n  int v_3 = limit - cursor;\n  r_noun_sfx();\n  cursor = limit - v_3;\n  int v_4 = limit - cursor;\n  r_deriv();\n  cursor = limit - v_4;\n  int v_5 = limit - cursor;\n  r_verb_sfx();\n  cursor = limit - v_5;\n  cursor = limit_backward;\n  return true;\n}\n\n","sourceOld":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}