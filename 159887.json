{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n      .setMaxBufferedDocs(2));\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n          new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new StandardAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n      .setMaxBufferedDocs(2));\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n          new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new StandardAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n      .setMaxBufferedDocs(2));\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n          new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new StandardAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n      .setMaxBufferedDocs(2));\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n          new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new StandardAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n      .setMaxBufferedDocs(2));\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n          new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new StandardAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(random, \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      MockRAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(random, \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(random, \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      MockRAMDirectory d = newDirectory(random);\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(random, \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      MockRAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(random, \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory(random);\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(random, \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      MockRAMDirectory d = newDirectory(random);\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(random, \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory(random);\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig(random, \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }\n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      RAMDirectory d = new MockRAMDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(d, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer())\n      .setMaxBufferedDocs(2));\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer()).setOpenMode(\n              OpenMode.APPEND).setMaxBufferedDocs(2));\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }\n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a8259c922a83abc544609227a60d48e5ee93e7e","date":1317679620,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = r.reopen();\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = r.reopen();\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d, CodecProvider.getDefault());\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().isOptimized());\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.optimize();\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertTrue(r2.getIndexCommit().isOptimized());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d, false);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40b62adb64d8f7b2f85ee849349cfb0bef03f45","date":1327855938,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      DirectoryReader r = DirectoryReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = DirectoryReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(DirectoryReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      DirectoryReader r = DirectoryReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = DirectoryReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(DirectoryReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      IndexReader r = IndexReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      IndexReader r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = IndexReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(IndexReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testGetIndexCommit().mjava","sourceNew":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      DirectoryReader r = DirectoryReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = DirectoryReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(DirectoryReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","sourceOld":"    public void testGetIndexCommit() throws IOException {\n\n      Directory d = newDirectory();\n\n      // set up writer\n      IndexWriter writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<27;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(d);\n      DirectoryReader r = DirectoryReader.open(d);\n      IndexCommit c = r.getIndexCommit();\n\n      assertEquals(sis.getCurrentSegmentFileName(), c.getSegmentsFileName());\n\n      assertTrue(c.equals(r.getIndexCommit()));\n\n      // Change the index\n      writer = new IndexWriter(\n          d,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setOpenMode(OpenMode.APPEND).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      for(int i=0;i<7;i++)\n        addDocumentWithFields(writer);\n      writer.close();\n\n      DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertFalse(c.equals(r2.getIndexCommit()));\n      assertFalse(r2.getIndexCommit().getSegmentCount() == 1);\n      r2.close();\n\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.APPEND));\n      writer.forceMerge(1);\n      writer.close();\n\n      r2 = DirectoryReader.openIfChanged(r);\n      assertNotNull(r2);\n      assertNull(DirectoryReader.openIfChanged(r2));\n      assertEquals(1, r2.getIndexCommit().getSegmentCount());\n\n      r.close();\n      r2.close();\n      d.close();\n    }      \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["7b91922b55d15444d554721b352861d028eb8278"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"8a8259c922a83abc544609227a60d48e5ee93e7e":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"7b91922b55d15444d554721b352861d028eb8278":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["d572389229127c297dd1fa5ce4758e1cec41e799"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"8a8259c922a83abc544609227a60d48e5ee93e7e":["7b91922b55d15444d554721b352861d028eb8278"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["8a8259c922a83abc544609227a60d48e5ee93e7e","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"962d04139994fce5193143ef35615499a9a96d78":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7b91922b55d15444d554721b352861d028eb8278":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}