{"path":"src/java/org/apache/lucene/search/PhrasePrefixQuery.PhrasePrefixWeight#explain(IndexReader,int).mjava","commits":[{"id":"d26db6980435280d32792a7ddd3e26866ac98ea9","date":1042658704,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhrasePrefixQuery.PhrasePrefixWeight#explain(IndexReader,int).mjava","pathOld":"/dev/null","sourceNew":"    public Explanation explain(IndexReader reader, int doc)\n      throws IOException {\n      Explanation result = new Explanation();\n      result.setDescription(\"weight(\"+getQuery()+\" in \"+doc+\"), product of:\");\n\n      Explanation idfExpl = new Explanation(idf, \"idf(\"+getQuery()+\")\");\n      \n      // explain query weight\n      Explanation queryExpl = new Explanation();\n      queryExpl.setDescription(\"queryWeight(\" + getQuery() + \"), product of:\");\n\n      Explanation boostExpl = new Explanation(getBoost(), \"boost\");\n      if (getBoost() != 1.0f)\n        queryExpl.addDetail(boostExpl);\n\n      queryExpl.addDetail(idfExpl);\n      \n      Explanation queryNormExpl = new Explanation(queryNorm,\"queryNorm\");\n      queryExpl.addDetail(queryNormExpl);\n      \n      queryExpl.setValue(boostExpl.getValue() *\n                         idfExpl.getValue() *\n                         queryNormExpl.getValue());\n\n      result.addDetail(queryExpl);\n     \n      // explain field weight\n      Explanation fieldExpl = new Explanation();\n      fieldExpl.setDescription(\"fieldWeight(\"+getQuery()+\" in \"+doc+\n                               \"), product of:\");\n\n      Explanation tfExpl = scorer(reader).explain(doc);\n      fieldExpl.addDetail(tfExpl);\n      fieldExpl.addDetail(idfExpl);\n\n      Explanation fieldNormExpl = new Explanation();\n      fieldNormExpl.setValue(Similarity.decodeNorm(reader.norms(field)[doc]));\n      fieldNormExpl.setDescription(\"fieldNorm(field=\"+field+\", doc=\"+doc+\")\");\n      fieldExpl.addDetail(fieldNormExpl);\n\n      fieldExpl.setValue(tfExpl.getValue() *\n                         idfExpl.getValue() *\n                         fieldNormExpl.getValue());\n      \n      result.addDetail(fieldExpl);\n\n      // combine them\n      result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n      if (queryExpl.getValue() == 1.0f)\n        return fieldExpl;\n\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbebaf78cc3b33d7a0520f7b9a5cd0324b5065ae","date":1071527173,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhrasePrefixQuery.PhrasePrefixWeight#explain(IndexReader,int).mjava","pathOld":"src/java/org/apache/lucene/search/PhrasePrefixQuery.PhrasePrefixWeight#explain(IndexReader,int).mjava","sourceNew":"    public Explanation explain(IndexReader reader, int doc)\n      throws IOException {\n      Explanation result = new Explanation();\n      result.setDescription(\"weight(\"+getQuery()+\" in \"+doc+\"), product of:\");\n\n      Explanation idfExpl = new Explanation(idf, \"idf(\"+getQuery()+\")\");\n      \n      // explain query weight\n      Explanation queryExpl = new Explanation();\n      queryExpl.setDescription(\"queryWeight(\" + getQuery() + \"), product of:\");\n\n      Explanation boostExpl = new Explanation(getBoost(), \"boost\");\n      if (getBoost() != 1.0f)\n        queryExpl.addDetail(boostExpl);\n\n      queryExpl.addDetail(idfExpl);\n      \n      Explanation queryNormExpl = new Explanation(queryNorm,\"queryNorm\");\n      queryExpl.addDetail(queryNormExpl);\n      \n      queryExpl.setValue(boostExpl.getValue() *\n                         idfExpl.getValue() *\n                         queryNormExpl.getValue());\n\n      result.addDetail(queryExpl);\n     \n      // explain field weight\n      Explanation fieldExpl = new Explanation();\n      fieldExpl.setDescription(\"fieldWeight(\"+getQuery()+\" in \"+doc+\n                               \"), product of:\");\n\n      Explanation tfExpl = scorer(reader).explain(doc);\n      fieldExpl.addDetail(tfExpl);\n      fieldExpl.addDetail(idfExpl);\n\n      Explanation fieldNormExpl = new Explanation();\n      byte[] fieldNorms = reader.norms(field);\n      float fieldNorm =\n        fieldNorms!=null ? Similarity.decodeNorm(fieldNorms[doc]) : 0.0f;\n      fieldNormExpl.setValue(fieldNorm);\n      fieldNormExpl.setDescription(\"fieldNorm(field=\"+field+\", doc=\"+doc+\")\");\n      fieldExpl.addDetail(fieldNormExpl);\n\n      fieldExpl.setValue(tfExpl.getValue() *\n                         idfExpl.getValue() *\n                         fieldNormExpl.getValue());\n      \n      result.addDetail(fieldExpl);\n\n      // combine them\n      result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n      if (queryExpl.getValue() == 1.0f)\n        return fieldExpl;\n\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(IndexReader reader, int doc)\n      throws IOException {\n      Explanation result = new Explanation();\n      result.setDescription(\"weight(\"+getQuery()+\" in \"+doc+\"), product of:\");\n\n      Explanation idfExpl = new Explanation(idf, \"idf(\"+getQuery()+\")\");\n      \n      // explain query weight\n      Explanation queryExpl = new Explanation();\n      queryExpl.setDescription(\"queryWeight(\" + getQuery() + \"), product of:\");\n\n      Explanation boostExpl = new Explanation(getBoost(), \"boost\");\n      if (getBoost() != 1.0f)\n        queryExpl.addDetail(boostExpl);\n\n      queryExpl.addDetail(idfExpl);\n      \n      Explanation queryNormExpl = new Explanation(queryNorm,\"queryNorm\");\n      queryExpl.addDetail(queryNormExpl);\n      \n      queryExpl.setValue(boostExpl.getValue() *\n                         idfExpl.getValue() *\n                         queryNormExpl.getValue());\n\n      result.addDetail(queryExpl);\n     \n      // explain field weight\n      Explanation fieldExpl = new Explanation();\n      fieldExpl.setDescription(\"fieldWeight(\"+getQuery()+\" in \"+doc+\n                               \"), product of:\");\n\n      Explanation tfExpl = scorer(reader).explain(doc);\n      fieldExpl.addDetail(tfExpl);\n      fieldExpl.addDetail(idfExpl);\n\n      Explanation fieldNormExpl = new Explanation();\n      fieldNormExpl.setValue(Similarity.decodeNorm(reader.norms(field)[doc]));\n      fieldNormExpl.setDescription(\"fieldNorm(field=\"+field+\", doc=\"+doc+\")\");\n      fieldExpl.addDetail(fieldNormExpl);\n\n      fieldExpl.setValue(tfExpl.getValue() *\n                         idfExpl.getValue() *\n                         fieldNormExpl.getValue());\n      \n      result.addDetail(fieldExpl);\n\n      // combine them\n      result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n      if (queryExpl.getValue() == 1.0f)\n        return fieldExpl;\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df8dadf22de84eeb1294e70792e292ecf8ded564","date":1130577981,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhrasePrefixQuery.PhrasePrefixWeight#explain(IndexReader,int).mjava","pathOld":"src/java/org/apache/lucene/search/PhrasePrefixQuery.PhrasePrefixWeight#explain(IndexReader,int).mjava","sourceNew":"    public Explanation explain(IndexReader reader, int doc)\n      throws IOException {\n      Explanation result = new Explanation();\n      result.setDescription(\"weight(\"+getQuery()+\" in \"+doc+\"), product of:\");\n\n      Explanation idfExpl = new Explanation(idf, \"idf(\"+getQuery()+\")\");\n\n      // explain query weight\n      Explanation queryExpl = new Explanation();\n      queryExpl.setDescription(\"queryWeight(\" + getQuery() + \"), product of:\");\n\n      Explanation boostExpl = new Explanation(getBoost(), \"boost\");\n      if (getBoost() != 1.0f)\n        queryExpl.addDetail(boostExpl);\n\n      queryExpl.addDetail(idfExpl);\n\n      Explanation queryNormExpl = new Explanation(queryNorm,\"queryNorm\");\n      queryExpl.addDetail(queryNormExpl);\n\n      queryExpl.setValue(boostExpl.getValue() *\n                         idfExpl.getValue() *\n                         queryNormExpl.getValue());\n\n      result.addDetail(queryExpl);\n\n      // explain field weight\n      Explanation fieldExpl = new Explanation();\n      fieldExpl.setDescription(\"fieldWeight(\"+getQuery()+\" in \"+doc+\n                               \"), product of:\");\n\n      Explanation tfExpl = scorer(reader).explain(doc);\n      fieldExpl.addDetail(tfExpl);\n      fieldExpl.addDetail(idfExpl);\n\n      Explanation fieldNormExpl = new Explanation();\n      byte[] fieldNorms = reader.norms(field);\n      float fieldNorm =\n        fieldNorms!=null ? Similarity.decodeNorm(fieldNorms[doc]) : 0.0f;\n      fieldNormExpl.setValue(fieldNorm);\n      fieldNormExpl.setDescription(\"fieldNorm(field=\"+field+\", doc=\"+doc+\")\");\n      fieldExpl.addDetail(fieldNormExpl);\n\n      fieldExpl.setValue(tfExpl.getValue() *\n                         idfExpl.getValue() *\n                         fieldNormExpl.getValue());\n\n      result.addDetail(fieldExpl);\n\n      // combine them\n      result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n      if (queryExpl.getValue() == 1.0f)\n        return fieldExpl;\n\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(IndexReader reader, int doc)\n      throws IOException {\n      Explanation result = new Explanation();\n      result.setDescription(\"weight(\"+getQuery()+\" in \"+doc+\"), product of:\");\n\n      Explanation idfExpl = new Explanation(idf, \"idf(\"+getQuery()+\")\");\n      \n      // explain query weight\n      Explanation queryExpl = new Explanation();\n      queryExpl.setDescription(\"queryWeight(\" + getQuery() + \"), product of:\");\n\n      Explanation boostExpl = new Explanation(getBoost(), \"boost\");\n      if (getBoost() != 1.0f)\n        queryExpl.addDetail(boostExpl);\n\n      queryExpl.addDetail(idfExpl);\n      \n      Explanation queryNormExpl = new Explanation(queryNorm,\"queryNorm\");\n      queryExpl.addDetail(queryNormExpl);\n      \n      queryExpl.setValue(boostExpl.getValue() *\n                         idfExpl.getValue() *\n                         queryNormExpl.getValue());\n\n      result.addDetail(queryExpl);\n     \n      // explain field weight\n      Explanation fieldExpl = new Explanation();\n      fieldExpl.setDescription(\"fieldWeight(\"+getQuery()+\" in \"+doc+\n                               \"), product of:\");\n\n      Explanation tfExpl = scorer(reader).explain(doc);\n      fieldExpl.addDetail(tfExpl);\n      fieldExpl.addDetail(idfExpl);\n\n      Explanation fieldNormExpl = new Explanation();\n      byte[] fieldNorms = reader.norms(field);\n      float fieldNorm =\n        fieldNorms!=null ? Similarity.decodeNorm(fieldNorms[doc]) : 0.0f;\n      fieldNormExpl.setValue(fieldNorm);\n      fieldNormExpl.setDescription(\"fieldNorm(field=\"+field+\", doc=\"+doc+\")\");\n      fieldExpl.addDetail(fieldNormExpl);\n\n      fieldExpl.setValue(tfExpl.getValue() *\n                         idfExpl.getValue() *\n                         fieldNormExpl.getValue());\n      \n      result.addDetail(fieldExpl);\n\n      // combine them\n      result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n      if (queryExpl.getValue() == 1.0f)\n        return fieldExpl;\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/PhrasePrefixQuery.PhrasePrefixWeight#explain(IndexReader,int).mjava","sourceNew":null,"sourceOld":"    public Explanation explain(IndexReader reader, int doc)\n      throws IOException {\n      Explanation result = new Explanation();\n      result.setDescription(\"weight(\"+getQuery()+\" in \"+doc+\"), product of:\");\n\n      Explanation idfExpl = new Explanation(idf, \"idf(\"+getQuery()+\")\");\n\n      // explain query weight\n      Explanation queryExpl = new Explanation();\n      queryExpl.setDescription(\"queryWeight(\" + getQuery() + \"), product of:\");\n\n      Explanation boostExpl = new Explanation(getBoost(), \"boost\");\n      if (getBoost() != 1.0f)\n        queryExpl.addDetail(boostExpl);\n\n      queryExpl.addDetail(idfExpl);\n\n      Explanation queryNormExpl = new Explanation(queryNorm,\"queryNorm\");\n      queryExpl.addDetail(queryNormExpl);\n\n      queryExpl.setValue(boostExpl.getValue() *\n                         idfExpl.getValue() *\n                         queryNormExpl.getValue());\n\n      result.addDetail(queryExpl);\n\n      // explain field weight\n      Explanation fieldExpl = new Explanation();\n      fieldExpl.setDescription(\"fieldWeight(\"+getQuery()+\" in \"+doc+\n                               \"), product of:\");\n\n      Explanation tfExpl = scorer(reader).explain(doc);\n      fieldExpl.addDetail(tfExpl);\n      fieldExpl.addDetail(idfExpl);\n\n      Explanation fieldNormExpl = new Explanation();\n      byte[] fieldNorms = reader.norms(field);\n      float fieldNorm =\n        fieldNorms!=null ? Similarity.decodeNorm(fieldNorms[doc]) : 0.0f;\n      fieldNormExpl.setValue(fieldNorm);\n      fieldNormExpl.setDescription(\"fieldNorm(field=\"+field+\", doc=\"+doc+\")\");\n      fieldExpl.addDetail(fieldNormExpl);\n\n      fieldExpl.setValue(tfExpl.getValue() *\n                         idfExpl.getValue() *\n                         fieldNormExpl.getValue());\n\n      result.addDetail(fieldExpl);\n\n      // combine them\n      result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n      if (queryExpl.getValue() == 1.0f)\n        return fieldExpl;\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bbebaf78cc3b33d7a0520f7b9a5cd0324b5065ae":["d26db6980435280d32792a7ddd3e26866ac98ea9"],"df8dadf22de84eeb1294e70792e292ecf8ded564":["bbebaf78cc3b33d7a0520f7b9a5cd0324b5065ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"d26db6980435280d32792a7ddd3e26866ac98ea9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"bbebaf78cc3b33d7a0520f7b9a5cd0324b5065ae":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"df8dadf22de84eeb1294e70792e292ecf8ded564":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d26db6980435280d32792a7ddd3e26866ac98ea9":["bbebaf78cc3b33d7a0520f7b9a5cd0324b5065ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d26db6980435280d32792a7ddd3e26866ac98ea9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}