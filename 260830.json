{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","commits":[{"id":"15ba547dfc0dd0b670e678cb3db8e5d27c694420","date":1511865512,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],int).mjava","sourceNew":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(properties) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],int).mjava","sourceNew":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(properties) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25d862725cffd5d4d62fd002b5dc320f92c53365","date":1534448650,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","sourceNew":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(new LinkedHashMap<>(triggerConfigs)) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(new LinkedHashMap<>(listenerConfigs)) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(new LinkedHashMap<>(properties)) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(properties) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","bugFix":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","15ba547dfc0dd0b670e678cb3db8e5d27c694420"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7cac1f2920f8057198f04505797cbabf74dd9a97","date":1546884894,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","sourceNew":"  public AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(new LinkedHashMap<>(triggerConfigs)) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(new LinkedHashMap<>(listenerConfigs)) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(new LinkedHashMap<>(properties)) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(new LinkedHashMap<>(triggerConfigs)) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(new LinkedHashMap<>(listenerConfigs)) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(new LinkedHashMap<>(properties)) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","sourceNew":null,"sourceOld":"  public AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(new LinkedHashMap<>(triggerConfigs)) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(new LinkedHashMap<>(listenerConfigs)) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(new LinkedHashMap<>(properties)) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","15ba547dfc0dd0b670e678cb3db8e5d27c694420"],"15ba547dfc0dd0b670e678cb3db8e5d27c694420":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7cac1f2920f8057198f04505797cbabf74dd9a97":["25d862725cffd5d4d62fd002b5dc320f92c53365"],"3f504512a03d978990cbff30db0522b354e846db":["7cac1f2920f8057198f04505797cbabf74dd9a97"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"25d862725cffd5d4d62fd002b5dc320f92c53365":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["25d862725cffd5d4d62fd002b5dc320f92c53365"],"15ba547dfc0dd0b670e678cb3db8e5d27c694420":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"7cac1f2920f8057198f04505797cbabf74dd9a97":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1aad05eeff7818b0833c02ac6b743aa72054963b","15ba547dfc0dd0b670e678cb3db8e5d27c694420"],"25d862725cffd5d4d62fd002b5dc320f92c53365":["7cac1f2920f8057198f04505797cbabf74dd9a97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}