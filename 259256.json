{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","commits":[{"id":"10b9c6c42133576daaccbd79bd04c88511b9caca","date":1455930223,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() throws IOException {\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (cache == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ab3f83fe809caa1d81a4ed52dfa5372723b348d","date":1458525918,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","sourceNew":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (cache == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (cache == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"826d15444ddf61716dc768c229cd54b2c2ccce1c","date":1462822652,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","sourceNew":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (cache == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","sourceNew":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (cache == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","sourceNew":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (cache == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5fa1c8367f821057f943ece929329485ec708ba","date":1475186606,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n\n      if (initialRun || runCount > 0) {\n        persistCheckpoints();\n        initialRun = false;\n        runCount = 0;\n      }\n\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n\n      if (initialRun || runCount > 0) {\n        persistCheckpoints();\n        initialRun = false;\n        runCount = 0;\n      }\n\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n\n      if (initialRun || runCount > 0) {\n        persistCheckpoints();\n        initialRun = false;\n        runCount = 0;\n      }\n\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    runCount = 0;\n    try {\n      persistCheckpoints();\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (cache == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#close().mjava","sourceNew":"  public void close() throws IOException {\n    try {\n\n      if (initialRun || runCount > 0) {\n        persistCheckpoints();\n        initialRun = false;\n        runCount = 0;\n      }\n\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext != null && streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    try {\n\n      if (initialRun || runCount > 0) {\n        persistCheckpoints();\n        initialRun = false;\n        runCount = 0;\n      }\n\n    } finally {\n\n      if(solrStreams != null) {\n        for (TupleStream solrStream : solrStreams) {\n          solrStream.close();\n        }\n      }\n\n      if (streamContext.getSolrClientCache() == null) {\n        cloudSolrClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"10b9c6c42133576daaccbd79bd04c88511b9caca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b5fa1c8367f821057f943ece929329485ec708ba":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d470c8182e92b264680e34081b75e70a9f2b3c89","b5fa1c8367f821057f943ece929329485ec708ba"],"5ab3f83fe809caa1d81a4ed52dfa5372723b348d":["10b9c6c42133576daaccbd79bd04c88511b9caca"],"e66a459d38c1c4a2f97128433dab546f683a9fed":["5ab3f83fe809caa1d81a4ed52dfa5372723b348d","826d15444ddf61716dc768c229cd54b2c2ccce1c"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"826d15444ddf61716dc768c229cd54b2c2ccce1c":["5ab3f83fe809caa1d81a4ed52dfa5372723b348d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5ab3f83fe809caa1d81a4ed52dfa5372723b348d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["5ab3f83fe809caa1d81a4ed52dfa5372723b348d","826d15444ddf61716dc768c229cd54b2c2ccce1c"]},"commit2Childs":{"10b9c6c42133576daaccbd79bd04c88511b9caca":["5ab3f83fe809caa1d81a4ed52dfa5372723b348d"],"b5fa1c8367f821057f943ece929329485ec708ba":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["10b9c6c42133576daaccbd79bd04c88511b9caca"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5ab3f83fe809caa1d81a4ed52dfa5372723b348d":["e66a459d38c1c4a2f97128433dab546f683a9fed","826d15444ddf61716dc768c229cd54b2c2ccce1c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"826d15444ddf61716dc768c229cd54b2c2ccce1c":["e66a459d38c1c4a2f97128433dab546f683a9fed","d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["b5fa1c8367f821057f943ece929329485ec708ba","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}