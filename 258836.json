{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#advance(int).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#advance(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) {\n      // TODO: we could make more efficient version, but, it\n      // should be rare that this will matter in practice\n      // since usually apps will not store \"big\" fields in\n      // this codec!\n      //System.out.println(\"advance target=\" + target);\n      while(nextDoc() < target) {\n      }\n      //System.out.println(\"  return \" + docID);\n      return docID;\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) {\n      // TODO: we could make more efficient version, but, it\n      // should be rare that this will matter in practice\n      // since usually apps will not store \"big\" fields in\n      // this codec!\n      //System.out.println(\"advance target=\" + target);\n      while(nextDoc() < target) {\n      }\n      //System.out.println(\"  return \" + docID);\n      return docID;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe43a17fb193c95257604ee5486e9f6e2a392c28","date":1365104925,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#advance(int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      // TODO: we could make more efficient version, but, it\n      // should be rare that this will matter in practice\n      // since usually apps will not store \"big\" fields in\n      // this codec!\n      return slowAdvance(target);\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) {\n      // TODO: we could make more efficient version, but, it\n      // should be rare that this will matter in practice\n      // since usually apps will not store \"big\" fields in\n      // this codec!\n      //System.out.println(\"advance target=\" + target);\n      while(nextDoc() < target) {\n      }\n      //System.out.println(\"  return \" + docID);\n      return docID;\n    }\n\n","bugFix":["7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTPostingsEnum#advance(int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      // TODO: we could make more efficient version, but, it\n      // should be rare that this will matter in practice\n      // since usually apps will not store \"big\" fields in\n      // this codec!\n      return slowAdvance(target);\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n      // TODO: we could make more efficient version, but, it\n      // should be rare that this will matter in practice\n      // since usually apps will not store \"big\" fields in\n      // this codec!\n      return slowAdvance(target);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe43a17fb193c95257604ee5486e9f6e2a392c28":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["fe43a17fb193c95257604ee5486e9f6e2a392c28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"fe43a17fb193c95257604ee5486e9f6e2a392c28":["51f5280f31484820499077f41fcdfe92d527d9dc"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["fe43a17fb193c95257604ee5486e9f6e2a392c28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}