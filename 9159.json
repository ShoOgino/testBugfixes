{"path":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","commits":[{"id":"059062eb4071e7bbb5a38b6513158f2f87ede135","date":1163808719,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","pathOld":"/dev/null","sourceNew":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    Directory dir = FSDirectory.getDirectory(dirName, false);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66b12ba4967665216eeb706b58d424c51fb3641a","date":1169160423,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","sourceNew":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    Directory dir = FSDirectory.getDirectory(dirName, false);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc9931b60a4b1618b9f7cb9c176883390697b1b","date":1173207152,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","sourceNew":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b583d3621fe173e7296abcf62f82fb707c901234","date":1194717060,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","sourceNew":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName, null, false);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a015c55424dd37249054283bedc90388bd45358f","date":1197049353,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","sourceNew":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName, null, false);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33","date":1201260752,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","sourceNew":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n\n    // First document should be #21 since it's norm was\n    // increased:\n    Document d = hits.doc(0);\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    testHits(hits, 34, searcher.getIndexReader());\n\n    searcher.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n    assertEquals(34, hits.length());\n    Document d = hits.doc(0);\n\n    // First document should be #21 since it's norm was increased:\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    searcher.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String,String).mjava","pathOld":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(String).mjava","sourceNew":"  public void searchIndex(String dirName, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    IndexReader reader = searcher.getIndexReader();\n\n    _TestUtil.checkIndex(dir);\n\n    for(int i=0;i<35;i++) {\n      if (!reader.isDeleted(i)) {\n        Document d = reader.document(i);\n        List fields = d.getFields();\n        if (oldName.startsWith(\"23.\")) {\n          assertEquals(3, fields.size());\n          Field f = (Field) d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = (Field) d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n        \n          f = (Field) d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n        }        \n      } else\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n    }\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n\n    // First document should be #21 since it's norm was\n    // increased:\n    Document d = hits.doc(0);\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    testHits(hits, 34, searcher.getIndexReader());\n\n    if (oldName.startsWith(\"23.\")) {\n      hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")));\n      assertEquals(34, hits.length());\n      hits = searcher.search(new TermQuery(new Term(\"utf8\", \"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")));\n      assertEquals(34, hits.length());\n      hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")));\n      assertEquals(34, hits.length());\n    }\n\n    searcher.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void searchIndex(String dirName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new WhitespaceAnalyzer());\n    //Query query = parser.parse(\"handle:1\");\n\n    dirName = fullDir(dirName);\n\n    Directory dir = FSDirectory.getDirectory(dirName);\n    IndexSearcher searcher = new IndexSearcher(dir);\n    \n    Hits hits = searcher.search(new TermQuery(new Term(\"content\", \"aaa\")));\n\n    // First document should be #21 since it's norm was\n    // increased:\n    Document d = hits.doc(0);\n    assertEquals(\"didn't get the right document first\", \"21\", d.get(\"id\"));\n\n    testHits(hits, 34, searcher.getIndexReader());\n\n    searcher.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["c5e023aa3e1228b8ccacdc30d852eb88e996d1b2"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b583d3621fe173e7296abcf62f82fb707c901234":["ddc9931b60a4b1618b9f7cb9c176883390697b1b"],"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33":["a015c55424dd37249054283bedc90388bd45358f"],"66b12ba4967665216eeb706b58d424c51fb3641a":["059062eb4071e7bbb5a38b6513158f2f87ede135"],"a015c55424dd37249054283bedc90388bd45358f":["b583d3621fe173e7296abcf62f82fb707c901234"],"ddc9931b60a4b1618b9f7cb9c176883390697b1b":["66b12ba4967665216eeb706b58d424c51fb3641a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["b3d08461c77d39c25ea6ff0cd05b32f948fa2a33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"059062eb4071e7bbb5a38b6513158f2f87ede135":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b583d3621fe173e7296abcf62f82fb707c901234":["a015c55424dd37249054283bedc90388bd45358f"],"b3d08461c77d39c25ea6ff0cd05b32f948fa2a33":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"66b12ba4967665216eeb706b58d424c51fb3641a":["ddc9931b60a4b1618b9f7cb9c176883390697b1b"],"a015c55424dd37249054283bedc90388bd45358f":["b3d08461c77d39c25ea6ff0cd05b32f948fa2a33"],"ddc9931b60a4b1618b9f7cb9c176883390697b1b":["b583d3621fe173e7296abcf62f82fb707c901234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["059062eb4071e7bbb5a38b6513158f2f87ede135"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"059062eb4071e7bbb5a38b6513158f2f87ede135":["66b12ba4967665216eeb706b58d424c51fb3641a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}