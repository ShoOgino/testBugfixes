{"path":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testSystemProperties().mjava","commits":[{"id":"0d6879a535f14bc53be7c86de58142558c4f9eee","date":1492512399,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testSystemProperties().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSystemProperties() throws Exception {\n    if (System.getProperty(\"basicauth\") == null) {\n      // make sure it's set\n      System.setProperty(\"basicauth\", \"foo:bar\");\n    }\n    SolrMetricManager metricManager = jetty.getCoreContainer().getMetricManager();\n    Map<String,Metric> metrics = metricManager.registry(\"solr.jvm\").getMetrics();\n    MetricsMap map = (MetricsMap)metrics.get(\"system.properties\");\n    assertNotNull(map);\n    Map<String,Object> values = map.getValue();\n    System.getProperties().forEach((k, v) -> {\n      if (NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.contains(k)) {\n        assertNull(\"hidden property \" + k + \" present!\", values.get(k));\n      } else {\n        assertEquals(v, values.get(String.valueOf(k)));\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bfc52860e6d13d034226a760813c59d984c6817a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testSystemProperties().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSystemProperties() throws Exception {\n    if (System.getProperty(\"basicauth\") == null) {\n      // make sure it's set\n      System.setProperty(\"basicauth\", \"foo:bar\");\n    }\n    SolrMetricManager metricManager = jetty.getCoreContainer().getMetricManager();\n    Map<String,Metric> metrics = metricManager.registry(\"solr.jvm\").getMetrics();\n    MetricsMap map = (MetricsMap)metrics.get(\"system.properties\");\n    assertNotNull(map);\n    Map<String,Object> values = map.getValue();\n    System.getProperties().forEach((k, v) -> {\n      if (NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.contains(k)) {\n        assertNull(\"hidden property \" + k + \" present!\", values.get(k));\n      } else {\n        assertEquals(v, values.get(String.valueOf(k)));\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testSystemProperties().mjava","pathOld":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testSystemProperties().mjava","sourceNew":"  @Test\n  public void testSystemProperties() throws Exception {\n    if (System.getProperty(\"basicauth\") == null) {\n      // make sure it's set\n      System.setProperty(\"basicauth\", \"foo:bar\");\n    }\n    SolrMetricManager metricManager = jetty.getCoreContainer().getMetricManager();\n    Map<String,Metric> metrics = metricManager.registry(\"solr.jvm\").getMetrics();\n    MetricsMap map = (MetricsMap)((SolrMetricManager.GaugeWrapper)metrics.get(\"system.properties\")).getGauge();\n    assertNotNull(map);\n    Map<String,Object> values = map.getValue();\n    System.getProperties().forEach((k, v) -> {\n      if (NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.contains(k)) {\n        assertNull(\"hidden property \" + k + \" present!\", values.get(k));\n      } else {\n        assertEquals(v, values.get(String.valueOf(k)));\n      }\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testSystemProperties() throws Exception {\n    if (System.getProperty(\"basicauth\") == null) {\n      // make sure it's set\n      System.setProperty(\"basicauth\", \"foo:bar\");\n    }\n    SolrMetricManager metricManager = jetty.getCoreContainer().getMetricManager();\n    Map<String,Metric> metrics = metricManager.registry(\"solr.jvm\").getMetrics();\n    MetricsMap map = (MetricsMap)metrics.get(\"system.properties\");\n    assertNotNull(map);\n    Map<String,Object> values = map.getValue();\n    System.getProperties().forEach((k, v) -> {\n      if (NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.contains(k)) {\n        assertNull(\"hidden property \" + k + \" present!\", values.get(k));\n      } else {\n        assertEquals(v, values.get(String.valueOf(k)));\n      }\n    });\n  }\n\n","bugFix":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testSystemProperties().mjava","pathOld":"solr/core/src/test/org/apache/solr/metrics/JvmMetricsTest#testSystemProperties().mjava","sourceNew":"  @Test\n  public void testSystemProperties() throws Exception {\n    if (System.getProperty(\"basicauth\") == null) {\n      // make sure it's set\n      System.setProperty(\"basicauth\", \"foo:bar\");\n    }\n    SolrMetricManager metricManager = jetty.getCoreContainer().getMetricManager();\n    Map<String,Metric> metrics = metricManager.registry(\"solr.jvm\").getMetrics();\n    MetricsMap map = (MetricsMap)((SolrMetricManager.GaugeWrapper)metrics.get(\"system.properties\")).getGauge();\n    assertNotNull(map);\n    Map<String,Object> values = map.getValue();\n    System.getProperties().forEach((k, v) -> {\n      if (NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.contains(k)) {\n        assertNull(\"hidden property \" + k + \" present!\", values.get(k));\n      } else {\n        assertEquals(v, values.get(String.valueOf(k)));\n      }\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testSystemProperties() throws Exception {\n    if (System.getProperty(\"basicauth\") == null) {\n      // make sure it's set\n      System.setProperty(\"basicauth\", \"foo:bar\");\n    }\n    SolrMetricManager metricManager = jetty.getCoreContainer().getMetricManager();\n    Map<String,Metric> metrics = metricManager.registry(\"solr.jvm\").getMetrics();\n    MetricsMap map = (MetricsMap)metrics.get(\"system.properties\");\n    assertNotNull(map);\n    Map<String,Object> values = map.getValue();\n    System.getProperties().forEach((k, v) -> {\n      if (NodeConfig.NodeConfigBuilder.DEFAULT_HIDDEN_SYS_PROPS.contains(k)) {\n        assertNull(\"hidden property \" + k + \" present!\", values.get(k));\n      } else {\n        assertEquals(v, values.get(String.valueOf(k)));\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bfc52860e6d13d034226a760813c59d984c6817a":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"43564cbb30b064675027cfb569564e8531096e97":["0d6879a535f14bc53be7c86de58142558c4f9eee","bfc52860e6d13d034226a760813c59d984c6817a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43564cbb30b064675027cfb569564e8531096e97"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","0d6879a535f14bc53be7c86de58142558c4f9eee"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}