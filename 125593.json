{"path":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","commits":[{"id":"71df1db89d3a713f022b58111aafd14a4b352da0","date":1352479848,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    final int oldBytesUsed = bytesUsed;\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n    iwBytesUsed.addAndGet(bytesUsed - oldBytesUsed);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce73f585d17f53055185a19beb46db23d76e0ad9","date":1353077110,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    final int oldBytesUsed = bytesUsed;\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n\n    // Fill in any holes:\n    while(pending.size() < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n    iwBytesUsed.addAndGet(bytesUsed - oldBytesUsed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f37ad9574eb102efe282ecda793ea5ebdf5d2fb","date":1353263968,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pendingIndex) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pendingIndex) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pendingIndex) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e5d36d3b999ce76a1e80788e5d243f513c69d50","date":1359044508,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addValue(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addValue(int,BytesRef).mjava","sourceNew":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pendingIndex) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"field \\\"\" + fieldInfo.name + \"\\\": null value not allowed\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","sourceOld":"  public void addValue(int docID, BytesRef value) {\n    if (docID < pendingIndex) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n    if (value == null) {\n      // nocommit improve message\n      throw new IllegalArgumentException(\"null sortedValue not allowed (field=\" + fieldInfo.name + \")\");\n    }\n    if (value.length > (BYTE_BLOCK_SIZE - 2)) {\n      throw new IllegalArgumentException(\"DocValuesField \\\"\" + fieldInfo.name + \"\\\" is too large, must be <= \" + (BYTE_BLOCK_SIZE - 2));\n    }\n\n    // Fill in any holes:\n    while(pendingIndex < docID) {\n      addOneValue(EMPTY);\n    }\n\n    addOneValue(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["71df1db89d3a713f022b58111aafd14a4b352da0"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"0f37ad9574eb102efe282ecda793ea5ebdf5d2fb":["ce73f585d17f53055185a19beb46db23d76e0ad9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71df1db89d3a713f022b58111aafd14a4b352da0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["0f37ad9574eb102efe282ecda793ea5ebdf5d2fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["0f37ad9574eb102efe282ecda793ea5ebdf5d2fb"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":[],"0f37ad9574eb102efe282ecda793ea5ebdf5d2fb":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"71df1db89d3a713f022b58111aafd14a4b352da0":["ce73f585d17f53055185a19beb46db23d76e0ad9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71df1db89d3a713f022b58111aafd14a4b352da0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["2e5d36d3b999ce76a1e80788e5d243f513c69d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2e5d36d3b999ce76a1e80788e5d243f513c69d50","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}