{"path":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","commits":[{"id":"a0cf46558b3f7708ed3a21e174b9e11cd30e26be","date":1365551184,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","pathOld":"/dev/null","sourceNew":"  private void SetUpHome(File solrHomeDirectory, String xmlFile) throws IOException {\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    try {\n      File solrXmlFile = new File(solrHomeDirectory, \"solr.xml\");\n      BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(solrXmlFile), IOUtils.CHARSET_UTF_8));\n      out.write(xmlFile);\n      out.close();\n    } catch (IOException e) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n      throw e;\n    }\n\n    //init\n    System.setProperty(SOLR_HOME_PROP, solrHomeDirectory.getAbsolutePath());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","sourceNew":"  private void SetUpHome(File solrHomeDirectory, String xmlFile)\n      throws IOException {\n    File solrXmlFile = new File(solrHomeDirectory, \"solr.xml\");\n    BufferedWriter out = new BufferedWriter(new OutputStreamWriter(\n        new FileOutputStream(solrXmlFile), IOUtils.CHARSET_UTF_8));\n    out.write(xmlFile);\n    out.close();\n    \n    // init\n    System.setProperty(SOLR_HOME_PROP, solrHomeDirectory.getAbsolutePath());\n  }\n\n","sourceOld":"  private void SetUpHome(File solrHomeDirectory, String xmlFile) throws IOException {\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    try {\n      File solrXmlFile = new File(solrHomeDirectory, \"solr.xml\");\n      BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(solrXmlFile), IOUtils.CHARSET_UTF_8));\n      out.write(xmlFile);\n      out.close();\n    } catch (IOException e) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n      throw e;\n    }\n\n    //init\n    System.setProperty(SOLR_HOME_PROP, solrHomeDirectory.getAbsolutePath());\n  }\n\n","bugFix":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","sourceNew":"  private void SetUpHome(File solrHomeDirectory, String xmlFile) throws IOException {\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    try {\n      File solrXmlFile = new File(solrHomeDirectory, \"solr.xml\");\n      BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(solrXmlFile), StandardCharsets.UTF_8));\n      out.write(xmlFile);\n      out.close();\n    } catch (IOException e) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n      throw e;\n    }\n\n    //init\n    System.setProperty(SOLR_HOME_PROP, solrHomeDirectory.getAbsolutePath());\n  }\n\n","sourceOld":"  private void SetUpHome(File solrHomeDirectory, String xmlFile) throws IOException {\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    try {\n      File solrXmlFile = new File(solrHomeDirectory, \"solr.xml\");\n      BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(solrXmlFile), IOUtils.CHARSET_UTF_8));\n      out.write(xmlFile);\n      out.close();\n    } catch (IOException e) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n      throw e;\n    }\n\n    //init\n    System.setProperty(SOLR_HOME_PROP, solrHomeDirectory.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","sourceNew":"  private void SetUpHome(File solrHomeDirectory, String xmlFile) throws IOException {\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    try {\n      File solrXmlFile = new File(solrHomeDirectory, \"solr.xml\");\n      BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(solrXmlFile), StandardCharsets.UTF_8));\n      out.write(xmlFile);\n      out.close();\n    } catch (IOException e) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n      throw e;\n    }\n\n    //init\n    System.setProperty(SOLR_HOME_PROP, solrHomeDirectory.getAbsolutePath());\n  }\n\n","sourceOld":"  private void SetUpHome(File solrHomeDirectory, String xmlFile)\n      throws IOException {\n    File solrXmlFile = new File(solrHomeDirectory, \"solr.xml\");\n    BufferedWriter out = new BufferedWriter(new OutputStreamWriter(\n        new FileOutputStream(solrXmlFile), IOUtils.CHARSET_UTF_8));\n    out.write(xmlFile);\n    out.close();\n    \n    // init\n    System.setProperty(SOLR_HOME_PROP, solrHomeDirectory.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#SetUpHome(File,String).mjava","sourceNew":null,"sourceOld":"  private void SetUpHome(File solrHomeDirectory, String xmlFile) throws IOException {\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    try {\n      File solrXmlFile = new File(solrHomeDirectory, \"solr.xml\");\n      BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(solrXmlFile), StandardCharsets.UTF_8));\n      out.write(xmlFile);\n      out.close();\n    } catch (IOException e) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n      throw e;\n    }\n\n    //init\n    System.setProperty(SOLR_HOME_PROP, solrHomeDirectory.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["1e9ce820cd3ed9efb959c181daaafd22f0c70143","7d89d7e4e5101347833eea558851bf4209218619"],"a0cf46558b3f7708ed3a21e174b9e11cd30e26be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["7d89d7e4e5101347833eea558851bf4209218619"],"7d89d7e4e5101347833eea558851bf4209218619":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0cf46558b3f7708ed3a21e174b9e11cd30e26be":["7d89d7e4e5101347833eea558851bf4209218619","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0cf46558b3f7708ed3a21e174b9e11cd30e26be"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["5eb2511ababf862ea11e10761c70ee560cd84510"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}