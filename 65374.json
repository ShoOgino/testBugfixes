{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues[]).mjava","commits":[{"id":"1c8b9dc858d8c3ca3907a4968cfe0b4af03de8fa","date":1434410774,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues[]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues...).mjava","sourceNew":"  /**\n   * Helper utility for {@link FunctionValues}\n   *\n   * @return true if <em>all</em> of the specified <code>values</code>\n   *         {@link FunctionValues#exists} for the specified doc, else false.\n   */\n  public static boolean allExists(int doc, FunctionValues[] values) {\n    for (FunctionValues v : values) {\n      if ( ! v.exists(doc) ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Helper utility for {@link FunctionValues} wrapping multiple {@link FunctionValues}\n   *\n   * @return true if <em>all</em> of the specified <code>values</code> \n   *         {@link FunctionValues#exists} for the specified doc, else false.\n   */\n  public static boolean allExists(int doc, FunctionValues... values) {\n    for (FunctionValues v : values) {\n      if ( ! v.exists(doc) ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues[]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues[]).mjava","sourceNew":"  /**\n   * Helper utility for {@link FunctionValues}\n   *\n   * @return true if <em>all</em> of the specified <code>values</code>\n   *         {@link FunctionValues#exists} for the specified doc, else false.\n   */\n  public static boolean allExists(int doc, FunctionValues[] values) throws IOException {\n    for (FunctionValues v : values) {\n      if ( ! v.exists(doc) ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Helper utility for {@link FunctionValues}\n   *\n   * @return true if <em>all</em> of the specified <code>values</code>\n   *         {@link FunctionValues#exists} for the specified doc, else false.\n   */\n  public static boolean allExists(int doc, FunctionValues[] values) {\n    for (FunctionValues v : values) {\n      if ( ! v.exists(doc) ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues[]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues[]).mjava","sourceNew":"  /**\n   * Helper utility for {@link FunctionValues}\n   *\n   * @return true if <em>all</em> of the specified <code>values</code>\n   *         {@link FunctionValues#exists} for the specified doc, else false.\n   */\n  public static boolean allExists(int doc, FunctionValues[] values) throws IOException {\n    for (FunctionValues v : values) {\n      if ( ! v.exists(doc) ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Helper utility for {@link FunctionValues}\n   *\n   * @return true if <em>all</em> of the specified <code>values</code>\n   *         {@link FunctionValues#exists} for the specified doc, else false.\n   */\n  public static boolean allExists(int doc, FunctionValues[] values) {\n    for (FunctionValues v : values) {\n      if ( ! v.exists(doc) ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues[]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction#allExists(int,FunctionValues[]).mjava","sourceNew":"  /**\n   * Helper utility for {@link FunctionValues}\n   *\n   * @return true if <em>all</em> of the specified <code>values</code>\n   *         {@link FunctionValues#exists} for the specified doc, else false.\n   */\n  public static boolean allExists(int doc, FunctionValues[] values) throws IOException {\n    for (FunctionValues v : values) {\n      if ( ! v.exists(doc) ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Helper utility for {@link FunctionValues}\n   *\n   * @return true if <em>all</em> of the specified <code>values</code>\n   *         {@link FunctionValues#exists} for the specified doc, else false.\n   */\n  public static boolean allExists(int doc, FunctionValues[] values) {\n    for (FunctionValues v : values) {\n      if ( ! v.exists(doc) ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["1c8b9dc858d8c3ca3907a4968cfe0b4af03de8fa","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["1c8b9dc858d8c3ca3907a4968cfe0b4af03de8fa"],"1c8b9dc858d8c3ca3907a4968cfe0b4af03de8fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["1c8b9dc858d8c3ca3907a4968cfe0b4af03de8fa","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1c8b9dc858d8c3ca3907a4968cfe0b4af03de8fa"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"1c8b9dc858d8c3ca3907a4968cfe0b4af03de8fa":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}