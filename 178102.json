{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","sourceNew":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, RamUsageEstimator.NUM_BYTES_CHAR)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","sourceOld":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, RamUsageEstimator.NUM_BYTES_CHAR)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45a6bf8bd13f2ff67e01fe594faeb22d11ab41d0","date":1392201774,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","sourceNew":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    if (preserveOriginal) {\n      state = captureState();\n    }\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, RamUsageEstimator.NUM_BYTES_CHAR)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","sourceOld":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, RamUsageEstimator.NUM_BYTES_CHAR)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","bugFix":null,"bugIntro":["6acfef8cc5d0193583040dd9279f5f9ca4c6f8ed"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f226a8b088dd9c8f6ab287a77237c4aa00a238e5","date":1456187572,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","sourceNew":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    if (preserveOriginal) {\n      state = captureState();\n    }\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, Character.BYTES)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","sourceOld":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    if (preserveOriginal) {\n      state = captureState();\n    }\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, RamUsageEstimator.NUM_BYTES_CHAR)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","sourceNew":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    if (preserveOriginal) {\n      state = captureState();\n    }\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, Character.BYTES)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","sourceOld":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    if (preserveOriginal) {\n      state = captureState();\n    }\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, RamUsageEstimator.NUM_BYTES_CHAR)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6acfef8cc5d0193583040dd9279f5f9ca4c6f8ed","date":1475744203,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","sourceNew":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, Character.BYTES)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n    if (preserveOriginal && needToPreserve(input, length)) {\n      state = captureState();\n    }\n  }\n\n","sourceOld":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    if (preserveOriginal) {\n      state = captureState();\n    }\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, Character.BYTES)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","bugFix":["45a6bf8bd13f2ff67e01fe594faeb22d11ab41d0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#foldToASCII(char[],int).mjava","sourceNew":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, Character.BYTES)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n    if (preserveOriginal && needToPreserve(input, length)) {\n      state = captureState();\n    }\n  }\n\n","sourceOld":"  /**\n   * Converts characters above ASCII to their ASCII equivalents.  For example,\n   * accents are removed from accented characters.\n   * @param input The string to fold\n   * @param length The number of characters in the input string\n   */\n  public void foldToASCII(char[] input, int length)\n  {\n    if (preserveOriginal) {\n      state = captureState();\n    }\n    // Worst-case length required:\n    final int maxSizeNeeded = 4 * length;\n    if (output.length < maxSizeNeeded) {\n      output = new char[ArrayUtil.oversize(maxSizeNeeded, Character.BYTES)];\n    }\n\n    outputPos = foldToASCII(input, 0, output, 0, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"419a8f52c6635419beb951255cacbbb281044c57":["45a6bf8bd13f2ff67e01fe594faeb22d11ab41d0","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["45a6bf8bd13f2ff67e01fe594faeb22d11ab41d0"],"45a6bf8bd13f2ff67e01fe594faeb22d11ab41d0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6acfef8cc5d0193583040dd9279f5f9ca4c6f8ed":["419a8f52c6635419beb951255cacbbb281044c57"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["419a8f52c6635419beb951255cacbbb281044c57","6acfef8cc5d0193583040dd9279f5f9ca4c6f8ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6acfef8cc5d0193583040dd9279f5f9ca4c6f8ed"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["45a6bf8bd13f2ff67e01fe594faeb22d11ab41d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"419a8f52c6635419beb951255cacbbb281044c57":["6acfef8cc5d0193583040dd9279f5f9ca4c6f8ed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["419a8f52c6635419beb951255cacbbb281044c57"],"45a6bf8bd13f2ff67e01fe594faeb22d11ab41d0":["419a8f52c6635419beb951255cacbbb281044c57","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"6acfef8cc5d0193583040dd9279f5f9ca4c6f8ed":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}