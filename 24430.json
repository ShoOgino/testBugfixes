{"path":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","commits":[{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    Tokenizer tokenizer = new SentenceTokenizer();\n    TokenStream result = new WordTokenFilter(tokenizer);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  @Override\n  public TokenStreamComponents createComponents(String fieldName, Reader reader) {\n    Tokenizer tokenizer = new SentenceTokenizer(reader);\n    TokenStream result = new WordTokenFilter(tokenizer);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca700981d999d4025d8f401b1fc3f9b6f4e25ccf","date":1395362033,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (matchVersion.onOrAfter(Version.LUCENE_48)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    Tokenizer tokenizer = new SentenceTokenizer();\n    TokenStream result = new WordTokenFilter(tokenizer);\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd330c9d05eacbd6e952fe0dea852e7ae037eb50","date":1398873035,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (matchVersion.onOrAfter(Version.LUCENE_4_8)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (matchVersion.onOrAfter(Version.LUCENE_48)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (matchVersion.onOrAfter(Version.LUCENE_4_8)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (matchVersion.onOrAfter(Version.LUCENE_4_8)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (matchVersion.onOrAfter(Version.LUCENE_4_8)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (matchVersion.onOrAfter(Version.LUCENE_4_8)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (getVersion().onOrAfter(Version.LUCENE_4_8)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (matchVersion.onOrAfter(Version.LUCENE_4_8)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"057a1793765d068ea9302f1a29e21734ee58d41e","date":1408130117,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (getVersion().onOrAfter(Version.LUCENE_4_8_0)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (getVersion().onOrAfter(Version.LUCENE_4_8)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer = new HMMChineseTokenizer();\n    TokenStream result = tokenizer;\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","sourceOld":"  @Override\n  public TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer tokenizer;\n    TokenStream result;\n    if (getVersion().onOrAfter(Version.LUCENE_4_8_0)) {\n      tokenizer = new HMMChineseTokenizer();\n      result = tokenizer;\n    } else {\n      tokenizer = new SentenceTokenizer();\n      result = new WordTokenFilter(tokenizer);\n    }\n    // result = new LowerCaseFilter(result);\n    // LowerCaseFilter is not needed, as SegTokenFilter lowercases Basic Latin text.\n    // The porter stemming is too strict, this is not a bug, this is a feature:)\n    result = new PorterStemFilter(result);\n    if (!stopWords.isEmpty()) {\n      result = new StopFilter(result, stopWords);\n    }\n    return new TokenStreamComponents(tokenizer, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["dd330c9d05eacbd6e952fe0dea852e7ae037eb50"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd330c9d05eacbd6e952fe0dea852e7ae037eb50":["ca700981d999d4025d8f401b1fc3f9b6f4e25ccf"],"057a1793765d068ea9302f1a29e21734ee58d41e":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["057a1793765d068ea9302f1a29e21734ee58d41e"],"ca700981d999d4025d8f401b1fc3f9b6f4e25ccf":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["ca700981d999d4025d8f401b1fc3f9b6f4e25ccf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["057a1793765d068ea9302f1a29e21734ee58d41e"],"dd330c9d05eacbd6e952fe0dea852e7ae037eb50":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"057a1793765d068ea9302f1a29e21734ee58d41e":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ca700981d999d4025d8f401b1fc3f9b6f4e25ccf":["dd330c9d05eacbd6e952fe0dea852e7ae037eb50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}