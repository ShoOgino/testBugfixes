{"path":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","commits":[{"id":"9359ad4a5596673c3154ffa1133458f00e124234","date":1428012026,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values != null) {\n        int segmentOrd = values.getOrd(doc);\n        if (segmentOrd != -1) {\n          final float score;\n          if (globalOrds != null) {\n            long globalOrd = globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n            score = collector.scores.getScore((int) globalOrd);\n          } else {\n            score = collector.score(segmentOrd);\n          }\n          BytesRef joinValue = values.lookupOrd(segmentOrd);\n          return new ComplexExplanation(true, score, \"Score based on join value \" + joinValue.utf8ToString());\n        }\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a5efc03c304ac592bb9047dcbd762fb666a238bc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values != null) {\n        int segmentOrd = values.getOrd(doc);\n        if (segmentOrd != -1) {\n          final float score;\n          if (globalOrds != null) {\n            long globalOrd = globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n            score = collector.scores.getScore((int) globalOrd);\n          } else {\n            score = collector.score(segmentOrd);\n          }\n          BytesRef joinValue = values.lookupOrd(segmentOrd);\n          return new ComplexExplanation(true, score, \"Score based on join value \" + joinValue.utf8ToString());\n        }\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7065b7a1004439fcad981283f1fa7632142a5f47","date":1428399440,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values != null) {\n        int segmentOrd = values.getOrd(doc);\n        if (segmentOrd != -1) {\n          final float score;\n          if (globalOrds != null) {\n            long globalOrd = globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n            score = collector.score((int) globalOrd);\n          } else {\n            score = collector.score(segmentOrd);\n          }\n          BytesRef joinValue = values.lookupOrd(segmentOrd);\n          return new ComplexExplanation(true, score, \"Score based on join value \" + joinValue.utf8ToString());\n        }\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values != null) {\n        int segmentOrd = values.getOrd(doc);\n        if (segmentOrd != -1) {\n          final float score;\n          if (globalOrds != null) {\n            long globalOrd = globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n            score = collector.scores.getScore((int) globalOrd);\n          } else {\n            score = collector.score(segmentOrd);\n          }\n          BytesRef joinValue = values.lookupOrd(segmentOrd);\n          return new ComplexExplanation(true, score, \"Score based on join value \" + joinValue.utf8ToString());\n        }\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":["a5efc03c304ac592bb9047dcbd762fb666a238bc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values != null) {\n        int segmentOrd = values.getOrd(doc);\n        if (segmentOrd != -1) {\n          final float score;\n          if (globalOrds != null) {\n            long globalOrd = globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n            score = collector.score((int) globalOrd);\n          } else {\n            score = collector.score(segmentOrd);\n          }\n          BytesRef joinValue = values.lookupOrd(segmentOrd);\n          return Explanation.match(score, \"Score based on join value \" + joinValue.utf8ToString());\n        }\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values != null) {\n        int segmentOrd = values.getOrd(doc);\n        if (segmentOrd != -1) {\n          final float score;\n          if (globalOrds != null) {\n            long globalOrd = globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n            score = collector.score((int) globalOrd);\n          } else {\n            score = collector.score(segmentOrd);\n          }\n          BytesRef joinValue = values.lookupOrd(segmentOrd);\n          return new ComplexExplanation(true, score, \"Score based on join value \" + joinValue.utf8ToString());\n        }\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":["a5efc03c304ac592bb9047dcbd762fb666a238bc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a5efc03c304ac592bb9047dcbd762fb666a238bc","date":1457112180,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values == null) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n\n      int segmentOrd = values.getOrd(doc);\n      if (segmentOrd == -1) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n      BytesRef joinValue = values.lookupOrd(segmentOrd);\n\n      int ord;\n      if (globalOrds != null) {\n        ord = (int) globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n      } else {\n        ord = segmentOrd;\n      }\n      if (collector.match(ord) == false) {\n        return Explanation.noMatch(\"Not a match, join value \" + Term.toString(joinValue));\n      }\n\n      float score = collector.score(ord);\n      return Explanation.match(score, \"A match, join value \" + Term.toString(joinValue));\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values != null) {\n        int segmentOrd = values.getOrd(doc);\n        if (segmentOrd != -1) {\n          final float score;\n          if (globalOrds != null) {\n            long globalOrd = globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n            score = collector.score((int) globalOrd);\n          } else {\n            score = collector.score(segmentOrd);\n          }\n          BytesRef joinValue = values.lookupOrd(segmentOrd);\n          return Explanation.match(score, \"Score based on join value \" + joinValue.utf8ToString());\n        }\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","7065b7a1004439fcad981283f1fa7632142a5f47","9359ad4a5596673c3154ffa1133458f00e124234"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"922ddd897402a6df25c766ea8300443be5e82b3d","date":1457157606,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values == null) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n\n      int segmentOrd = values.getOrd(doc);\n      if (segmentOrd == -1) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n      BytesRef joinValue = values.lookupOrd(segmentOrd);\n\n      int ord;\n      if (globalOrds != null) {\n        ord = (int) globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n      } else {\n        ord = segmentOrd;\n      }\n      if (collector.match(ord) == false) {\n        return Explanation.noMatch(\"Not a match, join value \" + Term.toString(joinValue));\n      }\n\n      float score = collector.score(ord);\n      return Explanation.match(score, \"A match, join value \" + Term.toString(joinValue));\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values != null) {\n        int segmentOrd = values.getOrd(doc);\n        if (segmentOrd != -1) {\n          final float score;\n          if (globalOrds != null) {\n            long globalOrd = globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n            score = collector.score((int) globalOrd);\n          } else {\n            score = collector.score(segmentOrd);\n          }\n          BytesRef joinValue = values.lookupOrd(segmentOrd);\n          return Explanation.match(score, \"Score based on join value \" + joinValue.utf8ToString());\n        }\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values == null) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n      if (values.advance(doc) != doc) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n\n      int segmentOrd = values.ordValue();\n      BytesRef joinValue = values.lookupOrd(segmentOrd);\n\n      int ord;\n      if (globalOrds != null) {\n        ord = (int) globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n      } else {\n        ord = segmentOrd;\n      }\n      if (collector.match(ord) == false) {\n        return Explanation.noMatch(\"Not a match, join value \" + Term.toString(joinValue));\n      }\n\n      float score = collector.score(ord);\n      return Explanation.match(score, \"A match, join value \" + Term.toString(joinValue));\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values == null) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n\n      int segmentOrd = values.getOrd(doc);\n      if (segmentOrd == -1) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n      BytesRef joinValue = values.lookupOrd(segmentOrd);\n\n      int ord;\n      if (globalOrds != null) {\n        ord = (int) globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n      } else {\n        ord = segmentOrd;\n      }\n      if (collector.match(ord) == false) {\n        return Explanation.noMatch(\"Not a match, join value \" + Term.toString(joinValue));\n      }\n\n      float score = collector.score(ord);\n      return Explanation.match(score, \"A match, join value \" + Term.toString(joinValue));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values == null) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n      if (values.advance(doc) != doc) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n\n      int segmentOrd = values.ordValue();\n      BytesRef joinValue = values.lookupOrd(segmentOrd);\n\n      int ord;\n      if (globalOrds != null) {\n        ord = (int) globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n      } else {\n        ord = segmentOrd;\n      }\n      if (collector.match(ord) == false) {\n        return Explanation.noMatch(\"Not a match, join value \" + Term.toString(joinValue));\n      }\n\n      float score = collector.score(ord);\n      return Explanation.match(score, \"A match, join value \" + Term.toString(joinValue));\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values == null) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n\n      int segmentOrd = values.getOrd(doc);\n      if (segmentOrd == -1) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n      BytesRef joinValue = values.lookupOrd(segmentOrd);\n\n      int ord;\n      if (globalOrds != null) {\n        ord = (int) globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n      } else {\n        ord = segmentOrd;\n      }\n      if (collector.match(ord) == false) {\n        return Explanation.noMatch(\"Not a match, join value \" + Term.toString(joinValue));\n      }\n\n      float score = collector.score(ord);\n      return Explanation.match(score, \"A match, join value \" + Term.toString(joinValue));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.W#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values == null) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n      if (values.advance(doc) != doc) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n\n      int segmentOrd = values.ordValue();\n      BytesRef joinValue = values.lookupOrd(segmentOrd);\n\n      int ord;\n      if (globalOrds != null) {\n        ord = (int) globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n      } else {\n        ord = segmentOrd;\n      }\n      if (collector.match(ord) == false) {\n        return Explanation.noMatch(\"Not a match, join value \" + Term.toString(joinValue));\n      }\n\n      float score = collector.score(ord);\n      return Explanation.match(score, \"A match, join value \" + Term.toString(joinValue));\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      SortedDocValues values = DocValues.getSorted(context.reader(), joinField);\n      if (values == null) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n\n      int segmentOrd = values.getOrd(doc);\n      if (segmentOrd == -1) {\n        return Explanation.noMatch(\"Not a match\");\n      }\n      BytesRef joinValue = values.lookupOrd(segmentOrd);\n\n      int ord;\n      if (globalOrds != null) {\n        ord = (int) globalOrds.getGlobalOrds(context.ord).get(segmentOrd);\n      } else {\n        ord = segmentOrd;\n      }\n      if (collector.match(ord) == false) {\n        return Explanation.noMatch(\"Not a match, join value \" + Term.toString(joinValue));\n      }\n\n      float score = collector.score(ord);\n      return Explanation.match(score, \"A match, join value \" + Term.toString(joinValue));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9359ad4a5596673c3154ffa1133458f00e124234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"922ddd897402a6df25c766ea8300443be5e82b3d":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","a5efc03c304ac592bb9047dcbd762fb666a238bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["922ddd897402a6df25c766ea8300443be5e82b3d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["922ddd897402a6df25c766ea8300443be5e82b3d"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9359ad4a5596673c3154ffa1133458f00e124234"],"a5efc03c304ac592bb9047dcbd762fb666a238bc":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["7065b7a1004439fcad981283f1fa7632142a5f47"],"7065b7a1004439fcad981283f1fa7632142a5f47":["9359ad4a5596673c3154ffa1133458f00e124234"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["922ddd897402a6df25c766ea8300443be5e82b3d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"9359ad4a5596673c3154ffa1133458f00e124234":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","7065b7a1004439fcad981283f1fa7632142a5f47"],"922ddd897402a6df25c766ea8300443be5e82b3d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9359ad4a5596673c3154ffa1133458f00e124234","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"a5efc03c304ac592bb9047dcbd762fb666a238bc":["922ddd897402a6df25c766ea8300443be5e82b3d"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["922ddd897402a6df25c766ea8300443be5e82b3d","a5efc03c304ac592bb9047dcbd762fb666a238bc"],"7065b7a1004439fcad981283f1fa7632142a5f47":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}