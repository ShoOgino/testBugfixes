{"path":"lucene/core/src/test/org/apache/lucene/index/TestDemoParallelLeafReader.ReindexingReader.ParallelLeafDirectoryReader#ParallelLeafDirectoryReader(DirectoryReader).mjava","commits":[{"id":"4d9aa91d3fdd25528bac3b2e6115d54fc2f28753","date":1416999434,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDemoParallelLeafReader.ReindexingReader.ParallelLeafDirectoryReader#ParallelLeafDirectoryReader(DirectoryReader).mjava","pathOld":"/dev/null","sourceNew":"      public ParallelLeafDirectoryReader(DirectoryReader in) {\n        super(in, new FilterDirectoryReader.SubReaderWrapper() {\n            final long currentSchemaGen = getCurrentSchemaGen();\n            @Override\n            public LeafReader wrap(LeafReader reader) {\n              try {\n                return getCurrentReader(reader, currentSchemaGen);\n              } catch (IOException ioe) {\n                // TODO: must close on exc here:\n                throw new RuntimeException(ioe);\n              }\n            }\n          });\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98b44240f64a2d6935543ff25faee750b29204eb","date":1424972040,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDemoParallelLeafReader.ReindexingReader.ParallelLeafDirectoryReader#ParallelLeafDirectoryReader(DirectoryReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDemoParallelLeafReader.ReindexingReader.ParallelLeafDirectoryReader#ParallelLeafDirectoryReader(DirectoryReader).mjava","sourceNew":"      public ParallelLeafDirectoryReader(DirectoryReader in) throws IOException {\n        super(in, new FilterDirectoryReader.SubReaderWrapper() {\n            final long currentSchemaGen = getCurrentSchemaGen();\n            @Override\n            public LeafReader wrap(LeafReader reader) {\n              try {\n                return getCurrentReader(reader, currentSchemaGen);\n              } catch (IOException ioe) {\n                // TODO: must close on exc here:\n                throw new RuntimeException(ioe);\n              }\n            }\n          });\n      }\n\n","sourceOld":"      public ParallelLeafDirectoryReader(DirectoryReader in) {\n        super(in, new FilterDirectoryReader.SubReaderWrapper() {\n            final long currentSchemaGen = getCurrentSchemaGen();\n            @Override\n            public LeafReader wrap(LeafReader reader) {\n              try {\n                return getCurrentReader(reader, currentSchemaGen);\n              } catch (IOException ioe) {\n                // TODO: must close on exc here:\n                throw new RuntimeException(ioe);\n              }\n            }\n          });\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98a04f56464afdffd4c430d6c47a0c868a38354e","date":1424985833,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDemoParallelLeafReader.ReindexingReader.ParallelLeafDirectoryReader#ParallelLeafDirectoryReader(DirectoryReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDemoParallelLeafReader.ReindexingReader.ParallelLeafDirectoryReader#ParallelLeafDirectoryReader(DirectoryReader).mjava","sourceNew":"      public ParallelLeafDirectoryReader(DirectoryReader in) throws IOException {\n        super(in, new FilterDirectoryReader.SubReaderWrapper() {\n            final long currentSchemaGen = getCurrentSchemaGen();\n            @Override\n            public LeafReader wrap(LeafReader reader) {\n              try {\n                return getCurrentReader(reader, currentSchemaGen);\n              } catch (IOException ioe) {\n                // TODO: must close on exc here:\n                throw new RuntimeException(ioe);\n              }\n            }\n          });\n      }\n\n","sourceOld":"      public ParallelLeafDirectoryReader(DirectoryReader in) {\n        super(in, new FilterDirectoryReader.SubReaderWrapper() {\n            final long currentSchemaGen = getCurrentSchemaGen();\n            @Override\n            public LeafReader wrap(LeafReader reader) {\n              try {\n                return getCurrentReader(reader, currentSchemaGen);\n              } catch (IOException ioe) {\n                // TODO: must close on exc here:\n                throw new RuntimeException(ioe);\n              }\n            }\n          });\n      }\n\n","bugFix":["4d9aa91d3fdd25528bac3b2e6115d54fc2f28753"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDemoParallelLeafReader.ReindexingReader.ParallelLeafDirectoryReader#ParallelLeafDirectoryReader(DirectoryReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDemoParallelLeafReader.ReindexingReader.ParallelLeafDirectoryReader#ParallelLeafDirectoryReader(DirectoryReader).mjava","sourceNew":"      public ParallelLeafDirectoryReader(DirectoryReader in) throws IOException {\n        super(in, new FilterDirectoryReader.SubReaderWrapper() {\n            final long currentSchemaGen = getCurrentSchemaGen();\n            @Override\n            public LeafReader wrap(LeafReader reader) {\n              try {\n                return getCurrentReader(reader, currentSchemaGen);\n              } catch (IOException ioe) {\n                // TODO: must close on exc here:\n                throw new RuntimeException(ioe);\n              }\n            }\n          });\n      }\n\n","sourceOld":"      public ParallelLeafDirectoryReader(DirectoryReader in) {\n        super(in, new FilterDirectoryReader.SubReaderWrapper() {\n            final long currentSchemaGen = getCurrentSchemaGen();\n            @Override\n            public LeafReader wrap(LeafReader reader) {\n              try {\n                return getCurrentReader(reader, currentSchemaGen);\n              } catch (IOException ioe) {\n                // TODO: must close on exc here:\n                throw new RuntimeException(ioe);\n              }\n            }\n          });\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4d9aa91d3fdd25528bac3b2e6115d54fc2f28753","98a04f56464afdffd4c430d6c47a0c868a38354e"],"98a04f56464afdffd4c430d6c47a0c868a38354e":["4d9aa91d3fdd25528bac3b2e6115d54fc2f28753","98b44240f64a2d6935543ff25faee750b29204eb"],"4d9aa91d3fdd25528bac3b2e6115d54fc2f28753":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98b44240f64a2d6935543ff25faee750b29204eb":["4d9aa91d3fdd25528bac3b2e6115d54fc2f28753"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98a04f56464afdffd4c430d6c47a0c868a38354e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"98a04f56464afdffd4c430d6c47a0c868a38354e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d9aa91d3fdd25528bac3b2e6115d54fc2f28753":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98a04f56464afdffd4c430d6c47a0c868a38354e","98b44240f64a2d6935543ff25faee750b29204eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d9aa91d3fdd25528bac3b2e6115d54fc2f28753"],"98b44240f64a2d6935543ff25faee750b29204eb":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}