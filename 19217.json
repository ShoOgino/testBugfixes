{"path":"solr/core/src/test/org/apache/solr/schema/TestSortableTextField#create().mjava","commits":[{"id":"09db84b25dda87b73022d145a68f14c86a3a552d","date":1517506829,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestSortableTextField#create().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void create() throws Exception {\n    initCore(\"solrconfig-minimal.xml\",\"schema-sorting-text.xml\");\n    \n    // sanity check our fields & types...\n\n    // these should all use docValues (either explicitly or implicitly)...\n    for (String n : Arrays.asList(\"keyword_stxt\", \n                                  \"whitespace_stxt\", \"whitespace_f_stxt\", \"whitespace_l_stxt\")) {\n           \n      FieldType ft = h.getCore().getLatestSchema().getFieldTypeByName(n);\n      assertEquals(\"type \" + ft.getTypeName() + \" should have docvalues - schema got changed?\",\n                   true, ft.getNamedPropertyValues(true).get(\"docValues\")) ;\n    }\n    for (String n : Arrays.asList(\"keyword_stxt\", \"keyword_dv_stxt\",\n                                  \"whitespace_stxt\", \"whitespace_nois_stxt\",\n                                  \"whitespace_f_stxt\", \"whitespace_l_stxt\")) {\n                                  \n      SchemaField sf = h.getCore().getLatestSchema().getField(n);\n      assertTrue(\"field \" + sf.getName() + \" should have docvalues - schema got changed?\",\n                 sf.hasDocValues()) ;\n    }\n\n    { // this field should *NOT* have docValues .. should behave like a plain old TextField\n      SchemaField sf = h.getCore().getLatestSchema().getField(\"whitespace_nodv_stxt\");\n      assertFalse(\"field \" + sf.getName() + \" should not have docvalues - schema got changed?\",\n                  sf.hasDocValues()) ;\n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09db84b25dda87b73022d145a68f14c86a3a552d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09db84b25dda87b73022d145a68f14c86a3a552d"]},"commit2Childs":{"09db84b25dda87b73022d145a68f14c86a3a552d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09db84b25dda87b73022d145a68f14c86a3a552d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}