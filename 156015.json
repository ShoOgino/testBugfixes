{"path":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   */\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n    init();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   */\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n    init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","pathOld":"src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   */\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   */\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   */\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c8b12bda3f5864b27e3e04df1be4f6736ec067a","date":1270088127,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   * @deprecated Use {@link #CommonGramsFilter(Version, TokenStream, Set)} instead.\n   */\n  @Deprecated\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   */\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116545389190ea5d0d9a35977d09ef0fe49716ac","date":1272959441,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[]).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   * @deprecated Use {@link #CommonGramsFilter(Version, TokenStream, Set)} instead.\n   */\n  @Deprecated\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   * @deprecated Use {@link #CommonGramsFilter(Version, TokenStream, Set)} instead.\n   */\n  @Deprecated\n  public CommonGramsFilter(TokenStream input, String[] commonWords) {\n    this(input, commonWords, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9c8b12bda3f5864b27e3e04df1be4f6736ec067a":["1da8d55113b689b06716246649de6f62430f15c0"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"116545389190ea5d0d9a35977d09ef0fe49716ac":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["116545389190ea5d0d9a35977d09ef0fe49716ac"]},"commit2Childs":{"9c8b12bda3f5864b27e3e04df1be4f6736ec067a":["116545389190ea5d0d9a35977d09ef0fe49716ac"],"1da8d55113b689b06716246649de6f62430f15c0":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"116545389190ea5d0d9a35977d09ef0fe49716ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}