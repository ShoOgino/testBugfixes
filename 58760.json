{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getIndexVersion(Replica).mjava","commits":[{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getIndexVersion(Replica).mjava","pathOld":"/dev/null","sourceNew":"  protected long getIndexVersion(Replica replica) throws IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(replica.getCoreUrl()).build()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"qt\", \"/replication\");\n      params.set(ReplicationHandler.COMMAND, ReplicationHandler.CMD_SHOW_COMMITS);\n      try {\n        QueryResponse response = client.query(params);\n        @SuppressWarnings(\"unchecked\")\n        List<NamedList<Object>> commits = (List<NamedList<Object>>)response.getResponse().get(ReplicationHandler.CMD_SHOW_COMMITS);\n        Collections.max(commits, (a,b)->((Long)a.get(\"indexVersion\")).compareTo((Long)b.get(\"indexVersion\")));\n        return (long) Collections.max(commits, (a,b)->((Long)a.get(\"indexVersion\")).compareTo((Long)b.get(\"indexVersion\"))).get(\"indexVersion\");\n      } catch (SolrServerException e) {\n        log.warn(\"Exception getting version from {}, will return an invalid version to retry.\", replica.getName(), e);\n        return -1;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getIndexVersion(Replica).mjava","pathOld":"/dev/null","sourceNew":"  protected long getIndexVersion(Replica replica) throws IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(replica.getCoreUrl()).build()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"qt\", \"/replication\");\n      params.set(ReplicationHandler.COMMAND, ReplicationHandler.CMD_SHOW_COMMITS);\n      try {\n        QueryResponse response = client.query(params);\n        @SuppressWarnings(\"unchecked\")\n        List<NamedList<Object>> commits = (List<NamedList<Object>>)response.getResponse().get(ReplicationHandler.CMD_SHOW_COMMITS);\n        Collections.max(commits, (a,b)->((Long)a.get(\"indexVersion\")).compareTo((Long)b.get(\"indexVersion\")));\n        return (long) Collections.max(commits, (a,b)->((Long)a.get(\"indexVersion\")).compareTo((Long)b.get(\"indexVersion\"))).get(\"indexVersion\");\n      } catch (SolrServerException e) {\n        log.warn(\"Exception getting version from {}, will return an invalid version to retry.\", replica.getName(), e);\n        return -1;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61c45e99cf6676da48f19d7511c73712ad39402b"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}