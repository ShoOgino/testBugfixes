{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/NeuralNetworkModel.DefaultLayer#setActivation(Object).mjava","commits":[{"id":"ef667cf0740be872811ddbabc4952c3a21c1fa2e","date":1520015275,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/NeuralNetworkModel.DefaultLayer#setActivation(Object).mjava","pathOld":"/dev/null","sourceNew":"    public void setActivation(Object activationStr) {\n      this.activationStr = (String) activationStr;\n      switch (this.activationStr) {\n        case \"relu\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return in < 0 ? 0 : in;\n            }\n          };\n          break;\n        case \"sigmoid\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return (float) (1 / (1 + Math.exp(-in)));\n            }\n          };\n          break;\n        case \"identity\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return in;\n            }\n          };\n          break;\n        default:\n          this.activation = null;\n          break;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c907d9003fbc31c39943b9e7853cb88e5b7bf549","date":1539360515,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/NeuralNetworkModel.DefaultLayer#setActivation(Object).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/model/NeuralNetworkModel.DefaultLayer#setActivation(Object).mjava","sourceNew":"    public void setActivation(Object activationStr) {\n      this.activationStr = (String) activationStr;\n      switch (this.activationStr) {\n        case \"relu\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return in < 0 ? 0 : in;\n            }\n          };\n          break;\n        case \"leakyrelu\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return in < 0 ? 0.01f * in : in;\n            }\n          };\n          break;\n        case \"tanh\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return (float)Math.tanh(in);\n            }\n          };\n          break;\n        case \"sigmoid\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return (float) (1 / (1 + Math.exp(-in)));\n            }\n          };\n          break;\n        case \"identity\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return in;\n            }\n          };\n          break;\n        default:\n          this.activation = null;\n          break;\n      }\n    }\n\n","sourceOld":"    public void setActivation(Object activationStr) {\n      this.activationStr = (String) activationStr;\n      switch (this.activationStr) {\n        case \"relu\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return in < 0 ? 0 : in;\n            }\n          };\n          break;\n        case \"sigmoid\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return (float) (1 / (1 + Math.exp(-in)));\n            }\n          };\n          break;\n        case \"identity\":\n          this.activation = new Activation() {\n            @Override\n            public float apply(float in) {\n              return in;\n            }\n          };\n          break;\n        default:\n          this.activation = null;\n          break;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef667cf0740be872811ddbabc4952c3a21c1fa2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c907d9003fbc31c39943b9e7853cb88e5b7bf549":["ef667cf0740be872811ddbabc4952c3a21c1fa2e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c907d9003fbc31c39943b9e7853cb88e5b7bf549"]},"commit2Childs":{"ef667cf0740be872811ddbabc4952c3a21c1fa2e":["c907d9003fbc31c39943b9e7853cb88e5b7bf549"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef667cf0740be872811ddbabc4952c3a21c1fa2e"],"c907d9003fbc31c39943b9e7853cb88e5b7bf549":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}