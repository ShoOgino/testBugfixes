{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"1068799b5537c6408504cf7e15cb90ba57491440","date":1392577122,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRef bytesRef = new BytesRef();//scratch\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            docValues.get(doc, bytesRef);\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRef target) {\n          if (fillBytes(doc)) {\n            target.bytes = bytesRef.bytes;\n            target.offset = bytesRef.offset;\n            target.length = bytesRef.length;\n            return true;\n          } else {\n            target.length = 0;\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes, bytesRef.offset, bytesRef.length));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return new Explanation(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRef bytesRef = new BytesRef();//scratch\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRef target) {\n          if (fillBytes(doc)) {\n            target.bytes = bytesRef.bytes;\n            target.offset = bytesRef.offset;\n            target.length = bytesRef.length;\n            return true;\n          } else {\n            target.length = 0;\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes, bytesRef.offset, bytesRef.length));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return new Explanation(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","sourceOld":"    @Override\n    public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRef bytesRef = new BytesRef();//scratch\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            docValues.get(doc, bytesRef);\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRef target) {\n          if (fillBytes(doc)) {\n            target.bytes = bytesRef.bytes;\n            target.offset = bytesRef.offset;\n            target.length = bytesRef.length;\n            return true;\n          } else {\n            target.length = 0;\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes, bytesRef.offset, bytesRef.length));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return new Explanation(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return new Explanation(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","sourceOld":"    @Override\n    public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRef bytesRef = new BytesRef();//scratch\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRef target) {\n          if (fillBytes(doc)) {\n            target.bytes = bytesRef.bytes;\n            target.offset = bytesRef.offset;\n            target.length = bytesRef.length;\n            return true;\n          } else {\n            target.length = 0;\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes, bytesRef.offset, bytesRef.length));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return new Explanation(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","bugFix":["1068799b5537c6408504cf7e15cb90ba57491440"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return new Explanation(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1068799b5537c6408504cf7e15cb90ba57491440":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["1068799b5537c6408504cf7e15cb90ba57491440"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"1068799b5537c6408504cf7e15cb90ba57491440":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1068799b5537c6408504cf7e15cb90ba57491440"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}