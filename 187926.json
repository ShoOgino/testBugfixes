{"path":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#plotLonApproximatelyOnEarthSurface(String,String,double,double,double).mjava","commits":[{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#plotLonApproximatelyOnEarthSurface(String,String,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#plotLonApproximatelyOnEarthSurface(String,String,double,double,double).mjava","sourceNew":"  private static void plotLonApproximatelyOnEarthSurface(String name, String color, double lon, double minLat, double maxLat) {\n    System.out.println(\"        var \" + name + \" = WE.polygon([\");\n    double lat;\n    for(lat = minLat;lat<=maxLat;lat += (maxLat-minLat)/36) {\n      System.out.println(\"          [\" + lat + \", \" + lon + \"],\");\n    }\n    System.out.println(\"          [\" + maxLat + \", \" + lon + \"],\");\n    lat -= (maxLat-minLat)/36;\n    for(;lat>=minLat;lat -= (maxLat-minLat)/36) {\n      System.out.println(\"          [\" + lat + \", \" + lon + \"],\");\n    }\n    System.out.println(\"        ], {color: \\\"\" + color + \"\\\", fillColor: \\\"#ffffff\\\", opacity: \" + (color.equals(\"#ffffff\") ? \"0.3\" : \"1\") + \", fillOpacity: 0.0001});\");\n    System.out.println(\"        \" + name + \".addTo(earth);\");\n  }\n\n","sourceOld":"  private static void plotLonApproximatelyOnEarthSurface(String name, String color, double lon, double minLat, double maxLat) {\n    System.out.println(\"        var \" + name + \" = WE.polygon([\");\n    double lat;\n    for(lat = minLat;lat<=maxLat;lat += (maxLat-minLat)/36) {\n      System.out.println(\"          [\" + lat + \", \" + lon + \"],\");\n    }\n    System.out.println(\"          [\" + maxLat + \", \" + lon + \"],\");\n    lat -= (maxLat-minLat)/36;\n    for(;lat>=minLat;lat -= (maxLat-minLat)/36) {\n      System.out.println(\"          [\" + lat + \", \" + lon + \"],\");\n    }\n    System.out.println(\"        ], {color: \\\"\" + color + \"\\\", fillColor: \\\"#ffffff\\\", opacity: \" + (color.equals(\"#ffffff\") ? \"0.3\" : \"1\") + \", fillOpacity: 0.0001});\");\n    System.out.println(\"        \" + name + \".addTo(earth);\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0a671eed493f97734f17409168061773c1c5b52","date":1460066079,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#plotLonApproximatelyOnEarthSurface(String,String,double,double,double).mjava","sourceNew":null,"sourceOld":"  private static void plotLonApproximatelyOnEarthSurface(String name, String color, double lon, double minLat, double maxLat) {\n    System.out.println(\"        var \" + name + \" = WE.polygon([\");\n    double lat;\n    for(lat = minLat;lat<=maxLat;lat += (maxLat-minLat)/36) {\n      System.out.println(\"          [\" + lat + \", \" + lon + \"],\");\n    }\n    System.out.println(\"          [\" + maxLat + \", \" + lon + \"],\");\n    lat -= (maxLat-minLat)/36;\n    for(;lat>=minLat;lat -= (maxLat-minLat)/36) {\n      System.out.println(\"          [\" + lat + \", \" + lon + \"],\");\n    }\n    System.out.println(\"        ], {color: \\\"\" + color + \"\\\", fillColor: \\\"#ffffff\\\", opacity: \" + (color.equals(\"#ffffff\") ? \"0.3\" : \"1\") + \", fillOpacity: 0.0001});\");\n    System.out.println(\"        \" + name + \".addTo(earth);\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09f15823cf5eb6e807005579e875e117d8598f95","date":1460066385,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#plotLonApproximatelyOnEarthSurface(String,String,double,double,double).mjava","sourceNew":null,"sourceOld":"  private static void plotLonApproximatelyOnEarthSurface(String name, String color, double lon, double minLat, double maxLat) {\n    System.out.println(\"        var \" + name + \" = WE.polygon([\");\n    double lat;\n    for(lat = minLat;lat<=maxLat;lat += (maxLat-minLat)/36) {\n      System.out.println(\"          [\" + lat + \", \" + lon + \"],\");\n    }\n    System.out.println(\"          [\" + maxLat + \", \" + lon + \"],\");\n    lat -= (maxLat-minLat)/36;\n    for(;lat>=minLat;lat -= (maxLat-minLat)/36) {\n      System.out.println(\"          [\" + lat + \", \" + lon + \"],\");\n    }\n    System.out.println(\"        ], {color: \\\"\" + color + \"\\\", fillColor: \\\"#ffffff\\\", opacity: \" + (color.equals(\"#ffffff\") ? \"0.3\" : \"1\") + \", fillOpacity: 0.0001});\");\n    System.out.println(\"        \" + name + \".addTo(earth);\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e0a671eed493f97734f17409168061773c1c5b52":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09f15823cf5eb6e807005579e875e117d8598f95"],"09f15823cf5eb6e807005579e875e117d8598f95":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","e0a671eed493f97734f17409168061773c1c5b52"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["e0a671eed493f97734f17409168061773c1c5b52","09f15823cf5eb6e807005579e875e117d8598f95"],"e0a671eed493f97734f17409168061773c1c5b52":["09f15823cf5eb6e807005579e875e117d8598f95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"09f15823cf5eb6e807005579e875e117d8598f95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}