{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testNeuterNouns().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testNeuterNouns().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testNeuterNouns().mjava","sourceNew":"  /**\n   * Test showing how neuter noun forms conflate an example noun for each common\n   * plural pattern is listed\n   */\n  public void testNeuterNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(TEST_VERSION_CURRENT);\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"дърво\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървото\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дърва\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървета\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървата\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дърветата\", new String[] {\"дърв\"});\n    \n    // -та pattern\n    assertAnalyzesTo(a, \"море\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"морето\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"морета\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"моретата\", new String[] {\"мор\"});\n    \n    // -я pattern\n    assertAnalyzesTo(a, \"изключение\", new String[] {\"изключени\"});\n    assertAnalyzesTo(a, \"изключението\", new String[] {\"изключени\"});\n    assertAnalyzesTo(a, \"изключенията\", new String[] {\"изключени\"});\n    /* note the below form in this example does not conflate with the rest */\n    assertAnalyzesTo(a, \"изключения\", new String[] {\"изключн\"});\n  }\n\n","sourceOld":"  /**\n   * Test showing how neuter noun forms conflate an example noun for each common\n   * plural pattern is listed\n   */\n  public void testNeuterNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(TEST_VERSION_CURRENT);\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"дърво\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървото\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дърва\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървета\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървата\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дърветата\", new String[] {\"дърв\"});\n    \n    // -та pattern\n    assertAnalyzesTo(a, \"море\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"морето\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"морета\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"моретата\", new String[] {\"мор\"});\n    \n    // -я pattern\n    assertAnalyzesTo(a, \"изключение\", new String[] {\"изключени\"});\n    assertAnalyzesTo(a, \"изключението\", new String[] {\"изключени\"});\n    assertAnalyzesTo(a, \"изключенията\", new String[] {\"изключени\"});\n    /* note the below form in this example does not conflate with the rest */\n    assertAnalyzesTo(a, \"изключения\", new String[] {\"изключн\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testNeuterNouns().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testNeuterNouns().mjava","sourceNew":"  /**\n   * Test showing how neuter noun forms conflate an example noun for each common\n   * plural pattern is listed\n   */\n  public void testNeuterNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(TEST_VERSION_CURRENT);\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"дърво\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървото\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дърва\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървета\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървата\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дърветата\", new String[] {\"дърв\"});\n    \n    // -та pattern\n    assertAnalyzesTo(a, \"море\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"морето\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"морета\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"моретата\", new String[] {\"мор\"});\n    \n    // -я pattern\n    assertAnalyzesTo(a, \"изключение\", new String[] {\"изключени\"});\n    assertAnalyzesTo(a, \"изключението\", new String[] {\"изключени\"});\n    assertAnalyzesTo(a, \"изключенията\", new String[] {\"изключени\"});\n    /* note the below form in this example does not conflate with the rest */\n    assertAnalyzesTo(a, \"изключения\", new String[] {\"изключн\"});\n  }\n\n","sourceOld":"  /**\n   * Test showing how neuter noun forms conflate an example noun for each common\n   * plural pattern is listed\n   */\n  public void testNeuterNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(TEST_VERSION_CURRENT);\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"дърво\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървото\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дърва\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървета\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дървата\", new String[] {\"дърв\"});\n    assertAnalyzesTo(a, \"дърветата\", new String[] {\"дърв\"});\n    \n    // -та pattern\n    assertAnalyzesTo(a, \"море\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"морето\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"морета\", new String[] {\"мор\"});\n    assertAnalyzesTo(a, \"моретата\", new String[] {\"мор\"});\n    \n    // -я pattern\n    assertAnalyzesTo(a, \"изключение\", new String[] {\"изключени\"});\n    assertAnalyzesTo(a, \"изключението\", new String[] {\"изключени\"});\n    assertAnalyzesTo(a, \"изключенията\", new String[] {\"изключени\"});\n    /* note the below form in this example does not conflate with the rest */\n    assertAnalyzesTo(a, \"изключения\", new String[] {\"изключн\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}