{"path":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#doTestSplitAlternately(SolrIndexSplitter.SplitMethod).mjava","commits":[{"id":"20c968c14aace7cf49843bf2c1fafc7fd3845659","date":1533133859,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#doTestSplitAlternately(SolrIndexSplitter.SplitMethod).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestSplitAlternately(SolrIndexSplitter.SplitMethod splitMethod) throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      SplitIndexCommand command = new SplitIndexCommand(request, rsp,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()),\n          null, null, new PlainIdRouter(), null, null, splitMethod);\n      doSplit(command);\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6aafdd2b981170a4d391e52d7cfd3d53a626cc7c","date":1533237435,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#doTestSplitAlternately(SolrIndexSplitter.SplitMethod).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#doTestSplitAlternately(SolrIndexSplitter.SplitMethod).mjava","sourceNew":"  private void doTestSplitAlternately(SolrIndexSplitter.SplitMethod splitMethod) throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      SplitIndexCommand command = new SplitIndexCommand(request, rsp,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()),\n          null, null, new PlainIdRouter(), null, null, splitMethod);\n      doSplit(command);\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      int numDocs1 = reader.numDocs();\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      int numDocs2 = reader.numDocs();\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      int numDocs3 = reader.numDocs();\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n      assertEquals(\"split indexes lost some documents!\", max, numDocs1 + numDocs2 + numDocs3);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, numDocs1);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, numDocs2);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, numDocs3);\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void doTestSplitAlternately(SolrIndexSplitter.SplitMethod splitMethod) throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      SplitIndexCommand command = new SplitIndexCommand(request, rsp,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()),\n          null, null, new PlainIdRouter(), null, null, splitMethod);\n      doSplit(command);\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6aafdd2b981170a4d391e52d7cfd3d53a626cc7c":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6aafdd2b981170a4d391e52d7cfd3d53a626cc7c"]},"commit2Childs":{"6aafdd2b981170a4d391e52d7cfd3d53a626cc7c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["6aafdd2b981170a4d391e52d7cfd3d53a626cc7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}