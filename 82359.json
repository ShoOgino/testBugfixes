{"path":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedDeletes#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    String s = \"\";\n    if (numTermDeletes != 0) {\n      s += \" \" + numTermDeletes + \" deleted terms (unique count=\" + termCount + \")\";\n    }\n    if (queries.length != 0) {\n      s += \" \" + queries.length + \" deleted queries\";\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    String s = \"\";\n    if (numTermDeletes != 0) {\n      s += \" \" + numTermDeletes + \" deleted terms (unique count=\" + termCount + \")\";\n    }\n    if (queries.length != 0) {\n      s += \" \" + queries.length + \" deleted queries\";\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e2b30bfb739689d33532e6b7d2d39582bd89a3a","date":1432237721,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    String s = \"\";\n    if (numTermDeletes != 0) {\n      s += \" \" + numTermDeletes + \" deleted terms (unique count=\" + terms.size() + \")\";\n    }\n    if (queries.length != 0) {\n      s += \" \" + queries.length + \" deleted queries\";\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    String s = \"\";\n    if (numTermDeletes != 0) {\n      s += \" \" + numTermDeletes + \" deleted terms (unique count=\" + termCount + \")\";\n    }\n    if (queries.length != 0) {\n      s += \" \" + queries.length + \" deleted queries\";\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQuerys=\" + deleteQueries.length;\n    }\n    if (numericDVUpdates.length > 0) {\n      s += \" numNumericDVUpdates=\" + numericDVUpdateCount;\n    }\n    if (binaryDVUpdates.length > 0) {\n      s += \" numBinaryDVUpdates=\" + binaryDVUpdateCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    String s = \"\";\n    if (numTermDeletes != 0) {\n      s += \" \" + numTermDeletes + \" deleted terms (unique count=\" + terms.size() + \")\";\n    }\n    if (queries.length != 0) {\n      s += \" \" + queries.length + \" deleted queries\";\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQuerys=\" + deleteQueries.length;\n    }\n    if (numericDVUpdates.length > 0) {\n      s += \" numNumericDVUpdates=\" + numericDVUpdateCount;\n    }\n    if (binaryDVUpdates.length > 0) {\n      s += \" numBinaryDVUpdates=\" + binaryDVUpdateCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    String s = \"\";\n    if (numTermDeletes != 0) {\n      s += \" \" + numTermDeletes + \" deleted terms (unique count=\" + terms.size() + \")\";\n    }\n    if (queries.length != 0) {\n      s += \" \" + queries.length + \" deleted queries\";\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQuerys=\" + deleteQueries.length;\n    }\n    if (numericDVUpdates.length > 0) {\n      s += \" numNumericDVUpdates=\" + numericDVUpdateCount;\n    }\n    if (binaryDVUpdates.length > 0) {\n      s += \" numBinaryDVUpdates=\" + binaryDVUpdateCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    String s = \"\";\n    if (numTermDeletes != 0) {\n      s += \" \" + numTermDeletes + \" deleted terms (unique count=\" + terms.size() + \")\";\n    }\n    if (queries.length != 0) {\n      s += \" \" + queries.length + \" deleted queries\";\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e129bd6cb34a236558a49edf108a49d5c15e0e1","date":1525081316,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQueries=\" + deleteQueries.length;\n    }\n    if (numericDVUpdates.length > 0) {\n      s += \" numNumericDVUpdates=\" + numericDVUpdateCount;\n    }\n    if (binaryDVUpdates.length > 0) {\n      s += \" numBinaryDVUpdates=\" + binaryDVUpdateCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQuerys=\" + deleteQueries.length;\n    }\n    if (numericDVUpdates.length > 0) {\n      s += \" numNumericDVUpdates=\" + numericDVUpdateCount;\n    }\n    if (binaryDVUpdates.length > 0) {\n      s += \" numBinaryDVUpdates=\" + binaryDVUpdateCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f42883db49d143abc1a0f176ba47e3388dafb608","date":1525083166,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQueries=\" + deleteQueries.length;\n    }\n    if (numericDVUpdates.length > 0) {\n      s += \" numNumericDVUpdates=\" + numericDVUpdateCount;\n    }\n    if (binaryDVUpdates.length > 0) {\n      s += \" numBinaryDVUpdates=\" + binaryDVUpdateCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQuerys=\" + deleteQueries.length;\n    }\n    if (numericDVUpdates.length > 0) {\n      s += \" numNumericDVUpdates=\" + numericDVUpdateCount;\n    }\n    if (binaryDVUpdates.length > 0) {\n      s += \" numBinaryDVUpdates=\" + binaryDVUpdateCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28211671436f185419b3f7e53ccfc3911441ab65","date":1544026960,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQueries=\" + deleteQueries.length;\n    }\n    if (fieldUpdates.size() > 0) {\n      s += \" fieldUpdates=\" + fieldUpdatesCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    String s = \"delGen=\" + delGen;\n    if (numTermDeletes != 0) {\n      s += \" numDeleteTerms=\" + numTermDeletes;\n      if (numTermDeletes != deleteTerms.size()) {\n        s += \" (\" + deleteTerms.size() + \" unique)\";\n      }\n    }\n    if (deleteQueries.length != 0) {\n      s += \" numDeleteQueries=\" + deleteQueries.length;\n    }\n    if (numericDVUpdates.length > 0) {\n      s += \" numNumericDVUpdates=\" + numericDVUpdateCount;\n    }\n    if (binaryDVUpdates.length > 0) {\n      s += \" numBinaryDVUpdates=\" + binaryDVUpdateCount;\n    }\n    if (bytesUsed != 0) {\n      s += \" bytesUsed=\" + bytesUsed;\n    }\n    if (privateSegment != null) {\n      s += \" privateSegment=\" + privateSegment;\n    }\n\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e2b30bfb739689d33532e6b7d2d39582bd89a3a":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"28211671436f185419b3f7e53ccfc3911441ab65":["f42883db49d143abc1a0f176ba47e3388dafb608"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["3e2b30bfb739689d33532e6b7d2d39582bd89a3a"],"7e129bd6cb34a236558a49edf108a49d5c15e0e1":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f42883db49d143abc1a0f176ba47e3388dafb608":["28288370235ed02234a64753cdbf0c6ec096304a","7e129bd6cb34a236558a49edf108a49d5c15e0e1"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["3e2b30bfb739689d33532e6b7d2d39582bd89a3a","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["3e2b30bfb739689d33532e6b7d2d39582bd89a3a","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28211671436f185419b3f7e53ccfc3911441ab65"]},"commit2Childs":{"3e2b30bfb739689d33532e6b7d2d39582bd89a3a":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"28211671436f185419b3f7e53ccfc3911441ab65":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["3e2b30bfb739689d33532e6b7d2d39582bd89a3a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"7e129bd6cb34a236558a49edf108a49d5c15e0e1":["f42883db49d143abc1a0f176ba47e3388dafb608"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"f42883db49d143abc1a0f176ba47e3388dafb608":["28211671436f185419b3f7e53ccfc3911441ab65"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["7e129bd6cb34a236558a49edf108a49d5c15e0e1","f42883db49d143abc1a0f176ba47e3388dafb608"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}