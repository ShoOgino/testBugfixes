{"path":"lucene/core/src/test/org/apache/lucene/search/TestRangeFieldsDocValuesQuery#testIntRangeDocValuesIntersectsQuery().mjava","commits":[{"id":"81cd5fbac53db3342dfda504179dee20e3ea4081","date":1560172455,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestRangeFieldsDocValuesQuery#testIntRangeDocValuesIntersectsQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testIntRangeDocValuesIntersectsQuery() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    final int iters = atLeast(10);\n    int[] min = {3, 11, 17};\n    int[] max = {27, 35, 49};\n    for (int i = 0; i < iters; ++i) {\n      Document doc = new Document();\n      doc.add(new IntRangeDocValuesField(\"dv\", min, max));\n      iw.addDocument(doc);\n    }\n\n    int[] min2 = {11, 19, 27};\n    int[] max2 = {29, 38, 56};\n\n    Document doc = new Document();\n    doc.add(new IntRangeDocValuesField(\"dv\", min2, max2));\n\n    iw.commit();\n\n    final IndexReader reader = iw.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    iw.close();\n\n    final int[] lowRange = {6, 16, 19};\n    final int[] highRange = {29, 41, 42};\n\n    Query query = IntRangeDocValuesField.newSlowIntersectsQuery(\"dv\", lowRange, highRange);\n\n    assertEquals(searcher.count(query), iters);\n\n    int[] lowRange2 = {2, 9, 18};\n    int[] highRange2 = {25, 34, 41};\n\n    query = IntRangeDocValuesField.newSlowIntersectsQuery(\"dv\", lowRange2, highRange2);\n\n    assertEquals(searcher.count(query), iters);\n\n    int[] lowRange3 = {101, 121, 153};\n    int[] highRange3 = {156, 127, 176};\n\n    query = IntRangeDocValuesField.newSlowIntersectsQuery(\"dv\", lowRange3, highRange3);\n\n    assertEquals(searcher.count(query), 0);\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81cd5fbac53db3342dfda504179dee20e3ea4081":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81cd5fbac53db3342dfda504179dee20e3ea4081"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81cd5fbac53db3342dfda504179dee20e3ea4081"],"81cd5fbac53db3342dfda504179dee20e3ea4081":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}