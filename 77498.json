{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshReader();\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"119bc02554a192b2954b73d79389ec441257b624","date":1337232699,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshInternalReader();\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshInternalReader();\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b7a1bc6030c258e47d63eff3455a2b1bbf32683","date":1339494023,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshInternalReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n  }\n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b47e1512544568a22b82c96169d466fae8a4b79e","date":1354519309,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"119bc02554a192b2954b73d79389ec441257b624":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","b47e1512544568a22b82c96169d466fae8a4b79e"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["119bc02554a192b2954b73d79389ec441257b624"],"b47e1512544568a22b82c96169d466fae8a4b79e":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"ef0d8a69209261514c5739c770bba706c2308450":["b89678825b68eccaf09e6ab71675fc0b0af1e099","119bc02554a192b2954b73d79389ec441257b624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b47e1512544568a22b82c96169d466fae8a4b79e"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["119bc02554a192b2954b73d79389ec441257b624","ef0d8a69209261514c5739c770bba706c2308450"],"119bc02554a192b2954b73d79389ec441257b624":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683","ef0d8a69209261514c5739c770bba706c2308450"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"b47e1512544568a22b82c96169d466fae8a4b79e":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","407687e67faf6e1f02a211ca078d8e3eed631027","b47e1512544568a22b82c96169d466fae8a4b79e"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","407687e67faf6e1f02a211ca078d8e3eed631027","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}