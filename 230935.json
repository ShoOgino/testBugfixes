{"path":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","pathOld":"/dev/null","sourceNew":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      this.zkStateReader = new ZkStateReader(zkClient);\n      this.nodeNumber = nodeNumber;\n      props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","pathOld":"/dev/null","sourceNew":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      this.zkStateReader = new ZkStateReader(zkClient);\n      this.nodeNumber = nodeNumber;\n      props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","pathOld":"/dev/null","sourceNew":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      this.zkStateReader = new ZkStateReader(zkClient);\n      this.nodeNumber = nodeNumber;\n      props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"336850123198c8df23821aa53cba096f414d0d24","date":1327716209,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","sourceNew":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      boolean created = false;\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n        this.zkStateReader = new ZkStateReader(zkClient);\n        this.nodeNumber = nodeNumber;\n        props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n        created = true;\n      } finally {\n        if (!created) {\n          zkClient.close();\n        }\n      }\n    }\n\n","sourceOld":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      this.zkStateReader = new ZkStateReader(zkClient);\n      this.nodeNumber = nodeNumber;\n      props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7","date":1327763052,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","sourceNew":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      boolean created = false;\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n        this.zkStateReader = new ZkStateReader(zkClient);\n        this.nodeNumber = nodeNumber;\n        props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n        created = true;\n      } finally {\n        if (!created) {\n          zkClient.close();\n        }\n      }\n    }\n\n","sourceOld":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      this.zkStateReader = new ZkStateReader(zkClient);\n      this.nodeNumber = nodeNumber;\n      props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","sourceNew":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      boolean created = false;\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n        this.zkStateReader = new ZkStateReader(zkClient);\n        this.nodeNumber = nodeNumber;\n        props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n        created = true;\n      } finally {\n        if (!created) {\n          zkClient.close();\n        }\n      }\n    }\n\n","sourceOld":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      this.zkStateReader = new ZkStateReader(zkClient);\n      this.nodeNumber = nodeNumber;\n      props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe3c951ef5686e1465970365860afe906395d5ec","date":1335268044,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","sourceNew":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      \n      props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT, TIMEOUT, new OnReconnect() {\n        \n        @Override\n        public void command() {\n          try {\n            setupOnConnect();\n          } catch (Throwable t) {\n          } \n        }\n      });\n     this.nodeNumber = nodeNumber;\n    }\n\n","sourceOld":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      boolean created = false;\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n        this.zkStateReader = new ZkStateReader(zkClient);\n        this.nodeNumber = nodeNumber;\n        props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n        created = true;\n      } finally {\n        if (!created) {\n          zkClient.close();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e","date":1406603075,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#ClientThread(int).mjava","sourceNew":null,"sourceOld":"    public ClientThread(int nodeNumber) throws Exception {\n      super(\"Thread-\" + nodeNumber);\n      \n      props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, Integer.toString(nodeNumber), ZkStateReader.CORE_NAME_PROP, \"\");\n\n      this.zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT, TIMEOUT, new OnReconnect() {\n        \n        @Override\n        public void command() {\n          try {\n            setupOnConnect();\n          } catch (Throwable t) {\n          } \n        }\n      });\n     this.nodeNumber = nodeNumber;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe3c951ef5686e1465970365860afe906395d5ec":["336850123198c8df23821aa53cba096f414d0d24"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e":["fe3c951ef5686e1465970365860afe906395d5ec"],"336850123198c8df23821aa53cba096f414d0d24":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["0d22ac6a4146774c1bc8400160fc0b6150294e92","336850123198c8df23821aa53cba096f414d0d24"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e"],"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","336850123198c8df23821aa53cba096f414d0d24"]},"commit2Childs":{"fe3c951ef5686e1465970365860afe906395d5ec":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["fd92b8bcc88e969302510acf77bd6970da3994c4"],"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"336850123198c8df23821aa53cba096f414d0d24":["fe3c951ef5686e1465970365860afe906395d5ec","fd92b8bcc88e969302510acf77bd6970da3994c4","014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","336850123198c8df23821aa53cba096f414d0d24","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7":[]},"heads":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817","014f4a9c44ade09ba9dc8a50d2690f1303cbfaf7"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}