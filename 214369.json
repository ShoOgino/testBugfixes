{"path":"lucene/core/src/java/org/apache/lucene/util/ByteBlockPool#writePool(DataOutput).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/ByteBlockPool#writePool(DataOutput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ByteBlockPool#writePool(DataOutput).mjava","sourceNew":"  /**\n   * Writes the pools content to the given {@link DataOutput}\n   */\n  public final void writePool(final DataOutput out) throws IOException {\n    int bytesOffset = byteOffset;\n    int block = 0;\n    while (bytesOffset > 0) {\n      out.writeBytes(buffers[block++], BYTE_BLOCK_SIZE);\n      bytesOffset -= BYTE_BLOCK_SIZE;\n    }\n    out.writeBytes(buffers[block], byteUpto);\n  }\n\n","sourceOld":"  /**\n   * Writes the pools content to the given {@link DataOutput}\n   */\n  public final void writePool(final DataOutput out) throws IOException {\n    int bytesOffset = byteOffset;\n    int block = 0;\n    while (bytesOffset > 0) {\n      out.writeBytes(buffers[block++], BYTE_BLOCK_SIZE);\n      bytesOffset -= BYTE_BLOCK_SIZE;\n    }\n    out.writeBytes(buffers[block], byteUpto);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3608fdc19fd70645d52a947214e126ab56cc2b05","date":1359064554,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/ByteBlockPool#writePool(DataOutput).mjava","sourceNew":null,"sourceOld":"  /**\n   * Writes the pools content to the given {@link DataOutput}\n   */\n  public final void writePool(final DataOutput out) throws IOException {\n    int bytesOffset = byteOffset;\n    int block = 0;\n    while (bytesOffset > 0) {\n      out.writeBytes(buffers[block++], BYTE_BLOCK_SIZE);\n      bytesOffset -= BYTE_BLOCK_SIZE;\n    }\n    out.writeBytes(buffers[block], byteUpto);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/ByteBlockPool#writePool(DataOutput).mjava","sourceNew":null,"sourceOld":"  /**\n   * Writes the pools content to the given {@link DataOutput}\n   */\n  public final void writePool(final DataOutput out) throws IOException {\n    int bytesOffset = byteOffset;\n    int block = 0;\n    while (bytesOffset > 0) {\n      out.writeBytes(buffers[block++], BYTE_BLOCK_SIZE);\n      bytesOffset -= BYTE_BLOCK_SIZE;\n    }\n    out.writeBytes(buffers[block], byteUpto);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","3608fdc19fd70645d52a947214e126ab56cc2b05"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3608fdc19fd70645d52a947214e126ab56cc2b05":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4d69c535930b5cce125cff868d40f6373dc27d4","3608fdc19fd70645d52a947214e126ab56cc2b05"],"3608fdc19fd70645d52a947214e126ab56cc2b05":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}