{"path":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#getValues(String).mjava","commits":[{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#getValues(String).mjava","pathOld":"/dev/null","sourceNew":"   /**\n    * Returns an array of values of the field specified as the method parameter.\n    * This method returns an empty array when there are no\n    * matching fields.  It never returns null.\n    * For {@link IntField}, {@link LongField}, {@link\n    * FloatField} and {@link DoubleField} it returns the string value of the number. If you want\n    * the actual numeric field instances back, use {@link #getFields}.\n    * @param name the name of the field\n    * @return a <code>String[]</code> of field values\n    */\n   public final String[] getValues(String name) {\n     List<String> result = new ArrayList<String>();\n     for (StorableField field : fields) {\n       if (field.name().equals(name) && field.stringValue() != null) {\n         result.add(field.stringValue());\n       }\n     }\n     \n     if (result.size() == 0) {\n       return NO_STRINGS;\n     }\n     \n     return result.toArray(new String[result.size()]);\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredDocument#getValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#getValues(String).mjava","sourceNew":"   /**\n    * Returns an array of values of the field specified as the method parameter.\n    * This method returns an empty array when there are no\n    * matching fields.  It never returns null.\n    * For {@link IntField}, {@link LongField}, {@link\n    * FloatField} and {@link DoubleField} it returns the string value of the number. If you want\n    * the actual numeric field instances back, use {@link #getFields}.\n    * @param name the name of the field\n    * @return a <code>String[]</code> of field values\n    */\n   public final String[] getValues(String name) {\n     List<String> result = new ArrayList<String>();\n     for (StorableField field : fields) {\n       if (field.name().equals(name) && field.stringValue() != null) {\n         result.add(field.stringValue());\n       }\n     }\n     \n     if (result.size() == 0) {\n       return NO_STRINGS;\n     }\n     \n     return result.toArray(new String[result.size()]);\n   }\n\n","sourceOld":"   /**\n    * Returns an array of values of the field specified as the method parameter.\n    * This method returns an empty array when there are no\n    * matching fields.  It never returns null.\n    * For {@link IntField}, {@link LongField}, {@link\n    * FloatField} and {@link DoubleField} it returns the string value of the number. If you want\n    * the actual numeric field instances back, use {@link #getFields}.\n    * @param name the name of the field\n    * @return a <code>String[]</code> of field values\n    */\n   public final String[] getValues(String name) {\n     List<String> result = new ArrayList<String>();\n     for (StorableField field : fields) {\n       if (field.name().equals(name) && field.stringValue() != null) {\n         result.add(field.stringValue());\n       }\n     }\n     \n     if (result.size() == 0) {\n       return NO_STRINGS;\n     }\n     \n     return result.toArray(new String[result.size()]);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409324b31a1419d7c05a38211168cf317e39be77":["33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"409324b31a1419d7c05a38211168cf317e39be77":[],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["409324b31a1419d7c05a38211168cf317e39be77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["409324b31a1419d7c05a38211168cf317e39be77","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}