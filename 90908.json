{"path":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","pathOld":"solr/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","sourceNew":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable) );\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","sourceOld":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable) );\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","pathOld":"solr/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","sourceNew":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable) );\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","sourceOld":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable) );\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","pathOld":"solr/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","sourceNew":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable) );\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","sourceOld":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable) );\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58f6129aa3cc4d7092fe2dacee662b263fb66e94","date":1315473880,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","sourceNew":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable), 0.001);\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","sourceOld":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable) );\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","sourceNew":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable), 0.001);\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","sourceOld":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable), 0.001);\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","sourceNew":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable), 0.001);\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","sourceOld":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable), 0.001);\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TestUtils#testNumberUtils().mjava","sourceNew":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable), 0.001);\n    \n    long num = System.nanoTime();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","sourceOld":"  public void testNumberUtils()\n  {\n    double number = 1.234;\n    String sortable = NumberUtils.double2sortableStr( number );\n    assertEquals( number, NumberUtils.SortableStr2double(sortable), 0.001);\n    \n    long num = System.currentTimeMillis();\n    sortable = NumberUtils.long2sortableStr( num );\n    assertEquals( num, NumberUtils.SortableStr2long(sortable, 0, sortable.length() ) );\n    assertEquals( Long.toString(num), NumberUtils.SortableStr2long(sortable) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["58f6129aa3cc4d7092fe2dacee662b263fb66e94","19275ba31e621f6da1b83bf13af75233876fd3d4"],"58f6129aa3cc4d7092fe2dacee662b263fb66e94":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["58f6129aa3cc4d7092fe2dacee662b263fb66e94"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bcf9886c8ff537aafde14de48ebf744f5673f08b"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"58f6129aa3cc4d7092fe2dacee662b263fb66e94":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["58f6129aa3cc4d7092fe2dacee662b263fb66e94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","bcf9886c8ff537aafde14de48ebf744f5673f08b"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}