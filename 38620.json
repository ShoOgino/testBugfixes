{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int,int).mjava","commits":[{"id":"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1","date":1342716838,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int endOffset, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    this.curEndOffset = endOffset;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f81e20fb7784c464473faba4f1fdd4f775e8ee87"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f81e20fb7784c464473faba4f1fdd4f775e8ee87","date":1343937502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int startOffset, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    this.curStartOffset = startOffset;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int endOffset, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    this.curEndOffset = endOffset;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int startOffset, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    this.curStartOffset = startOffset;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int startOffset, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    this.curStartOffset = startOffset;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int startOffset, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    this.curStartOffset = startOffset;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int startOffset, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    this.curStartOffset = startOffset;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f81e20fb7784c464473faba4f1fdd4f775e8ee87"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"f81e20fb7784c464473faba4f1fdd4f775e8ee87":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","f8615860cb50aefb8eebca1d1b3893dbe21cf126","e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["f81e20fb7784c464473faba4f1fdd4f775e8ee87"],"f81e20fb7784c464473faba4f1fdd4f775e8ee87":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}