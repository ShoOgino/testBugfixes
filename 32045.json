{"path":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","commits":[{"id":"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b","date":1455308162,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp\";\n    final SortField.Type expectedFieldType = SortField.Type.LONG;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","sourceNew":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp_i_dvo\";\n    final SortField.Type expectedFieldType = SortField.Type.INT;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","sourceOld":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp\";\n    final SortField.Type expectedFieldType = SortField.Type.LONG;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","sourceNew":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp_i_dvo\";\n    final SortField.Type expectedFieldType = SortField.Type.INT;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","sourceOld":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp\";\n    final SortField.Type expectedFieldType = SortField.Type.LONG;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","sourceNew":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp_i_dvo\";\n    final SortField.Type expectedFieldType = SortField.Type.INT;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","sourceOld":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp_i_dvo\";\n    final SortField.Type expectedFieldType = SortField.Type.INT;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","sourceNew":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp_i_dvo\";\n    final SortField.Type expectedFieldType = SortField.Type.INT;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","sourceOld":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp_i_dvo\";\n    final SortField.Type expectedFieldType = SortField.Type.INT;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testSortingMPSolrIndexConfigCreation().mjava","sourceNew":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp_i_dvo\";\n    final SortField.Type expectedFieldType = SortField.Type.INT;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","sourceOld":"  public void testSortingMPSolrIndexConfigCreation() throws Exception {\n    final String expectedFieldName = \"timestamp_i_dvo\";\n    final SortField.Type expectedFieldType = SortField.Type.INT;\n    final boolean expectedFieldSortDescending = true;\n\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameSortingMergePolicyFactory, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    final MergePolicy mergePolicy = iwc.getMergePolicy();\n    assertNotNull(\"null mergePolicy\", mergePolicy);\n    assertTrue(\"mergePolicy (\"+mergePolicy+\") is not a SortingMergePolicy\", mergePolicy instanceof SortingMergePolicy);\n    final SortingMergePolicy sortingMergePolicy = (SortingMergePolicy) mergePolicy;\n    final Sort expected = new Sort(new SortField(expectedFieldName, expectedFieldType, expectedFieldSortDescending));\n    final Sort actual = sortingMergePolicy.getSort();\n    assertEquals(\"SortingMergePolicy.getSort\", expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b"],"df724d84dab24a0cc54bec95a8680867adc7f171":["415bbbe7da8065dd3c477bdc3c703c6425622998","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["415bbbe7da8065dd3c477bdc3c703c6425622998"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["df724d84dab24a0cc54bec95a8680867adc7f171","598b5d23aa7c9732bf473c21a9cd309c44599394","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"df724d84dab24a0cc54bec95a8680867adc7f171":[],"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}