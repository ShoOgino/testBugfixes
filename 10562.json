{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","commits":[{"id":"af56a7fe9b0a12db7411a3f2ac1ad227cd35b246","date":1214948673,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"/dev/null","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      public void run() throws Exception {\n        String stopWords[] = { \"in\", \"it\" };\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(\n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c881464041e282c06fdb34e91f883b83b8d97968","date":1247607562,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      public void run() throws Exception {\n        Set stopWords = new HashSet();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(\n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      public void run() throws Exception {\n        String stopWords[] = { \"in\", \"it\" };\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(\n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      public void run() throws Exception {\n        Set stopWords = new HashSet();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      public void run() throws Exception {\n        Set stopWords = new HashSet();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(\n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set stopWords = new HashSet();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      public void run() throws Exception {\n        Set stopWords = new HashSet();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7848880b3c06f09f0f3ac50d0854b16efb0b815e","date":1260006234,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set stopWords = new HashSet();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION_CURRENT, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION_CURRENT, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION_CURRENT, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION_CURRENT, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION_CURRENT, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION_CURRENT, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testMaxSizeEndHighlight().mjava","sourceNew":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION_CURRENT, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION_CURRENT, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","sourceOld":"  public void testMaxSizeEndHighlight() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n      @Override\n      public void run() throws Exception {\n        Set<String> stopWords = new HashSet<String>();\n        stopWords.add(\"in\");\n        stopWords.add(\"it\");\n        TermQuery query = new TermQuery(new Term(\"text\", \"searchterm\"));\n\n        String text = \"this is a text with searchterm in it\";\n        SimpleHTMLFormatter fm = new SimpleHTMLFormatter();\n        Highlighter hg = getHighlighter(query, \"text\", new StandardAnalyzer(TEST_VERSION_CURRENT, \n            stopWords).tokenStream(\"text\", new StringReader(text)), fm);\n        hg.setTextFragmenter(new NullFragmenter());\n        hg.setMaxDocCharsToAnalyze(36);\n        String match = hg.getBestFragment(new StandardAnalyzer(TEST_VERSION_CURRENT, stopWords), \"text\", text);\n        assertTrue(\n            \"Matched text should contain remainder of text after highlighted query \",\n            match.endsWith(\"in it\"));\n      }\n    };\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af56a7fe9b0a12db7411a3f2ac1ad227cd35b246":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["7848880b3c06f09f0f3ac50d0854b16efb0b815e"],"c881464041e282c06fdb34e91f883b83b8d97968":["af56a7fe9b0a12db7411a3f2ac1ad227cd35b246"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["c881464041e282c06fdb34e91f883b83b8d97968"],"7848880b3c06f09f0f3ac50d0854b16efb0b815e":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af56a7fe9b0a12db7411a3f2ac1ad227cd35b246"],"af56a7fe9b0a12db7411a3f2ac1ad227cd35b246":["c881464041e282c06fdb34e91f883b83b8d97968"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"c881464041e282c06fdb34e91f883b83b8d97968":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["7848880b3c06f09f0f3ac50d0854b16efb0b815e"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"7848880b3c06f09f0f3ac50d0854b16efb0b815e":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}