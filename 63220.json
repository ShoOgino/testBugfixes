{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(LeafReaderContext).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context);\n      if (subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, getBoost(), subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, acceptDocs);\n      if (subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, getBoost(), subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context);\n      if (subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context);\n      if (subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, getBoost(), subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(LeafReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context);\n      if (subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a82662cae660e76ded4de1e9b451633e523d83e1":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["a82662cae660e76ded4de1e9b451633e523d83e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}