{"path":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"71946974c05b5dc4d3201f8abf4ecd2609bba400","date":1319655558,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n\t  throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).docs;\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecd75942508378ccc92c3a26f71db6cba9f25784","date":1450708761,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getValues().get(\"response\");\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = new Integer(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23d59c6cfca9fc6a1c16bdeed21c26249d775887","date":1498229244,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        results_found = ((DocSlice) docs).matches();\n        start = ((DocSlice) docs).offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        results_found = ((DocSlice) docs).matches();\n        start = ((DocSlice) docs).offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        results_found = ((DocSlice) docs).matches();\n        start = ((DocSlice) docs).offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        DocSlice doc_slice = (DocSlice) docs;\n        results_found = doc_slice.matches();\n        start = doc_slice.offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b659435fdb2401d91fa87bb3df798ae41a8046cd","date":1600346713,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/PageTool#PageTool(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  public PageTool(SolrQueryRequest request, SolrQueryResponse response) {\n    String rows = request.getParams().get(\"rows\");\n\n    if (rows != null) {\n      results_per_page = Integer.parseInt(rows);\n    }\n    //TODO: Handle group by results\n    Object docs = response.getResponse();\n    if (docs != null) {\n      if (docs instanceof DocSlice) {\n        results_found = ((DocSlice) docs).matches();\n        start = ((DocSlice) docs).offset();\n      } else if(docs instanceof ResultContext) {\n        DocList dl = ((ResultContext) docs).getDocList();\n        results_found = dl.matches();\n        start = dl.offset();\n      } else if(docs instanceof SolrDocumentList) {\n        SolrDocumentList doc_list = (SolrDocumentList) docs;\n        results_found = doc_list.getNumFound();\n        start = doc_list.getStart();\n      } else {\n        throw new SolrException(SolrException.ErrorCode.UNKNOWN, \"Unknown response type \"+docs+\". Expected one of DocSlice, ResultContext or SolrDocumentList\");\n      }\n    }\n\n    page_count = (int) Math.ceil(results_found / (double) results_per_page);\n    current_page_number = (int) Math.ceil(start / (double) results_per_page) + (page_count > 0 ? 1 : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["ab68488225b6a6c357dda72ed11dedca9914a192","23d59c6cfca9fc6a1c16bdeed21c26249d775887"],"28288370235ed02234a64753cdbf0c6ec096304a":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","23d59c6cfca9fc6a1c16bdeed21c26249d775887"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b659435fdb2401d91fa87bb3df798ae41a8046cd":["28288370235ed02234a64753cdbf0c6ec096304a"],"ecd75942508378ccc92c3a26f71db6cba9f25784":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"ab68488225b6a6c357dda72ed11dedca9914a192":["ecd75942508378ccc92c3a26f71db6cba9f25784","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"71946974c05b5dc4d3201f8abf4ecd2609bba400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b659435fdb2401d91fa87bb3df798ae41a8046cd"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["71946974c05b5dc4d3201f8abf4ecd2609bba400"],"23d59c6cfca9fc6a1c16bdeed21c26249d775887":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["28288370235ed02234a64753cdbf0c6ec096304a","23d59c6cfca9fc6a1c16bdeed21c26249d775887"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["b659435fdb2401d91fa87bb3df798ae41a8046cd"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71946974c05b5dc4d3201f8abf4ecd2609bba400"],"b659435fdb2401d91fa87bb3df798ae41a8046cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ecd75942508378ccc92c3a26f71db6cba9f25784":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","ab68488225b6a6c357dda72ed11dedca9914a192"],"ab68488225b6a6c357dda72ed11dedca9914a192":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"71946974c05b5dc4d3201f8abf4ecd2609bba400":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"23d59c6cfca9fc6a1c16bdeed21c26249d775887":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}