{"path":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,boolean).mjava","commits":[{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, boolean needsOffsets) throws IOException {\n      SimpleTVPostings postings = current.getValue();\n      if (postings.positions == null && postings.startOffsets == null) {\n        return null;\n      }\n      if (needsOffsets && (postings.startOffsets == null || postings.endOffsets == null)) {\n        return null;\n      }\n      // TODO: reuse\n      SimpleTVDocsAndPositionsEnum e = new SimpleTVDocsAndPositionsEnum();\n      e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets);\n      return e;\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      SimpleTVPostings postings = current.getValue();\n      if (postings.positions == null && postings.startOffsets == null) {\n        return null;\n      }\n      // TODO: reuse\n      SimpleTVDocsAndPositionsEnum e = new SimpleTVDocsAndPositionsEnum(postings.startOffsets != null);\n      e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets);\n      return e;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,boolean).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, boolean needsOffsets) throws IOException {\n      SimpleTVPostings postings = current.getValue();\n      if (postings.positions == null && postings.startOffsets == null) {\n        return null;\n      }\n      if (needsOffsets && (postings.startOffsets == null || postings.endOffsets == null)) {\n        return null;\n      }\n      // TODO: reuse\n      SimpleTVDocsAndPositionsEnum e = new SimpleTVDocsAndPositionsEnum();\n      e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets);\n      return e;\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, boolean needsOffsets) throws IOException {\n      SimpleTVPostings postings = current.getValue();\n      if (postings.positions == null && postings.startOffsets == null) {\n        return null;\n      }\n      if (needsOffsets && (postings.startOffsets == null || postings.endOffsets == null)) {\n        return null;\n      }\n      // TODO: reuse\n      SimpleTVDocsAndPositionsEnum e = new SimpleTVDocsAndPositionsEnum();\n      e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets);\n      return e;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}