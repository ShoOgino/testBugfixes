{"path":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","commits":[{"id":"e1b1e202e0a963a0094d637c018a8595f9bd245f","date":1342033808,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(String,String,File).mjava","sourceNew":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = random.nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":"  private static File genTempFile(String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = new Random().nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","pathOld":"/dev/null","sourceNew":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = random.nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","pathOld":"/dev/null","sourceNew":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = random.nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0","date":1356250502,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","sourceNew":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    final int identify;\n    synchronized (counterLock) {\n      if (counterBase == null) { // init once\n        counter = random.nextInt() & 0xFFFF; // up to five digits number\n        counterBase = Integer.toString(counter);\n      }\n      identify = counter++;\n    }\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = random.nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","bugFix":["1e538cbd7f572f646f36c73053aea561d95c2cb2","e1b1e202e0a963a0094d637c018a8595f9bd245f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","sourceNew":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    final int identify;\n    synchronized (counterLock) {\n      if (counterBase == null) { // init once\n        counter = random.nextInt() & 0xFFFF; // up to five digits number\n        counterBase = Integer.toString(counter);\n      }\n      identify = counter++;\n    }\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    int identify = 0;\n\n    synchronized (tempFileLocker) {\n      if (counter == 0) {\n        int newInt = random.nextInt();\n        counter = ((newInt / 65535) & 0xFFFF) + 0x2710;\n        counterBase = counter;\n      }\n      identify = counter++;\n    }\n\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":5,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#genTempFile(Random,String,String,File).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#genTempFile(Random,String,String,File).mjava","sourceNew":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    final int identify;\n    synchronized (counterLock) {\n      if (counterBase == null) { // init once\n        counter = random.nextInt() & 0xFFFF; // up to five digits number\n        counterBase = Integer.toString(counter);\n      }\n      identify = counter++;\n    }\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","sourceOld":"  private static File genTempFile(Random random, String prefix, String suffix, File directory) {\n    final int identify;\n    synchronized (counterLock) {\n      if (counterBase == null) { // init once\n        counter = random.nextInt() & 0xFFFF; // up to five digits number\n        counterBase = Integer.toString(counter);\n      }\n      identify = counter++;\n    }\n    StringBuilder newName = new StringBuilder();\n    newName.append(prefix);\n    newName.append(counterBase);\n    newName.append(identify);\n    newName.append(suffix);\n    return new File(directory, newName.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["e1b1e202e0a963a0094d637c018a8595f9bd245f","ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1b1e202e0a963a0094d637c018a8595f9bd245f"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1b1e202e0a963a0094d637c018a8595f9bd245f"],"ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0":["e1b1e202e0a963a0094d637c018a8595f9bd245f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e1b1e202e0a963a0094d637c018a8595f9bd245f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6613659748fe4411a7dcf85266e55db1f95f7315"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6613659748fe4411a7dcf85266e55db1f95f7315"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","e1b1e202e0a963a0094d637c018a8595f9bd245f"],"e1b1e202e0a963a0094d637c018a8595f9bd245f":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}