{"path":"solr/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","commits":[{"id":"7e9dedeff845903ac13eaba54c3dd4134c871ac2","date":1285882007,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    int dimension = 2;\n    \n    String[] p1 = new String[0];\n    try {\n      p1 = DistanceUtils.parsePoint(null, externalVal, dimension);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < dimension; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, p1[i]);\n      bq.add(tq, BooleanClause.Occur.MUST);\n    }\n    return bq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    int dimension = 2;\n    \n    String[] p1 = new String[0];\n    try {\n      p1 = DistanceUtils.parsePoint(null, externalVal, dimension);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < dimension; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, p1[i]);\n      bq.add(tq, BooleanClause.Occur.MUST);\n    }\n    return bq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","sourceNew":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    int dimension = 2;\n    \n    String[] p1 = new String[0];\n    try {\n      p1 = DistanceUtils.parsePoint(null, externalVal, dimension);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < dimension; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, p1[i]);\n      bq.add(tq, BooleanClause.Occur.MUST);\n    }\n    return bq;\n  }\n\n","sourceOld":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    int dimension = 2;\n    \n    String[] p1 = new String[0];\n    try {\n      p1 = DistanceUtils.parsePoint(null, externalVal, dimension);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < dimension; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, p1[i]);\n      bq.add(tq, BooleanClause.Occur.MUST);\n    }\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","sourceNew":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    int dimension = 2;\n    \n    String[] p1 = new String[0];\n    try {\n      p1 = DistanceUtils.parsePoint(null, externalVal, dimension);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < dimension; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, p1[i]);\n      bq.add(tq, BooleanClause.Occur.MUST);\n    }\n    return bq;\n  }\n\n","sourceOld":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    int dimension = 2;\n    \n    String[] p1 = new String[0];\n    try {\n      p1 = DistanceUtils.parsePoint(null, externalVal, dimension);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < dimension; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, p1[i]);\n      bq.add(tq, BooleanClause.Occur.MUST);\n    }\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/LatLonType#getFieldQuery(QParser,SchemaField,String).mjava","sourceNew":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    int dimension = 2;\n    \n    String[] p1 = new String[0];\n    try {\n      p1 = DistanceUtils.parsePoint(null, externalVal, dimension);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < dimension; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, p1[i]);\n      bq.add(tq, BooleanClause.Occur.MUST);\n    }\n    return bq;\n  }\n\n","sourceOld":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    int dimension = 2;\n    \n    String[] p1 = new String[0];\n    try {\n      p1 = DistanceUtils.parsePoint(null, externalVal, dimension);\n    } catch (InvalidGeoException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < dimension; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, p1[i]);\n      bq.add(tq, BooleanClause.Occur.MUST);\n    }\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["7e9dedeff845903ac13eaba54c3dd4134c871ac2"],"c26f00b574427b55127e869b935845554afde1fa":["7e9dedeff845903ac13eaba54c3dd4134c871ac2","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7e9dedeff845903ac13eaba54c3dd4134c871ac2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["7e9dedeff845903ac13eaba54c3dd4134c871ac2"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7e9dedeff845903ac13eaba54c3dd4134c871ac2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e9dedeff845903ac13eaba54c3dd4134c871ac2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7e9dedeff845903ac13eaba54c3dd4134c871ac2":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}