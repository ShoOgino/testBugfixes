{"path":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#postingEquals(int,char[],int).mjava","commits":[{"id":"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","date":1269379515,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#postingEquals(int,char[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#postingEquals(char[],int).mjava","sourceNew":"  /** Test whether the text for current RawPostingList p equals\n   *  current tokenText. */\n  private boolean postingEquals(final int termID, final char[] tokenText, final int tokenTextLen) {\n    final int textStart = postingsArray.textStarts[termID];\n    \n    final char[] text = perThread.charPool.buffers[textStart >> DocumentsWriter.CHAR_BLOCK_SHIFT];\n    assert text != null;\n    int pos = textStart & DocumentsWriter.CHAR_BLOCK_MASK;\n\n    int tokenPos = 0;\n    for(;tokenPos<tokenTextLen;pos++,tokenPos++)\n      if (tokenText[tokenPos] != text[pos])\n        return false;\n    return 0xffff == text[pos];\n  }\n\n","sourceOld":"  /** Test whether the text for current RawPostingList p equals\n   *  current tokenText. */\n  private boolean postingEquals(final char[] tokenText, final int tokenTextLen) {\n\n    final char[] text = perThread.charPool.buffers[p.textStart >> DocumentsWriter.CHAR_BLOCK_SHIFT];\n    assert text != null;\n    int pos = p.textStart & DocumentsWriter.CHAR_BLOCK_MASK;\n\n    int tokenPos = 0;\n    for(;tokenPos<tokenTextLen;pos++,tokenPos++)\n      if (tokenText[tokenPos] != text[pos])\n        return false;\n    return 0xffff == text[pos];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#postingEquals(int,char[],int).mjava","sourceNew":null,"sourceOld":"  /** Test whether the text for current RawPostingList p equals\n   *  current tokenText. */\n  private boolean postingEquals(final int termID, final char[] tokenText, final int tokenTextLen) {\n    final int textStart = postingsArray.textStarts[termID];\n    \n    final char[] text = perThread.charPool.buffers[textStart >> DocumentsWriter.CHAR_BLOCK_SHIFT];\n    assert text != null;\n    int pos = textStart & DocumentsWriter.CHAR_BLOCK_MASK;\n\n    int tokenPos = 0;\n    for(;tokenPos<tokenTextLen;pos++,tokenPos++)\n      if (tokenText[tokenPos] != text[pos])\n        return false;\n    return 0xffff == text[pos];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}