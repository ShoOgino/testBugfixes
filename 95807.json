{"path":"src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","commits":[{"id":"d36e31648b7ec39d875e5e05bcc9ac24ae313690","date":1063282530,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","pathOld":"/dev/null","sourceNew":"    public void testFixedSize(){\n        PriorityQueue pq = new IntegerQueue(3);\n        pq.insert(new Integer(2));\n        pq.insert(new Integer(3));\n        pq.insert(new Integer(1));\n        pq.insert(new Integer(5));\n        pq.insert(new Integer(7));\n        pq.insert(new Integer(1));\n        assertEquals(3, pq.size());\n        assertEquals(3, ((Integer) pq.top()).intValue());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d48430886f0d62ca63d20bf2a8bc01acee0c12f","date":1254504483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","pathOld":"src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","sourceNew":"    public void testFixedSize() {\n        PriorityQueue<Integer> pq = new IntegerQueue(3);\n        pq.insert(2);\n        pq.insert(3);\n        pq.insert(1);\n        pq.insert(5);\n        pq.insert(7);\n        pq.insert(1);\n        assertEquals(3, pq.size());\n        assertEquals((Integer) 3, pq.top());\n    }\n\n","sourceOld":"    public void testFixedSize(){\n        PriorityQueue pq = new IntegerQueue(3);\n        pq.insert(new Integer(2));\n        pq.insert(new Integer(3));\n        pq.insert(new Integer(1));\n        pq.insert(new Integer(5));\n        pq.insert(new Integer(7));\n        pq.insert(new Integer(1));\n        assertEquals(3, pq.size());\n        assertEquals(3, ((Integer) pq.top()).intValue());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0731e137bcbb58121034de6ddaa67332fbe6e5d1","date":1255233265,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","pathOld":"src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","sourceNew":"    public void testFixedSize() {\n        PriorityQueue<Integer> pq = new IntegerQueue(3);\n        pq.insertWithOverflow(2);\n        pq.insertWithOverflow(3);\n        pq.insertWithOverflow(1);\n        pq.insertWithOverflow(5);\n        pq.insertWithOverflow(7);\n        pq.insertWithOverflow(1);\n        assertEquals(3, pq.size());\n        assertEquals((Integer) 3, pq.top());\n    }\n\n","sourceOld":"    public void testFixedSize() {\n        PriorityQueue<Integer> pq = new IntegerQueue(3);\n        pq.insert(2);\n        pq.insert(3);\n        pq.insert(1);\n        pq.insert(5);\n        pq.insert(7);\n        pq.insert(1);\n        assertEquals(3, pq.size());\n        assertEquals((Integer) 3, pq.top());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","pathOld":"src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","sourceNew":"    public void testFixedSize() {\n        PriorityQueue<Integer> pq = new IntegerQueue(3);\n        pq.insertWithOverflow(2);\n        pq.insertWithOverflow(3);\n        pq.insertWithOverflow(1);\n        pq.insertWithOverflow(5);\n        pq.insertWithOverflow(7);\n        pq.insertWithOverflow(1);\n        assertEquals(3, pq.size());\n        assertEquals((Integer) 3, pq.top());\n    }\n\n","sourceOld":"    public void testFixedSize() {\n        PriorityQueue<Integer> pq = new IntegerQueue(3);\n        pq.insertWithOverflow(2);\n        pq.insertWithOverflow(3);\n        pq.insertWithOverflow(1);\n        pq.insertWithOverflow(5);\n        pq.insertWithOverflow(7);\n        pq.insertWithOverflow(1);\n        assertEquals(3, pq.size());\n        assertEquals((Integer) 3, pq.top());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d36e31648b7ec39d875e5e05bcc9ac24ae313690":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["8d48430886f0d62ca63d20bf2a8bc01acee0c12f"],"8d48430886f0d62ca63d20bf2a8bc01acee0c12f":["d36e31648b7ec39d875e5e05bcc9ac24ae313690"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"]},"commit2Childs":{"d36e31648b7ec39d875e5e05bcc9ac24ae313690":["8d48430886f0d62ca63d20bf2a8bc01acee0c12f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d36e31648b7ec39d875e5e05bcc9ac24ae313690"],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8d48430886f0d62ca63d20bf2a8bc01acee0c12f":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}