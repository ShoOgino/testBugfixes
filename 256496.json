{"path":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","pathOld":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb38e04906cc704c95b1bb9cdc7a960017b0cc25","date":1288942385,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":["9d2e90ba81e23fe05fd4f37d3871c246495f695e","6db31a28b572718e912d7cf7f43a85d98af0ce19","9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase();\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase();\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["85a883878c0af761245ab048babc63d099f835f3","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81ea17596392ebd5d12741eb9e3b2516258b9413"],"fb38e04906cc704c95b1bb9cdc7a960017b0cc25":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"81ea17596392ebd5d12741eb9e3b2516258b9413":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"fb38e04906cc704c95b1bb9cdc7a960017b0cc25":["81ea17596392ebd5d12741eb9e3b2516258b9413","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}