{"path":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"public void write(OutputStream out, SolrQueryRequest request,\n\t\tSolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n    \tthrow new IOException(\"did not find a CONTENT object\");\n    }\n\t\n}\n\n","sourceOld":"public void write(OutputStream out, SolrQueryRequest request,\n\t\tSolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n    \tthrow new IOException(\"did not find a CONTENT object\");\n    }\n\t\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"public void write(OutputStream out, SolrQueryRequest request,\n\t\tSolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n    \tthrow new IOException(\"did not find a CONTENT object\");\n    }\n\t\n}\n\n","sourceOld":"public void write(OutputStream out, SolrQueryRequest request,\n\t\tSolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n    \tthrow new IOException(\"did not find a CONTENT object\");\n    }\n\t\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"public void write(OutputStream out, SolrQueryRequest request,\n\t\tSolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n    \tthrow new IOException(\"did not find a CONTENT object\");\n    }\n\t\n}\n\n","sourceOld":"public void write(OutputStream out, SolrQueryRequest request,\n\t\tSolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n    \tthrow new IOException(\"did not find a CONTENT object\");\n    }\n\t\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"public void write(OutputStream out, SolrQueryRequest request,\n    SolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n      throw new IOException(\"did not find a CONTENT object\");\n    }\n\n  }\n\n","sourceOld":"public void write(OutputStream out, SolrQueryRequest request,\n\t\tSolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n    \tthrow new IOException(\"did not find a CONTENT object\");\n    }\n\t\n}\n\n","bugFix":null,"bugIntro":["9272dcea19192a5fb261980a4737677abfcabab3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"@Override\npublic void write(OutputStream out, SolrQueryRequest request,\n    SolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n      throw new IOException(\"did not find a CONTENT object\");\n    }\n\n  }\n\n","sourceOld":"public void write(OutputStream out, SolrQueryRequest request,\n    SolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n      throw new IOException(\"did not find a CONTENT object\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["9272dcea19192a5fb261980a4737677abfcabab3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"@Override\npublic void write(OutputStream out, SolrQueryRequest request,\n    SolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n      throw new IOException(\"did not find a CONTENT object\");\n    }\n\n  }\n\n","sourceOld":"public void write(OutputStream out, SolrQueryRequest request,\n    SolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n      throw new IOException(\"did not find a CONTENT object\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9272dcea19192a5fb261980a4737677abfcabab3","date":1409771900,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/RawResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      try(InputStream in = content.getStream()) {\n        IOUtils.copy( in, out );\n      }\n    } else {\n      QueryResponseWriterUtil.writeQueryResponse(out, \n          getBaseWriter(request), request, response, getContentType(request, response));\n    }\n  }\n\n","sourceOld":"@Override\npublic void write(OutputStream out, SolrQueryRequest request,\n    SolrQueryResponse response) throws IOException {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      java.io.InputStream in = content.getStream();\n      try {\n        IOUtils.copy( in, out );\n      } finally {\n        in.close();\n      }\n    }\n    else {\n      //getBaseWriter( request ).write( writer, request, response );\n      throw new IOException(\"did not find a CONTENT object\");\n    }\n\n  }\n\n","bugFix":["7530de27b87b961b51f01bd1299b7004d46e8823","a6b3f8ea9dd12803ee72c8a169fae9c5d261bf15","4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","7530de27b87b961b51f01bd1299b7004d46e8823"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9272dcea19192a5fb261980a4737677abfcabab3":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9272dcea19192a5fb261980a4737677abfcabab3"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9272dcea19192a5fb261980a4737677abfcabab3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9272dcea19192a5fb261980a4737677abfcabab3"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}