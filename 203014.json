{"path":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","commits":[{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"/dev/null","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, null, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    expectThrows(IllegalArgumentException.class, () -> {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    });\n    \n    expectThrows(IllegalArgumentException.class, () -> {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    });\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    try {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    \n    try {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["9882ec7961965d6ac6203049795d94c122015950","dd906cf99495baaa13945b26300a973c89ce3222"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"381618eac2691bb34ab9a3fca76ad55c6274517e","date":1495564791,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":null,"sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    expectThrows(IllegalArgumentException.class, () -> {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    });\n    \n    expectThrows(IllegalArgumentException.class, () -> {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    });\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testUserFailedToIndexOffsets().mjava","sourceNew":null,"sourceOld":"  public void testUserFailedToIndexOffsets() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);\n    Field body = new Field(\"body\", \"\", positionsType);\n    Field title = new StringField(\"title\", \"\", Field.Store.YES);\n    Document doc = new Document();\n    doc.add(body);\n    doc.add(title);\n    \n    body.setStringValue(\"This is a test. Just a test highlighting from postings. Feel free to ignore.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    body.setStringValue(\"This test is another test. Not a good sentence. Test test test test.\");\n    title.setStringValue(\"test\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    Query query = new TermQuery(new Term(\"body\", \"test\"));\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(2, topDocs.totalHits);\n    expectThrows(IllegalArgumentException.class, () -> {\n      highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    });\n    \n    expectThrows(IllegalArgumentException.class, () -> {\n      highlighter.highlight(\"title\", new TermQuery(new Term(\"title\", \"test\")), searcher, topDocs, 2);\n      fail(\"did not hit expected exception\");\n    });\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["05fe562aa248790944d43cdd478f512572835ba0"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["05fe562aa248790944d43cdd478f512572835ba0","381618eac2691bb34ab9a3fca76ad55c6274517e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["381618eac2691bb34ab9a3fca76ad55c6274517e"]},"commit2Childs":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["05fe562aa248790944d43cdd478f512572835ba0"],"05fe562aa248790944d43cdd478f512572835ba0":["381618eac2691bb34ab9a3fca76ad55c6274517e","e9017cf144952056066919f1ebc7897ff9bd71b1"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}