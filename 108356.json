{"path":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#explain(int).mjava","commits":[{"id":"366fcca5de1fe02aa77c7aca163ce4c0dbf30112","date":1138917988,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#explain(int).mjava","pathOld":"src/lucene_extras/org/apache/lucene/search/function/FunctionQuery.AllScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      float sc = qWeight * vals.floatVal(doc);\n\n      Explanation result = new Explanation();\n      result.setDescription(\"FunctionQuery(\" + func\n        + \"), product of:\");\n      result.setValue(sc);\n      result.addDetail(vals.explain(doc));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      float sc = qWeight * vals.floatVal(doc);\n\n      Explanation result = new Explanation();\n      result.setDescription(\"FunctionQuery(\" + func\n        + \"), product of:\");\n      result.setValue(sc);\n      result.addDetail(vals.explain(doc));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ef0ff6650b175c4ff375418bb3aab9ffb86ec7a","date":1159987986,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#explain(int).mjava","pathOld":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      float sc = qWeight * vals.floatVal(doc);\n\n      Explanation result = new ComplexExplanation\n        (true, sc, \"FunctionQuery(\" + func + \"), product of:\");\n\n      result.addDetail(vals.explain(doc));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      float sc = qWeight * vals.floatVal(doc);\n\n      Explanation result = new Explanation();\n      result.setDescription(\"FunctionQuery(\" + func\n        + \"), product of:\");\n      result.setValue(sc);\n      result.addDetail(vals.explain(doc));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#explain(int).mjava","pathOld":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      float sc = qWeight * vals.floatVal(doc);\n\n      Explanation result = new ComplexExplanation\n        (true, sc, \"FunctionQuery(\" + func + \"), product of:\");\n\n      result.addDetail(vals.explain(doc));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      float sc = qWeight * vals.floatVal(doc);\n\n      Explanation result = new ComplexExplanation\n        (true, sc, \"FunctionQuery(\" + func + \"), product of:\");\n\n      result.addDetail(vals.explain(doc));\n      result.addDetail(new Explanation(getBoost(), \"boost\"));\n      result.addDetail(new Explanation(weight.queryNorm,\"queryNorm\"));\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7ef0ff6650b175c4ff375418bb3aab9ffb86ec7a":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"ad94625fb8d088209f46650c8097196fec67f00c":["7ef0ff6650b175c4ff375418bb3aab9ffb86ec7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["7ef0ff6650b175c4ff375418bb3aab9ffb86ec7a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"7ef0ff6650b175c4ff375418bb3aab9ffb86ec7a":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}