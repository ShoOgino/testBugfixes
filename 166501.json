{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","commits":[{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"/dev/null","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"/dev/null","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"/dev/null","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"786a4d25ca958a1f315a9d6a74f0441fdafcd522","date":1305734256,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfo info : merge.segments) {\n      if (segmentInfos.indexOf(info) == -1) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce667c6d3400b22523701c549c0d35e26da8b46","date":1324405053,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","01e5948db9a07144112d2f08f28ca2e3cd880348"],"c19f985e36a65cc969e8e564fe337a0d41512075":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["c19f985e36a65cc969e8e564fe337a0d41512075"],"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["135621f3a0670a9394eb563224a3b76cc4dddc0f","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ce667c6d3400b22523701c549c0d35e26da8b46":["786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"45669a651c970812a680841b97a77cce06af559f":["bde51b089eb7f86171eb3406e38a274743f9b7ac","01e5948db9a07144112d2f08f28ca2e3cd880348"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c19f985e36a65cc969e8e564fe337a0d41512075"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"c19f985e36a65cc969e8e564fe337a0d41512075":["01e5948db9a07144112d2f08f28ca2e3cd880348","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["135621f3a0670a9394eb563224a3b76cc4dddc0f","786a4d25ca958a1f315a9d6a74f0441fdafcd522","45669a651c970812a680841b97a77cce06af559f"],"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","9ce667c6d3400b22523701c549c0d35e26da8b46"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c19f985e36a65cc969e8e564fe337a0d41512075","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"45669a651c970812a680841b97a77cce06af559f":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["45669a651c970812a680841b97a77cce06af559f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}