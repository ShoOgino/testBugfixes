{"path":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc.SweepableSlotAcc#registerSweepingAccs(SweepingCountSlotAcc).mjava","commits":[{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":0,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc.SweepableSlotAcc#registerSweepingAccs(SweepingCountSlotAcc).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Called by processors if they support sweeping. Implementations will often\n     * return self or null (the latter indicating that all necessary collection will\n     * be covered by the \"sweeping\" data structures registered with the specified\n     * baseSweepingAcc as a result of the call to this method).\n     *\n     * If an implementing instance chooses to replace itself with another {@link SlotAcc}, it must\n     * call {@link SweepingCountSlotAcc#registerMapping(SlotAcc, SlotAcc)} on the specified\n     * baseSweepingAcc to notify it of the mapping from original SlotAcc to the SlotAcc that should\n     * be used for purposes of read access. It is the responsibility of the specified {@link SweepingCountSlotAcc}\n     * to ensure proper placement/accessibility of the SlotAcc to be used for read access.\n     * \n     * The replacement SlotAcc registered via {@link SweepingCountSlotAcc#registerMapping(SlotAcc, SlotAcc)}\n     * will be responsible for output via its {@link SlotAcc#setValues(SimpleOrderedMap, int)} method.\n     * An implementer of this method may register such a replacement, and also return a non-null\n     * SlotAcc to be used for normal collection (via {@link FacetFieldProcessor#collectAcc}). In this case,\n     * the implementer should take care that the returned {@link SlotAcc} is different from the {@link SlotAcc}\n     * registered for the purpose of output -- with the former overriding {@link SlotAcc#setValues(SimpleOrderedMap, int)}\n     * as a no-op, to prevent setting duplicate values.\n     *\n     * @param baseSweepingAcc - never null, where the SlotAcc may register domains for sweep collection,\n     * and must register mappings of new read-access SlotAccs that result from this call.\n     * @return SlotAcc to be used for purpose of collection. If null then collect methods will\n     * never be called on this SlotAcc.\n     */\n    public T registerSweepingAccs(SweepingCountSlotAcc baseSweepingAcc);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}