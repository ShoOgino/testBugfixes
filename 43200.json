{"path":"solr/core/src/test/org/apache/solr/util/hll/BigEndianAscendingWordDeserializerTest#smokeTest64BitWord().mjava","commits":[{"id":"6faa211c4af605e3cf078a76d200c1dc348973f5","date":1437043657,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/BigEndianAscendingWordDeserializerTest#smokeTest64BitWord().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Smoke test using 64-bit short words and special word values.\n     */\n    @Test\n    public void smokeTest64BitWord() {\n        final BigEndianAscendingWordSerializer serializer =\n            new BigEndianAscendingWordSerializer(64/*wordLength*/,\n                                                 5/*wordCount*/,\n                                                 0/*bytePadding, arbitrary*/);\n\n        // Check that the sign bit is being preserved.\n        serializer.writeWord(-1L);\n        serializer.writeWord(-112894714L);\n\n        // Check \"special\" values\n        serializer.writeWord(0L);\n        serializer.writeWord(Long.MAX_VALUE);\n        serializer.writeWord(Long.MIN_VALUE);\n\n        final byte[] bytes = serializer.getBytes();\n\n        final BigEndianAscendingWordDeserializer deserializer =\n            new BigEndianAscendingWordDeserializer(64/*wordLength*/, 0/*bytePadding*/, bytes);\n\n        assertEquals(deserializer.totalWordCount(), 5/*wordCount*/);\n\n        assertEquals(deserializer.readWord(), -1L);\n        assertEquals(deserializer.readWord(), -112894714L);\n        assertEquals(deserializer.readWord(), 0L);\n        assertEquals(deserializer.readWord(), Long.MAX_VALUE);\n        assertEquals(deserializer.readWord(), Long.MIN_VALUE);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/BigEndianAscendingWordDeserializerTest#smokeTest64BitWord().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Smoke test using 64-bit short words and special word values.\n     */\n    @Test\n    public void smokeTest64BitWord() {\n        final BigEndianAscendingWordSerializer serializer =\n            new BigEndianAscendingWordSerializer(64/*wordLength*/,\n                                                 5/*wordCount*/,\n                                                 0/*bytePadding, arbitrary*/);\n\n        // Check that the sign bit is being preserved.\n        serializer.writeWord(-1L);\n        serializer.writeWord(-112894714L);\n\n        // Check \"special\" values\n        serializer.writeWord(0L);\n        serializer.writeWord(Long.MAX_VALUE);\n        serializer.writeWord(Long.MIN_VALUE);\n\n        final byte[] bytes = serializer.getBytes();\n\n        final BigEndianAscendingWordDeserializer deserializer =\n            new BigEndianAscendingWordDeserializer(64/*wordLength*/, 0/*bytePadding*/, bytes);\n\n        assertEquals(deserializer.totalWordCount(), 5/*wordCount*/);\n\n        assertEquals(deserializer.readWord(), -1L);\n        assertEquals(deserializer.readWord(), -112894714L);\n        assertEquals(deserializer.readWord(), 0L);\n        assertEquals(deserializer.readWord(), Long.MAX_VALUE);\n        assertEquals(deserializer.readWord(), Long.MIN_VALUE);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6faa211c4af605e3cf078a76d200c1dc348973f5"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6faa211c4af605e3cf078a76d200c1dc348973f5"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}