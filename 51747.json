{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#appendJson(StringBuilder,Metric[],String,String,String,String).mjava","commits":[{"id":"c35d3c01114129fff707f0777080210fa9deb2a7","date":1493219863,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#appendJson(StringBuilder,Metric[],String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+field+\"\\\"\");\n    buf.append(\",\\\"start\\\":\\\"\"+start+\"\\\"\");\n    buf.append(\",\\\"end\\\":\\\"\"+end+\"\\\"\");\n    buf.append(\",\\\"gap\\\":\\\"\"+gap+\"\\\"\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#appendJson(StringBuilder,Metric[],String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+field+\"\\\"\");\n    buf.append(\",\\\"start\\\":\\\"\"+start+\"\\\"\");\n    buf.append(\",\\\"end\\\":\\\"\"+end+\"\\\"\");\n    buf.append(\",\\\"gap\\\":\\\"\"+gap+\"\\\"\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ffe681f212e5073c69955b4ad22946794c84940","date":1560182863,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#appendJson(StringBuilder,Metric[],String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#appendJson(StringBuilder,Metric[],String,String,String,String).mjava","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n\n","sourceOld":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+field+\"\\\"\");\n    buf.append(\",\\\"start\\\":\\\"\"+start+\"\\\"\");\n    buf.append(\",\\\"end\\\":\\\"\"+end+\"\\\"\");\n    buf.append(\",\\\"gap\\\":\\\"\"+gap+\"\\\"\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"570664407cd3123a8039f1b4f2f6c6693bdaee31","date":1589893823,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#appendJson(StringBuilder,Metric[],String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#appendJson(StringBuilder,Metric[],String,String,String,String).mjava","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n\n","sourceOld":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics,\n                          String field,\n                          String start,\n                          String end,\n                          String gap) {\n    buf.append('\"');\n    buf.append(\"timeseries\");\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"range\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\").append(field).append('\"');\n    buf.append(\",\\\"start\\\":\\\"\").append(start).append('\"');\n    buf.append(\",\\\"end\\\":\\\"\").append(end).append('\"');\n    buf.append(\",\\\"gap\\\":\\\"\").append(gap).append('\"');\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        ++metricCount;\n      }\n    }\n    buf.append(\"}}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c35d3c01114129fff707f0777080210fa9deb2a7"],"c35d3c01114129fff707f0777080210fa9deb2a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2ffe681f212e5073c69955b4ad22946794c84940":["c35d3c01114129fff707f0777080210fa9deb2a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"570664407cd3123a8039f1b4f2f6c6693bdaee31":["2ffe681f212e5073c69955b4ad22946794c84940"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["570664407cd3123a8039f1b4f2f6c6693bdaee31"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"c35d3c01114129fff707f0777080210fa9deb2a7":["e9017cf144952056066919f1ebc7897ff9bd71b1","2ffe681f212e5073c69955b4ad22946794c84940"],"2ffe681f212e5073c69955b4ad22946794c84940":["570664407cd3123a8039f1b4f2f6c6693bdaee31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","c35d3c01114129fff707f0777080210fa9deb2a7"],"570664407cd3123a8039f1b4f2f6c6693bdaee31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}