{"path":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testMultiValuedDocValuesField().mjava","commits":[{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testMultiValuedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testMultiValuedIndexDocValuesField().mjava","sourceNew":"  public void testMultiValuedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    doc.add(f);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].perDocValues().docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testMultiValuedIndexDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    IndexDocValuesField f = new IndexDocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    doc.add(f);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].perDocValues().docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cac4d5fa6c305b94f6232a70bda07f096ad0348c","date":1323538980,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testMultiValuedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testMultiValuedDocValuesField().mjava","sourceNew":"  public void testMultiValuedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    doc.add(f);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testMultiValuedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    doc.add(f);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].perDocValues().docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testMultiValuedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testMultiValuedIndexDocValuesField().mjava","sourceNew":"  public void testMultiValuedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    doc.add(f);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testMultiValuedIndexDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    IndexDocValuesField f = new IndexDocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    doc.add(f);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].perDocValues().docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMultiValuedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testMultiValuedDocValuesField().mjava","sourceNew":"  public void testMultiValuedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    doc.add(f);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testMultiValuedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    doc.add(f);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cac4d5fa6c305b94f6232a70bda07f096ad0348c"]},"commit2Childs":{"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["cac4d5fa6c305b94f6232a70bda07f096ad0348c"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}