{"path":"solr/solrj/src/java/org/apache/noggit/JSONParser#readStringChars2(CharArr,int).mjava","commits":[{"id":"80931fa1f3b04650bde7b20e61b02063a7093ced","date":1333130683,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/noggit/JSONParser#readStringChars2(CharArr,int).mjava","pathOld":"/dev/null","sourceNew":"  // middle is the pointer to the middle of a buffer to start scanning for a non-string\n  // character ('\"' or \"/\").  start<=middle<end\n  // this should be faster for strings with fewer escapes, but probably slower for many escapes.\n  private void readStringChars2(CharArr arr, int middle) throws IOException {\n    for (;;) {\n      if (middle>=end) {\n        arr.write(buf,start,middle-start);\n        start=middle;\n        getMore();\n        middle=start;\n      }\n      int ch = buf[middle++];\n      if (ch=='\"') {\n        int len = middle-start-1;        \n        if (len>0) arr.write(buf,start,len);\n        start=middle;\n        return;\n      } else if (ch=='\\\\') {\n        int len = middle-start-1;\n        if (len>0) arr.write(buf,start,len);\n        start=middle;\n        arr.write(readEscapedChar());\n        middle=start;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8","date":1363620515,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/noggit/JSONParser#readStringChars2(CharArr,int).mjava","sourceNew":null,"sourceOld":"  // middle is the pointer to the middle of a buffer to start scanning for a non-string\n  // character ('\"' or \"/\").  start<=middle<end\n  // this should be faster for strings with fewer escapes, but probably slower for many escapes.\n  private void readStringChars2(CharArr arr, int middle) throws IOException {\n    for (;;) {\n      if (middle>=end) {\n        arr.write(buf,start,middle-start);\n        start=middle;\n        getMore();\n        middle=start;\n      }\n      int ch = buf[middle++];\n      if (ch=='\"') {\n        int len = middle-start-1;        \n        if (len>0) arr.write(buf,start,len);\n        start=middle;\n        return;\n      } else if (ch=='\\\\') {\n        int len = middle-start-1;\n        if (len>0) arr.write(buf,start,len);\n        start=middle;\n        arr.write(readEscapedChar());\n        middle=start;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80931fa1f3b04650bde7b20e61b02063a7093ced":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8"]},"commit2Childs":{"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"80931fa1f3b04650bde7b20e61b02063a7093ced":["4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}