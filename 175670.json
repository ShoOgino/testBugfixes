{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","commits":[{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(CharStream,Set[String]).mjava","sourceNew":"  /**\n   * @param source\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_40, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @param source\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(CharStream source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_40, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param source\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_40, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param source\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_40, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","sourceNew":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_40, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @param source\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_40, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0bf41419d452997826ec5f17684993377be77f49","date":1386629618,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","sourceNew":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_CURRENT, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_40, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","bugFix":["e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","sourceNew":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_CURRENT, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_40, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","sourceNew":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_CURRENT, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","sourceNew":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_CURRENT, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","sourceNew":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(Version.LUCENE_CURRENT, 16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8c6c25f6bab8e32b731127f3516a593af8a3305","date":1546972429,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#HTMLStripCharFilter(Reader,Set[String]).mjava","sourceNew":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param in Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader in, Set<String> escapedTags) {\n    this(in);\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new HTMLStripCharFilter over the provided Reader\n   * with the specified start and end tags.\n   * @param source Reader to strip html tags from.\n   * @param escapedTags Tags in this set (both start and end tags)\n   *  will not be filtered out.\n   */\n  public HTMLStripCharFilter(Reader source, Set<String> escapedTags) {\n    super(source);\n    this.zzReader = source;\n    if (null != escapedTags) {\n      for (String tag : escapedTags) {\n        if (tag.equalsIgnoreCase(\"BR\")) {\n          escapeBR = true;\n        } else if (tag.equalsIgnoreCase(\"SCRIPT\")) {\n          escapeSCRIPT = true;\n        } else if (tag.equalsIgnoreCase(\"STYLE\")) {\n          escapeSTYLE = true;\n        } else {\n          if (null == this.escapedTags) {\n            this.escapedTags = new CharArraySet(16, true);\n          }\n          this.escapedTags.add(tag);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"ff4227bb146f97aabae888091c19e48c88dbb0db":["0bf41419d452997826ec5f17684993377be77f49"],"0bf41419d452997826ec5f17684993377be77f49":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc706b1e03a539d44d99998108feb684bb44cbb2"],"b8c6c25f6bab8e32b731127f3516a593af8a3305":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc706b1e03a539d44d99998108feb684bb44cbb2"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","0bf41419d452997826ec5f17684993377be77f49"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8c6c25f6bab8e32b731127f3516a593af8a3305"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["0bf41419d452997826ec5f17684993377be77f49","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"0bf41419d452997826ec5f17684993377be77f49":["ff4227bb146f97aabae888091c19e48c88dbb0db","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"b8c6c25f6bab8e32b731127f3516a593af8a3305":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["b8c6c25f6bab8e32b731127f3516a593af8a3305"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}