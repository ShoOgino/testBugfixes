{"path":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#sortDocValues(int,Sorter.DocMap,BinaryDocValues).mjava","commits":[{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#sortDocValues(int,Sorter.DocMap,BinaryDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private SortingLeafReader.CachedBinaryDVs sortDocValues(int maxDoc, Sorter.DocMap sortMap, BinaryDocValues oldValues) throws IOException {\n    FixedBitSet docsWithField = new FixedBitSet(maxDoc);\n    BytesRef[] values = new BytesRef[maxDoc];\n    while (true) {\n      int docID = oldValues.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      int newDocID = sortMap.oldToNew(docID);\n      docsWithField.set(newDocID);\n      values[newDocID] = BytesRef.deepCopyOf(oldValues.binaryValue());\n    }\n    return new SortingLeafReader.CachedBinaryDVs(values, docsWithField);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#sortDocValues(int,Sorter.DocMap,BinaryDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private SortingLeafReader.CachedBinaryDVs sortDocValues(int maxDoc, Sorter.DocMap sortMap, BinaryDocValues oldValues) throws IOException {\n    FixedBitSet docsWithField = new FixedBitSet(maxDoc);\n    BytesRef[] values = new BytesRef[maxDoc];\n    while (true) {\n      int docID = oldValues.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      int newDocID = sortMap.oldToNew(docID);\n      docsWithField.set(newDocID);\n      values[newDocID] = BytesRef.deepCopyOf(oldValues.binaryValue());\n    }\n    return new SortingLeafReader.CachedBinaryDVs(values, docsWithField);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63","date":1599130480,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#sortDocValues(int,Sorter.DocMap,BinaryDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#sortDocValues(int,Sorter.DocMap,BinaryDocValues).mjava","sourceNew":"  static CachedBinaryDVs sortDocValues(int maxDoc, Sorter.DocMap sortMap, BinaryDocValues oldValues) throws IOException {\n    FixedBitSet docsWithField = new FixedBitSet(maxDoc);\n    BytesRef[] values = new BytesRef[maxDoc];\n    while (true) {\n      int docID = oldValues.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      int newDocID = sortMap.oldToNew(docID);\n      docsWithField.set(newDocID);\n      values[newDocID] = BytesRef.deepCopyOf(oldValues.binaryValue());\n    }\n    return new CachedBinaryDVs(values, docsWithField);\n  }\n\n","sourceOld":"  private SortingLeafReader.CachedBinaryDVs sortDocValues(int maxDoc, Sorter.DocMap sortMap, BinaryDocValues oldValues) throws IOException {\n    FixedBitSet docsWithField = new FixedBitSet(maxDoc);\n    BytesRef[] values = new BytesRef[maxDoc];\n    while (true) {\n      int docID = oldValues.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      int newDocID = sortMap.oldToNew(docID);\n      docsWithField.set(newDocID);\n      values[newDocID] = BytesRef.deepCopyOf(oldValues.binaryValue());\n    }\n    return new SortingLeafReader.CachedBinaryDVs(values, docsWithField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46a689927fad636f7324c6166ffe3df0b93d7ce6","date":1600780253,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter#sortDocValues(int,Sorter.DocMap,BinaryDocValues).mjava","sourceNew":null,"sourceOld":"  static CachedBinaryDVs sortDocValues(int maxDoc, Sorter.DocMap sortMap, BinaryDocValues oldValues) throws IOException {\n    FixedBitSet docsWithField = new FixedBitSet(maxDoc);\n    BytesRef[] values = new BytesRef[maxDoc];\n    while (true) {\n      int docID = oldValues.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      int newDocID = sortMap.oldToNew(docID);\n      docsWithField.set(newDocID);\n      values[newDocID] = BytesRef.deepCopyOf(oldValues.binaryValue());\n    }\n    return new CachedBinaryDVs(values, docsWithField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"46a689927fad636f7324c6166ffe3df0b93d7ce6":["19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["46a689927fad636f7324c6166ffe3df0b93d7ce6"]},"commit2Childs":{"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"46a689927fad636f7324c6166ffe3df0b93d7ce6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["46a689927fad636f7324c6166ffe3df0b93d7ce6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}