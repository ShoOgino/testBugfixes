{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n      \n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n      \n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n      \n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir, true);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n      Directory dir = newDirectory();\n\n      // add one document & close writer\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDoc(writer);\n      writer.close();\n\n      // now open reader:\n      IndexReader reader = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n      // now open index for create:\n      writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n      addDoc(writer);\n      writer.close();\n\n      assertEquals(\"should be one document\", reader.numDocs(), 1);\n      IndexReader reader2 = IndexReader.open(dir);\n      assertEquals(\"should be one document\", reader2.numDocs(), 1);\n      reader.close();\n      reader2.close();\n\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["f2c5f0cb44df114db4228c8f77861714b5cabaea","962d04139994fce5193143ef35615499a9a96d78"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["1f653cfcf159baeaafe5d01682a911e95bba4012","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","a3776dccca01c11e7046323cfad46a3b4a471233","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"962d04139994fce5193143ef35615499a9a96d78":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","962d04139994fce5193143ef35615499a9a96d78"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}