{"path":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#getShard(int,String,ClusterState).mjava","commits":[{"id":"3f767f8c99eaedb984df754fe61f21c5de260f94","date":1344105153,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#getShard(int,String,ClusterState).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#getShard(int,String,CloudState).mjava","sourceNew":"  private String getShard(int hash, String collection, ClusterState clusterState) {\n    // ranges should be part of the cloud state and eventually gotten from zk\n\n    // get the shard names\n    return clusterState.getShard(hash, collection);\n  }\n\n","sourceOld":"  private String getShard(int hash, String collection, CloudState cloudState) {\n    // ranges should be part of the cloud state and eventually gotten from zk\n\n    // get the shard names\n    return cloudState.getShard(hash, collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#getShard(int,String,ClusterState).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#getShard(int,String,CloudState).mjava","sourceNew":"  private String getShard(int hash, String collection, ClusterState clusterState) {\n    // ranges should be part of the cloud state and eventually gotten from zk\n\n    // get the shard names\n    return clusterState.getShard(hash, collection);\n  }\n\n","sourceOld":"  private String getShard(int hash, String collection, CloudState cloudState) {\n    // ranges should be part of the cloud state and eventually gotten from zk\n\n    // get the shard names\n    return cloudState.getShard(hash, collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#getShard(int,String,ClusterState).mjava","pathOld":"/dev/null","sourceNew":"  private String getShard(int hash, String collection, ClusterState clusterState) {\n    // ranges should be part of the cloud state and eventually gotten from zk\n\n    // get the shard names\n    return clusterState.getShard(hash, collection);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7754464847b06ced605515bd48219280ede29e9","date":1354586462,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#getShard(int,String,ClusterState).mjava","sourceNew":null,"sourceOld":"  private String getShard(int hash, String collection, ClusterState clusterState) {\n    // ranges should be part of the cloud state and eventually gotten from zk\n\n    // get the shard names\n    return clusterState.getShard(hash, collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#getShard(int,String,ClusterState).mjava","sourceNew":null,"sourceOld":"  private String getShard(int hash, String collection, ClusterState clusterState) {\n    // ranges should be part of the cloud state and eventually gotten from zk\n\n    // get the shard names\n    return clusterState.getShard(hash, collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f767f8c99eaedb984df754fe61f21c5de260f94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7754464847b06ced605515bd48219280ede29e9":["3f767f8c99eaedb984df754fe61f21c5de260f94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["3f767f8c99eaedb984df754fe61f21c5de260f94","e7754464847b06ced605515bd48219280ede29e9"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3f767f8c99eaedb984df754fe61f21c5de260f94"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3f767f8c99eaedb984df754fe61f21c5de260f94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7754464847b06ced605515bd48219280ede29e9"]},"commit2Childs":{"3f767f8c99eaedb984df754fe61f21c5de260f94":["e7754464847b06ced605515bd48219280ede29e9","407687e67faf6e1f02a211ca078d8e3eed631027","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"e7754464847b06ced605515bd48219280ede29e9":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f767f8c99eaedb984df754fe61f21c5de260f94","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}