{"path":"lucene/core/src/java/org/apache/lucene/index/FlushPolicy#onUpdate(DocumentsWriterFlushControl,ThreadState).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FlushPolicy#onUpdate(DocumentsWriterFlushControl,ThreadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FlushPolicy#onUpdate(DocumentsWriterFlushControl,ThreadState).mjava","sourceNew":"  /**\n   * Called for each document update on the given {@link ThreadState}'s\n   * {@link DocumentsWriterPerThread}.\n   * <p>\n   * Note: This method is called  synchronized on the given\n   * {@link DocumentsWriterFlushControl} and it is guaranteed that the calling\n   * thread holds the lock on the given {@link ThreadState}\n   */\n  public void onUpdate(DocumentsWriterFlushControl control, ThreadState state) {\n    onInsert(control, state);\n    if (!state.flushPending) {\n      onDelete(control, state);\n    }\n  }\n\n","sourceOld":"  /**\n   * Called for each document update on the given {@link ThreadState}'s\n   * {@link DocumentsWriterPerThread}.\n   * <p>\n   * Note: This method is called  synchronized on the given\n   * {@link DocumentsWriterFlushControl} and it is guaranteed that the calling\n   * thread holds the lock on the given {@link ThreadState}\n   */\n  public void onUpdate(DocumentsWriterFlushControl control, ThreadState state) {\n    onInsert(control, state);\n    if (!state.flushPending) {\n      onDelete(control, state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600","date":1329061481,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FlushPolicy#onUpdate(DocumentsWriterFlushControl,ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FlushPolicy#onUpdate(DocumentsWriterFlushControl,ThreadState).mjava","sourceNew":"  /**\n   * Called for each document update on the given {@link ThreadState}'s\n   * {@link DocumentsWriterPerThread}.\n   * <p>\n   * Note: This method is called  synchronized on the given\n   * {@link DocumentsWriterFlushControl} and it is guaranteed that the calling\n   * thread holds the lock on the given {@link ThreadState}\n   */\n  public void onUpdate(DocumentsWriterFlushControl control, ThreadState state) {\n    onInsert(control, state);\n    onDelete(control, state);\n  }\n\n","sourceOld":"  /**\n   * Called for each document update on the given {@link ThreadState}'s\n   * {@link DocumentsWriterPerThread}.\n   * <p>\n   * Note: This method is called  synchronized on the given\n   * {@link DocumentsWriterFlushControl} and it is guaranteed that the calling\n   * thread holds the lock on the given {@link ThreadState}\n   */\n  public void onUpdate(DocumentsWriterFlushControl control, ThreadState state) {\n    onInsert(control, state);\n    if (!state.flushPending) {\n      onDelete(control, state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FlushPolicy#onUpdate(DocumentsWriterFlushControl,DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FlushPolicy#onUpdate(DocumentsWriterFlushControl,ThreadState).mjava","sourceNew":"  /**\n   * Called for each document update on the given {@link DocumentsWriterPerThread}'s\n   * {@link DocumentsWriterPerThread}.\n   * <p>\n   * Note: This method is called  synchronized on the given\n   * {@link DocumentsWriterFlushControl} and it is guaranteed that the calling\n   * thread holds the lock on the given {@link DocumentsWriterPerThread}\n   */\n  public void onUpdate(DocumentsWriterFlushControl control, DocumentsWriterPerThread perThread) {\n    onInsert(control, perThread);\n    onDelete(control, perThread);\n  }\n\n","sourceOld":"  /**\n   * Called for each document update on the given {@link ThreadState}'s\n   * {@link DocumentsWriterPerThread}.\n   * <p>\n   * Note: This method is called  synchronized on the given\n   * {@link DocumentsWriterFlushControl} and it is guaranteed that the calling\n   * thread holds the lock on the given {@link ThreadState}\n   */\n  public void onUpdate(DocumentsWriterFlushControl control, ThreadState state) {\n    onInsert(control, state);\n    onDelete(control, state);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["264935965977b4a9e2f3920420647072c9c49176"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}