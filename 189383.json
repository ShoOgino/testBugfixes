{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link SpanQuery}.\n   *\n   * This is only called if the underlying last {@link Spans#nextStartPosition()} for the\n   * match indicated a valid start position.\n   *\n   *\n   * @param spans The {@link Spans} instance, positioned at the spot to check\n   *\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see Spans#nextDoc()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link SpanQuery}.\n   *\n   * This is only called if the underlying last {@link Spans#nextStartPosition()} for the\n   * match indicated a valid start position.\n   *\n   *\n   * @param spans The {@link Spans} instance, positioned at the spot to check\n   *\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see Spans#nextDoc()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2","date":1432114286,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans,SpanCollector).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link SpanQuery}.\n   *\n   * This is only called if the underlying last {@link Spans#nextStartPosition()} for the\n   * match indicated a valid start position.\n   *\n   *\n   * @param spans The {@link Spans} instance, positioned at the spot to check\n   * @param collector the {@link SpanCollector} associated with the Spans\n   *\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see Spans#nextDoc()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans, SpanCollector collector) throws IOException;\n\n","sourceOld":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link SpanQuery}.\n   *\n   * This is only called if the underlying last {@link Spans#nextStartPosition()} for the\n   * match indicated a valid start position.\n   *\n   *\n   * @param spans The {@link Spans} instance, positioned at the spot to check\n   *\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see Spans#nextDoc()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29aea3139c4326c0501d75d51059855463220279","date":1433952060,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans,SpanCollector).mjava","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link SpanQuery}.\n   *\n   * This is only called if the underlying last {@link Spans#nextStartPosition()} for the\n   * match indicated a valid start position.\n   *\n   * @param spans The {@link Spans} instance, positioned at the spot to check\n   *\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see Spans#nextDoc()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link SpanQuery}.\n   *\n   * This is only called if the underlying last {@link Spans#nextStartPosition()} for the\n   * match indicated a valid start position.\n   *\n   * @param spans The {@link Spans} instance, positioned at the spot to check\n   * @param collector the {@link SpanCollector} associated with the Spans\n   *\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see Spans#nextDoc()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans, SpanCollector collector) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29aea3139c4326c0501d75d51059855463220279":["8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fab172655716b96f7e42376116235017a922de3a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29aea3139c4326c0501d75d51059855463220279"]},"commit2Childs":{"29aea3139c4326c0501d75d51059855463220279":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2":["29aea3139c4326c0501d75d51059855463220279"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}