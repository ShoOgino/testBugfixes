{"path":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#testSolrStopWordsUsedInCarrot2Clustering().mjava","commits":[{"id":"f9fddef147e9702c85a51239935df11e5338bfbf","date":1337590651,"type":1,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#testSolrStopWordsUsedInCarrot2Clustering().mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#solrStopWordsUsedInCarrot2Clustering().mjava","sourceNew":"  @Test\n  public void testSolrStopWordsUsedInCarrot2Clustering() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n    \"online,solrownstopword\");\n\n    // \"solrownstopword\" is in stopwords.txt, so we're expecting\n    // only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(\"lexical-resource-check\"), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","sourceOld":"  @Test\n  public void solrStopWordsUsedInCarrot2Clustering() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n    \"online,solrownstopword\");\n\n    // \"solrownstopword\" is in stopwords.txt, so we're expecting\n    // only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(\"lexical-resource-check\"), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#testSolrStopWordsUsedInCarrot2Clustering().mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#solrStopWordsUsedInCarrot2Clustering().mjava","sourceNew":"  @Test\n  public void testSolrStopWordsUsedInCarrot2Clustering() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n    \"online,solrownstopword\");\n\n    // \"solrownstopword\" is in stopwords.txt, so we're expecting\n    // only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(\"lexical-resource-check\"), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","sourceOld":"  @Test\n  public void solrStopWordsUsedInCarrot2Clustering() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n    \"online,solrownstopword\");\n\n    // \"solrownstopword\" is in stopwords.txt, so we're expecting\n    // only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(\"lexical-resource-check\"), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f","date":1478271720,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#testSolrStopWordsUsedInCarrot2Clustering().mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#testSolrStopWordsUsedInCarrot2Clustering().mjava","sourceNew":"  @Test\n  public void testSolrStopWordsUsedInCarrot2Clustering() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n    \"online,solrownstopword\");\n\n    // \"solrownstopword\" is in stopwords.txt, so we're expecting\n    // only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(\"lexical-resource-check\"), 1, params);\n    assertEquals(getLabels(clusters.get(0)), Collections.singletonList(\"online\"));\n  }\n\n","sourceOld":"  @Test\n  public void testSolrStopWordsUsedInCarrot2Clustering() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n    \"online,solrownstopword\");\n\n    // \"solrownstopword\" is in stopwords.txt, so we're expecting\n    // only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(\"lexical-resource-check\"), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#testSolrStopWordsUsedInCarrot2Clustering().mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#testSolrStopWordsUsedInCarrot2Clustering().mjava","sourceNew":"  @Test\n  public void testSolrStopWordsUsedInCarrot2Clustering() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n    \"online,solrownstopword\");\n\n    // \"solrownstopword\" is in stopwords.txt, so we're expecting\n    // only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(\"lexical-resource-check\"), 1, params);\n    assertEquals(getLabels(clusters.get(0)), Collections.singletonList(\"online\"));\n  }\n\n","sourceOld":"  @Test\n  public void testSolrStopWordsUsedInCarrot2Clustering() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n    \"online,solrownstopword\");\n\n    // \"solrownstopword\" is in stopwords.txt, so we're expecting\n    // only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(\"lexical-resource-check\"), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f":["f9fddef147e9702c85a51239935df11e5338bfbf"],"f9fddef147e9702c85a51239935df11e5338bfbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["f9fddef147e9702c85a51239935df11e5338bfbf","7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9fddef147e9702c85a51239935df11e5338bfbf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f"]},"commit2Childs":{"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f9fddef147e9702c85a51239935df11e5338bfbf":["7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f","199dfa410f1fdbfd3294106b04096cce5ed34b21","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9fddef147e9702c85a51239935df11e5338bfbf","ef0d8a69209261514c5739c770bba706c2308450"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}