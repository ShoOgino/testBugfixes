{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n    docData.setBody(English.longToEnglish(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","sourceOld":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n    docData.setBody(English.longToEnglish(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n    docData.setBody(English.longToEnglish(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","sourceOld":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n    docData.setBody(English.longToEnglish(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n    docData.setBody(English.longToEnglish(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","sourceOld":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n    docData.setBody(English.longToEnglish(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98e05e2d6d9a7ff1bbbb0f8706b70c2bf7537b13","date":1325610499,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n\n    docData.setBody(rnbf.format(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","sourceOld":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n    docData.setBody(English.longToEnglish(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/LongToEnglishContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n\n    docData.setBody(rnbf.format(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","sourceOld":"  @Override\n  public synchronized DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    docData.clear();\n    // store the current counter to avoid synchronization later on\n    long curCounter;\n    synchronized (this) {\n      curCounter = counter;\n      if (counter == Long.MAX_VALUE){\n        counter = Long.MIN_VALUE;//loop around\n      } else {\n        ++counter;\n      }\n    }    \n\n    docData.setBody(rnbf.format(curCounter));\n    docData.setName(\"doc_\" + String.valueOf(curCounter));\n    docData.setTitle(\"title_\" + String.valueOf(curCounter));\n    docData.setDate(new Date());\n    return docData;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["98e05e2d6d9a7ff1bbbb0f8706b70c2bf7537b13"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"98e05e2d6d9a7ff1bbbb0f8706b70c2bf7537b13":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","98e05e2d6d9a7ff1bbbb0f8706b70c2bf7537b13","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98e05e2d6d9a7ff1bbbb0f8706b70c2bf7537b13":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}