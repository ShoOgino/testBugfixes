{"path":"solr/core/src/java/org/apache/solr/schema/FieldType#setMultiTermAnalyzer(Analyzer).mjava","commits":[{"id":"f8d5405ac4f2510f9f83e07236792d1056c19640","date":1322235986,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#setMultiTermAnalyzer(Analyzer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the Analyzer to be used when querying fields of this type.\n   *\n   * <p>\n   *\n   * Subclasses that override this method need to ensure the behavior\n   * of the analyzer is consistent with the implementation of toInternal.\n   * </p>\n   *\n   * @see #toInternal\n   * @see #setAnalyzer\n   * @see #getQueryAnalyzer\n   */\n  public void setMultiTermAnalyzer(Analyzer analyzer) {\n    SolrException e = new SolrException\n      (ErrorCode.SERVER_ERROR,\n       \"FieldType: \" + this.getClass().getSimpleName() +\n       \" (\" + typeName + \") does not support specifying an analyzer\");\n    SolrException.logOnce(log,null,e);\n    throw e;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15795b2193a8dd132f374975d4243687bee9351","date":1322413478,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldType#setMultiTermAnalyzer(Analyzer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the Analyzer to be used when querying fields of this type.\n   *\n   * <p>\n   *\n   * Subclasses that override this method need to ensure the behavior\n   * of the analyzer is consistent with the implementation of toInternal.\n   * </p>\n   *\n   * @see #toInternal\n   * @see #setAnalyzer\n   * @see #getQueryAnalyzer\n   */\n  public void setMultiTermAnalyzer(Analyzer analyzer) {\n    SolrException e = new SolrException\n      (ErrorCode.SERVER_ERROR,\n       \"FieldType: \" + this.getClass().getSimpleName() +\n       \" (\" + typeName + \") does not support specifying an analyzer\");\n    SolrException.logOnce(log,null,e);\n    throw e;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8d5405ac4f2510f9f83e07236792d1056c19640":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f15795b2193a8dd132f374975d4243687bee9351":["f8d5405ac4f2510f9f83e07236792d1056c19640"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f15795b2193a8dd132f374975d4243687bee9351"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f8d5405ac4f2510f9f83e07236792d1056c19640"],"f8d5405ac4f2510f9f83e07236792d1056c19640":["f15795b2193a8dd132f374975d4243687bee9351"],"f15795b2193a8dd132f374975d4243687bee9351":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}