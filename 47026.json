{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    IndexWriter writer = new IndexWriter(runData.getDirectory(),\n        new IndexWriterConfig(Version.LUCENE_CURRENT, runData.getAnalyzer())\n            .setIndexDeletionPolicy(CreateIndexTask.getIndexDeletionPolicy(config))\n            .setIndexCommit(ic));\n    CreateIndexTask.setIndexWriterConfig(writer, config);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    IndexWriter writer = new IndexWriter(runData.getDirectory(),\n        new IndexWriterConfig(Version.LUCENE_CURRENT, runData.getAnalyzer())\n            .setIndexDeletionPolicy(CreateIndexTask.getIndexDeletionPolicy(config))\n            .setIndexCommit(ic));\n    CreateIndexTask.setIndexWriterConfig(writer, config);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72ba12f3c327c892d69cfdd5ac98ec5cfc05ce10","date":1288892232,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    IndexWriter writer = new IndexWriter(runData.getDirectory(),\n        new IndexWriterConfig(Version.LUCENE_CURRENT, runData.getAnalyzer())\n            .setIndexDeletionPolicy(CreateIndexTask.getIndexDeletionPolicy(config))\n            .setIndexCommit(ic));\n    CreateIndexTask.setIndexWriterConfig(writer, config);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    IndexWriter writer = new IndexWriter(runData.getDirectory(),\n        new IndexWriterConfig(Version.LUCENE_CURRENT, runData.getAnalyzer())\n            .setIndexDeletionPolicy(CreateIndexTask.getIndexDeletionPolicy(config))\n            .setIndexCommit(ic));\n    CreateIndexTask.setIndexWriterConfig(writer, config);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    IndexWriter writer = new IndexWriter(runData.getDirectory(),\n        new IndexWriterConfig(Version.LUCENE_CURRENT, runData.getAnalyzer())\n            .setIndexDeletionPolicy(CreateIndexTask.getIndexDeletionPolicy(config))\n            .setIndexCommit(ic));\n    CreateIndexTask.setIndexWriterConfig(writer, config);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    PerfRunData runData = getRunData();\n    Config config = runData.getConfig();\n    final IndexCommit ic;\n    if (commitUserData != null) {\n      ic = OpenReaderTask.findIndexCommit(runData.getDirectory(), commitUserData);\n    } else {\n      ic = null;\n    }\n    \n    final IndexWriter writer = CreateIndexTask.configureWriter(config, runData, OpenMode.APPEND, ic);\n    runData.setIndexWriter(writer);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["85a883878c0af761245ab048babc63d099f835f3","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["72ba12f3c327c892d69cfdd5ac98ec5cfc05ce10"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["9454a6510e2db155fb01faa5c049b06ece95fab9","72ba12f3c327c892d69cfdd5ac98ec5cfc05ce10"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","72ba12f3c327c892d69cfdd5ac98ec5cfc05ce10"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"72ba12f3c327c892d69cfdd5ac98ec5cfc05ce10":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["70ad682703b8585f5d0a637efec044d57ec05efb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"72ba12f3c327c892d69cfdd5ac98ec5cfc05ce10":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","72ba12f3c327c892d69cfdd5ac98ec5cfc05ce10"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}