{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testSegmentCommitInfoId().mjava","commits":[{"id":"14654be3f7a82c9a3c52169e365baa55bfe64f66","date":1587212697,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testSegmentCommitInfoId().mjava","pathOld":"/dev/null","sourceNew":"  public void testSegmentCommitInfoId() throws IOException {\n    try (Directory dir = newDirectory();\n         IndexWriter writer = new IndexWriter(dir,\n             new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"num\", 1));\n      doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n      writer.addDocument(doc);\n      doc = new Document();\n      doc.add(new NumericDocValuesField(\"num\", 1));\n      doc.add(new StringField(\"id\", \"2\", Field.Store.NO));\n      writer.addDocument(doc);\n      writer.commit();\n      SegmentInfos segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n      byte[] id = segmentCommitInfos.info(0).getId();\n      byte[] segInfoId = segmentCommitInfos.info(0).info.getId();\n\n      writer.updateNumericDocValue(new Term(\"id\", \"1\"), \"num\", 2);\n      writer.commit();\n      segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n      assertEquals(1, segmentCommitInfos.size());\n      assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n      assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n      id = segmentCommitInfos.info(0).getId();\n      writer.addDocument(new Document()); // second segment\n      writer.commit();\n      segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n      assertEquals(2, segmentCommitInfos.size());\n      assertEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n      assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n\n      doc = new Document();\n      doc.add(new NumericDocValuesField(\"num\", 5));\n      doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"1\"), doc);\n      writer.commit();\n      segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n      assertEquals(3, segmentCommitInfos.size());\n      assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n      assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n      writer.close();\n      try (Directory dir2 = newDirectory();\n           IndexWriter writer2 = new IndexWriter(dir2,\n               new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n        writer2.addIndexes(dir);\n        writer2.commit();\n        SegmentInfos infos2 = SegmentInfos.readLatestCommit(dir2);\n        assertEquals(infos2.size(), segmentCommitInfos.size());\n        for (int i = 0; i < infos2.size(); i++) {\n          assertEquals(StringHelper.idToString(infos2.info(i).getId()), StringHelper.idToString(segmentCommitInfos.info(i).getId()));\n          assertEquals(StringHelper.idToString(infos2.info(i).info.getId()), StringHelper.idToString(segmentCommitInfos.info(i).info.getId()));\n        }\n      }\n    }\n\n    Set<String> ids = new HashSet<>();\n    for (int i = 0; i < 2; i++) {\n      try (Directory dir = newDirectory();\n           IndexWriter writer = new IndexWriter(dir,\n               new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n        Document doc = new Document();\n        doc.add(new NumericDocValuesField(\"num\", 1));\n        doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n        writer.addDocument(doc);\n        writer.commit();\n        SegmentInfos segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        String id = StringHelper.idToString(segmentCommitInfos.info(0).getId());\n        assertTrue(ids.add(id));\n        writer.updateNumericDocValue(new Term(\"id\", \"1\"), \"num\", 2);\n        writer.commit();\n        segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        id = StringHelper.idToString(segmentCommitInfos.info(0).getId());\n        assertTrue(ids.add(id));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ba89792ceb38876017e50ea903a444f441d4c06","date":1587213903,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testSegmentCommitInfoId().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testSegmentCommitInfoId().mjava","sourceNew":"  public void testSegmentCommitInfoId() throws IOException {\n    try (Directory dir = newDirectory()) {\n      SegmentInfos segmentCommitInfos;\n      try (IndexWriter writer = new IndexWriter(dir,\n          new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n        Document doc = new Document();\n        doc.add(new NumericDocValuesField(\"num\", 1));\n        doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n        writer.addDocument(doc);\n        doc = new Document();\n        doc.add(new NumericDocValuesField(\"num\", 1));\n        doc.add(new StringField(\"id\", \"2\", Field.Store.NO));\n        writer.addDocument(doc);\n        writer.commit();\n        segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        byte[] id = segmentCommitInfos.info(0).getId();\n        byte[] segInfoId = segmentCommitInfos.info(0).info.getId();\n\n        writer.updateNumericDocValue(new Term(\"id\", \"1\"), \"num\", 2);\n        writer.commit();\n        segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        assertEquals(1, segmentCommitInfos.size());\n        assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n        assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n        id = segmentCommitInfos.info(0).getId();\n        writer.addDocument(new Document()); // second segment\n        writer.commit();\n        segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        assertEquals(2, segmentCommitInfos.size());\n        assertEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n        assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n\n        doc = new Document();\n        doc.add(new NumericDocValuesField(\"num\", 5));\n        doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n        writer.updateDocument(new Term(\"id\", \"1\"), doc);\n        writer.commit();\n        segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        assertEquals(3, segmentCommitInfos.size());\n        assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n        assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n      }\n\n      try (Directory dir2 = newDirectory();\n           IndexWriter writer2 = new IndexWriter(dir2,\n               new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n        writer2.addIndexes(dir);\n        writer2.commit();\n        SegmentInfos infos2 = SegmentInfos.readLatestCommit(dir2);\n        assertEquals(infos2.size(), segmentCommitInfos.size());\n        for (int i = 0; i < infos2.size(); i++) {\n          assertEquals(StringHelper.idToString(infos2.info(i).getId()), StringHelper.idToString(segmentCommitInfos.info(i).getId()));\n          assertEquals(StringHelper.idToString(infos2.info(i).info.getId()), StringHelper.idToString(segmentCommitInfos.info(i).info.getId()));\n        }\n      }\n    }\n\n    Set<String> ids = new HashSet<>();\n    for (int i = 0; i < 2; i++) {\n      try (Directory dir = newDirectory();\n           IndexWriter writer = new IndexWriter(dir,\n               new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n        Document doc = new Document();\n        doc.add(new NumericDocValuesField(\"num\", 1));\n        doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n        writer.addDocument(doc);\n        writer.commit();\n        SegmentInfos segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        String id = StringHelper.idToString(segmentCommitInfos.info(0).getId());\n        assertTrue(ids.add(id));\n        writer.updateNumericDocValue(new Term(\"id\", \"1\"), \"num\", 2);\n        writer.commit();\n        segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        id = StringHelper.idToString(segmentCommitInfos.info(0).getId());\n        assertTrue(ids.add(id));\n      }\n    }\n  }\n\n","sourceOld":"  public void testSegmentCommitInfoId() throws IOException {\n    try (Directory dir = newDirectory();\n         IndexWriter writer = new IndexWriter(dir,\n             new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"num\", 1));\n      doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n      writer.addDocument(doc);\n      doc = new Document();\n      doc.add(new NumericDocValuesField(\"num\", 1));\n      doc.add(new StringField(\"id\", \"2\", Field.Store.NO));\n      writer.addDocument(doc);\n      writer.commit();\n      SegmentInfos segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n      byte[] id = segmentCommitInfos.info(0).getId();\n      byte[] segInfoId = segmentCommitInfos.info(0).info.getId();\n\n      writer.updateNumericDocValue(new Term(\"id\", \"1\"), \"num\", 2);\n      writer.commit();\n      segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n      assertEquals(1, segmentCommitInfos.size());\n      assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n      assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n      id = segmentCommitInfos.info(0).getId();\n      writer.addDocument(new Document()); // second segment\n      writer.commit();\n      segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n      assertEquals(2, segmentCommitInfos.size());\n      assertEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n      assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n\n      doc = new Document();\n      doc.add(new NumericDocValuesField(\"num\", 5));\n      doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"1\"), doc);\n      writer.commit();\n      segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n      assertEquals(3, segmentCommitInfos.size());\n      assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(segmentCommitInfos.info(0).getId()));\n      assertEquals(StringHelper.idToString(segInfoId), StringHelper.idToString(segmentCommitInfos.info(0).info.getId()));\n      writer.close();\n      try (Directory dir2 = newDirectory();\n           IndexWriter writer2 = new IndexWriter(dir2,\n               new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n        writer2.addIndexes(dir);\n        writer2.commit();\n        SegmentInfos infos2 = SegmentInfos.readLatestCommit(dir2);\n        assertEquals(infos2.size(), segmentCommitInfos.size());\n        for (int i = 0; i < infos2.size(); i++) {\n          assertEquals(StringHelper.idToString(infos2.info(i).getId()), StringHelper.idToString(segmentCommitInfos.info(i).getId()));\n          assertEquals(StringHelper.idToString(infos2.info(i).info.getId()), StringHelper.idToString(segmentCommitInfos.info(i).info.getId()));\n        }\n      }\n    }\n\n    Set<String> ids = new HashSet<>();\n    for (int i = 0; i < 2; i++) {\n      try (Directory dir = newDirectory();\n           IndexWriter writer = new IndexWriter(dir,\n               new IndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))) {\n        Document doc = new Document();\n        doc.add(new NumericDocValuesField(\"num\", 1));\n        doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n        writer.addDocument(doc);\n        writer.commit();\n        SegmentInfos segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        String id = StringHelper.idToString(segmentCommitInfos.info(0).getId());\n        assertTrue(ids.add(id));\n        writer.updateNumericDocValue(new Term(\"id\", \"1\"), \"num\", 2);\n        writer.commit();\n        segmentCommitInfos = SegmentInfos.readLatestCommit(dir);\n        id = StringHelper.idToString(segmentCommitInfos.info(0).getId());\n        assertTrue(ids.add(id));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14654be3f7a82c9a3c52169e365baa55bfe64f66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ba89792ceb38876017e50ea903a444f441d4c06":["14654be3f7a82c9a3c52169e365baa55bfe64f66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ba89792ceb38876017e50ea903a444f441d4c06"]},"commit2Childs":{"14654be3f7a82c9a3c52169e365baa55bfe64f66":["5ba89792ceb38876017e50ea903a444f441d4c06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["14654be3f7a82c9a3c52169e365baa55bfe64f66"],"5ba89792ceb38876017e50ea903a444f441d4c06":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}