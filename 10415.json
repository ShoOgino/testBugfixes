{"path":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#activeClusterShape(int,int).mjava","commits":[{"id":"3e2d1ac454d3a72f3de14ffff4d77c41de1135f0","date":1536617912,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#activeClusterShape(int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and active replicas\n   */\n  public static CollectionStatePredicate activeClusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getActiveSlices().size() != expectedShards)\n        return false;\n      if (compareActiveReplicaCountsForShards(expectedReplicas, liveNodes, collectionState)) return false;\n      return true;\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#activeClusterShape(int,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#activeClusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and active replicas\n   */\n  public static CollectionStatePredicate activeClusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      log.info(\"active slice count: \" + collectionState.getActiveSlices().size() + \" expected:\" + expectedShards);\n      if (collectionState.getActiveSlices().size() != expectedShards)\n        return false;\n      if (compareActiveReplicaCountsForShards(expectedReplicas, liveNodes, collectionState)) return true;\n      return false;\n    };\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and active replicas\n   */\n  public static CollectionStatePredicate activeClusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getActiveSlices().size() != expectedShards)\n        return false;\n      if (compareActiveReplicaCountsForShards(expectedReplicas, liveNodes, collectionState)) return false;\n      return true;\n    };\n  }\n\n","bugFix":["3e2d1ac454d3a72f3de14ffff4d77c41de1135f0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1edcb08221b33c52c3b24183d470c163dc8df4c","date":1566966875,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#activeClusterShape(int,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#activeClusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and active replicas\n   */\n  public static CollectionStatePredicate activeClusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      log.info(\"active slice count: \" + collectionState.getActiveSlices().size() + \" expected:\" + expectedShards);\n      if (collectionState.getActiveSlices().size() != expectedShards)\n        return false;\n      return compareActiveReplicaCountsForShards(expectedReplicas, liveNodes, collectionState);\n    };\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and active replicas\n   */\n  public static CollectionStatePredicate activeClusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      log.info(\"active slice count: \" + collectionState.getActiveSlices().size() + \" expected:\" + expectedShards);\n      if (collectionState.getActiveSlices().size() != expectedShards)\n        return false;\n      if (compareActiveReplicaCountsForShards(expectedReplicas, liveNodes, collectionState)) return true;\n      return false;\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#activeClusterShape(int,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase#activeClusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and active replicas\n   */\n  public static CollectionStatePredicate activeClusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (log.isInfoEnabled()) {\n        log.info(\"active slice count: {} expected: {}\", collectionState.getActiveSlices().size(), expectedShards);\n      }\n      if (collectionState.getActiveSlices().size() != expectedShards)\n        return false;\n      return compareActiveReplicaCountsForShards(expectedReplicas, liveNodes, collectionState);\n    };\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of active shards and active replicas\n   */\n  public static CollectionStatePredicate activeClusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      log.info(\"active slice count: \" + collectionState.getActiveSlices().size() + \" expected:\" + expectedShards);\n      if (collectionState.getActiveSlices().size() != expectedShards)\n        return false;\n      return compareActiveReplicaCountsForShards(expectedReplicas, liveNodes, collectionState);\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e1edcb08221b33c52c3b24183d470c163dc8df4c":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"3e2d1ac454d3a72f3de14ffff4d77c41de1135f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["3e2d1ac454d3a72f3de14ffff4d77c41de1135f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["e1edcb08221b33c52c3b24183d470c163dc8df4c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"e1edcb08221b33c52c3b24183d470c163dc8df4c":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"3e2d1ac454d3a72f3de14ffff4d77c41de1135f0":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e1edcb08221b33c52c3b24183d470c163dc8df4c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e2d1ac454d3a72f3de14ffff4d77c41de1135f0"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}