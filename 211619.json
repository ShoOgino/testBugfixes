{"path":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","sourceNew":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < minFragCharSize )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          minFragCharSize + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - margin < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - margin;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","sourceOld":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < minFragCharSize )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          minFragCharSize + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - margin < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - margin;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f3f873f902c9e3821591809929b6f1283bc0298","date":1338822342,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FragListBuilder#createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize)\n   */ \n  public FieldFragList createFieldFragList( FieldPhraseList fieldPhraseList, int fragCharSize ){\n    return createFieldFragList( fieldPhraseList, new SimpleFieldFragList( fragCharSize ), fragCharSize );\n  }\n\n","sourceOld":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < minFragCharSize )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          minFragCharSize + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - margin < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - margin;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FragListBuilder#createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize)\n   */ \n  @Override\n  public FieldFragList createFieldFragList( FieldPhraseList fieldPhraseList, int fragCharSize ){\n    return createFieldFragList( fieldPhraseList, new SimpleFieldFragList( fragCharSize ), fragCharSize );\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FragListBuilder#createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize)\n   */ \n  public FieldFragList createFieldFragList( FieldPhraseList fieldPhraseList, int fragCharSize ){\n    return createFieldFragList( fieldPhraseList, new SimpleFieldFragList( fragCharSize ), fragCharSize );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FragListBuilder#createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize)\n   */ \n  @Override\n  public FieldFragList createFieldFragList( FieldPhraseList fieldPhraseList, int fragCharSize ){\n    return createFieldFragList( fieldPhraseList, new SimpleFieldFragList( fragCharSize ), fragCharSize );\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.vectorhighlight.FragListBuilder#createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize)\n   */ \n  public FieldFragList createFieldFragList( FieldPhraseList fieldPhraseList, int fragCharSize ){\n    return createFieldFragList( fieldPhraseList, new SimpleFieldFragList( fragCharSize ), fragCharSize );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["9f3f873f902c9e3821591809929b6f1283bc0298","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["9f3f873f902c9e3821591809929b6f1283bc0298"],"9f3f873f902c9e3821591809929b6f1283bc0298":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9f3f873f902c9e3821591809929b6f1283bc0298"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9f3f873f902c9e3821591809929b6f1283bc0298":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}