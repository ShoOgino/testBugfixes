{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","commits":[{"id":"b38d50314a7281b1ef90bfb3bb0bc91a38f0078f","date":1355410999,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, \"sort\", \"id desc\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    \n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, \"sort\", \"id desc\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    //query(\"q\", \"*:*\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["072f211dfa8387028bb978d128c35bf9a450bbbf","273169b811d9cb86a3a7828abf9b3ba2bbe9b4a3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98ef9d9ecf768191e0c139463409e9297f8367de","date":1356019463,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine and the moon but moon was good foxes too\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    \n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    handle.put(\"7\", UNORDERED);\n    \n    // keep in mind that MLT params influence stats that are calulated\n    // per shard - because of this, depending on params, distrib and single\n    // shard queries will not match.\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 2,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName);\n\n    query(\"q\", \"lowerfilt:the red fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:blue moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName);\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, \"sort\", \"id desc\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    \n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, \"sort\", \"id desc\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    //query(\"q\", \"*:*\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n  }\n\n","bugFix":null,"bugIntro":["273169b811d9cb86a3a7828abf9b3ba2bbe9b4a3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a97a2a60d1ce1ac2bd6ca3f40ed674baab554095","date":1356979334,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine and the moon but moon was good foxes too\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    \n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    handle.put(\"7\", UNORDERED);\n    \n    // keep in mind that MLT params influence stats that are calulated\n    // per shard - because of this, depending on params, distrib and single\n    // shard queries will not match.\n    \n    // because distrib and single node do not currently sort exactly the same,\n    // we ask for an mlt.count of 20 to ensure both include all results\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 2,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n\n    query(\"q\", \"lowerfilt:the red fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:blue moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine and the moon but moon was good foxes too\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    \n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    handle.put(\"7\", UNORDERED);\n    \n    // keep in mind that MLT params influence stats that are calulated\n    // per shard - because of this, depending on params, distrib and single\n    // shard queries will not match.\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 2,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName);\n\n    query(\"q\", \"lowerfilt:the red fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:blue moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine and the moon but moon was good foxes too\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    \n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    handle.put(\"7\", UNORDERED);\n    \n    // keep in mind that MLT params influence stats that are calulated\n    // per shard - because of this, depending on params, distrib and single\n    // shard queries will not match.\n    \n    // because distrib and single node do not currently sort exactly the same,\n    // we ask for an mlt.count of 20 to ensure both include all results\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 2,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n\n    query(\"q\", \"lowerfilt:the red fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:blue moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"072f211dfa8387028bb978d128c35bf9a450bbbf","date":1406041363,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine and the moon but moon was good foxes too\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    \n    commit();\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    handle.put(\"7\", UNORDERED);\n    \n    // keep in mind that MLT params influence stats that are calulated\n    // per shard - because of this, depending on params, distrib and single\n    // shard queries will not match.\n    \n    // because distrib and single node do not currently sort exactly the same,\n    // we ask for an mlt.count of 20 to ensure both include all results\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 2,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n\n    query(\"q\", \"lowerfilt:the red fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:blue moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine and the moon but moon was good foxes too\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    \n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    handle.put(\"7\", UNORDERED);\n    \n    // keep in mind that MLT params influence stats that are calulated\n    // per shard - because of this, depending on params, distrib and single\n    // shard queries will not match.\n    \n    // because distrib and single node do not currently sort exactly the same,\n    // we ask for an mlt.count of 20 to ensure both include all results\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 2,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n\n    query(\"q\", \"lowerfilt:the red fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:blue moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n  }\n\n","bugFix":["b38d50314a7281b1ef90bfb3bb0bc91a38f0078f"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedMLTComponentTest#doTest().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 3)\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine and the moon but moon was good foxes too\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    \n    commit();\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    handle.put(\"7\", UNORDERED);\n    \n    // keep in mind that MLT params influence stats that are calulated\n    // per shard - because of this, depending on params, distrib and single\n    // shard queries will not match.\n    \n    // because distrib and single node do not currently sort exactly the same,\n    // we ask for an mlt.count of 20 to ensure both include all results\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 2,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n\n    query(\"q\", \"lowerfilt:the red fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:blue moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, \"1\", \"lowerfilt\", \"toyota\");\n    index(id, \"2\", \"lowerfilt\", \"chevrolet\");\n    index(id, \"3\", \"lowerfilt\", \"suzuki\");\n    index(id, \"4\", \"lowerfilt\", \"ford\");\n    index(id, \"5\", \"lowerfilt\", \"ferrari\");\n    index(id, \"6\", \"lowerfilt\", \"jaguar\");\n    index(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine and the moon but moon was good foxes too\");\n    index(id, \"8\", \"lowerfilt\", \"sonata\");\n    index(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big and large brown dogs.\");\n    index(id, \"10\", \"lowerfilt\", \"blue\");\n    index(id, \"12\", \"lowerfilt\", \"glue\");\n    index(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\");\n    index(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\");\n    index(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\");\n    index(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\");\n    index(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\");\n    index(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\");\n    index(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\");\n    index(id, \"25\", \"lowerfilt\", \"rod fix\");\n    \n    commit();\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    // we care only about the mlt results\n    handle.put(\"response\", SKIP);\n    \n    // currently distrib mlt is sorting by score (even though it's not really comparable across shards)\n    // so it may not match the sort of single shard mlt\n    handle.put(\"17\", UNORDERED);\n    \n    query(\"q\", \"match_none\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    query(\"q\", \"lowerfilt:sonata\", \"mlt\", \"true\", \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\", requestHandlerName);\n    \n    handle.put(\"24\", UNORDERED);\n    handle.put(\"23\", UNORDERED);\n    handle.put(\"22\", UNORDERED);\n    handle.put(\"21\", UNORDERED);\n    handle.put(\"20\", UNORDERED);\n    handle.put(\"19\", UNORDERED);\n    handle.put(\"18\", UNORDERED);\n    handle.put(\"17\", UNORDERED);\n    handle.put(\"16\", UNORDERED);\n    handle.put(\"15\", UNORDERED);\n    handle.put(\"14\", UNORDERED);\n    handle.put(\"13\", UNORDERED);\n    handle.put(\"7\", UNORDERED);\n    \n    // keep in mind that MLT params influence stats that are calulated\n    // per shard - because of this, depending on params, distrib and single\n    // shard queries will not match.\n    \n    // because distrib and single node do not currently sort exactly the same,\n    // we ask for an mlt.count of 20 to ensure both include all results\n    \n    query(\"q\", \"lowerfilt:moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 2,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n\n    query(\"q\", \"lowerfilt:the red fox\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n    \n    query(\"q\", \"lowerfilt:blue moon\", \"fl\", id, MoreLikeThisParams.MIN_TERM_FREQ, 1,\n        MoreLikeThisParams.MIN_DOC_FREQ, 1, \"sort\", \"id desc\", \"mlt\", \"true\",\n        \"mlt.fl\", \"lowerfilt\", \"qt\", requestHandlerName, \"shards.qt\",\n        requestHandlerName, \"mlt.count\", \"20\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a97a2a60d1ce1ac2bd6ca3f40ed674baab554095"],"072f211dfa8387028bb978d128c35bf9a450bbbf":["a97a2a60d1ce1ac2bd6ca3f40ed674baab554095"],"abb23fcc2461782ab204e61213240feb77d355aa":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"98ef9d9ecf768191e0c139463409e9297f8367de":["b38d50314a7281b1ef90bfb3bb0bc91a38f0078f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b38d50314a7281b1ef90bfb3bb0bc91a38f0078f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a97a2a60d1ce1ac2bd6ca3f40ed674baab554095":["98ef9d9ecf768191e0c139463409e9297f8367de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"072f211dfa8387028bb978d128c35bf9a450bbbf":["abb23fcc2461782ab204e61213240feb77d355aa"],"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98ef9d9ecf768191e0c139463409e9297f8367de":["a97a2a60d1ce1ac2bd6ca3f40ed674baab554095"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b38d50314a7281b1ef90bfb3bb0bc91a38f0078f"],"b38d50314a7281b1ef90bfb3bb0bc91a38f0078f":["98ef9d9ecf768191e0c139463409e9297f8367de"],"a97a2a60d1ce1ac2bd6ca3f40ed674baab554095":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","072f211dfa8387028bb978d128c35bf9a450bbbf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}