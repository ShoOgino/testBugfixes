{"path":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","commits":[{"id":"39899cd24f88f2d580857d57be8aebc1f467f5c6","date":1363793635,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","sourceNew":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.shutdown();\n    }\n  }\n\n","sourceOld":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","sourceNew":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.shutdown();\n    }\n  }\n\n","sourceOld":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","sourceNew":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.close();\n    }\n  }\n\n","sourceOld":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62f141037fe1f10bf378b58bd3c2cabfeaf55d80","date":1577958490,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","sourceNew":"  @Before\n  public void createIndex() throws Exception {\n    dir = newDirectory();\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.close();\n    }\n  }\n\n","sourceOld":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7581a59c6b7f39d1851b20b6f7ea77e8d5234f95","date":1577958539,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument#createIndex().mjava","sourceNew":"  @Before\n  public void createIndex() throws Exception {\n    dir = newDirectory();\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.close();\n    }\n  }\n\n","sourceOld":"  @Before\n  public void createIndex() throws Exception {\n\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter\n      (dir, newIndexWriterConfig(analyzer));\n    try {\n      for (int docid = 0; docid < NUM_DOCS; docid++) {\n        Document d = new Document();\n        d.add(newStringField(\"docid\", \"\"+docid, Field.Store.YES));\n        d.add(newStringField(\"never_load\", \"fail\", Field.Store.YES));\n        for (String f : FIELDS) {\n          for (int val = 0; val < NUM_VALUES; val++) {\n            d.add(newStringField(f, docid+\"_\"+f+\"_\"+val, Field.Store.YES));\n          }\n        }\n        d.add(newStringField(\"load_later\", \"yes\", Field.Store.YES));\n        writer.addDocument(d);\n      }\n    } finally {\n      writer.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7581a59c6b7f39d1851b20b6f7ea77e8d5234f95":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"39899cd24f88f2d580857d57be8aebc1f467f5c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62f141037fe1f10bf378b58bd3c2cabfeaf55d80":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["39899cd24f88f2d580857d57be8aebc1f467f5c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7581a59c6b7f39d1851b20b6f7ea77e8d5234f95"]},"commit2Childs":{"7581a59c6b7f39d1851b20b6f7ea77e8d5234f95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"39899cd24f88f2d580857d57be8aebc1f467f5c6":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["39899cd24f88f2d580857d57be8aebc1f467f5c6"],"62f141037fe1f10bf378b58bd3c2cabfeaf55d80":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["7581a59c6b7f39d1851b20b6f7ea77e8d5234f95","62f141037fe1f10bf378b58bd3c2cabfeaf55d80"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62f141037fe1f10bf378b58bd3c2cabfeaf55d80","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}