{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","commits":[{"id":"547a26506ec6f4c3514bf6f33a68154dd1bc0f5c","date":1315493955,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"/dev/null","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    String[] dict = {\"ab\", \"cd\", \"ef\"};\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n\t\t\tnew WhitespaceTokenizer(TEST_VERSION_CURRENT,\n\t\t\t\tnew StringReader(\n\t\t\t\t\t\"abcdef\")\n\t\t\t\t),\n\t\t\tdict,\n\t\t\tCompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n\t\t\tCompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n\t\t\tCompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n\t\t\tnew String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n\t\t\tnew int[] { 0, 0, 2, 4},\n\t\t\tnew int[] { 6, 2, 4, 6},\n\t\t\tnew int[] { 1, 0, 0, 0}\n\t\t\t);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e15bea9339982eec538668b67ae252b28e0003e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e15bea9339982eec538668b67ae252b28e0003e","date":1319539476,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    String[] dict = {\"ab\", \"cd\", \"ef\"};\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 2, 4},\n      new int[] { 6, 2, 4, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","sourceOld":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    String[] dict = {\"ab\", \"cd\", \"ef\"};\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n\t\t\tnew WhitespaceTokenizer(TEST_VERSION_CURRENT,\n\t\t\t\tnew StringReader(\n\t\t\t\t\t\"abcdef\")\n\t\t\t\t),\n\t\t\tdict,\n\t\t\tCompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n\t\t\tCompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n\t\t\tCompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n\t\t\tnew String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n\t\t\tnew int[] { 0, 0, 2, 4},\n\t\t\tnew int[] { 6, 2, 4, 6},\n\t\t\tnew int[] { 1, 0, 0, 0}\n\t\t\t);\n  }\n\n","bugFix":["547a26506ec6f4c3514bf6f33a68154dd1bc0f5c"],"bugIntro":["1497255a2ce11dc672a80859c79fabe7efa51d2e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"906468dad7061882fe0b86de96423c16d5e9bc1e","date":1319542276,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 2, 4},\n      new int[] { 6, 2, 4, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","sourceOld":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    String[] dict = {\"ab\", \"cd\", \"ef\"};\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 2, 4},\n      new int[] { 6, 2, 4, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testTokenEndingWithWordComponentOfMinimumLength().mjava","sourceNew":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 2, 4},\n      new int[] { 6, 2, 4, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","sourceOld":"  public void testTokenEndingWithWordComponentOfMinimumLength() throws Exception {\n    CharArraySet dict = makeDictionary(\"ab\", \"cd\", \"ef\");\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,\n      new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\n          \"abcdef\")\n        ),\n      dict,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n      CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n\n    assertTokenStreamContents(tf,\n      new String[] { \"abcdef\", \"ab\", \"cd\", \"ef\" },\n      new int[] { 0, 0, 2, 4},\n      new int[] { 6, 2, 4, 6},\n      new int[] { 1, 0, 0, 0}\n      );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["906468dad7061882fe0b86de96423c16d5e9bc1e"],"1e15bea9339982eec538668b67ae252b28e0003e":["547a26506ec6f4c3514bf6f33a68154dd1bc0f5c"],"547a26506ec6f4c3514bf6f33a68154dd1bc0f5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"906468dad7061882fe0b86de96423c16d5e9bc1e":["1e15bea9339982eec538668b67ae252b28e0003e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e15bea9339982eec538668b67ae252b28e0003e":["906468dad7061882fe0b86de96423c16d5e9bc1e"],"547a26506ec6f4c3514bf6f33a68154dd1bc0f5c":["1e15bea9339982eec538668b67ae252b28e0003e"],"906468dad7061882fe0b86de96423c16d5e9bc1e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["547a26506ec6f4c3514bf6f33a68154dd1bc0f5c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}