{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#scoreWindow(LeafCollector,int,int,int,BulkScorerAndDoc[],int).mjava","commits":[{"id":"251e6911800e3a02e1da3bfd4dc49a914aef9778","date":1423063783,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#scoreWindow(LeafCollector,int,int,int,BulkScorerAndDoc[],int).mjava","pathOld":"/dev/null","sourceNew":"  private void scoreWindow(LeafCollector collector, int base, int min, int max,\n      BulkScorerAndDoc[] scorers, int numScorers) throws IOException {\n    for (int i = 0; i < numScorers; ++i) {\n      final BulkScorerAndDoc scorer = scorers[i];\n      assert scorer.next < max;\n      scorer.score(min, max);\n    }\n\n    scoreMatches(collector, base);\n    Arrays.fill(matching, 0L);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#scoreWindow(LeafCollector,Bits,int,int,int,BulkScorerAndDoc[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#scoreWindow(LeafCollector,int,int,int,BulkScorerAndDoc[],int).mjava","sourceNew":"  private void scoreWindow(LeafCollector collector, Bits acceptDocs, int base, int min, int max,\n      BulkScorerAndDoc[] scorers, int numScorers) throws IOException {\n    for (int i = 0; i < numScorers; ++i) {\n      final BulkScorerAndDoc scorer = scorers[i];\n      assert scorer.next < max;\n      scorer.score(acceptDocs, min, max);\n    }\n\n    scoreMatches(collector, base);\n    Arrays.fill(matching, 0L);\n  }\n\n","sourceOld":"  private void scoreWindow(LeafCollector collector, int base, int min, int max,\n      BulkScorerAndDoc[] scorers, int numScorers) throws IOException {\n    for (int i = 0; i < numScorers; ++i) {\n      final BulkScorerAndDoc scorer = scorers[i];\n      assert scorer.next < max;\n      scorer.score(min, max);\n    }\n\n    scoreMatches(collector, base);\n    Arrays.fill(matching, 0L);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"251e6911800e3a02e1da3bfd4dc49a914aef9778":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"251e6911800e3a02e1da3bfd4dc49a914aef9778":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}