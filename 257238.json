{"path":"src/java/org/apache/lucene/index/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","commits":[{"id":"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709","date":1180597733,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Writes the buffered skip lists to the given output.\r\n   * \r\n   * @param output the IndexOutput the skip lists shall be written to \r\n   * @return the pointer the skip list starts\r\n   */\r\n  long writeSkip(IndexOutput output) throws IOException {\r\n    long skipPointer = output.getFilePointer();\r\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\r\n    \r\n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\r\n      long length = skipBuffer[level].getFilePointer();\r\n      if (length > 0) {\r\n        output.writeVLong(length);\r\n        skipBuffer[level].writeTo(output);\r\n      }\r\n    }\r\n    skipBuffer[0].writeTo(output);\r\n    \r\n    return skipPointer;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","pathOld":"src/java/org/apache/lucene/index/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","sourceNew":"  /**\n   * Writes the buffered skip lists to the given output.\n   * \n   * @param output the IndexOutput the skip lists shall be written to \n   * @return the pointer the skip list starts\n   */\n  long writeSkip(IndexOutput output) throws IOException {\n    long skipPointer = output.getFilePointer();\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\n    \n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\n      long length = skipBuffer[level].getFilePointer();\n      if (length > 0) {\n        output.writeVLong(length);\n        skipBuffer[level].writeTo(output);\n      }\n    }\n    skipBuffer[0].writeTo(output);\n    \n    return skipPointer;\n  }\n\n","sourceOld":"  /**\r\n   * Writes the buffered skip lists to the given output.\r\n   * \r\n   * @param output the IndexOutput the skip lists shall be written to \r\n   * @return the pointer the skip list starts\r\n   */\r\n  long writeSkip(IndexOutput output) throws IOException {\r\n    long skipPointer = output.getFilePointer();\r\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\r\n    \r\n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\r\n      long length = skipBuffer[level].getFilePointer();\r\n      if (length > 0) {\r\n        output.writeVLong(length);\r\n        skipBuffer[level].writeTo(output);\r\n      }\r\n    }\r\n    skipBuffer[0].writeTo(output);\r\n    \r\n    return skipPointer;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","pathOld":"src/java/org/apache/lucene/index/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","sourceNew":"  /**\n   * Writes the buffered skip lists to the given output.\n   * \n   * @param output the IndexOutput the skip lists shall be written to \n   * @return the pointer the skip list starts\n   */\n  long writeSkip(IndexOutput output) throws IOException {\n    long skipPointer = output.getFilePointer();\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\n    \n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\n      long length = skipBuffer[level].getFilePointer();\n      if (length > 0) {\n        output.writeVLong(length);\n        skipBuffer[level].writeTo(output);\n      }\n    }\n    skipBuffer[0].writeTo(output);\n    \n    return skipPointer;\n  }\n\n","sourceOld":"  /**\n   * Writes the buffered skip lists to the given output.\n   * \n   * @param output the IndexOutput the skip lists shall be written to \n   * @return the pointer the skip list starts\n   */\n  long writeSkip(IndexOutput output) throws IOException {\n    long skipPointer = output.getFilePointer();\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\n    \n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\n      long length = skipBuffer[level].getFilePointer();\n      if (length > 0) {\n        output.writeVLong(length);\n        skipBuffer[level].writeTo(output);\n      }\n    }\n    skipBuffer[0].writeTo(output);\n    \n    return skipPointer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2123bddbd65dea198cac380540636ce43a880403":["08d1ee9808e270c86ce5c9be08b8bd7a19d0a709"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2123bddbd65dea198cac380540636ce43a880403"],"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08d1ee9808e270c86ce5c9be08b8bd7a19d0a709"],"2123bddbd65dea198cac380540636ce43a880403":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709":["2123bddbd65dea198cac380540636ce43a880403"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}