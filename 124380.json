{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput).mjava","commits":[{"id":"caf65fa364fcf8ea8ef1032c1247622933af3b04","date":1397057745,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput,BytesRef).mjava","sourceNew":"  public static void checkFooter(ChecksumIndexInput input) throws IOException {\n    BytesRef scratch = new BytesRef();\n    String expectedChecksum = String.format(Locale.ROOT, \"%020d\", input.getChecksum());\n    SimpleTextUtil.readLine(input, scratch);\n    if (StringHelper.startsWith(scratch, CHECKSUM) == false) {\n      throw new CorruptIndexException(\"SimpleText failure: expected checksum line but got \" + scratch.utf8ToString() + \" (resource=\" + input + \")\");\n    }\n    String actualChecksum = new BytesRef(scratch.bytes, CHECKSUM.length, scratch.length - CHECKSUM.length).utf8ToString();\n    if (!expectedChecksum.equals(actualChecksum)) {\n      throw new CorruptIndexException(\"SimpleText checksum failure: \" + actualChecksum + \" != \" + expectedChecksum + \" (resource=\" + input + \")\");\n    }\n    if (input.length() != input.getFilePointer()) {\n      throw new CorruptIndexException(\"Unexpected stuff at the end of file, please be careful with your text editor! (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":"  public static void checkFooter(ChecksumIndexInput input, BytesRef prefix) throws IOException {\n    BytesRef scratch = new BytesRef();\n    String expectedChecksum = Long.toString(input.getChecksum());\n    SimpleTextUtil.readLine(input, scratch);\n    assert StringHelper.startsWith(scratch, prefix);\n    String actualChecksum = new BytesRef(scratch.bytes, prefix.length, scratch.length - prefix.length).utf8ToString();\n    if (!expectedChecksum.equals(actualChecksum)) {\n      throw new CorruptIndexException(\"SimpleText checksum failure: \" + actualChecksum + \" != \" + expectedChecksum + \" (resource=\" + input + \")\");\n    }\n    if (input.length() != input.getFilePointer()) {\n      throw new CorruptIndexException(\"Unexpected stuff at the end of file, please be careful with your text editor! (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput).mjava","sourceNew":"  public static void checkFooter(ChecksumIndexInput input) throws IOException {\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String expectedChecksum = String.format(Locale.ROOT, \"%020d\", input.getChecksum());\n    SimpleTextUtil.readLine(input, scratch);\n    if (StringHelper.startsWith(scratch.get(), CHECKSUM) == false) {\n      throw new CorruptIndexException(\"SimpleText failure: expected checksum line but got \" + scratch.get().utf8ToString() + \" (resource=\" + input + \")\");\n    }\n    String actualChecksum = new BytesRef(scratch.bytes(), CHECKSUM.length, scratch.length() - CHECKSUM.length).utf8ToString();\n    if (!expectedChecksum.equals(actualChecksum)) {\n      throw new CorruptIndexException(\"SimpleText checksum failure: \" + actualChecksum + \" != \" + expectedChecksum + \" (resource=\" + input + \")\");\n    }\n    if (input.length() != input.getFilePointer()) {\n      throw new CorruptIndexException(\"Unexpected stuff at the end of file, please be careful with your text editor! (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":"  public static void checkFooter(ChecksumIndexInput input) throws IOException {\n    BytesRef scratch = new BytesRef();\n    String expectedChecksum = String.format(Locale.ROOT, \"%020d\", input.getChecksum());\n    SimpleTextUtil.readLine(input, scratch);\n    if (StringHelper.startsWith(scratch, CHECKSUM) == false) {\n      throw new CorruptIndexException(\"SimpleText failure: expected checksum line but got \" + scratch.utf8ToString() + \" (resource=\" + input + \")\");\n    }\n    String actualChecksum = new BytesRef(scratch.bytes, CHECKSUM.length, scratch.length - CHECKSUM.length).utf8ToString();\n    if (!expectedChecksum.equals(actualChecksum)) {\n      throw new CorruptIndexException(\"SimpleText checksum failure: \" + actualChecksum + \" != \" + expectedChecksum + \" (resource=\" + input + \")\");\n    }\n    if (input.length() != input.getFilePointer()) {\n      throw new CorruptIndexException(\"Unexpected stuff at the end of file, please be careful with your text editor! (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":["caf65fa364fcf8ea8ef1032c1247622933af3b04"],"bugIntro":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9a70ce9bddc6f985feb8e5e182aebe20872328d4","date":1411172748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput).mjava","sourceNew":"  public static void checkFooter(ChecksumIndexInput input) throws IOException {\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String expectedChecksum = String.format(Locale.ROOT, \"%020d\", input.getChecksum());\n    SimpleTextUtil.readLine(input, scratch);\n    if (StringHelper.startsWith(scratch.get(), CHECKSUM) == false) {\n      throw new CorruptIndexException(\"SimpleText failure: expected checksum line but got \" + scratch.get().utf8ToString(), input);\n    }\n    String actualChecksum = new BytesRef(scratch.bytes(), CHECKSUM.length, scratch.length() - CHECKSUM.length).utf8ToString();\n    if (!expectedChecksum.equals(actualChecksum)) {\n      throw new CorruptIndexException(\"SimpleText checksum failure: \" + actualChecksum + \" != \" + expectedChecksum, input);\n    }\n    if (input.length() != input.getFilePointer()) {\n      throw new CorruptIndexException(\"Unexpected stuff at the end of file, please be careful with your text editor!\", input);\n    }\n  }\n\n","sourceOld":"  public static void checkFooter(ChecksumIndexInput input) throws IOException {\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String expectedChecksum = String.format(Locale.ROOT, \"%020d\", input.getChecksum());\n    SimpleTextUtil.readLine(input, scratch);\n    if (StringHelper.startsWith(scratch.get(), CHECKSUM) == false) {\n      throw new CorruptIndexException(\"SimpleText failure: expected checksum line but got \" + scratch.get().utf8ToString() + \" (resource=\" + input + \")\");\n    }\n    String actualChecksum = new BytesRef(scratch.bytes(), CHECKSUM.length, scratch.length() - CHECKSUM.length).utf8ToString();\n    if (!expectedChecksum.equals(actualChecksum)) {\n      throw new CorruptIndexException(\"SimpleText checksum failure: \" + actualChecksum + \" != \" + expectedChecksum + \" (resource=\" + input + \")\");\n    }\n    if (input.length() != input.getFilePointer()) {\n      throw new CorruptIndexException(\"Unexpected stuff at the end of file, please be careful with your text editor! (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","caf65fa364fcf8ea8ef1032c1247622933af3b04"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca792c26af46bd6c4a08d81117c60440cf6a7e3d","date":1445938295,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextUtil#checkFooter(ChecksumIndexInput).mjava","sourceNew":"  public static void checkFooter(ChecksumIndexInput input) throws IOException {\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String expectedChecksum = String.format(Locale.ROOT, \"%020d\", input.getChecksum());\n    readLine(input, scratch);\n    if (StringHelper.startsWith(scratch.get(), CHECKSUM) == false) {\n      throw new CorruptIndexException(\"SimpleText failure: expected checksum line but got \" + scratch.get().utf8ToString(), input);\n    }\n    String actualChecksum = new BytesRef(scratch.bytes(), CHECKSUM.length, scratch.length() - CHECKSUM.length).utf8ToString();\n    if (!expectedChecksum.equals(actualChecksum)) {\n      throw new CorruptIndexException(\"SimpleText checksum failure: \" + actualChecksum + \" != \" + expectedChecksum, input);\n    }\n    if (input.length() != input.getFilePointer()) {\n      throw new CorruptIndexException(\"Unexpected stuff at the end of file, please be careful with your text editor!\", input);\n    }\n  }\n\n","sourceOld":"  public static void checkFooter(ChecksumIndexInput input) throws IOException {\n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String expectedChecksum = String.format(Locale.ROOT, \"%020d\", input.getChecksum());\n    SimpleTextUtil.readLine(input, scratch);\n    if (StringHelper.startsWith(scratch.get(), CHECKSUM) == false) {\n      throw new CorruptIndexException(\"SimpleText failure: expected checksum line but got \" + scratch.get().utf8ToString(), input);\n    }\n    String actualChecksum = new BytesRef(scratch.bytes(), CHECKSUM.length, scratch.length() - CHECKSUM.length).utf8ToString();\n    if (!expectedChecksum.equals(actualChecksum)) {\n      throw new CorruptIndexException(\"SimpleText checksum failure: \" + actualChecksum + \" != \" + expectedChecksum, input);\n    }\n    if (input.length() != input.getFilePointer()) {\n      throw new CorruptIndexException(\"Unexpected stuff at the end of file, please be careful with your text editor!\", input);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["caf65fa364fcf8ea8ef1032c1247622933af3b04"],"caf65fa364fcf8ea8ef1032c1247622933af3b04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"]},"commit2Childs":{"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["caf65fa364fcf8ea8ef1032c1247622933af3b04"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"caf65fa364fcf8ea8ef1032c1247622933af3b04":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}