{"path":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#rebalancePropUsingStandardRequest(String).mjava","commits":[{"id":"73fd358e8ec697393d56617f4d9cedaca74dca14","date":1547954439,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#rebalancePropUsingStandardRequest(String).mjava","pathOld":"/dev/null","sourceNew":"  private void rebalancePropUsingStandardRequest(String prop) throws IOException, SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionParams.CollectionAction.BALANCESHARDUNIQUE.toString());\n    params.set(\"property\", prop);\n\n    params.set(\"collection\", COLLECTION_NAME);\n    if (prop.toLowerCase(Locale.ROOT).contains(\"preferredleader\") == false) {\n      params.set(\"shardUnique\", true);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    QueryResponse resp = request.process(cluster.getSolrClient());\n    assertEquals(\"Call to rebalanceLeaders failed \", 0, resp.getStatus());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#rebalancePropUsingStandardRequest(String).mjava","pathOld":"/dev/null","sourceNew":"  private void rebalancePropUsingStandardRequest(String prop) throws IOException, SolrServerException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionParams.CollectionAction.BALANCESHARDUNIQUE.toString());\n    params.set(\"property\", prop);\n\n    params.set(\"collection\", COLLECTION_NAME);\n    if (prop.toLowerCase(Locale.ROOT).contains(\"preferredleader\") == false) {\n      params.set(\"shardUnique\", true);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    QueryResponse resp = request.process(cluster.getSolrClient());\n    assertEquals(\"Call to rebalanceLeaders failed \", 0, resp.getStatus());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73fd358e8ec697393d56617f4d9cedaca74dca14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"73fd358e8ec697393d56617f4d9cedaca74dca14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73fd358e8ec697393d56617f4d9cedaca74dca14"]},"commit2Childs":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","73fd358e8ec697393d56617f4d9cedaca74dca14"],"73fd358e8ec697393d56617f4d9cedaca74dca14":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}