{"path":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","commits":[{"id":"3fb0c241e2a5e80dcaf41e354c7003520fcb777d","date":1324562351,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid, float score) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320eec6599df6f97f2461a5d1ad49cd93b324a14","date":1503502574,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid, float score) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid, float score) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid, float score) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ad458affd82a1d762eb506003907d9363a333cb","date":1528558344,"type":3,"author":"broustant","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<BytesRef> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      BytesRef key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<BytesRef> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      BytesRef key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/BaseEditorialTransformer#transform(SolrDocument,int).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<BytesRef> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      BytesRef key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    //this only gets added if QueryElevationParams.MARK_EXCLUDED is true\n    Set<String> ids = getIdSet();\n    if (ids != null && ids.isEmpty() == false) {\n      String key = getKey(doc);\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't marking, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["182384b20c064aa16998ddebe9f36e649279c5a6","2ad458affd82a1d762eb506003907d9363a333cb"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","182384b20c064aa16998ddebe9f36e649279c5a6"],"3fb0c241e2a5e80dcaf41e354c7003520fcb777d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","320eec6599df6f97f2461a5d1ad49cd93b324a14"],"2ad458affd82a1d762eb506003907d9363a333cb":["182384b20c064aa16998ddebe9f36e649279c5a6"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["3fb0c241e2a5e80dcaf41e354c7003520fcb777d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ad458affd82a1d762eb506003907d9363a333cb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["182384b20c064aa16998ddebe9f36e649279c5a6","2ad458affd82a1d762eb506003907d9363a333cb"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"3fb0c241e2a5e80dcaf41e354c7003520fcb777d":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["182384b20c064aa16998ddebe9f36e649279c5a6"],"182384b20c064aa16998ddebe9f36e649279c5a6":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","2ad458affd82a1d762eb506003907d9363a333cb","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3fb0c241e2a5e80dcaf41e354c7003520fcb777d"],"2ad458affd82a1d762eb506003907d9363a333cb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","320eec6599df6f97f2461a5d1ad49cd93b324a14","182384b20c064aa16998ddebe9f36e649279c5a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}