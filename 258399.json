{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","commits":[{"id":"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","date":1471585465,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["403d05f7f8d69b65659157eff1bc1d2717f04c66","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}