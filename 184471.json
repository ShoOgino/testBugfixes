{"path":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.text()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.text()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.bytes()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.text()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.bytes()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.text()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936f1eae75daf11568fe1480aec9e06d2ef55367","date":1323215013,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(String field, BytesRef term) {\n      Info info = getInfo(field);\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + field + \":\" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.bytes()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(String field, BytesRef term) {\n      Info info = getInfo(field);\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + field + \":\" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.bytes()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(String field, BytesRef term) {\n      Info info = getInfo(field);\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + field + \":\" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.bytes()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936f1eae75daf11568fe1480aec9e06d2ef55367":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","936f1eae75daf11568fe1480aec9e06d2ef55367"],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","936f1eae75daf11568fe1480aec9e06d2ef55367","3615ce4a1f785ae1b779244de52c6a7d99227e60","5f4e87790277826a2aea119328600dfb07761f32"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"936f1eae75daf11568fe1480aec9e06d2ef55367":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f4e87790277826a2aea119328600dfb07761f32":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}