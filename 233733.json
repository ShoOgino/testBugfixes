{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#buildOptimise(Node).mjava","commits":[{"id":"7f2a93a28913071a0b713be1d4b8a1181388d550","date":1254814948,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#buildOptimise(Node).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Walk the Node tree propagating any wildDescentant information to\n     * child nodes. This allows us to optimise the performance of the\n     * main parse method.\n     */\n    private void buildOptimise(Node wa) {\n     wildAncestor=wa;\n     if ( wildCardNodes != null ) wa = this;\n     if ( childNodes != null )\n       for ( Node n : childNodes ) n.buildOptimise(wa);\n     }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#buildOptimise(Node).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#buildOptimise(Node).mjava","sourceNew":"    /**\n     * Walk the Node tree propagating any wildDescentant information to\n     * child nodes. This allows us to optimise the performance of the\n     * main parse method.\n     */\n    private void buildOptimise(Node wa) {\n     wildAncestor=wa;\n     if ( wildCardNodes != null ) wa = this;\n     if ( childNodes != null )\n       for ( Node n : childNodes ) n.buildOptimise(wa);\n     }\n\n","sourceOld":"    /**\n     * Walk the Node tree propagating any wildDescentant information to\n     * child nodes. This allows us to optimise the performance of the\n     * main parse method.\n     */\n    private void buildOptimise(Node wa) {\n     wildAncestor=wa;\n     if ( wildCardNodes != null ) wa = this;\n     if ( childNodes != null )\n       for ( Node n : childNodes ) n.buildOptimise(wa);\n     }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7f2a93a28913071a0b713be1d4b8a1181388d550":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7f2a93a28913071a0b713be1d4b8a1181388d550":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}