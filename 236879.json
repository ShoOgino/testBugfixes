{"path":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","commits":[{"id":"815287248ca7a77db68038baad5698c5767f36a7","date":1350761762,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<String, String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e52115b56781006682fd92c6938efaf174304d","date":1351014780,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<String, String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","sourceNew":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<String, String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<String, String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","sourceNew":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<String, String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<String, String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","sourceNew":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<String, String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","sourceNew":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","sourceNew":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testTermVectorWithoutOffsetsHighlight().mjava","sourceNew":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","sourceOld":"  @Test\n  public void testTermVectorWithoutOffsetsHighlight() {\n\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_no_off_text\");\n\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n\n    assertU(adoc(\"tv_no_off_text\", \"Crackerjack Cameron\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n\n    assertQ(\"Fields with term vectors switched on but no offsets should be correctly highlighted\",\n            sumLRF.makeRequest(\"tv_no_off_text:cameron\"),\n            \"//arr[@name='tv_no_off_text']/str[.='Crackerjack <em>Cameron</em>']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["815287248ca7a77db68038baad5698c5767f36a7","19275ba31e621f6da1b83bf13af75233876fd3d4"],"62e52115b56781006682fd92c6938efaf174304d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","815287248ca7a77db68038baad5698c5767f36a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","28288370235ed02234a64753cdbf0c6ec096304a"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["815287248ca7a77db68038baad5698c5767f36a7"],"28288370235ed02234a64753cdbf0c6ec096304a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","5ff704ef91e9ae30ca59babb23ece85720701b60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"815287248ca7a77db68038baad5698c5767f36a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"62e52115b56781006682fd92c6938efaf174304d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["62e52115b56781006682fd92c6938efaf174304d","815287248ca7a77db68038baad5698c5767f36a7"],"30c8e5574b55d57947e989443dfde611646530ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"815287248ca7a77db68038baad5698c5767f36a7":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","62e52115b56781006682fd92c6938efaf174304d","19275ba31e621f6da1b83bf13af75233876fd3d4"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","62e52115b56781006682fd92c6938efaf174304d","30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}