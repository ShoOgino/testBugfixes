{"path":"src/demo/org/apache/lucene/demo/html/Entities#encode(String).mjava","commits":[{"id":"6585acee8c9458b9745b49462abd05c2aa4f23d5","date":1012057292,"type":1,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/Entities#encode(String).mjava","pathOld":"src/demo/org/apache/lucene/HTMLParser/Entities#encode(String).mjava","sourceNew":"  static final public String encode(String s) {\n    int length = s.length();\n    StringBuffer buffer = new StringBuffer(length * 2);\n    for (int i = 0; i < length; i++) {\n      char c = s.charAt(i);\n      int j = (int)c;\n      if (j < 0x100 && encoder[j] != null) {\n\tbuffer.append(encoder[j]);\t\t  // have a named encoding\n\tbuffer.append(';');\n      } else if (j < 0x80) {\n\tbuffer.append(c);\t\t\t  // use ASCII value\n      } else {\n\tbuffer.append(\"&#\");\t\t\t  // use numeric encoding\n\tbuffer.append((int)c);\n\tbuffer.append(';');\n      }\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  static final public String encode(String s) {\n    int length = s.length();\n    StringBuffer buffer = new StringBuffer(length * 2);\n    for (int i = 0; i < length; i++) {\n      char c = s.charAt(i);\n      int j = (int)c;\n      if (j < 0x100 && encoder[j] != null) {\n\tbuffer.append(encoder[j]);\t\t  // have a named encoding\n\tbuffer.append(';');\n      } else if (j < 0x80) {\n\tbuffer.append(c);\t\t\t  // use ASCII value\n      } else {\n\tbuffer.append(\"&#\");\t\t\t  // use numeric encoding\n\tbuffer.append((int)c);\n\tbuffer.append(';');\n      }\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e0650ffcdac8c6f96da8336187af238816b8064","date":1075379150,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/Entities#encode(String).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/Entities#encode(String).mjava","sourceNew":"  public static final String encode(String s) {\n    int length = s.length();\n    StringBuffer buffer = new StringBuffer(length * 2);\n    for (int i = 0; i < length; i++) {\n      char c = s.charAt(i);\n      int j = (int)c;\n      if (j < 0x100 && encoder[j] != null) {\n\tbuffer.append(encoder[j]);\t\t  // have a named encoding\n\tbuffer.append(';');\n      } else if (j < 0x80) {\n\tbuffer.append(c);\t\t\t  // use ASCII value\n      } else {\n\tbuffer.append(\"&#\");\t\t\t  // use numeric encoding\n\tbuffer.append((int)c);\n\tbuffer.append(';');\n      }\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  static final public String encode(String s) {\n    int length = s.length();\n    StringBuffer buffer = new StringBuffer(length * 2);\n    for (int i = 0; i < length; i++) {\n      char c = s.charAt(i);\n      int j = (int)c;\n      if (j < 0x100 && encoder[j] != null) {\n\tbuffer.append(encoder[j]);\t\t  // have a named encoding\n\tbuffer.append(';');\n      } else if (j < 0x80) {\n\tbuffer.append(c);\t\t\t  // use ASCII value\n      } else {\n\tbuffer.append(\"&#\");\t\t\t  // use numeric encoding\n\tbuffer.append((int)c);\n\tbuffer.append(';');\n      }\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/Entities#encode(String).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/Entities#encode(String).mjava","sourceNew":"  public static final String encode(String s) {\n    int length = s.length();\n    StringBuffer buffer = new StringBuffer(length * 2);\n    for (int i = 0; i < length; i++) {\n      int j = s.charAt(i);\n      if (j < 0x100 && encoder[j] != null) {\n\tbuffer.append(encoder[j]);\t\t  // have a named encoding\n\tbuffer.append(';');\n      } else if (j < 0x80) {\n\tbuffer.append((char) j);\t\t\t  // use ASCII value\n      } else {\n\tbuffer.append(\"&#\");\t\t\t  // use numeric encoding\n\tbuffer.append(j).append(';');\n      }\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  public static final String encode(String s) {\n    int length = s.length();\n    StringBuffer buffer = new StringBuffer(length * 2);\n    for (int i = 0; i < length; i++) {\n      char c = s.charAt(i);\n      int j = (int)c;\n      if (j < 0x100 && encoder[j] != null) {\n\tbuffer.append(encoder[j]);\t\t  // have a named encoding\n\tbuffer.append(';');\n      } else if (j < 0x80) {\n\tbuffer.append(c);\t\t\t  // use ASCII value\n      } else {\n\tbuffer.append(\"&#\");\t\t\t  // use numeric encoding\n\tbuffer.append((int)c);\n\tbuffer.append(';');\n      }\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/demo/org/apache/lucene/demo/html/Entities#encode(String).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/Entities#encode(String).mjava","sourceNew":"  public static final String encode(String s) {\n    int length = s.length();\n    StringBuffer buffer = new StringBuffer(length * 2);\n    for (int i = 0; i < length; i++) {\n      int j = s.charAt(i);\n      if (j < 0x100 && encoder[j] != null) {\n\tbuffer.append(encoder[j]);\t\t  // have a named encoding\n\tbuffer.append(';');\n      } else if (j < 0x80) {\n\tbuffer.append((char) j);\t\t\t  // use ASCII value\n      } else {\n\tbuffer.append(\"&#\");\t\t\t  // use numeric encoding\n\tbuffer.append(j).append(';');\n      }\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  public static final String encode(String s) {\n    int length = s.length();\n    StringBuffer buffer = new StringBuffer(length * 2);\n    for (int i = 0; i < length; i++) {\n      int j = s.charAt(i);\n      if (j < 0x100 && encoder[j] != null) {\n\tbuffer.append(encoder[j]);\t\t  // have a named encoding\n\tbuffer.append(';');\n      } else if (j < 0x80) {\n\tbuffer.append((char) j);\t\t\t  // use ASCII value\n      } else {\n\tbuffer.append(\"&#\");\t\t\t  // use numeric encoding\n\tbuffer.append(j).append(';');\n      }\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4e0650ffcdac8c6f96da8336187af238816b8064":["6585acee8c9458b9745b49462abd05c2aa4f23d5"],"6585acee8c9458b9745b49462abd05c2aa4f23d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["4e0650ffcdac8c6f96da8336187af238816b8064"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6585acee8c9458b9745b49462abd05c2aa4f23d5"],"4e0650ffcdac8c6f96da8336187af238816b8064":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"6585acee8c9458b9745b49462abd05c2aa4f23d5":["4e0650ffcdac8c6f96da8336187af238816b8064"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}