{"path":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","commits":[{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  public void init(NamedList args) {}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {}\n\n","sourceOld":"  public void init(NamedList args) {}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eafe65017ee691866644025d85b041b4880c5e3","date":1355253547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n  }\n\n","sourceOld":"  public void init(NamedList args) {}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3a5de1f264cc577bcb0bbb6fa6577df667974ca","date":1497957674,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    dataHomePath = args.get(DATA_HOME) == null ? null : Paths.get((String) args.get(DATA_HOME));\n    if (dataHomePath == null && System.getProperty(DATA_HOME) != null && System.getProperty(DATA_HOME).length() > 0) {\n      // If solr.data.home is not specified explicitly in solrconfig.xml, fall back to global System Property with same name\n      dataHomePath = Paths.get(System.getProperty(DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(DATA_HOME + \"=\" + dataHomePath);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    dataHomePath = args.get(DATA_HOME) == null ? null : Paths.get((String) args.get(DATA_HOME));\n    if (dataHomePath == null && System.getProperty(DATA_HOME) != null && System.getProperty(DATA_HOME).length() > 0) {\n      // If solr.data.home is not specified explicitly in solrconfig.xml, fall back to global System Property with same name\n      dataHomePath = Paths.get(System.getProperty(DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(DATA_HOME + \"=\" + dataHomePath);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    dataHomePath = args.get(DATA_HOME) == null ? null : Paths.get((String) args.get(DATA_HOME));\n    if (dataHomePath == null && System.getProperty(DATA_HOME) != null && System.getProperty(DATA_HOME).length() > 0) {\n      // If solr.data.home is not specified explicitly in solrconfig.xml, fall back to global System Property with same name\n      dataHomePath = Paths.get(System.getProperty(DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(DATA_HOME + \"=\" + dataHomePath);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76ee69c1ab922a45b03e3f1f9989847f66c269bc","date":1500448164,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    // override global config\n    if (args.get(SolrXmlConfig.SOLR_DATA_HOME) != null) {\n      dataHomePath = Paths.get((String) args.get(SolrXmlConfig.SOLR_DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(SolrXmlConfig.SOLR_DATA_HOME + \"=\" + dataHomePath);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    dataHomePath = args.get(DATA_HOME) == null ? null : Paths.get((String) args.get(DATA_HOME));\n    if (dataHomePath == null && System.getProperty(DATA_HOME) != null && System.getProperty(DATA_HOME).length() > 0) {\n      // If solr.data.home is not specified explicitly in solrconfig.xml, fall back to global System Property with same name\n      dataHomePath = Paths.get(System.getProperty(DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(DATA_HOME + \"=\" + dataHomePath);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    // override global config\n    if (args.get(SolrXmlConfig.SOLR_DATA_HOME) != null) {\n      dataHomePath = Paths.get((String) args.get(SolrXmlConfig.SOLR_DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(SolrXmlConfig.SOLR_DATA_HOME + \"=\" + dataHomePath);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    dataHomePath = args.get(DATA_HOME) == null ? null : Paths.get((String) args.get(DATA_HOME));\n    if (dataHomePath == null && System.getProperty(DATA_HOME) != null && System.getProperty(DATA_HOME).length() > 0) {\n      // If solr.data.home is not specified explicitly in solrconfig.xml, fall back to global System Property with same name\n      dataHomePath = Paths.get(System.getProperty(DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(DATA_HOME + \"=\" + dataHomePath);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    // override global config\n    if (args.get(SolrXmlConfig.SOLR_DATA_HOME) != null) {\n      dataHomePath = Paths.get((String) args.get(SolrXmlConfig.SOLR_DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(\"{} = {}\", SolrXmlConfig.SOLR_DATA_HOME, dataHomePath);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    // override global config\n    if (args.get(SolrXmlConfig.SOLR_DATA_HOME) != null) {\n      dataHomePath = Paths.get((String) args.get(SolrXmlConfig.SOLR_DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(SolrXmlConfig.SOLR_DATA_HOME + \"=\" + dataHomePath);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(@SuppressWarnings(\"rawtypes\") NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    // override global config\n    if (args.get(SolrXmlConfig.SOLR_DATA_HOME) != null) {\n      dataHomePath = Paths.get((String) args.get(SolrXmlConfig.SOLR_DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(\"{} = {}\", SolrXmlConfig.SOLR_DATA_HOME, dataHomePath);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    // override global config\n    if (args.get(SolrXmlConfig.SOLR_DATA_HOME) != null) {\n      dataHomePath = Paths.get((String) args.get(SolrXmlConfig.SOLR_DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(\"{} = {}\", SolrXmlConfig.SOLR_DATA_HOME, dataHomePath);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"078208fb22390fe404cc26e34a439c51e6318ed4","date":1591151812,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(@SuppressWarnings(\"rawtypes\") NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    // override global config\n    if (args.get(SolrXmlConfig.SOLR_DATA_HOME) != null) {\n      dataHomePath = Paths.get((String) args.get(SolrXmlConfig.SOLR_DATA_HOME)).toAbsolutePath().normalize();\n    }\n    if (dataHomePath != null) {\n      log.info(\"{} = {}\", SolrXmlConfig.SOLR_DATA_HOME, dataHomePath);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(@SuppressWarnings(\"rawtypes\") NamedList args) {\n    maxWriteMBPerSecFlush = (Double) args.get(\"maxWriteMBPerSecFlush\");\n    maxWriteMBPerSecMerge = (Double) args.get(\"maxWriteMBPerSecMerge\");\n    maxWriteMBPerSecRead = (Double) args.get(\"maxWriteMBPerSecRead\");\n    maxWriteMBPerSecDefault = (Double) args.get(\"maxWriteMBPerSecDefault\");\n\n    // override global config\n    if (args.get(SolrXmlConfig.SOLR_DATA_HOME) != null) {\n      dataHomePath = Paths.get((String) args.get(SolrXmlConfig.SOLR_DATA_HOME));\n    }\n    if (dataHomePath != null) {\n      log.info(\"{} = {}\", SolrXmlConfig.SOLR_DATA_HOME, dataHomePath);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1eafe65017ee691866644025d85b041b4880c5e3":["7530de27b87b961b51f01bd1299b7004d46e8823"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["e22ffe8cc51a892ae103df018822d7873e901c2a","1eafe65017ee691866644025d85b041b4880c5e3"],"75237075d8425856bf4bbf52a6be4f9162b8187d":["140be51d03394488536f4aacedace29f9b318347"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","76ee69c1ab922a45b03e3f1f9989847f66c269bc"],"b3a5de1f264cc577bcb0bbb6fa6577df667974ca":["1eafe65017ee691866644025d85b041b4880c5e3"],"078208fb22390fe404cc26e34a439c51e6318ed4":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"28288370235ed02234a64753cdbf0c6ec096304a":["1eafe65017ee691866644025d85b041b4880c5e3","b3a5de1f264cc577bcb0bbb6fa6577df667974ca"],"140be51d03394488536f4aacedace29f9b318347":["76ee69c1ab922a45b03e3f1f9989847f66c269bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"76ee69c1ab922a45b03e3f1f9989847f66c269bc":["28288370235ed02234a64753cdbf0c6ec096304a"],"7530de27b87b961b51f01bd1299b7004d46e8823":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["1eafe65017ee691866644025d85b041b4880c5e3","b3a5de1f264cc577bcb0bbb6fa6577df667974ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["078208fb22390fe404cc26e34a439c51e6318ed4"]},"commit2Childs":{"1eafe65017ee691866644025d85b041b4880c5e3":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b3a5de1f264cc577bcb0bbb6fa6577df667974ca","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"75237075d8425856bf4bbf52a6be4f9162b8187d":["078208fb22390fe404cc26e34a439c51e6318ed4"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"b3a5de1f264cc577bcb0bbb6fa6577df667974ca":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"078208fb22390fe404cc26e34a439c51e6318ed4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["76ee69c1ab922a45b03e3f1f9989847f66c269bc"],"140be51d03394488536f4aacedace29f9b318347":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"76ee69c1ab922a45b03e3f1f9989847f66c269bc":["936cdd5882761db3b844afd6f84ab81cbb011a75","140be51d03394488536f4aacedace29f9b318347"],"7530de27b87b961b51f01bd1299b7004d46e8823":["1eafe65017ee691866644025d85b041b4880c5e3"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}