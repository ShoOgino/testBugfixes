{"path":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to <arr>\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","sourceOld":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to <arr>\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to <arr>\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","sourceOld":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to <arr>\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to <arr>\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","sourceOld":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to <arr>\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6d3fca4763c45f22581927b942c808dbb2e2aec","date":1347304121,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","sourceOld":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to <arr>\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","date":1402094642,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n\n    if(doc.hasChildDocuments()) {\n      for(SolrDocument childDoc : doc.getChildDocuments()) {\n        writeSolrDocument(null, childDoc, new SolrReturnFields(), idx);\n      }\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","sourceOld":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9","date":1434467834,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (returnFields!= null && !returnFields.wantsField(fname)) {\n        continue;\n      }\n\n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n\n    if(doc.hasChildDocuments()) {\n      for(SolrDocument childDoc : doc.getChildDocuments()) {\n        writeSolrDocument(null, childDoc, new SolrReturnFields(), idx);\n      }\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","sourceOld":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (!returnFields.wantsField(fname)) {\n        continue;\n      }\n      \n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n\n    if(doc.hasChildDocuments()) {\n      for(SolrDocument childDoc : doc.getChildDocuments()) {\n        writeSolrDocument(null, childDoc, new SolrReturnFields(), idx);\n      }\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */\n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (returnFields!= null && !returnFields.wantsField(fname)) {\n        continue;\n      }\n\n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        log.debug(String.valueOf(val));\n      }\n      writeVal(fname, val);\n    }\n\n    if(doc.hasChildDocuments()) {\n      for(SolrDocument childDoc : doc.getChildDocuments()) {\n        writeSolrDocument(null, childDoc, new SolrReturnFields(), idx);\n      }\n    }\n\n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","sourceOld":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */ \n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (returnFields!= null && !returnFields.wantsField(fname)) {\n        continue;\n      }\n\n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        System.out.println( val );\n      }\n      writeVal(fname, val);\n    }\n\n    if(doc.hasChildDocuments()) {\n      for(SolrDocument childDoc : doc.getChildDocuments()) {\n        writeSolrDocument(null, childDoc, new SolrReturnFields(), idx);\n      }\n    }\n    \n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeSolrDocument(String,SolrDocument,ReturnFields,int).mjava","sourceNew":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */\n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (returnFields!= null && !returnFields.wantsField(fname)) {\n        continue;\n      }\n\n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        if (log.isDebugEnabled()) {\n          log.debug(String.valueOf(val));\n        }\n      }\n      writeVal(fname, val);\n    }\n\n    if(doc.hasChildDocuments()) {\n      for(SolrDocument childDoc : doc.getChildDocuments()) {\n        writeSolrDocument(null, childDoc, new SolrReturnFields(), idx);\n      }\n    }\n\n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","sourceOld":"  /**\n   * The SolrDocument should already have multivalued fields implemented as\n   * Collections -- this will not rewrite to &lt;arr&gt;\n   */\n  @Override\n  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    startTag(\"doc\", name, false);\n    incLevel();\n\n    for (String fname : doc.getFieldNames()) {\n      if (returnFields!= null && !returnFields.wantsField(fname)) {\n        continue;\n      }\n\n      Object val = doc.getFieldValue(fname);\n      if( \"_explain_\".equals( fname ) ) {\n        log.debug(String.valueOf(val));\n      }\n      writeVal(fname, val);\n    }\n\n    if(doc.hasChildDocuments()) {\n      for(SolrDocument childDoc : doc.getChildDocuments()) {\n        writeSolrDocument(null, childDoc, new SolrReturnFields(), idx);\n      }\n    }\n\n    decLevel();\n    writer.write(\"</doc>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6d3fca4763c45f22581927b942c808dbb2e2aec":["c26f00b574427b55127e869b935845554afde1fa"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["a6d3fca4763c45f22581927b942c808dbb2e2aec"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9"],"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"]},"commit2Childs":{"a6d3fca4763c45f22581927b942c808dbb2e2aec":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a6d3fca4763c45f22581927b942c808dbb2e2aec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}