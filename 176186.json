{"path":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#createCollection(String,CloudSolrServer).mjava","commits":[{"id":"44de42d869f7d8e5235d43c4ad9a99f520363a2f","date":1389871557,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#createCollection(String,CloudSolrServer).mjava","pathOld":"/dev/null","sourceNew":"  protected void createCollection(String COLL_NAME, CloudSolrServer client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 4;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrServer()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<String,List<Integer>>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#createCollection(String,CloudSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#createCollection(String,CloudSolrServer).mjava","sourceNew":"  protected void createCollection(String COLL_NAME, CloudSolrServer client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 4;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrServer()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","sourceOld":"  protected void createCollection(String COLL_NAME, CloudSolrServer client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 4;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrServer()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<String,List<Integer>>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#createCollection(String,CloudSolrClient).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#createCollection(String,CloudSolrServer).mjava","sourceNew":"  protected void createCollection(String COLL_NAME, CloudSolrClient client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 4;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrClient()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","sourceOld":"  protected void createCollection(String COLL_NAME, CloudSolrServer client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 4;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrServer()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["44de42d869f7d8e5235d43c4ad9a99f520363a2f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"44de42d869f7d8e5235d43c4ad9a99f520363a2f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44de42d869f7d8e5235d43c4ad9a99f520363a2f"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"44de42d869f7d8e5235d43c4ad9a99f520363a2f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}