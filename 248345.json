{"path":"src/test/org/apache/lucene/search/function/TestDocValues#testGetMinValue().mjava","commits":[{"id":"b349dc32b64921c9a2525f14d5dd356e6c1c6a22","date":1245163758,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestDocValues#testGetMinValue().mjava","pathOld":"/dev/null","sourceNew":"  public void testGetMinValue() {\n    float[] innerArray = new float[] { 1.0f, 2.0f, -1.0f, 100.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"-1.0f is the min value in the source array\", -1.0f, docValues\n        .getMinValue());\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"max is NaN - no values in inner array\", Float.isNaN(docValues\n        .getMinValue()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09f95b263bfc35e03a89b814af0d4498bdb95201","date":1245165574,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestDocValues#testGetMinValue().mjava","pathOld":"src/test/org/apache/lucene/search/function/TestDocValues#testGetMinValue().mjava","sourceNew":"  public void testGetMinValue() {\n    float[] innerArray = new float[] { 1.0f, 2.0f, -1.0f, 100.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"-1.0f is the min value in the source array\", -1.0f, docValues\n        .getMinValue(), 0);\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"max is NaN - no values in inner array\", Float.isNaN(docValues\n        .getMinValue()));\n  }\n\n","sourceOld":"  public void testGetMinValue() {\n    float[] innerArray = new float[] { 1.0f, 2.0f, -1.0f, 100.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"-1.0f is the min value in the source array\", -1.0f, docValues\n        .getMinValue());\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"max is NaN - no values in inner array\", Float.isNaN(docValues\n        .getMinValue()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"777b7ef341decfee8757f492d8a154637cd7a384","date":1260037647,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/function/TestDocValues#testGetMinValue().mjava","pathOld":"src/test/org/apache/lucene/search/function/TestDocValues#testGetMinValue().mjava","sourceNew":"  @Test\n  public void testGetMinValue() {\n    float[] innerArray = new float[] { 1.0f, 2.0f, -1.0f, 100.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"-1.0f is the min value in the source array\", -1.0f, docValues\n        .getMinValue(), 0);\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"max is NaN - no values in inner array\", Float.isNaN(docValues\n        .getMinValue()));\n  }\n\n","sourceOld":"  public void testGetMinValue() {\n    float[] innerArray = new float[] { 1.0f, 2.0f, -1.0f, 100.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"-1.0f is the min value in the source array\", -1.0f, docValues\n        .getMinValue(), 0);\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"max is NaN - no values in inner array\", Float.isNaN(docValues\n        .getMinValue()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/function/TestDocValues#testGetMinValue().mjava","pathOld":"src/test/org/apache/lucene/search/function/TestDocValues#testGetMinValue().mjava","sourceNew":"  @Test\n  public void testGetMinValue() {\n    float[] innerArray = new float[] { 1.0f, 2.0f, -1.0f, 100.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"-1.0f is the min value in the source array\", -1.0f, docValues\n        .getMinValue(), 0);\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"max is NaN - no values in inner array\", Float.isNaN(docValues\n        .getMinValue()));\n  }\n\n","sourceOld":"  @Test\n  public void testGetMinValue() {\n    float[] innerArray = new float[] { 1.0f, 2.0f, -1.0f, 100.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"-1.0f is the min value in the source array\", -1.0f, docValues\n        .getMinValue(), 0);\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"max is NaN - no values in inner array\", Float.isNaN(docValues\n        .getMinValue()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b349dc32b64921c9a2525f14d5dd356e6c1c6a22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"777b7ef341decfee8757f492d8a154637cd7a384":["09f95b263bfc35e03a89b814af0d4498bdb95201"],"09f95b263bfc35e03a89b814af0d4498bdb95201":["b349dc32b64921c9a2525f14d5dd356e6c1c6a22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["777b7ef341decfee8757f492d8a154637cd7a384"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b349dc32b64921c9a2525f14d5dd356e6c1c6a22"],"b349dc32b64921c9a2525f14d5dd356e6c1c6a22":["09f95b263bfc35e03a89b814af0d4498bdb95201"],"777b7ef341decfee8757f492d8a154637cd7a384":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"09f95b263bfc35e03a89b814af0d4498bdb95201":["777b7ef341decfee8757f492d8a154637cd7a384"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}