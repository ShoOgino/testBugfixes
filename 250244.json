{"path":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    IndexableField f = null;\n    try {\n      f = fromString(field, String.valueOf(value));\n    } catch (Exception e) {\n      LOG.warn(\"Error parsing pre-analyzed field '\" + field.getName() + \"'\", e);\n      return null;\n    }\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public IndexableField createField(SchemaField field, Object value,\n          float boost) {\n    IndexableField f = null;\n    try {\n      f = fromString(field, String.valueOf(value), boost);\n    } catch (Exception e) {\n      LOG.warn(\"Error parsing pre-analyzed field '\" + field.getName() + \"'\", e);\n      return null;\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object).mjava","sourceNew":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    IndexableField f = null;\n    try {\n      f = fromString(field, String.valueOf(value));\n    } catch (Exception e) {\n      log.warn(\"Error parsing pre-analyzed field '\" + field.getName() + \"'\", e);\n      return null;\n    }\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    IndexableField f = null;\n    try {\n      f = fromString(field, String.valueOf(value));\n    } catch (Exception e) {\n      LOG.warn(\"Error parsing pre-analyzed field '\" + field.getName() + \"'\", e);\n      return null;\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9df8125ba9193a2e2e285ed92157810b1952a244","date":1587326330,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object).mjava","sourceNew":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    IndexableField f = null;\n    try {\n      f = fromString(field, String.valueOf(value));\n    } catch (Exception e) {\n      if (log.isWarnEnabled()) {\n        log.warn(\"Error parsing pre-analyzed field '{}'\", field.getName(), e);\n      }\n      return null;\n    }\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    IndexableField f = null;\n    try {\n      f = fromString(field, String.valueOf(value));\n    } catch (Exception e) {\n      log.warn(\"Error parsing pre-analyzed field '\" + field.getName() + \"'\", e);\n      return null;\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/PreAnalyzedField#createField(SchemaField,Object).mjava","sourceNew":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    IndexableField f = null;\n    try {\n      f = fromString(field, String.valueOf(value));\n    } catch (Exception e) {\n      log.warn(\"Error parsing pre-analyzed field '{}'\", field.getName(), e);\n      return null;\n    }\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    IndexableField f = null;\n    try {\n      f = fromString(field, String.valueOf(value));\n    } catch (Exception e) {\n      if (log.isWarnEnabled()) {\n        log.warn(\"Error parsing pre-analyzed field '{}'\", field.getName(), e);\n      }\n      return null;\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["9df8125ba9193a2e2e285ed92157810b1952a244"],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"],"9df8125ba9193a2e2e285ed92157810b1952a244":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"acd9883560fd89e6448b2b447302fe543040cd4f":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"9df8125ba9193a2e2e285ed92157810b1952a244":["575e66bd4b2349209027f6801184da7fc3cba13f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["9df8125ba9193a2e2e285ed92157810b1952a244"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}