{"path":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","sourceNew":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\"))), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new MatchAllDocsQuery(), new PrefixFilter(new Term(\"field\", \"o\"))), ConstantScoreQuery.class);\n  }\n\n","sourceOld":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\"))), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new MatchAllDocsQuery(), new PrefixFilter(new Term(\"field\", \"o\"))), ConstantScoreQuery.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eb3122482ef235fbee3d696501977399ec0af6f","date":1358856510,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","sourceNew":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new MatchAllDocsQuery(), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), ConstantScoreQuery.class);\n  }\n\n","sourceOld":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\"))), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new MatchAllDocsQuery(), new PrefixFilter(new Term(\"field\", \"o\"))), ConstantScoreQuery.class);\n  }\n\n","bugFix":["586cf43028f4cae848088bc127a6e4d6773ce9aa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d5244a676b83c2d551c3746e8181588ba619e1","date":1359031414,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","sourceNew":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new MatchAllDocsQuery(), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), ConstantScoreQuery.class);\n  }\n\n","sourceOld":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\"))), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new MatchAllDocsQuery(), new PrefixFilter(new Term(\"field\", \"o\"))), ConstantScoreQuery.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40640359164f629dd440a47df2e145d084ce9645","date":1391711808,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","sourceNew":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n  }\n\n","sourceOld":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new MatchAllDocsQuery(), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), ConstantScoreQuery.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2713584a660051cd646423be682771e3bbd99985","date":1425046322,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","sourceNew":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new CachingWrapperFilter(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new CachingWrapperFilter(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n  }\n\n","sourceOld":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","sourceNew":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new FilterWrapper(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new FilterWrapper(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n  }\n\n","sourceOld":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new CachingWrapperFilter(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new CachingWrapperFilter(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","sourceNew":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new FilterWrapper(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new FilterWrapper(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n  }\n\n","sourceOld":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new PrefixFilter(new Term(\"field\", \"o\")), randomFilterStrategy()), FilteredQuery.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1db68e96dd908fcd79ef809095822736aa601d08","date":1434630596,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#testRewrite().mjava","sourceNew":null,"sourceOld":"  public void testRewrite() throws Exception {\n    assertRewrite(new FilteredQuery(new TermQuery(new Term(\"field\", \"one\")), new FilterWrapper(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n    assertRewrite(new FilteredQuery(new PrefixQuery(new Term(\"field\", \"one\")), new FilterWrapper(new QueryWrapperFilter(new PrefixQuery(new Term(\"field\", \"o\")))), randomFilterStrategy()), FilteredQuery.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["40640359164f629dd440a47df2e145d084ce9645","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"1db68e96dd908fcd79ef809095822736aa601d08":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"2713584a660051cd646423be682771e3bbd99985":["40640359164f629dd440a47df2e145d084ce9645"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["2713584a660051cd646423be682771e3bbd99985"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40640359164f629dd440a47df2e145d084ce9645":["9eb3122482ef235fbee3d696501977399ec0af6f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1db68e96dd908fcd79ef809095822736aa601d08"],"9eb3122482ef235fbee3d696501977399ec0af6f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9eb3122482ef235fbee3d696501977399ec0af6f"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"1db68e96dd908fcd79ef809095822736aa601d08":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2713584a660051cd646423be682771e3bbd99985":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1db68e96dd908fcd79ef809095822736aa601d08"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9eb3122482ef235fbee3d696501977399ec0af6f","b2d5244a676b83c2d551c3746e8181588ba619e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"40640359164f629dd440a47df2e145d084ce9645":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2713584a660051cd646423be682771e3bbd99985"],"9eb3122482ef235fbee3d696501977399ec0af6f":["40640359164f629dd440a47df2e145d084ce9645","b2d5244a676b83c2d551c3746e8181588ba619e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b2d5244a676b83c2d551c3746e8181588ba619e1":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b2d5244a676b83c2d551c3746e8181588ba619e1"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}