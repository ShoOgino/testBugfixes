{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#fromDocument(Document,Analyzer,boolean,boolean,long).mjava","commits":[{"id":"b8b87263526557a451254f824e63e454e43e47ad","date":1453798964,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#fromDocument(Document,Analyzer,boolean,boolean,long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a MemoryIndex from a lucene {@link Document} using an analyzer\n   * @param document the document to index\n   * @param analyzer the analyzer to use\n   * @param storeOffsets <code>true</code> if offsets should be stored\n   * @param storePayloads <code>true</code> if payloads should be stored\n   * @param maxReusedBytes the number of bytes that should remain in the internal memory pools after {@link #reset()} is called\n   * @return a MemoryIndex\n   */\n  public static MemoryIndex fromDocument(Document document, Analyzer analyzer, boolean storeOffsets, boolean storePayloads, long maxReusedBytes) {\n    MemoryIndex mi = new MemoryIndex(storeOffsets, storePayloads, maxReusedBytes);\n    for (IndexableField field : document) {\n      mi.addField(field, analyzer);\n    }\n    return mi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac88193d9fe80e165a43bb0555c43afa83da8330","date":1453823827,"type":0,"author":"jbernste","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#fromDocument(Document,Analyzer,boolean,boolean,long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a MemoryIndex from a lucene {@link Document} using an analyzer\n   * @param document the document to index\n   * @param analyzer the analyzer to use\n   * @param storeOffsets <code>true</code> if offsets should be stored\n   * @param storePayloads <code>true</code> if payloads should be stored\n   * @param maxReusedBytes the number of bytes that should remain in the internal memory pools after {@link #reset()} is called\n   * @return a MemoryIndex\n   */\n  public static MemoryIndex fromDocument(Document document, Analyzer analyzer, boolean storeOffsets, boolean storePayloads, long maxReusedBytes) {\n    MemoryIndex mi = new MemoryIndex(storeOffsets, storePayloads, maxReusedBytes);\n    for (IndexableField field : document) {\n      mi.addField(field, analyzer);\n    }\n    return mi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#fromDocument(Document,Analyzer,boolean,boolean,long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a MemoryIndex from a lucene {@link Document} using an analyzer\n   * @param document the document to index\n   * @param analyzer the analyzer to use\n   * @param storeOffsets <code>true</code> if offsets should be stored\n   * @param storePayloads <code>true</code> if payloads should be stored\n   * @param maxReusedBytes the number of bytes that should remain in the internal memory pools after {@link #reset()} is called\n   * @return a MemoryIndex\n   */\n  public static MemoryIndex fromDocument(Document document, Analyzer analyzer, boolean storeOffsets, boolean storePayloads, long maxReusedBytes) {\n    MemoryIndex mi = new MemoryIndex(storeOffsets, storePayloads, maxReusedBytes);\n    for (IndexableField field : document) {\n      mi.addField(field, analyzer);\n    }\n    return mi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9467bd9076efb6ae46ffaa65b80173aebd5dc089","date":1457615154,"type":5,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#fromDocument(Iterable[#-extends-IndexableField],Analyzer,boolean,boolean,long).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#fromDocument(Document,Analyzer,boolean,boolean,long).mjava","sourceNew":"  /**\n   * Builds a MemoryIndex from a lucene {@link Document} using an analyzer\n   * @param document the document to index\n   * @param analyzer the analyzer to use\n   * @param storeOffsets <code>true</code> if offsets should be stored\n   * @param storePayloads <code>true</code> if payloads should be stored\n   * @param maxReusedBytes the number of bytes that should remain in the internal memory pools after {@link #reset()} is called\n   * @return a MemoryIndex\n   */\n  public static MemoryIndex fromDocument(Iterable<? extends IndexableField> document, Analyzer analyzer, boolean storeOffsets, boolean storePayloads, long maxReusedBytes) {\n    MemoryIndex mi = new MemoryIndex(storeOffsets, storePayloads, maxReusedBytes);\n    for (IndexableField field : document) {\n      mi.addField(field, analyzer);\n    }\n    return mi;\n  }\n\n","sourceOld":"  /**\n   * Builds a MemoryIndex from a lucene {@link Document} using an analyzer\n   * @param document the document to index\n   * @param analyzer the analyzer to use\n   * @param storeOffsets <code>true</code> if offsets should be stored\n   * @param storePayloads <code>true</code> if payloads should be stored\n   * @param maxReusedBytes the number of bytes that should remain in the internal memory pools after {@link #reset()} is called\n   * @return a MemoryIndex\n   */\n  public static MemoryIndex fromDocument(Document document, Analyzer analyzer, boolean storeOffsets, boolean storePayloads, long maxReusedBytes) {\n    MemoryIndex mi = new MemoryIndex(storeOffsets, storePayloads, maxReusedBytes);\n    for (IndexableField field : document) {\n      mi.addField(field, analyzer);\n    }\n    return mi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac88193d9fe80e165a43bb0555c43afa83da8330":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b8b87263526557a451254f824e63e454e43e47ad"],"b8b87263526557a451254f824e63e454e43e47ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9467bd9076efb6ae46ffaa65b80173aebd5dc089":["ac88193d9fe80e165a43bb0555c43afa83da8330"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac88193d9fe80e165a43bb0555c43afa83da8330"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9467bd9076efb6ae46ffaa65b80173aebd5dc089"]},"commit2Childs":{"ac88193d9fe80e165a43bb0555c43afa83da8330":["9467bd9076efb6ae46ffaa65b80173aebd5dc089","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"b8b87263526557a451254f824e63e454e43e47ad":["ac88193d9fe80e165a43bb0555c43afa83da8330"],"9467bd9076efb6ae46ffaa65b80173aebd5dc089":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac88193d9fe80e165a43bb0555c43afa83da8330","b8b87263526557a451254f824e63e454e43e47ad","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}