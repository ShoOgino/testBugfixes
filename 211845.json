{"path":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","commits":[{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"/dev/null","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8","date":1254593002,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setAnalyzer(new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setAnalyzer(new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter(indexStore, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new SimpleAnalyzer(\n        TEST_VERSION_CURRENT)).setMaxBufferedDocs(4));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["63bc3238545c6012bd44f5d294077997f236bc4e"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"63bc3238545c6012bd44f5d294077997f236bc4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["63bc3238545c6012bd44f5d294077997f236bc4e"],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"63bc3238545c6012bd44f5d294077997f236bc4e":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}