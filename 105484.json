{"path":"solr/core/src/java/org/apache/solr/search/EarlyTerminatingCollector#getLeafCollector(LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/EarlyTerminatingCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    prevReaderCumulativeSize += currentReaderSize; // not current any more\n    currentReaderSize = context.reader().maxDoc() - 1;\n\n    return new FilterLeafCollector(super.getLeafCollector(context)) {\n\n      /**\n       * This collector requires that docs be collected in order, otherwise\n       * the computed number of scanned docs in the resulting\n       * {@link EarlyTerminatingCollectorException} will be meaningless.\n       */\n      @Override\n      public boolean acceptsDocsOutOfOrder() {\n        return false;\n      }\n\n      @Override\n      public void collect(int doc) throws IOException {\n        super.collect(doc);\n        numCollected++;\n        if (maxDocsToCollect <= numCollected) {\n          throw new EarlyTerminatingCollectorException\n            (numCollected, prevReaderCumulativeSize + (doc + 1));\n        }\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/EarlyTerminatingCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/EarlyTerminatingCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    prevReaderCumulativeSize += currentReaderSize; // not current any more\n    currentReaderSize = context.reader().maxDoc() - 1;\n\n    return new FilterLeafCollector(super.getLeafCollector(context)) {\n\n      @Override\n      public void collect(int doc) throws IOException {\n        super.collect(doc);\n        numCollected++;\n        if (maxDocsToCollect <= numCollected) {\n          throw new EarlyTerminatingCollectorException\n            (numCollected, prevReaderCumulativeSize + (doc + 1));\n        }\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    prevReaderCumulativeSize += currentReaderSize; // not current any more\n    currentReaderSize = context.reader().maxDoc() - 1;\n\n    return new FilterLeafCollector(super.getLeafCollector(context)) {\n\n      /**\n       * This collector requires that docs be collected in order, otherwise\n       * the computed number of scanned docs in the resulting\n       * {@link EarlyTerminatingCollectorException} will be meaningless.\n       */\n      @Override\n      public boolean acceptsDocsOutOfOrder() {\n        return false;\n      }\n\n      @Override\n      public void collect(int doc) throws IOException {\n        super.collect(doc);\n        numCollected++;\n        if (maxDocsToCollect <= numCollected) {\n          throw new EarlyTerminatingCollectorException\n            (numCollected, prevReaderCumulativeSize + (doc + 1));\n        }\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"]},"commit2Childs":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}