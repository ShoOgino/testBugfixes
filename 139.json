{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    this.delCount = delCount;\n    assert delCount <= info.getDocCount();\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    this.delCount = delCount;\n    assert delCount <= info.getDocCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4ac68b353fb5616cfc6067741970000e8ee39a5","date":1397826520,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.getDocCount()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (docCount=\" + info.getDocCount() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    this.delCount = delCount;\n    assert delCount <= info.getDocCount();\n  }\n\n","bugFix":["203d7d3cb7712e10ef33009a63247ae40c302d7a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.getDocCount()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (docCount=\" + info.getDocCount() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.getDocCount()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (docCount=\" + info.getDocCount() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.getDocCount()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (docCount=\" + info.getDocCount() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc();\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","bugFix":null,"bugIntro":["76fa08feb5824ec6249c5398bfc8578b93738cd8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc();\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc();\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    this.delCount = delCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"76fa08feb5824ec6249c5398bfc8578b93738cd8","date":1530756947,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc() : \"maxDoc=\" + info.maxDoc() + \",delCount=\" + delCount + \",softDelCount=\" + softDelCount;\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc();\n    this.delCount = delCount;\n  }\n\n","bugFix":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc() : \"maxDoc=\" + info.maxDoc() + \",delCount=\" + delCount + \",softDelCount=\" + softDelCount;\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc();\n    this.delCount = delCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#setDelCount(int).mjava","sourceNew":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc() : \"maxDoc=\" + info.maxDoc() + \",delCount=\" + delCount + \",softDelCount=\" + softDelCount;\n    this.delCount = delCount;\n  }\n\n","sourceOld":"  void setDelCount(int delCount) {\n    if (delCount < 0 || delCount > info.maxDoc()) {\n      throw new IllegalArgumentException(\"invalid delCount=\" + delCount + \" (maxDoc=\" + info.maxDoc() + \")\");\n    }\n    assert softDelCount + delCount <= info.maxDoc();\n    this.delCount = delCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0267c69e2456a3477a1ad785723f2135da3117e":["f4ac68b353fb5616cfc6067741970000e8ee39a5"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["f4ac68b353fb5616cfc6067741970000e8ee39a5","b0267c69e2456a3477a1ad785723f2135da3117e"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["b70042a8a492f7054d480ccdd2be9796510d4327","76fa08feb5824ec6249c5398bfc8578b93738cd8"],"b06445ae1731e049327712db0454e5643ca9b7fe":["f4ac68b353fb5616cfc6067741970000e8ee39a5","b0267c69e2456a3477a1ad785723f2135da3117e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["b0267c69e2456a3477a1ad785723f2135da3117e","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"76fa08feb5824ec6249c5398bfc8578b93738cd8":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"f4ac68b353fb5616cfc6067741970000e8ee39a5":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["b0267c69e2456a3477a1ad785723f2135da3117e"],"f592209545c71895260367152601e9200399776d":["b0267c69e2456a3477a1ad785723f2135da3117e","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["76fa08feb5824ec6249c5398bfc8578b93738cd8"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["f592209545c71895260367152601e9200399776d","76fa08feb5824ec6249c5398bfc8578b93738cd8"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["f4ac68b353fb5616cfc6067741970000e8ee39a5"],"b0267c69e2456a3477a1ad785723f2135da3117e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"b70042a8a492f7054d480ccdd2be9796510d4327":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"76fa08feb5824ec6249c5398bfc8578b93738cd8":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"f4ac68b353fb5616cfc6067741970000e8ee39a5":["b0267c69e2456a3477a1ad785723f2135da3117e","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["b70042a8a492f7054d480ccdd2be9796510d4327","76fa08feb5824ec6249c5398bfc8578b93738cd8","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":["7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}