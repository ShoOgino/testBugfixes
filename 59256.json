{"path":"solr/core/src/java/org/apache/solr/core/LibListener#updateRuntimeLibs(Map[String,Object]).mjava","commits":[{"id":"fb50877dc038c021eba3a70999fd1f6ed85001c1","date":1563596432,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/LibListener#updateRuntimeLibs(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private boolean updateRuntimeLibs(Map<String, Object> properties) {\n    Map m = (Map) properties.getOrDefault(RuntimeLib.TYPE, Collections.emptyMap());\n    if (runtimeLibs.isEmpty() && m.isEmpty()) return false;\n    boolean needsReload[] = new boolean[1];\n    if (m.size() == runtimeLibs.size()) {\n      m.forEach((k, v) -> {\n        if (v instanceof Map) {\n          if (!runtimeLibs.containsKey(k)) needsReload[0] = true;\n          RuntimeLib rtl = runtimeLibs.get(k);\n          if (rtl == null || !Objects.equals(rtl.getSha512(), ((Map) v).get(SHA512))) {\n            needsReload[0] = true;\n          }\n        }\n\n      });\n    } else {\n      needsReload[0] = true;\n    }\n    if (needsReload[0]) {\n      createNewClassLoader(m);\n    }\n    return needsReload[0];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39dabfd19b49b248d63cedbb01ea144ee5ad071c","date":1566241238,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PackageManager#updatePackages(Map[String,Object],int).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/LibListener#updateRuntimeLibs(Map[String,Object]).mjava","sourceNew":"  private boolean updatePackages(Map<String, Object> properties, int ver) {\n    Map m = (Map) properties.getOrDefault(PACKAGE, Collections.emptyMap());\n    if (pkgs.isEmpty() && m.isEmpty()) return false;\n    boolean needsReload[] = new boolean[1];\n    if (m.size() == pkgs.size()) {\n      m.forEach((k, v) -> {\n        if (v instanceof Map) {\n          Package pkg = pkgs.get(k);\n          if (pkg == null || pkg.isModified((Map) v)) {\n            needsReload[0] = true;\n          }\n        }\n      });\n    } else {\n      needsReload[0] = true;\n    }\n    if (needsReload[0]) {\n      createNewClassLoader(m, ver);\n    }\n    return needsReload[0];\n  }\n\n","sourceOld":"  private boolean updateRuntimeLibs(Map<String, Object> properties) {\n    Map m = (Map) properties.getOrDefault(RuntimeLib.TYPE, Collections.emptyMap());\n    if (runtimeLibs.isEmpty() && m.isEmpty()) return false;\n    boolean needsReload[] = new boolean[1];\n    if (m.size() == runtimeLibs.size()) {\n      m.forEach((k, v) -> {\n        if (v instanceof Map) {\n          if (!runtimeLibs.containsKey(k)) needsReload[0] = true;\n          RuntimeLib rtl = runtimeLibs.get(k);\n          if (rtl == null || !Objects.equals(rtl.getSha512(), ((Map) v).get(SHA512))) {\n            needsReload[0] = true;\n          }\n        }\n\n      });\n    } else {\n      needsReload[0] = true;\n    }\n    if (needsReload[0]) {\n      createNewClassLoader(m);\n    }\n    return needsReload[0];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"39dabfd19b49b248d63cedbb01ea144ee5ad071c":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["39dabfd19b49b248d63cedbb01ea144ee5ad071c"]},"commit2Childs":{"39dabfd19b49b248d63cedbb01ea144ee5ad071c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["39dabfd19b49b248d63cedbb01ea144ee5ad071c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}