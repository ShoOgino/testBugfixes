{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":["fafd002a407d38098f1f0edf4365f971102ae0ef"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"000498895a9d8c442dd10d03121bd753ec00bc0e","date":1389468193,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      payloadAttribute.setPayload(next.getPayload());\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae230518a1a68acc124bef8df61ef94bd7c1295e","date":1417181719,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (incrementToken == null) {\n      incrementToken = firstToken;\n      if (incrementToken == null) {\n        return false;\n      }\n    } else if (incrementToken.next != null) {\n      incrementToken = incrementToken.next;\n    } else {\n      return false;\n    }\n    clearAttributes();\n    termAttribute.copyBuffer(incrementToken.termChars, 0, incrementToken.termCharsLen);\n    positionIncrementAttribute.setPositionIncrement(incrementToken.positionIncrement);\n    if (offsetAttribute != null) {\n      offsetAttribute.setOffset(incrementToken.startOffset, incrementToken.endOffset);\n    }\n    if (payloadAttribute != null) {\n      payloadAttribute.setPayload(incrementToken.payload);\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (this.tokensAtCurrentPosition.hasNext()) {\n      final Token next = this.tokensAtCurrentPosition.next();\n      clearAttributes();\n      termAttribute.setEmpty().append(next);\n      positionIncrementAttribute.setPositionIncrement(next\n          .getPositionIncrement());\n      offsetAttribute.setOffset(next.startOffset(), next.endOffset());\n      payloadAttribute.setPayload(next.getPayload());\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"714aa8d007eef87d7203cfc6e0fe4dab8dd8a497","date":1417181893,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermVector#incrementToken().mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (incrementToken == null) {\n      incrementToken = firstToken;\n      if (incrementToken == null) {\n        return false;\n      }\n    } else if (incrementToken.next != null) {\n      incrementToken = incrementToken.next;\n    } else {\n      return false;\n    }\n    clearAttributes();\n    termAttribute.copyBuffer(incrementToken.termChars, 0, incrementToken.termCharsLen);\n    positionIncrementAttribute.setPositionIncrement(incrementToken.positionIncrement);\n    if (offsetAttribute != null) {\n      offsetAttribute.setOffset(incrementToken.startOffset, incrementToken.endOffset);\n    }\n    if (payloadAttribute != null) {\n      payloadAttribute.setPayload(incrementToken.payload);\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (incrementToken == null) {\n      incrementToken = firstToken;\n      if (incrementToken == null) {\n        return false;\n      }\n    } else if (incrementToken.next != null) {\n      incrementToken = incrementToken.next;\n    } else {\n      return false;\n    }\n    clearAttributes();\n    termAttribute.copyBuffer(incrementToken.termChars, 0, incrementToken.termCharsLen);\n    positionIncrementAttribute.setPositionIncrement(incrementToken.positionIncrement);\n    if (offsetAttribute != null) {\n      offsetAttribute.setOffset(incrementToken.startOffset, incrementToken.endOffset);\n    }\n    if (payloadAttribute != null) {\n      payloadAttribute.setPayload(incrementToken.payload);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"714aa8d007eef87d7203cfc6e0fe4dab8dd8a497":["ae230518a1a68acc124bef8df61ef94bd7c1295e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae230518a1a68acc124bef8df61ef94bd7c1295e":["000498895a9d8c442dd10d03121bd753ec00bc0e"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"000498895a9d8c442dd10d03121bd753ec00bc0e":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["714aa8d007eef87d7203cfc6e0fe4dab8dd8a497"]},"commit2Childs":{"714aa8d007eef87d7203cfc6e0fe4dab8dd8a497":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"ae230518a1a68acc124bef8df61ef94bd7c1295e":["714aa8d007eef87d7203cfc6e0fe4dab8dd8a497"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","000498895a9d8c442dd10d03121bd753ec00bc0e"],"000498895a9d8c442dd10d03121bd753ec00bc0e":["ae230518a1a68acc124bef8df61ef94bd7c1295e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}