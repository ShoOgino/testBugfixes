{"path":"lucene/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[]).mjava","pathOld":"src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[]).mjava","sourceNew":"    void assertByteArrayEquals(byte[] b1, byte[] b2) {\n        if (b1.length != b2.length) {\n          fail(\"Byte arrays have different lengths: \" + b1.length + \", \" + b2.length);\n        }\n        \n        for (int i = 0; i < b1.length; i++) {\n          if (b1[i] != b2[i]) {\n            fail(\"Byte arrays different at index \" + i + \": \" + b1[i] + \", \" + b2[i]);\n          }\n        }\n      }    \n\n","sourceOld":"    void assertByteArrayEquals(byte[] b1, byte[] b2) {\n        if (b1.length != b2.length) {\n          fail(\"Byte arrays have different lengths: \" + b1.length + \", \" + b2.length);\n        }\n        \n        for (int i = 0; i < b1.length; i++) {\n          if (b1[i] != b2[i]) {\n            fail(\"Byte arrays different at index \" + i + \": \" + b1[i] + \", \" + b2[i]);\n          }\n        }\n      }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[]).mjava","sourceNew":"    void assertByteArrayEquals(byte[] b1, byte[] b2) {\n        if (b1.length != b2.length) {\n          fail(\"Byte arrays have different lengths: \" + b1.length + \", \" + b2.length);\n        }\n        \n        for (int i = 0; i < b1.length; i++) {\n          if (b1[i] != b2[i]) {\n            fail(\"Byte arrays different at index \" + i + \": \" + b1[i] + \", \" + b2[i]);\n          }\n        }\n      }    \n\n","sourceOld":"    void assertByteArrayEquals(byte[] b1, byte[] b2) {\n        if (b1.length != b2.length) {\n          fail(\"Byte arrays have different lengths: \" + b1.length + \", \" + b2.length);\n        }\n        \n        for (int i = 0; i < b1.length; i++) {\n          if (b1[i] != b2[i]) {\n            fail(\"Byte arrays different at index \" + i + \": \" + b1[i] + \", \" + b2[i]);\n          }\n        }\n      }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}