{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"/dev/null","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    shardCount = atLeast(3);\n    sliceCount = 2;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"/dev/null","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    shardCount = atLeast(3);\n    sliceCount = 2;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"/dev/null","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    shardCount = atLeast(3);\n    sliceCount = 2;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33bdd4aa796e0067ba181b149f1580a94d0ff5e0","date":1342362884,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = atLeast(2);\n    shardCount = atLeast(sliceCount * 2);\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    shardCount = atLeast(3);\n    sliceCount = 2;\n  }\n\n","bugFix":null,"bugIntro":["933fa8f09adfcd1a858cd0fc7912e21ee993b7fc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = atLeast(2);\n    shardCount = atLeast(sliceCount * 2);\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    shardCount = atLeast(3);\n    sliceCount = 2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"933fa8f09adfcd1a858cd0fc7912e21ee993b7fc","date":1342989037,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 2;\n    shardCount = 6;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = atLeast(2);\n    shardCount = atLeast(sliceCount * 2);\n  }\n\n","bugFix":["33bdd4aa796e0067ba181b149f1580a94d0ff5e0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 2;\n    shardCount = 6;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = atLeast(2);\n    shardCount = atLeast(sliceCount * 2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 2;\n    shardCount = 6;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    shardCount = atLeast(3);\n    sliceCount = 2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66c64e8cfded6a585100e6430238faaf416f3fea","date":1344964603,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 3;\n    shardCount = 12;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 2;\n    shardCount = 6;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 3;\n    shardCount = 12;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 2;\n    shardCount = 6;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 3;\n    shardCount = 12;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 2;\n    shardCount = 6;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6013b4c7388f1627659c8f96c44abd10a294d3a6","date":1346343796,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 1;\n    shardCount = 7;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 3;\n    shardCount = 12;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 1;\n    shardCount = 7;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 3;\n    shardCount = 12;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e944a5054c306faca0afe33386aeb79f15768672","date":1357083559,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"2\"));\n    shardCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"7\"));\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 1;\n    shardCount = 7;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"2\"));\n    shardCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"7\"));\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = 1;\n    shardCount = 7;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"114cbe27e8bd86096b99f1b2098e551a70e0da4c","date":1408901798,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    shardCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    \n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n    if (shardCount == -1) {\n      shardCount = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2);\n    }\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"2\"));\n    shardCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"7\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2);\n    }\n    fixShardCount(numShards);\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    shardCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    \n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n    if (shardCount == -1) {\n      shardCount = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec2eb42268d70ebd763ef125d330c17e3e6bb6b","date":1424161131,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2);\n    }\n    fixShardCount(numShards);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98287baa2c8d136e801f366a73e27a23285b7b98","date":1427241813,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n\n    // None of the operations used here are particularly costly, so this should work.\n    // Using this low timeout will also help us catch index stalling.\n    clientSoTimeout = 5000;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n\n    // None of the operations used here are particularly costly, so this should work.\n    // Using this low timeout will also help us catch index stalling.\n    clientSoTimeout = 5000;\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43d1e498704edd2bba13548a189eed4dfccff11b","date":1499143458,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n\n\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n\n    // None of the operations used here are particularly costly, so this should work.\n    // Using this low timeout will also help us catch index stalling.\n    clientSoTimeout = 5000;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ea161f828a3a7a6eb9410a431aecda6d7ab1065","date":1499213384,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n\n\n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n\n    // None of the operations used here are particularly costly, so this should work.\n    // Using this low timeout will also help us catch index stalling.\n    clientSoTimeout = 5000;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest#ChaosMonkeyNothingIsSafeTest().mjava","sourceNew":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n\n\n    // TODO: we only do this sometimes so that we can sometimes compare against control,\n    // it's currently hard to know what requests failed when using ConcurrentSolrUpdateServer\n    runFullThrottle = random().nextBoolean();\n    \n  }\n\n","sourceOld":"  public ChaosMonkeyNothingIsSafeTest() {\n    super();\n    sliceCount = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.slicecount\", \"-1\"));\n    if (sliceCount == -1) {\n      sliceCount = random().nextInt(TEST_NIGHTLY ? 5 : 3) + 1;\n    }\n\n    int numShards = Integer.parseInt(System.getProperty(\"solr.tests.cloud.cm.shardcount\", \"-1\"));\n    if (numShards == -1) {\n      // we make sure that there's at least one shard with more than one replica\n      // so that the ChaosMonkey has something to kill\n      numShards = sliceCount + random().nextInt(TEST_NIGHTLY ? 12 : 2) + 1;\n    }\n    fixShardCount(numShards);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fec2eb42268d70ebd763ef125d330c17e3e6bb6b":["abb23fcc2461782ab204e61213240feb77d355aa"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["6013b4c7388f1627659c8f96c44abd10a294d3a6","e944a5054c306faca0afe33386aeb79f15768672"],"e944a5054c306faca0afe33386aeb79f15768672":["6013b4c7388f1627659c8f96c44abd10a294d3a6"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["43d1e498704edd2bba13548a189eed4dfccff11b"],"abb23fcc2461782ab204e61213240feb77d355aa":["114cbe27e8bd86096b99f1b2098e551a70e0da4c"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","66c64e8cfded6a585100e6430238faaf416f3fea"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["aba371508186796cc6151d8223a5b4e16d02e26e","66c64e8cfded6a585100e6430238faaf416f3fea"],"6013b4c7388f1627659c8f96c44abd10a294d3a6":["66c64e8cfded6a585100e6430238faaf416f3fea"],"933fa8f09adfcd1a858cd0fc7912e21ee993b7fc":["33bdd4aa796e0067ba181b149f1580a94d0ff5e0"],"43d1e498704edd2bba13548a189eed4dfccff11b":["98287baa2c8d136e801f366a73e27a23285b7b98"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fec2eb42268d70ebd763ef125d330c17e3e6bb6b","98287baa2c8d136e801f366a73e27a23285b7b98"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":["98287baa2c8d136e801f366a73e27a23285b7b98","43d1e498704edd2bba13548a189eed4dfccff11b"],"aba371508186796cc6151d8223a5b4e16d02e26e":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","933fa8f09adfcd1a858cd0fc7912e21ee993b7fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["fe33227f6805edab2036cbb80645cc4e2d1fa424","933fa8f09adfcd1a858cd0fc7912e21ee993b7fc"],"66c64e8cfded6a585100e6430238faaf416f3fea":["933fa8f09adfcd1a858cd0fc7912e21ee993b7fc"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"98287baa2c8d136e801f366a73e27a23285b7b98":["fec2eb42268d70ebd763ef125d330c17e3e6bb6b"],"114cbe27e8bd86096b99f1b2098e551a70e0da4c":["e944a5054c306faca0afe33386aeb79f15768672"],"33bdd4aa796e0067ba181b149f1580a94d0ff5e0":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","6013b4c7388f1627659c8f96c44abd10a294d3a6"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","33bdd4aa796e0067ba181b149f1580a94d0ff5e0"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"fec2eb42268d70ebd763ef125d330c17e3e6bb6b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98287baa2c8d136e801f366a73e27a23285b7b98"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"e944a5054c306faca0afe33386aeb79f15768672":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","114cbe27e8bd86096b99f1b2098e551a70e0da4c"],"abb23fcc2461782ab204e61213240feb77d355aa":["fec2eb42268d70ebd763ef125d330c17e3e6bb6b"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"6013b4c7388f1627659c8f96c44abd10a294d3a6":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","e944a5054c306faca0afe33386aeb79f15768672","05a14b2611ead08655a2b2bdc61632eb31316e57"],"933fa8f09adfcd1a858cd0fc7912e21ee993b7fc":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","66c64e8cfded6a585100e6430238faaf416f3fea"],"43d1e498704edd2bba13548a189eed4dfccff11b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"66c64e8cfded6a585100e6430238faaf416f3fea":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","6013b4c7388f1627659c8f96c44abd10a294d3a6"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"114cbe27e8bd86096b99f1b2098e551a70e0da4c":["abb23fcc2461782ab204e61213240feb77d355aa"],"98287baa2c8d136e801f366a73e27a23285b7b98":["43d1e498704edd2bba13548a189eed4dfccff11b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"33bdd4aa796e0067ba181b149f1580a94d0ff5e0":["933fa8f09adfcd1a858cd0fc7912e21ee993b7fc","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","aba371508186796cc6151d8223a5b4e16d02e26e","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","33bdd4aa796e0067ba181b149f1580a94d0ff5e0","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b05c56a41b733e02a189c48895922b5bd8c7f3d1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0d22ac6a4146774c1bc8400160fc0b6150294e92","2ea161f828a3a7a6eb9410a431aecda6d7ab1065","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}