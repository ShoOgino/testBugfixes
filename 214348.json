{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#bytesRefToString(BytesRef).mjava","commits":[{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#bytesRefToString(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** For debugging: tries to include br.utf8ToString(), but if that\n   *  fails (because it's not valid utf8, which is fine!), just\n   *  use ordinary toString. */\n  public static String bytesRefToString(BytesRef br) {\n    if (br == null) {\n      return \"(null)\";\n    } else {\n      try {\n        return br.utf8ToString() + \" \" + br.toString();\n      } catch (IllegalArgumentException t) {\n        // If BytesRef isn't actually UTF8, or it's eg a\n        // prefix of UTF8 that ends mid-unicode-char, we\n        // fallback to hex:\n        return br.toString();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["da2239d9d14a7d57574534378c9057d8c45bbb4c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#bytesRefToString(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** For debugging: tries to include br.utf8ToString(), but if that\n   *  fails (because it's not valid utf8, which is fine!), just\n   *  use ordinary toString. */\n  public static String bytesRefToString(BytesRef br) {\n    if (br == null) {\n      return \"(null)\";\n    } else {\n      try {\n        return br.utf8ToString() + \" \" + br.toString();\n      } catch (IllegalArgumentException t) {\n        // If BytesRef isn't actually UTF8, or it's eg a\n        // prefix of UTF8 that ends mid-unicode-char, we\n        // fallback to hex:\n        return br.toString();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da2239d9d14a7d57574534378c9057d8c45bbb4c","date":1442937100,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#bytesRefToString(BytesRef).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#bytesRefToString(BytesRef).mjava","sourceNew":"  /** For debugging: tries to include br.utf8ToString(), but if that\n   *  fails (because it's not valid utf8, which is fine!), just\n   *  use ordinary toString. */\n  public static String bytesRefToString(BytesRef br) {\n    if (br == null) {\n      return \"(null)\";\n    } else {\n      try {\n        return br.utf8ToString() + \" \" + br.toString();\n      } catch (AssertionError | IllegalArgumentException t) {\n        // If BytesRef isn't actually UTF8, or it's eg a\n        // prefix of UTF8 that ends mid-unicode-char, we\n        // fallback to hex:\n        return br.toString();\n      }\n    }\n  }\n\n","sourceOld":"  /** For debugging: tries to include br.utf8ToString(), but if that\n   *  fails (because it's not valid utf8, which is fine!), just\n   *  use ordinary toString. */\n  public static String bytesRefToString(BytesRef br) {\n    if (br == null) {\n      return \"(null)\";\n    } else {\n      try {\n        return br.utf8ToString() + \" \" + br.toString();\n      } catch (IllegalArgumentException t) {\n        // If BytesRef isn't actually UTF8, or it's eg a\n        // prefix of UTF8 that ends mid-unicode-char, we\n        // fallback to hex:\n        return br.toString();\n      }\n    }\n  }\n\n","bugFix":["3e8715d826e588419327562287d5d6a8040d63d6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"da2239d9d14a7d57574534378c9057d8c45bbb4c":["3e8715d826e588419327562287d5d6a8040d63d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["da2239d9d14a7d57574534378c9057d8c45bbb4c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3e8715d826e588419327562287d5d6a8040d63d6":["d2638f781be724518ff6c2263d14a48cf6e68017","da2239d9d14a7d57574534378c9057d8c45bbb4c"],"da2239d9d14a7d57574534378c9057d8c45bbb4c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}