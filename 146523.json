{"path":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#calcByIdRf(Set[Integer],String,String).mjava","commits":[{"id":"615bf5b56d95ed8c9bf06a402db6c817d6bff21a","date":1509492118,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#calcByIdRf(Set[Integer],String,String).mjava","pathOld":"/dev/null","sourceNew":"  // When doing a delete by id, it's tricky, very tricky. If any document we're deleting by ID goes to shardWithOne,\n  // then the replication factor we return will be 1.\n  //\n  private int calcByIdRf(Set<Integer> byIDs, String testCollectionName, String shardWithOne) {\n    ZkController zkController = jettys.get(0).getCoreContainer().getZkController();\n    DocCollection coll = zkController.getClusterState().getCollection(testCollectionName);\n    int retval = 2;\n    for (int id : byIDs) {\n      DocRouter router = coll.getRouter();\n      if (shardWithOne.equals(router.getTargetSlice(Integer.toString(id), null, null, null, coll).getName())) {\n        retval = 1;\n      }\n    }\n    return retval;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}