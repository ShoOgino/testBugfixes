{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDELongestMatch().mjava","commits":[{"id":"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a","date":1210940570,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDELongestMatch().mjava","pathOld":"/dev/null","sourceNew":"  public void testHyphenationCompoundWordsDELongestMatch() throws Exception {\n    String[] dict = { \"Rind\", \"Fleisch\", \"Draht\", \"Schere\", \"Gesetz\",\n        \"Aufgabe\", \"Überwachung\", \"Rindfleisch\", \"Überwachungsgesetz\" };\n\n    Reader reader = getHyphenationReader(\"de_DR.xml\");\n    if (reader == null) {\n      // we gracefully die if we have no reader\n      return;\n    }\n\n    HyphenationTree hyphenator = HyphenationCompoundWordTokenFilter\n        .getHyphenationTree(reader);\n\n    HyphenationCompoundWordTokenFilter tf = new HyphenationCompoundWordTokenFilter(\n        new WhitespaceTokenizer(new StringReader(\n            \"Rindfleischüberwachungsgesetz\")), hyphenator, dict,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE, 40, true);\n    assertFiltersTo(tf, new String[] { \"Rindfleischüberwachungsgesetz\",\n        \"Rindfleisch\", \"fleisch\", \"überwachungsgesetz\", \"gesetz\" }, new int[] {\n        0, 0, 4, 11, 23 }, new int[] { 29, 11, 11, 29, 29 }, new int[] { 1, 0,\n        0, 0, 0 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDELongestMatch().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDELongestMatch().mjava","sourceNew":"  public void testHyphenationCompoundWordsDELongestMatch() throws Exception {\n    String[] dict = { \"Rind\", \"Fleisch\", \"Draht\", \"Schere\", \"Gesetz\",\n        \"Aufgabe\", \"Überwachung\", \"Rindfleisch\", \"Überwachungsgesetz\" };\n\n    Reader reader = getHyphenationReader(\"de_DR.xml\");\n    if (reader == null) {\n      // we gracefully die if we have no reader\n      return;\n    }\n\n    HyphenationTree hyphenator = HyphenationCompoundWordTokenFilter\n        .getHyphenationTree(reader);\n\n    HyphenationCompoundWordTokenFilter tf = new HyphenationCompoundWordTokenFilter(\n        new WhitespaceTokenizer(new StringReader(\n            \"Rindfleischüberwachungsgesetz\")), hyphenator, dict,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE, 40, true);\n    assertFiltersTo(tf, new String[] { \"Rindfleischüberwachungsgesetz\",\n        \"Rindfleisch\", \"fleisch\", \"überwachungsgesetz\", \"gesetz\" }, new int[] {\n        0, 0, 4, 11, 23 }, new int[] { 29, 11, 11, 29, 29 }, new int[] { 1, 0,\n        0, 0, 0 });\n  }\n\n","sourceOld":"  public void testHyphenationCompoundWordsDELongestMatch() throws Exception {\n    String[] dict = { \"Rind\", \"Fleisch\", \"Draht\", \"Schere\", \"Gesetz\",\n        \"Aufgabe\", \"Überwachung\", \"Rindfleisch\", \"Überwachungsgesetz\" };\n\n    Reader reader = getHyphenationReader(\"de_DR.xml\");\n    if (reader == null) {\n      // we gracefully die if we have no reader\n      return;\n    }\n\n    HyphenationTree hyphenator = HyphenationCompoundWordTokenFilter\n        .getHyphenationTree(reader);\n\n    HyphenationCompoundWordTokenFilter tf = new HyphenationCompoundWordTokenFilter(\n        new WhitespaceTokenizer(new StringReader(\n            \"Rindfleischüberwachungsgesetz\")), hyphenator, dict,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE, 40, true);\n    assertFiltersTo(tf, new String[] { \"Rindfleischüberwachungsgesetz\",\n        \"Rindfleisch\", \"fleisch\", \"überwachungsgesetz\", \"gesetz\" }, new int[] {\n        0, 0, 4, 11, 23 }, new int[] { 29, 11, 11, 29, 29 }, new int[] { 1, 0,\n        0, 0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["dbb53146e3651ed4ebca43f69ee26f9150c6cb5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb53146e3651ed4ebca43f69ee26f9150c6cb5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}