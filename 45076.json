{"path":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","sourceNew":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField (String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","sourceOld":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField (String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4aa50b979cd392e00e5bc0f23f78cbd106cb968","date":1308150768,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","sourceNew":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField(String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","sourceOld":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField (String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","date":1308291005,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","sourceNew":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField(String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","sourceOld":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField (String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"090a0320e4de4a3674376aef96b9701f47564f86","date":1308707325,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,Type,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","sourceNew":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField(String field, Type type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","sourceOld":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField(String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,Type,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","sourceNew":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField(String field, Type type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","sourceOld":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField(String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#SortField(String,int,boolean).mjava","sourceNew":null,"sourceOld":"  /** Creates a sort, possibly in reverse, by terms in the given field with the\n   * type of term values explicitly given.\n   * @param field  Name of field to sort by.  Can be <code>null</code> if\n   *               <code>type</code> is SCORE or DOC.\n   * @param type   Type of values in the terms.\n   * @param reverse True if natural order should be reversed.\n   */\n  public SortField(String field, int type, boolean reverse) {\n    initFieldType(field, type);\n    this.reverse = reverse;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["9454a6510e2db155fb01faa5c049b06ece95fab9","d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d4aa50b979cd392e00e5bc0f23f78cbd106cb968":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"2553b00f699380c64959ccb27991289aae87be2e":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","090a0320e4de4a3674376aef96b9701f47564f86"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["d4aa50b979cd392e00e5bc0f23f78cbd106cb968","090a0320e4de4a3674376aef96b9701f47564f86"],"090a0320e4de4a3674376aef96b9701f47564f86":["d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["090a0320e4de4a3674376aef96b9701f47564f86"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["2553b00f699380c64959ccb27991289aae87be2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d4aa50b979cd392e00e5bc0f23f78cbd106cb968":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","d083e83f225b11e5fdd900e83d26ddb385b6955c","090a0320e4de4a3674376aef96b9701f47564f86"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"090a0320e4de4a3674376aef96b9701f47564f86":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}