{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#getCollectionAliasMap().mjava","commits":[{"id":"1cfa38e36fa296bb93d77df7d5556257dffa4535","date":1362635543,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#getCollectionAliasMap().mjava","pathOld":"/dev/null","sourceNew":"  public Map<String,String> getCollectionAliasMap() {\n    Map<String,String> cam = aliasMap.get(\"collection\");\n    if (cam == null) return null;\n    return Collections.unmodifiableMap(cam);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b824daa61db3f30b91a22213d6c04e1fa2e2b06","date":1508385744,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#getCollectionAliasMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#getCollectionAliasMap().mjava","sourceNew":"  /**\n   * Returns an unmodifiable Map of collection aliases mapped to a comma delimited list of what the alias maps to.\n   * Does not return null.\n   * Prefer use of {@link #getCollectionAliasListMap()} instead, where appropriate.\n   */\n  public Map<String,String> getCollectionAliasMap() {\n    Map<String,String> cam = aliasMap.get(\"collection\");\n    return cam == null ? Collections.emptyMap() : Collections.unmodifiableMap(cam);\n  }\n\n","sourceOld":"  public Map<String,String> getCollectionAliasMap() {\n    Map<String,String> cam = aliasMap.get(\"collection\");\n    if (cam == null) return null;\n    return Collections.unmodifiableMap(cam);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"215e40821821b2df2e69355e208532c05ef095a5","date":1510858642,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#getCollectionAliasMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#getCollectionAliasMap().mjava","sourceNew":"  /**\n   * Get a map similar to the JSON data as stored in zookeeper. Callers may prefer use of\n   * {@link #getCollectionAliasListMap()} instead, if collection names will be iterated.\n   *\n   * @return an unmodifiable Map of collection aliases mapped to a comma delimited string of the collection(s) the\n   * alias maps to. Does not return null.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public Map<String, String> getCollectionAliasMap() {\n    return Collections.unmodifiableMap(convertMapOfListToMapOfCommaDelimited(collectionAliases));\n  }\n\n","sourceOld":"  /**\n   * Returns an unmodifiable Map of collection aliases mapped to a comma delimited list of what the alias maps to.\n   * Does not return null.\n   * Prefer use of {@link #getCollectionAliasListMap()} instead, where appropriate.\n   */\n  public Map<String,String> getCollectionAliasMap() {\n    Map<String,String> cam = aliasMap.get(\"collection\");\n    return cam == null ? Collections.emptyMap() : Collections.unmodifiableMap(cam);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"215e40821821b2df2e69355e208532c05ef095a5":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06"],"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["215e40821821b2df2e69355e208532c05ef095a5"]},"commit2Childs":{"215e40821821b2df2e69355e208532c05ef095a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["215e40821821b2df2e69355e208532c05ef095a5"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}