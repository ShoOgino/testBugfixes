{"path":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException, CorruptIndexException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random.nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newField(\"some\", \"value\", TextField.TYPE_STORED));\n      }\n      doc.add(newField(\"all\", \"test\", TextField.TYPE_UNSTORED));\n      doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random.nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random.nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException, CorruptIndexException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random.nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newField(\"some\", \"value\", TextField.TYPE_STORED));\n      }\n      doc.add(newField(\"all\", \"test\", TextField.TYPE_UNSTORED));\n      doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random.nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random.nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException, CorruptIndexException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newField(\"some\", \"value\", TextField.TYPE_STORED));\n      }\n      doc.add(newField(\"all\", \"test\", TextField.TYPE_UNSTORED));\n      doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException, CorruptIndexException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random.nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newField(\"some\", \"value\", TextField.TYPE_STORED));\n      }\n      doc.add(newField(\"all\", \"test\", TextField.TYPE_UNSTORED));\n      doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random.nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random.nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException, CorruptIndexException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException, CorruptIndexException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newField(\"some\", \"value\", TextField.TYPE_STORED));\n      }\n      doc.add(newField(\"all\", \"test\", TextField.TYPE_UNSTORED));\n      doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","bugFix":["0d2655e586e23a63fbfddf4f6858e5d2b920d672"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException, CorruptIndexException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","bugFix":["0d2655e586e23a63fbfddf4f6858e5d2b920d672"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException, CorruptIndexException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.shutdown();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n        doc.add(new SortedDocValuesField(\"some\", new BytesRef(\"value\")));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(new SortedDocValuesField(\"all\", new BytesRef(\"test\")));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      doc.add(new SortedDocValuesField(\"id\", new BytesRef(\"\" + i)));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.shutdown();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.shutdown();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n        doc.add(new SortedDocValuesField(\"some\", new BytesRef(\"value\")));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(new SortedDocValuesField(\"all\", new BytesRef(\"test\")));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      doc.add(new SortedDocValuesField(\"id\", new BytesRef(\"\" + i)));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.shutdown();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.shutdown();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n        doc.add(new SortedDocValuesField(\"some\", new BytesRef(\"value\")));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(new SortedDocValuesField(\"all\", new BytesRef(\"test\")));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      doc.add(new SortedDocValuesField(\"id\", new BytesRef(\"\" + i)));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.shutdown();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.shutdown();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n        doc.add(new SortedDocValuesField(\"some\", new BytesRef(\"value\")));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(new SortedDocValuesField(\"all\", new BytesRef(\"test\")));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      doc.add(new SortedDocValuesField(\"id\", new BytesRef(\"\" + i)));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n        doc.add(new SortedDocValuesField(\"some\", new BytesRef(\"value\")));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(new SortedDocValuesField(\"all\", new BytesRef(\"test\")));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      doc.add(new SortedDocValuesField(\"id\", new BytesRef(\"\" + i)));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.shutdown();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"484e80062d7ab2729bc82f0311d6a97dd913961a","date":1424450206,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFieldValueFilter#buildIndex(RandomIndexWriter,int).mjava","sourceNew":null,"sourceOld":"  private int[] buildIndex(RandomIndexWriter writer, int docs)\n      throws IOException {\n    int[] docStates = new int[docs];\n    for (int i = 0; i < docs; i++) {\n      Document doc = new Document();\n      if (random().nextBoolean()) {\n        docStates[i] = 1;\n        doc.add(newTextField(\"some\", \"value\", Field.Store.YES));\n        doc.add(new SortedDocValuesField(\"some\", new BytesRef(\"value\")));\n      }\n      doc.add(newTextField(\"all\", \"test\", Field.Store.NO));\n      doc.add(new SortedDocValuesField(\"all\", new BytesRef(\"test\")));\n      doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n      doc.add(new SortedDocValuesField(\"id\", new BytesRef(\"\" + i)));\n      writer.addDocument(doc);\n    }\n    writer.commit();\n    int numDeletes = random().nextInt(docs);\n    for (int i = 0; i < numDeletes; i++) {\n      int docID = random().nextInt(docs);\n      writer.deleteDocuments(new Term(\"id\", \"\" + docID));\n      docStates[docID] = 2;\n    }\n    writer.close();\n    return docStates;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"484e80062d7ab2729bc82f0311d6a97dd913961a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["04f07771a2a7dd3a395700665ed839c3dae2def2","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["484e80062d7ab2729bc82f0311d6a97dd913961a"]},"commit2Childs":{"484e80062d7ab2729bc82f0311d6a97dd913961a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"04f07771a2a7dd3a395700665ed839c3dae2def2":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","d0ef034a4f10871667ae75181537775ddcf8ade4"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["484e80062d7ab2729bc82f0311d6a97dd913961a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}