{"path":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Adds a clause to a boolean query.  Clauses may be:\n    <ul>\n    <li><code>required</code> which means that documents which <i>do not</i>\n    match this sub-query will <it>not</it> match the boolean query;\n    <li><code>prohibited</code> which means that documents which <i>do</i>\n    match this sub-query will <it>not</it> match the boolean query; or\n    <li>neither, in which case matched documents are neither prohibited from\n    nor required to match the sub-query.\n    </ul>\n    It is an error to specify a clause as both <code>required</code> and\n    <code>prohibited</code>.\n    */\n  public final void add(Query query, boolean required, boolean prohibited) {\n    clauses.addElement(new BooleanClause(query, required, prohibited));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce2d38fca9678b74e922c3d472944968909f7799","date":1013648326,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","sourceNew":"  /** Adds a clause to a boolean query.  Clauses may be:\n    <ul>\n    <li><code>required</code> which means that documents which <i>do not</i>\n    match this sub-query will <i>not</i> match the boolean query;\n    <li><code>prohibited</code> which means that documents which <i>do</i>\n    match this sub-query will <i>not</i> match the boolean query; or\n    <li>neither, in which case matched documents are neither prohibited from\n    nor required to match the sub-query.\n    </ul>\n    It is an error to specify a clause as both <code>required</code> and\n    <code>prohibited</code>.\n    */\n  public final void add(Query query, boolean required, boolean prohibited) {\n    clauses.addElement(new BooleanClause(query, required, prohibited));\n  }\n\n","sourceOld":"  /** Adds a clause to a boolean query.  Clauses may be:\n    <ul>\n    <li><code>required</code> which means that documents which <i>do not</i>\n    match this sub-query will <it>not</it> match the boolean query;\n    <li><code>prohibited</code> which means that documents which <i>do</i>\n    match this sub-query will <it>not</it> match the boolean query; or\n    <li>neither, in which case matched documents are neither prohibited from\n    nor required to match the sub-query.\n    </ul>\n    It is an error to specify a clause as both <code>required</code> and\n    <code>prohibited</code>.\n    */\n  public final void add(Query query, boolean required, boolean prohibited) {\n    clauses.addElement(new BooleanClause(query, required, prohibited));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c7454619ea6a0710272c1dd947345cee64489f6","date":1026927484,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","sourceNew":"  /** Adds a clause to a boolean query.  Clauses may be:\n    <ul>\n    <li><code>required</code> which means that documents which <i>do not</i>\n    match this sub-query will <i>not</i> match the boolean query;\n    <li><code>prohibited</code> which means that documents which <i>do</i>\n    match this sub-query will <i>not</i> match the boolean query; or\n    <li>neither, in which case matched documents are neither prohibited from\n    nor required to match the sub-query.\n    </ul>\n    It is an error to specify a clause as both <code>required</code> and\n    <code>prohibited</code>.\n    */\n  public void add(Query query, boolean required, boolean prohibited) {\n    clauses.addElement(new BooleanClause(query, required, prohibited));\n  }\n\n","sourceOld":"  /** Adds a clause to a boolean query.  Clauses may be:\n    <ul>\n    <li><code>required</code> which means that documents which <i>do not</i>\n    match this sub-query will <i>not</i> match the boolean query;\n    <li><code>prohibited</code> which means that documents which <i>do</i>\n    match this sub-query will <i>not</i> match the boolean query; or\n    <li>neither, in which case matched documents are neither prohibited from\n    nor required to match the sub-query.\n    </ul>\n    It is an error to specify a clause as both <code>required</code> and\n    <code>prohibited</code>.\n    */\n  public final void add(Query query, boolean required, boolean prohibited) {\n    clauses.addElement(new BooleanClause(query, required, prohibited));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5d6060b779d74dbe5580c5bee8ed06ee001078c","date":1054245135,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","sourceNew":"  /** Adds a clause to a boolean query.  Clauses may be:\n    <ul>\n    <li><code>required</code> which means that documents which <i>do not</i>\n    match this sub-query will <i>not</i> match the boolean query;\n    <li><code>prohibited</code> which means that documents which <i>do</i>\n    match this sub-query will <i>not</i> match the boolean query; or\n    <li>neither, in which case matched documents are neither prohibited from\n    nor required to match the sub-query.\n    </ul>\n    It is an error to specify a clause as both <code>required</code> and\n    <code>prohibited</code>.\n    *\n    * @see #getMaxClauseCount()\n    */\n  public void add(Query query, boolean required, boolean prohibited) {\n    add(new BooleanClause(query, required, prohibited));\n  }\n\n","sourceOld":"  /** Adds a clause to a boolean query.  Clauses may be:\n    <ul>\n    <li><code>required</code> which means that documents which <i>do not</i>\n    match this sub-query will <i>not</i> match the boolean query;\n    <li><code>prohibited</code> which means that documents which <i>do</i>\n    match this sub-query will <i>not</i> match the boolean query; or\n    <li>neither, in which case matched documents are neither prohibited from\n    nor required to match the sub-query.\n    </ul>\n    It is an error to specify a clause as both <code>required</code> and\n    <code>prohibited</code>.\n    */\n  public void add(Query query, boolean required, boolean prohibited) {\n    clauses.addElement(new BooleanClause(query, required, prohibited));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b48fd9f4e2b2d096f7ff816906d4da6312a40831","date":1084539389,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","sourceNew":"  /** Adds a clause to a boolean query.  Clauses may be:\n   * <ul>\n   * <li><code>required</code> which means that documents which <i>do not</i>\n   * match this sub-query will <i>not</i> match the boolean query;\n   * <li><code>prohibited</code> which means that documents which <i>do</i>\n   * match this sub-query will <i>not</i> match the boolean query; or\n   * <li>neither, in which case matched documents are neither prohibited from\n   * nor required to match the sub-query. However, a document must match at\n   * least 1 sub-query to match the boolean query.\n   * </ul>\n   * It is an error to specify a clause as both <code>required</code> and\n   * <code>prohibited</code>.\n   *\n   * @see #getMaxClauseCount()\n   */\n  public void add(Query query, boolean required, boolean prohibited) {\n    add(new BooleanClause(query, required, prohibited));\n  }\n\n","sourceOld":"  /** Adds a clause to a boolean query.  Clauses may be:\n    <ul>\n    <li><code>required</code> which means that documents which <i>do not</i>\n    match this sub-query will <i>not</i> match the boolean query;\n    <li><code>prohibited</code> which means that documents which <i>do</i>\n    match this sub-query will <i>not</i> match the boolean query; or\n    <li>neither, in which case matched documents are neither prohibited from\n    nor required to match the sub-query.\n    </ul>\n    It is an error to specify a clause as both <code>required</code> and\n    <code>prohibited</code>.\n    *\n    * @see #getMaxClauseCount()\n    */\n  public void add(Query query, boolean required, boolean prohibited) {\n    add(new BooleanClause(query, required, prohibited));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d1fc81afb0c32e0b7589e656cceb5cf177093fa","date":1093637352,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","sourceNew":"  /** Adds a clause to a boolean query.  Clauses may be:\n   * <ul>\n   * <li><code>required</code> which means that documents which <i>do not</i>\n   * match this sub-query will <i>not</i> match the boolean query;\n   * <li><code>prohibited</code> which means that documents which <i>do</i>\n   * match this sub-query will <i>not</i> match the boolean query; or\n   * <li>neither, in which case matched documents are neither prohibited from\n   * nor required to match the sub-query. However, a document must match at\n   * least 1 sub-query to match the boolean query.\n   * </ul>\n   * It is an error to specify a clause as both <code>required</code> and\n   * <code>prohibited</code>.\n   *\n   * @deprecated use {@link #add(Query, BooleanClause.Occur)} instead:\n   * <ul>\n   *  <li>For add(query, true, false) use add(query, BooleanClause.Occur.MUST)\n   *  <li>For add(query, false, false) use add(query, BooleanClause.Occur.SHOULD)\n   *  <li>For add(query, false, true) use add(query, BooleanClause.Occur.MUST_NOT)\n   * </ul>\n   */\n  public void add(Query query, boolean required, boolean prohibited) {\n    add(new BooleanClause(query, required, prohibited));\n  }\n\n","sourceOld":"  /** Adds a clause to a boolean query.  Clauses may be:\n   * <ul>\n   * <li><code>required</code> which means that documents which <i>do not</i>\n   * match this sub-query will <i>not</i> match the boolean query;\n   * <li><code>prohibited</code> which means that documents which <i>do</i>\n   * match this sub-query will <i>not</i> match the boolean query; or\n   * <li>neither, in which case matched documents are neither prohibited from\n   * nor required to match the sub-query. However, a document must match at\n   * least 1 sub-query to match the boolean query.\n   * </ul>\n   * It is an error to specify a clause as both <code>required</code> and\n   * <code>prohibited</code>.\n   *\n   * @see #getMaxClauseCount()\n   */\n  public void add(Query query, boolean required, boolean prohibited) {\n    add(new BooleanClause(query, required, prohibited));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#add(Query,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /** Adds a clause to a boolean query.  Clauses may be:\n   * <ul>\n   * <li><code>required</code> which means that documents which <i>do not</i>\n   * match this sub-query will <i>not</i> match the boolean query;\n   * <li><code>prohibited</code> which means that documents which <i>do</i>\n   * match this sub-query will <i>not</i> match the boolean query; or\n   * <li>neither, in which case matched documents are neither prohibited from\n   * nor required to match the sub-query. However, a document must match at\n   * least 1 sub-query to match the boolean query.\n   * </ul>\n   * It is an error to specify a clause as both <code>required</code> and\n   * <code>prohibited</code>.\n   *\n   * @deprecated use {@link #add(Query, BooleanClause.Occur)} instead:\n   * <ul>\n   *  <li>For add(query, true, false) use add(query, BooleanClause.Occur.MUST)\n   *  <li>For add(query, false, false) use add(query, BooleanClause.Occur.SHOULD)\n   *  <li>For add(query, false, true) use add(query, BooleanClause.Occur.MUST_NOT)\n   * </ul>\n   */\n  public void add(Query query, boolean required, boolean prohibited) {\n    add(new BooleanClause(query, required, prohibited));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b48fd9f4e2b2d096f7ff816906d4da6312a40831":["e5d6060b779d74dbe5580c5bee8ed06ee001078c"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["0d1fc81afb0c32e0b7589e656cceb5cf177093fa"],"e5d6060b779d74dbe5580c5bee8ed06ee001078c":["9c7454619ea6a0710272c1dd947345cee64489f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9c7454619ea6a0710272c1dd947345cee64489f6":["ce2d38fca9678b74e922c3d472944968909f7799"],"0d1fc81afb0c32e0b7589e656cceb5cf177093fa":["b48fd9f4e2b2d096f7ff816906d4da6312a40831"],"ce2d38fca9678b74e922c3d472944968909f7799":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"b48fd9f4e2b2d096f7ff816906d4da6312a40831":["0d1fc81afb0c32e0b7589e656cceb5cf177093fa"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["ce2d38fca9678b74e922c3d472944968909f7799"],"e5d6060b779d74dbe5580c5bee8ed06ee001078c":["b48fd9f4e2b2d096f7ff816906d4da6312a40831"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"9c7454619ea6a0710272c1dd947345cee64489f6":["e5d6060b779d74dbe5580c5bee8ed06ee001078c"],"0d1fc81afb0c32e0b7589e656cceb5cf177093fa":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"ce2d38fca9678b74e922c3d472944968909f7799":["9c7454619ea6a0710272c1dd947345cee64489f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}