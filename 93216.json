{"path":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","commits":[{"id":"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","date":1282571040,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"/dev/null","sourceNew":"  public void testSuggestions() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"ac\");\n    params.set(SpellingParams.SPELLCHECK_COUNT, 2);\n    params.set(SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, true);\n    LocalSolrQueryRequest req = new LocalSolrQueryRequest(h.getCore(), params);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    handler.handleRequest(req, rsp);\n    String res = assertXPath(h.getCore(), req, rsp, \n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n            );\n    assertNull(res, res);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cd064fa4fc33438aaa550384d00adb31b7960f4","date":1282920434,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":"  public void testSuggestions() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"ac\");\n    params.set(SpellingParams.SPELLCHECK_COUNT, 2);\n    params.set(SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, true);\n    LocalSolrQueryRequest req = new LocalSolrQueryRequest(h.getCore(), params);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    handler.handleRequest(req, rsp);\n    String res = assertXPath(h.getCore(), req, rsp, \n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n            );\n    assertNull(res, res);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47ac88233e9e3019faa24a5184425ad60c23d70f","date":1302779803,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testSuggestions().mjava","sourceNew":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestions() throws Exception {\n    addDocs();\n    assertU(commit()); // configured to do a rebuild on commit\n\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9cd064fa4fc33438aaa550384d00adb31b7960f4":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af"],"47ac88233e9e3019faa24a5184425ad60c23d70f":["9cd064fa4fc33438aaa550384d00adb31b7960f4"],"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1eb46686a27187e42311e77666a2c7026f461ebc":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","47ac88233e9e3019faa24a5184425ad60c23d70f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"c26f00b574427b55127e869b935845554afde1fa":["47ac88233e9e3019faa24a5184425ad60c23d70f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9cd064fa4fc33438aaa550384d00adb31b7960f4","47ac88233e9e3019faa24a5184425ad60c23d70f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["9cd064fa4fc33438aaa550384d00adb31b7960f4","47ac88233e9e3019faa24a5184425ad60c23d70f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["47ac88233e9e3019faa24a5184425ad60c23d70f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9cd064fa4fc33438aaa550384d00adb31b7960f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"9cd064fa4fc33438aaa550384d00adb31b7960f4":["47ac88233e9e3019faa24a5184425ad60c23d70f","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af":["9cd064fa4fc33438aaa550384d00adb31b7960f4"],"47ac88233e9e3019faa24a5184425ad60c23d70f":["1eb46686a27187e42311e77666a2c7026f461ebc","c26f00b574427b55127e869b935845554afde1fa","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","a258fbb26824fd104ed795e5d9033d2d040049ee"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1eb46686a27187e42311e77666a2c7026f461ebc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1eb46686a27187e42311e77666a2c7026f461ebc","135621f3a0670a9394eb563224a3b76cc4dddc0f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}