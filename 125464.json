{"path":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","commits":[{"id":"31703f98041a9e7086254ed134d8f91c22ac933f","date":1360500940,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testExamples() throws Exception {\n    assertExampleResult(new AssociationsFacetsExample().runSumIntAssociations(), EXPECTED_INT_SUM_RESULTS);\n    assertExampleResult(new AssociationsFacetsExample().runSumFloatAssociations(), EXPECTED_FLOAT_SUM_RESULTS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d37ef5db468b4f3ae89b17062b0b56b20dd2e78","date":1360669163,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","sourceNew":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n   \n    assertEquals(\"Wrong number of results\", 2, res.size());\n    \n    for (FacetResult fres : res) {\n      assertEquals(\"Wrong number of facets\", 2, fres.getNumValidDescendants());\n    }\n    \n    Iterable<? extends FacetResultNode> it = res.get(0).getFacetResultNode().subResults;\n    int i = 0;\n    for (FacetResultNode fResNode : it) {\n      assertEquals(\"Wrong result for facet \" + fResNode.label, EXPECTED_INT_SUM_RESULTS[i++], fResNode.value, 1E-5);\n    }\n    \n    it = res.get(1).getFacetResultNode().subResults;\n    i = 0;\n    for (FacetResultNode fResNode : it) {\n      assertEquals(\"Wrong result for facet \" + fResNode.label, EXPECTED_FLOAT_SUM_RESULTS[i++], fResNode.value, 1E-5);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testExamples() throws Exception {\n    assertExampleResult(new AssociationsFacetsExample().runSumIntAssociations(), EXPECTED_INT_SUM_RESULTS);\n    assertExampleResult(new AssociationsFacetsExample().runSumFloatAssociations(), EXPECTED_FLOAT_SUM_RESULTS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","date":1360780178,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","sourceNew":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n   \n    assertEquals(\"Wrong number of results\", 2, res.size());\n    \n    for (FacetResult fres : res) {\n      assertEquals(\"Wrong number of facets\", 2, fres.getNumValidDescendants());\n    }\n    \n    Iterable<? extends FacetResultNode> it = res.get(0).getFacetResultNode().subResults;\n    int i = 0;\n    for (FacetResultNode fResNode : it) {\n      assertEquals(\"Wrong result for facet \" + fResNode.label, EXPECTED_INT_SUM_RESULTS[i++], fResNode.value, 1E-5);\n    }\n    \n    it = res.get(1).getFacetResultNode().subResults;\n    i = 0;\n    for (FacetResultNode fResNode : it) {\n      assertEquals(\"Wrong result for facet \" + fResNode.label, EXPECTED_FLOAT_SUM_RESULTS[i++], fResNode.value, 1E-5);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testExamples() throws Exception {\n    assertExampleResult(new AssociationsFacetsExample().runSumIntAssociations(), EXPECTED_INT_SUM_RESULTS);\n    assertExampleResult(new AssociationsFacetsExample().runSumFloatAssociations(), EXPECTED_FLOAT_SUM_RESULTS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d899affd3c008feba40d1405b7a38972ce2005b4","date":1385469973,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","sourceNew":"  @Test\n  public void testExamples() throws Exception {\n    List<SimpleFacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n    assertEquals(\"Wrong number of results\", 2, res.size());\n    assertEquals(\"value=6 childCount=2\\n  lucene (4)\\n  solr (2)\\n\", res.get(0).toString());\n    assertEquals(\"value=1.96 childCount=2\\n  computing (1.62)\\n  software (0.34)\\n\", res.get(1).toString());\n  }  \n\n","sourceOld":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n   \n    assertEquals(\"Wrong number of results\", 2, res.size());\n    \n    for (FacetResult fres : res) {\n      assertEquals(\"Wrong number of facets\", 2, fres.getNumValidDescendants());\n    }\n    \n    Iterable<? extends FacetResultNode> it = res.get(0).getFacetResultNode().subResults;\n    int i = 0;\n    for (FacetResultNode fResNode : it) {\n      assertEquals(\"Wrong result for facet \" + fResNode.label, EXPECTED_INT_SUM_RESULTS[i++], fResNode.value, 1E-5);\n    }\n    \n    it = res.get(1).getFacetResultNode().subResults;\n    i = 0;\n    for (FacetResultNode fResNode : it) {\n      assertEquals(\"Wrong result for facet \" + fResNode.label, EXPECTED_FLOAT_SUM_RESULTS[i++], fResNode.value, 1E-5);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","sourceNew":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n    assertEquals(\"Wrong number of results\", 2, res.size());\n    assertEquals(\"value=6 childCount=2\\n  lucene (4)\\n  solr (2)\\n\", res.get(0).toString());\n    assertEquals(\"value=1.96 childCount=2\\n  computing (1.62)\\n  software (0.34)\\n\", res.get(1).toString());\n  }  \n\n","sourceOld":"  @Test\n  public void testExamples() throws Exception {\n    List<SimpleFacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n    assertEquals(\"Wrong number of results\", 2, res.size());\n    assertEquals(\"value=6 childCount=2\\n  lucene (4)\\n  solr (2)\\n\", res.get(0).toString());\n    assertEquals(\"value=1.96 childCount=2\\n  computing (1.62)\\n  software (0.34)\\n\", res.get(1).toString());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1536855b62f453c22bb60258029b3b2a07b2532c","date":1385570079,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","sourceNew":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n    assertEquals(\"Wrong number of results\", 2, res.size());\n    assertEquals(\"value=-1 childCount=2\\n  lucene (4)\\n  solr (2)\\n\", res.get(0).toString());\n    assertEquals(\"value=-1.0 childCount=2\\n  computing (1.62)\\n  software (0.34)\\n\", res.get(1).toString());\n  }  \n\n","sourceOld":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n    assertEquals(\"Wrong number of results\", 2, res.size());\n    assertEquals(\"value=6 childCount=2\\n  lucene (4)\\n  solr (2)\\n\", res.get(0).toString());\n    assertEquals(\"value=1.96 childCount=2\\n  computing (1.62)\\n  software (0.34)\\n\", res.get(1).toString());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","sourceNew":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n    assertEquals(\"Wrong number of results\", 2, res.size());\n    assertEquals(\"dim=tags path=[] value=-1 childCount=2\\n  lucene (4)\\n  solr (2)\\n\", res.get(0).toString());\n    assertEquals(\"dim=genre path=[] value=-1.0 childCount=2\\n  computing (1.62)\\n  software (0.34)\\n\", res.get(1).toString());\n  }  \n\n","sourceOld":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n    assertEquals(\"Wrong number of results\", 2, res.size());\n    assertEquals(\"value=-1 childCount=2\\n  lucene (4)\\n  solr (2)\\n\", res.get(0).toString());\n    assertEquals(\"value=-1.0 childCount=2\\n  computing (1.62)\\n  software (0.34)\\n\", res.get(1).toString());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","pathOld":"lucene/demo/src/test/org/apache/lucene/demo/facet/TestAssociationsFacetsExample#testExamples().mjava","sourceNew":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n    assertEquals(\"Wrong number of results\", 2, res.size());\n    assertEquals(\"dim=tags path=[] value=-1 childCount=2\\n  lucene (4)\\n  solr (2)\\n\", res.get(0).toString());\n    assertEquals(\"dim=genre path=[] value=-1.0 childCount=2\\n  computing (1.62)\\n  software (0.34)\\n\", res.get(1).toString());\n  }  \n\n","sourceOld":"  @Test\n  public void testExamples() throws Exception {\n    List<FacetResult> res = new AssociationsFacetsExample().runSumAssociations();\n   \n    assertEquals(\"Wrong number of results\", 2, res.size());\n    \n    for (FacetResult fres : res) {\n      assertEquals(\"Wrong number of facets\", 2, fres.getNumValidDescendants());\n    }\n    \n    Iterable<? extends FacetResultNode> it = res.get(0).getFacetResultNode().subResults;\n    int i = 0;\n    for (FacetResultNode fResNode : it) {\n      assertEquals(\"Wrong result for facet \" + fResNode.label, EXPECTED_INT_SUM_RESULTS[i++], fResNode.value, 1E-5);\n    }\n    \n    it = res.get(1).getFacetResultNode().subResults;\n    i = 0;\n    for (FacetResultNode fResNode : it) {\n      assertEquals(\"Wrong result for facet \" + fResNode.label, EXPECTED_FLOAT_SUM_RESULTS[i++], fResNode.value, 1E-5);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["1536855b62f453c22bb60258029b3b2a07b2532c"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":["31703f98041a9e7086254ed134d8f91c22ac933f","2d37ef5db468b4f3ae89b17062b0b56b20dd2e78"],"31703f98041a9e7086254ed134d8f91c22ac933f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["d899affd3c008feba40d1405b7a38972ce2005b4"],"d899affd3c008feba40d1405b7a38972ce2005b4":["2d37ef5db468b4f3ae89b17062b0b56b20dd2e78"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["2d37ef5db468b4f3ae89b17062b0b56b20dd2e78","56d44586f4c409c6c6c5942b9f0227df806b7300"],"1536855b62f453c22bb60258029b3b2a07b2532c":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"2d37ef5db468b4f3ae89b17062b0b56b20dd2e78":["31703f98041a9e7086254ed134d8f91c22ac933f"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":[],"31703f98041a9e7086254ed134d8f91c22ac933f":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","2d37ef5db468b4f3ae89b17062b0b56b20dd2e78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31703f98041a9e7086254ed134d8f91c22ac933f"],"21d36d0db865f7b84026b447bec653469a6e66df":["1536855b62f453c22bb60258029b3b2a07b2532c"],"d899affd3c008feba40d1405b7a38972ce2005b4":["21d36d0db865f7b84026b447bec653469a6e66df"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1536855b62f453c22bb60258029b3b2a07b2532c":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"2d37ef5db468b4f3ae89b17062b0b56b20dd2e78":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","d899affd3c008feba40d1405b7a38972ce2005b4","3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}