{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getSortedElectionNodes(SolrZkClient,String).mjava","commits":[{"id":"5455c7b3fed6c1671990a44c19071cb0488c2c25","date":1413557414,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getSortedElectionNodes(SolrZkClient,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getSortedElectionNodes(SolrZkClient).mjava","sourceNew":"  public static List<String> getSortedElectionNodes(SolrZkClient zk, String path) throws KeeperException, InterruptedException {\n    List<String> children = null;\n    try {\n      children = zk.getChildren(path, null, true);\n      LeaderElector.sortSeqs(children);\n      return children;\n    } catch (Exception e) {\n      throw e;\n    }\n\n  }\n\n","sourceOld":"  public static List<String> getSortedElectionNodes(SolrZkClient zk) throws KeeperException, InterruptedException {\n    List<String> children = null;\n    try {\n      children = zk.getChildren(OverseerElectionContext.PATH + LeaderElector.ELECTION_NODE, null, true);\n      LeaderElector.sortSeqs(children);\n      return children;\n    } catch (Exception e) {\n      throw e;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getSortedElectionNodes(SolrZkClient,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getSortedElectionNodes(SolrZkClient).mjava","sourceNew":"  public static List<String> getSortedElectionNodes(SolrZkClient zk, String path) throws KeeperException, InterruptedException {\n    List<String> children = null;\n    try {\n      children = zk.getChildren(path, null, true);\n      LeaderElector.sortSeqs(children);\n      return children;\n    } catch (Exception e) {\n      throw e;\n    }\n\n  }\n\n","sourceOld":"  public static List<String> getSortedElectionNodes(SolrZkClient zk) throws KeeperException, InterruptedException {\n    List<String> children = null;\n    try {\n      children = zk.getChildren(OverseerElectionContext.PATH + LeaderElector.ELECTION_NODE, null, true);\n      LeaderElector.sortSeqs(children);\n      return children;\n    } catch (Exception e) {\n      throw e;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#getSortedElectionNodes(SolrZkClient,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#getSortedElectionNodes(SolrZkClient,String).mjava","sourceNew":"  public static List<String> getSortedElectionNodes(SolrZkClient zk, String path) throws KeeperException, InterruptedException {\n    List<String> children = null;\n    try {\n      children = zk.getChildren(path, null, true);\n      LeaderElector.sortSeqs(children);\n      return children;\n    } catch (Exception e) {\n      throw e;\n    }\n\n  }\n\n","sourceOld":"  public static List<String> getSortedElectionNodes(SolrZkClient zk, String path) throws KeeperException, InterruptedException {\n    List<String> children = null;\n    try {\n      children = zk.getChildren(path, null, true);\n      LeaderElector.sortSeqs(children);\n      return children;\n    } catch (Exception e) {\n      throw e;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["5455c7b3fed6c1671990a44c19071cb0488c2c25"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5455c7b3fed6c1671990a44c19071cb0488c2c25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5455c7b3fed6c1671990a44c19071cb0488c2c25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","5455c7b3fed6c1671990a44c19071cb0488c2c25"],"5455c7b3fed6c1671990a44c19071cb0488c2c25":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}