{"path":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlices(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlices(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"/dev/null","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlices(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlices(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlices(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5a558d54519c651068ddb202f03befefb1514a7","date":1354382006,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlicesMap(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlices(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","bugFix":null,"bugIntro":["344b0840364d990b29b97467bfcc766ff8325d11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlicesMap(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlices(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlicesMap(collection);\n    \n    List<String> sliceKeyList = new ArrayList<>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlicesMap(collection);\n    \n    List<String> sliceKeyList = new ArrayList<String>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e373ca932bd347b9022c6fd6565e227010c6a9c","date":1458065865,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlicesMap(collection);\n    \n    List<String> sliceKeyList = new ArrayList<>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(chaosRandom.nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlicesMap(collection);\n    \n    List<String> sliceKeyList = new ArrayList<>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(LuceneTestCase.random().nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"344b0840364d990b29b97467bfcc766ff8325d11","date":1501574100,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getCollection(collection).getSlicesMap();\n    \n    List<String> sliceKeyList = new ArrayList<>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(chaosRandom.nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlicesMap(collection);\n    \n    List<String> sliceKeyList = new ArrayList<>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(chaosRandom.nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","bugFix":["c5a558d54519c651068ddb202f03befefb1514a7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#getRandomSlice().mjava","sourceNew":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getCollection(collection).getSlicesMap();\n    \n    List<String> sliceKeyList = new ArrayList<>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(chaosRandom.nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","sourceOld":"  private String getRandomSlice() {\n    Map<String,Slice> slices = zkStateReader.getClusterState().getSlicesMap(collection);\n    \n    List<String> sliceKeyList = new ArrayList<>(slices.size());\n    sliceKeyList.addAll(slices.keySet());\n    String sliceName = sliceKeyList.get(chaosRandom.nextInt(sliceKeyList.size()));\n    return sliceName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c5a558d54519c651068ddb202f03befefb1514a7"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["6e373ca932bd347b9022c6fd6565e227010c6a9c","344b0840364d990b29b97467bfcc766ff8325d11"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"6e373ca932bd347b9022c6fd6565e227010c6a9c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"344b0840364d990b29b97467bfcc766ff8325d11":["6e373ca932bd347b9022c6fd6565e227010c6a9c"],"c5a558d54519c651068ddb202f03befefb1514a7":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["2c30e4c1cee08b3b229a77991882594fe7250b66","c5a558d54519c651068ddb202f03befefb1514a7"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["344b0840364d990b29b97467bfcc766ff8325d11"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["6e373ca932bd347b9022c6fd6565e227010c6a9c"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"6e373ca932bd347b9022c6fd6565e227010c6a9c":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","344b0840364d990b29b97467bfcc766ff8325d11"],"344b0840364d990b29b97467bfcc766ff8325d11":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c5a558d54519c651068ddb202f03befefb1514a7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"2c30e4c1cee08b3b229a77991882594fe7250b66":["c7869f64c874ebf7f317d22c00baf2b6857797a6","c5a558d54519c651068ddb202f03befefb1514a7","407687e67faf6e1f02a211ca078d8e3eed631027","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","c7869f64c874ebf7f317d22c00baf2b6857797a6","407687e67faf6e1f02a211ca078d8e3eed631027","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}