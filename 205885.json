{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final Norm norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final Norm norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b5e0eebe355b14693e24007d721da78a79d8170","date":1305898401,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final Norm norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final Norm norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","date":1306150983,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final Norm norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1f693ce507c40f77e3a92acd16c6b79cdd730e4","date":1323036169,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    if (hasChanges) {\n      doCommit();\n    }\n    \n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11f75174865a8734695cd60a4093339a4e63fcbb","date":1323039567,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    if (hasChanges) {\n      doCommit();\n    }\n    \n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    if (hasChanges) {\n      doCommit();\n    }\n    \n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    if (hasChanges) {\n      doCommit();\n    }\n    \n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    if (hasChanges) {\n      doCommit();\n    }\n    \n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    for (final SegmentNorms norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce667c6d3400b22523701c549c0d35e26da8b46","date":1324405053,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    if (hasChanges) {\n      doCommit();\n    }\n    \n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (liveDocs != null) {\n      liveDocsRef.decrementAndGet();\n      // null so if an app hangs on to us we still free most ram\n      liveDocs = null;\n    }\n\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1514b41e236336b1aae6b4ab4493995ef80a321e","date":1324465707,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89c3b83c5239d5839412faa883f647059bf29a50","date":1324495172,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    core.decRef();\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    core.decRef();\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    //System.out.println(\"SR.close seg=\" + si);\n    core.decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":["9454a6510e2db155fb01faa5c049b06ece95fab9","8b5e0eebe355b14693e24007d721da78a79d8170"],"1514b41e236336b1aae6b4ab4493995ef80a321e":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"11f75174865a8734695cd60a4093339a4e63fcbb":["e1f693ce507c40f77e3a92acd16c6b79cdd730e4"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["89c3b83c5239d5839412faa883f647059bf29a50"],"89c3b83c5239d5839412faa883f647059bf29a50":["1514b41e236336b1aae6b4ab4493995ef80a321e"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["8b5e0eebe355b14693e24007d721da78a79d8170"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["8b5e0eebe355b14693e24007d721da78a79d8170","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"8b5e0eebe355b14693e24007d721da78a79d8170":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e1f693ce507c40f77e3a92acd16c6b79cdd730e4":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9454a6510e2db155fb01faa5c049b06ece95fab9","8b5e0eebe355b14693e24007d721da78a79d8170"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","11f75174865a8734695cd60a4093339a4e63fcbb"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":[],"1514b41e236336b1aae6b4ab4493995ef80a321e":["89c3b83c5239d5839412faa883f647059bf29a50"],"11f75174865a8734695cd60a4093339a4e63fcbb":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","e1f693ce507c40f77e3a92acd16c6b79cdd730e4","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"89c3b83c5239d5839412faa883f647059bf29a50":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"8b5e0eebe355b14693e24007d721da78a79d8170":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","a3776dccca01c11e7046323cfad46a3b4a471233"],"e1f693ce507c40f77e3a92acd16c6b79cdd730e4":["11f75174865a8734695cd60a4093339a4e63fcbb"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","9ce667c6d3400b22523701c549c0d35e26da8b46"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["1514b41e236336b1aae6b4ab4493995ef80a321e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","8b5e0eebe355b14693e24007d721da78a79d8170","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}