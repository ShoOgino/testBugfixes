{"path":"src/java/org/apache/solr/handler/StaxUpdateRequestHandler#doLegacyUpdate(Reader,Writer).mjava","commits":[{"id":"fc25891451b288866eb099252dfdaacdb8eaefd2","date":1181874819,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/StaxUpdateRequestHandler#doLegacyUpdate(Reader,Writer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A Convenience method for getting back a simple XML string indicating\n   * success or failure from an XML formated Update (from the Reader)\n   * \n   * @since solr 1.2\n   */\n  @Deprecated\n  public void doLegacyUpdate(Reader input, Writer output) {\n    try {\n      SolrCore core = SolrCore.getSolrCore();\n      SolrParams params = new MapSolrParams( new HashMap<String, String>() );\n      SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n      this.update( req, SolrCore.getSolrCore(), input);\n      output.write(\"<result status=\\\"0\\\"></result>\");\n    } \n    catch (Exception ex) {\n      try {\n        XML.writeXML(output, \"result\", SolrException.toStr(ex), \"status\", \"1\");\n      } catch (Exception ee) {\n        log.severe(\"Error writing to output stream: \" + ee);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4039ee26c484fda13f0428eeeb09969370ff9149","date":1183229536,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#doLegacyUpdate(Reader,Writer).mjava","pathOld":"src/java/org/apache/solr/handler/StaxUpdateRequestHandler#doLegacyUpdate(Reader,Writer).mjava","sourceNew":"  /**\n   * A Convenience method for getting back a simple XML string indicating\n   * success or failure from an XML formated Update (from the Reader)\n   * \n   * @since solr 1.2\n   */\n  @Deprecated\n  public void doLegacyUpdate(Reader input, Writer output) {\n    try {\n      SolrCore core = SolrCore.getSolrCore();\n      SolrParams params = new MapSolrParams( new HashMap<String, String>() );\n      SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n      this.update( req, SolrCore.getSolrCore(), input);\n      output.write(\"<result status=\\\"0\\\"></result>\");\n    } \n    catch (Exception ex) {\n      try {\n        XML.writeXML(output, \"result\", SolrException.toStr(ex), \"status\", \"1\");\n      } catch (Exception ee) {\n        log.severe(\"Error writing to output stream: \" + ee);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * A Convenience method for getting back a simple XML string indicating\n   * success or failure from an XML formated Update (from the Reader)\n   * \n   * @since solr 1.2\n   */\n  @Deprecated\n  public void doLegacyUpdate(Reader input, Writer output) {\n    try {\n      SolrCore core = SolrCore.getSolrCore();\n      SolrParams params = new MapSolrParams( new HashMap<String, String>() );\n      SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n      this.update( req, SolrCore.getSolrCore(), input);\n      output.write(\"<result status=\\\"0\\\"></result>\");\n    } \n    catch (Exception ex) {\n      try {\n        XML.writeXML(output, \"result\", SolrException.toStr(ex), \"status\", \"1\");\n      } catch (Exception ee) {\n        log.severe(\"Error writing to output stream: \" + ee);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4039ee26c484fda13f0428eeeb09969370ff9149":["fc25891451b288866eb099252dfdaacdb8eaefd2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"fc25891451b288866eb099252dfdaacdb8eaefd2":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4039ee26c484fda13f0428eeeb09969370ff9149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fc25891451b288866eb099252dfdaacdb8eaefd2"],"fc25891451b288866eb099252dfdaacdb8eaefd2":["4039ee26c484fda13f0428eeeb09969370ff9149"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4039ee26c484fda13f0428eeeb09969370ff9149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}