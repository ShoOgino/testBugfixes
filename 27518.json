{"path":"lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy#minFrequencyToCache(Query).mjava","commits":[{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy#minFrequencyToCache(Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * For a given query, return how many times it should appear in the history\n   * before being cached.\n   */\n  protected int minFrequencyToCache(Query query) {\n    if (isCostly(query)) {\n      return 2;\n    } else if (isCheap(query)) {\n      return 20;\n    } else {\n      // default: cache after the filter has been seen 5 times\n      return 5;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy#minFrequencyToCache(Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * For a given query, return how many times it should appear in the history\n   * before being cached.\n   */\n  protected int minFrequencyToCache(Query query) {\n    if (isCostly(query)) {\n      return 2;\n    } else if (isCheap(query)) {\n      return 20;\n    } else {\n      // default: cache after the filter has been seen 5 times\n      return 5;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b56b6f1da108905632f350a2fcd9545108149dbe","date":1487253427,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy#minFrequencyToCache(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy#minFrequencyToCache(Query).mjava","sourceNew":"  /**\n   * For a given filter, return how many times it should appear in the history\n   * before being cached. The default implementation returns 2 for filters that\n   * need to evaluate against the entire index to build a {@link DocIdSetIterator},\n   * like {@link MultiTermQuery}, point-based queries or {@link TermInSetQuery},\n   * and 5 for other filters.\n   */\n  protected int minFrequencyToCache(Query query) {\n    if (isCostly(query)) {\n      return 2;\n    } else {\n      // default: cache after the filter has been seen 5 times\n      return 5;\n    }\n  }\n\n","sourceOld":"  /**\n   * For a given query, return how many times it should appear in the history\n   * before being cached.\n   */\n  protected int minFrequencyToCache(Query query) {\n    if (isCostly(query)) {\n      return 2;\n    } else if (isCheap(query)) {\n      return 20;\n    } else {\n      // default: cache after the filter has been seen 5 times\n      return 5;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa3ac5678898d1ec767463baf78092a23dcb061","date":1487253427,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy#minFrequencyToCache(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy#minFrequencyToCache(Query).mjava","sourceNew":"  /**\n   * For a given filter, return how many times it should appear in the history\n   * before being cached. The default implementation returns 2 for filters that\n   * need to evaluate against the entire index to build a {@link DocIdSetIterator},\n   * like {@link MultiTermQuery}, point-based queries or {@link TermInSetQuery},\n   * and 5 for other filters.\n   */\n  protected int minFrequencyToCache(Query query) {\n    if (isCostly(query)) {\n      return 2;\n    } else {\n      // default: cache after the filter has been seen 5 times\n      int minFrequency = 5;\n      if (query instanceof BooleanQuery\n          || query instanceof DisjunctionMaxQuery) {\n        // Say you keep reusing a boolean query that looks like \"A OR B\" and\n        // never use the A and B queries out of that context. 5 times after it\n        // has been used, we would cache both A, B and A OR B, which is\n        // wasteful. So instead we cache compound queries a bit earlier so that\n        // we would only cache \"A OR B\" in that case.\n        minFrequency--;\n      }\n      return minFrequency;\n    }\n  }\n\n","sourceOld":"  /**\n   * For a given filter, return how many times it should appear in the history\n   * before being cached. The default implementation returns 2 for filters that\n   * need to evaluate against the entire index to build a {@link DocIdSetIterator},\n   * like {@link MultiTermQuery}, point-based queries or {@link TermInSetQuery},\n   * and 5 for other filters.\n   */\n  protected int minFrequencyToCache(Query query) {\n    if (isCostly(query)) {\n      return 2;\n    } else {\n      // default: cache after the filter has been seen 5 times\n      return 5;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"b56b6f1da108905632f350a2fcd9545108149dbe":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa3ac5678898d1ec767463baf78092a23dcb061"],"8aa3ac5678898d1ec767463baf78092a23dcb061":["b56b6f1da108905632f350a2fcd9545108149dbe"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b56b6f1da108905632f350a2fcd9545108149dbe":["8aa3ac5678898d1ec767463baf78092a23dcb061"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b56b6f1da108905632f350a2fcd9545108149dbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8aa3ac5678898d1ec767463baf78092a23dcb061":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}