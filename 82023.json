{"path":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#isNoiseWord(String).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#isNoiseWord(String).mjava","pathOld":"/dev/null","sourceNew":"\t/** determines if the passed term is likely to be of interest in \"more like\" comparisons \r\n\t * \r\n\t * @param term The word being considered\r\n\t * @return true if should be ignored, false if should be used in further analysis\r\n\t */\r\n\tprivate boolean isNoiseWord(String term)\r\n\t{\r\n\t\tint len = term.length();\r\n\t\tif (minWordLen > 0 && len < minWordLen) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (maxWordLen > 0 && len > maxWordLen) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (stopWords != null && stopWords.contains( term)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#isNoiseWord(String).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#isNoiseWord(String).mjava","sourceNew":"\t/** determines if the passed term is likely to be of interest in \"more like\" comparisons \n\t * \n\t * @param term The word being considered\n\t * @return true if should be ignored, false if should be used in further analysis\n\t */\n\tprivate boolean isNoiseWord(String term)\n\t{\n\t\tint len = term.length();\n\t\tif (minWordLen > 0 && len < minWordLen) {\n\t\t\treturn true;\n\t\t}\n\t\tif (maxWordLen > 0 && len > maxWordLen) {\n\t\t\treturn true;\n\t\t}\n\t\tif (stopWords != null && stopWords.contains( term)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n","sourceOld":"\t/** determines if the passed term is likely to be of interest in \"more like\" comparisons \r\n\t * \r\n\t * @param term The word being considered\r\n\t * @return true if should be ignored, false if should be used in further analysis\r\n\t */\r\n\tprivate boolean isNoiseWord(String term)\r\n\t{\r\n\t\tint len = term.length();\r\n\t\tif (minWordLen > 0 && len < minWordLen) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (maxWordLen > 0 && len > maxWordLen) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (stopWords != null && stopWords.contains( term)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#isNoiseWord(String).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#isNoiseWord(String).mjava","sourceNew":"\t/** determines if the passed term is likely to be of interest in \"more like\" comparisons \n\t * \n\t * @param term The word being considered\n\t * @return true if should be ignored, false if should be used in further analysis\n\t */\n\tprivate boolean isNoiseWord(String term)\n\t{\n\t\tint len = term.length();\n\t\tif (minWordLen > 0 && len < minWordLen) {\n\t\t\treturn true;\n\t\t}\n\t\tif (maxWordLen > 0 && len > maxWordLen) {\n\t\t\treturn true;\n\t\t}\n\t\tif (stopWords != null && stopWords.contains( term)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n","sourceOld":"\t/** determines if the passed term is likely to be of interest in \"more like\" comparisons \n\t * \n\t * @param term The word being considered\n\t * @return true if should be ignored, false if should be used in further analysis\n\t */\n\tprivate boolean isNoiseWord(String term)\n\t{\n\t\tint len = term.length();\n\t\tif (minWordLen > 0 && len < minWordLen) {\n\t\t\treturn true;\n\t\t}\n\t\tif (maxWordLen > 0 && len > maxWordLen) {\n\t\t\treturn true;\n\t\t}\n\t\tif (stopWords != null && stopWords.contains( term)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6a361a621b184d9b73c9c9a37323a9845b8f8260"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}