{"path":"solr/core/src/java/org/apache/solr/schema/FieldType#getNumericSort(SchemaField,NumberType,boolean).mjava","commits":[{"id":"4cf2282b6a7c3f113e7a233b785b80527c03d590","date":1516129064,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#getNumericSort(SchemaField,NumberType,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Utility usable by subclasses when they want to get basic Numeric sorting\n   * using common checks.\n   *\n   * @see SchemaField#checkSortability\n   * @see #getSortedNumericSortField\n   * @see #getSortField\n   */\n  protected SortField getNumericSort(SchemaField field, NumberType type, boolean reverse) {\n    if (field.multiValued()) {\n      MultiValueSelector selector = field.type.getDefaultMultiValueSelectorForSort(field, reverse);\n      if (null != selector) {\n        return getSortedNumericSortField(field, type.sortType, selector.getSortedNumericSelectorType(),\n                                         reverse, type.sortMissingLow, type.sortMissingHigh);\n      }\n    }\n    \n    // else...\n    // either single valued, or don't support implicit multi selector\n    // (in which case let getSortField() give the error)\n    return getSortField(field, type.sortType, reverse, type.sortMissingLow, type.sortMissingHigh);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#getNumericSort(SchemaField,NumberType,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Utility usable by subclasses when they want to get basic Numeric sorting\n   * using common checks.\n   *\n   * @see SchemaField#checkSortability\n   * @see #getSortedNumericSortField\n   * @see #getSortField\n   */\n  protected SortField getNumericSort(SchemaField field, NumberType type, boolean reverse) {\n    if (field.multiValued()) {\n      MultiValueSelector selector = field.type.getDefaultMultiValueSelectorForSort(field, reverse);\n      if (null != selector) {\n        return getSortedNumericSortField(field, type.sortType, selector.getSortedNumericSelectorType(),\n                                         reverse, type.sortMissingLow, type.sortMissingHigh);\n      }\n    }\n    \n    // else...\n    // either single valued, or don't support implicit multi selector\n    // (in which case let getSortField() give the error)\n    return getSortField(field, type.sortType, reverse, type.sortMissingLow, type.sortMissingHigh);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cf2282b6a7c3f113e7a233b785b80527c03d590"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cf2282b6a7c3f113e7a233b785b80527c03d590":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","4cf2282b6a7c3f113e7a233b785b80527c03d590"],"4cf2282b6a7c3f113e7a233b785b80527c03d590":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}