{"path":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","commits":[{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#inputToString(int,IntsRef).mjava","sourceNew":"  private static String inputToString(int inputMode, IntsRef term) {\n    if (inputMode == 0) {\n      // utf8\n      return toBytesRef(term).utf8ToString() + \" \" + term;\n    } else {\n      // utf32\n      return UnicodeUtil.newString(term.ints, term.offset, term.length) + \" \" + term;\n    }\n  }\n\n","sourceOld":"  private static String inputToString(int inputMode, IntsRef term) {\n    if (inputMode == 0) {\n      // utf8\n      return toBytesRef(term).utf8ToString() + \" \" + term;\n    } else {\n      // utf32\n      return UnicodeUtil.newString(term.ints, term.offset, term.length) + \" \" + term;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#inputToString(int,IntsRef).mjava","sourceNew":"  private static String inputToString(int inputMode, IntsRef term) {\n    if (inputMode == 0) {\n      // utf8\n      return toBytesRef(term).utf8ToString() + \" \" + term;\n    } else {\n      // utf32\n      return UnicodeUtil.newString(term.ints, term.offset, term.length) + \" \" + term;\n    }\n  }\n\n","sourceOld":"  private static String inputToString(int inputMode, IntsRef term) {\n    if (inputMode == 0) {\n      // utf8\n      return toBytesRef(term).utf8ToString() + \" \" + term;\n    } else {\n      // utf32\n      return UnicodeUtil.newString(term.ints, term.offset, term.length) + \" \" + term;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#inputToString(int,IntsRef).mjava","sourceNew":"  private static String inputToString(int inputMode, IntsRef term) {\n    if (inputMode == 0) {\n      // utf8\n      return toBytesRef(term).utf8ToString() + \" \" + term;\n    } else {\n      // utf32\n      return UnicodeUtil.newString(term.ints, term.offset, term.length) + \" \" + term;\n    }\n  }\n\n","sourceOld":"  private static String inputToString(int inputMode, IntsRef term) {\n    if (inputMode == 0) {\n      // utf8\n      return toBytesRef(term).utf8ToString() + \" \" + term;\n    } else {\n      // utf32\n      return UnicodeUtil.newString(term.ints, term.offset, term.length) + \" \" + term;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35cd51b37d4bf7e6086d959cda99ba9b67b204ac","date":1311203258,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","sourceNew":"  private static String inputToString(int inputMode, IntsRef term) {\n    return inputToString(inputMode, term, true);\n  }\n\n","sourceOld":"  private static String inputToString(int inputMode, IntsRef term) {\n    if (inputMode == 0) {\n      // utf8\n      return toBytesRef(term).utf8ToString() + \" \" + term;\n    } else {\n      // utf32\n      return UnicodeUtil.newString(term.ints, term.offset, term.length) + \" \" + term;\n    }\n  }\n\n","bugFix":["56da903869515527852ee21ea7ef7bfe414cd40d","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4708e7bf7695781d702d204d178627b4faddc03f","date":1326982060,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","sourceNew":"  static String inputToString(int inputMode, IntsRef term) {\n    return inputToString(inputMode, term, true);\n  }\n\n","sourceOld":"  private static String inputToString(int inputMode, IntsRef term) {\n    return inputToString(inputMode, term, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#inputToString(int,IntsRef).mjava","sourceNew":"  static String inputToString(int inputMode, IntsRef term) {\n    return inputToString(inputMode, term, true);\n  }\n\n","sourceOld":"  static String inputToString(int inputMode, IntsRef term) {\n    return inputToString(inputMode, term, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35cd51b37d4bf7e6086d959cda99ba9b67b204ac":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4708e7bf7695781d702d204d178627b4faddc03f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4708e7bf7695781d702d204d178627b4faddc03f":["35cd51b37d4bf7e6086d959cda99ba9b67b204ac"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"35cd51b37d4bf7e6086d959cda99ba9b67b204ac":["4708e7bf7695781d702d204d178627b4faddc03f"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["35cd51b37d4bf7e6086d959cda99ba9b67b204ac","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"4708e7bf7695781d702d204d178627b4faddc03f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}