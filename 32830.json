{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"/dev/null","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    for (Map<String, Object> deletedKey : deletedKeys) {\n      writer.deleteDoc(deletedKey.get(root.pk));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2dcb3817c18e041efa9fd5355edb3a9b1376a8e4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2dcb3817c18e041efa9fd5355edb3a9b1376a8e4","date":1228986339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      writer.deleteDoc(map.get(root.pk));\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    for (Map<String, Object> deletedKey : deletedKeys) {\n      writer.deleteDoc(deletedKey.get(root.pk));\n    }\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1830bd439a127bb3dc9c376f8c6d0cc667c67ef","date":1242991637,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      writer.deleteDoc(map.get(root.pk));\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      writer.deleteDoc(map.get(root.pk));\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22087ae54bf4d3f6b58f5d836ea252ec572900c4","date":1245315586,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = null;\n      if(root.pk != null){\n        key = map.get(root.pk);\n      }\n      if(key == null && map.size() ==1){\n        for (Map.Entry<String, Object> e : map.entrySet()) {\n          key = e.getValue();\n          break;\n        }\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(map.get(root.pk));\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      writer.deleteDoc(map.get(root.pk));\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":["782154d790b2066a4483cdc8f835e4d8c4ad66d8","5871a631b6817f1cef161749ceffdc037e67558a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ed55495a0b2d338e8cf9c537712c96ed11804049","date":1245995066,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = null;\n      if(root.pk != null){\n        key = map.get(root.pk);\n      }\n      if(key == null && map.size() ==1){\n        //iterating through the map just to get the first and only item\n        for (Map.Entry<String, Object> e : map.entrySet()) {\n          key = e.getValue();\n          break;\n        }\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = null;\n      if(root.pk != null){\n        key = map.get(root.pk);\n      }\n      if(key == null && map.size() ==1){\n        for (Map.Entry<String, Object> e : map.entrySet()) {\n          key = e.getValue();\n          break;\n        }\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(map.get(root.pk));\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d7440ac2370cd87eacfa33120a325f7fcb0f2973","date":1247237728,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = null;\n      if(root.pkMappingFromSchema != null){\n        key = map.get(root.pkMappingFromSchema);\n      } else if(root.pk != null){\n          key = map.get(root.pk);\n     } \n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = null;\n      if(root.pk != null){\n        key = map.get(root.pk);\n      }\n      if(key == null && map.size() ==1){\n        //iterating through the map just to get the first and only item\n        for (Map.Entry<String, Object> e : map.entrySet()) {\n          key = e.getValue();\n          break;\n        }\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":["782154d790b2066a4483cdc8f835e4d8c4ad66d8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"782154d790b2066a4483cdc8f835e4d8c4ad66d8","date":1251194066,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk()); \n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = null;\n      if(root.pkMappingFromSchema != null){\n        key = map.get(root.pkMappingFromSchema);\n      } else if(root.pk != null){\n          key = map.get(root.pk);\n     } \n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","bugFix":["22087ae54bf4d3f6b58f5d836ea252ec572900c4","d7440ac2370cd87eacfa33120a325f7fcb0f2973"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"65f4e997b946a4eadce22b758749046a63ba2eff","date":1263282580,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk()); \n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();      \n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":["5871a631b6817f1cef161749ceffdc037e67558a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"2dcb3817c18e041efa9fd5355edb3a9b1376a8e4":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"65f4e997b946a4eadce22b758749046a63ba2eff":["782154d790b2066a4483cdc8f835e4d8c4ad66d8"],"782154d790b2066a4483cdc8f835e4d8c4ad66d8":["d7440ac2370cd87eacfa33120a325f7fcb0f2973"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ed55495a0b2d338e8cf9c537712c96ed11804049":["22087ae54bf4d3f6b58f5d836ea252ec572900c4"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c1830bd439a127bb3dc9c376f8c6d0cc667c67ef":["2dcb3817c18e041efa9fd5355edb3a9b1376a8e4"],"22087ae54bf4d3f6b58f5d836ea252ec572900c4":["c1830bd439a127bb3dc9c376f8c6d0cc667c67ef"],"ad94625fb8d088209f46650c8097196fec67f00c":["65f4e997b946a4eadce22b758749046a63ba2eff"],"d7440ac2370cd87eacfa33120a325f7fcb0f2973":["ed55495a0b2d338e8cf9c537712c96ed11804049"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2dcb3817c18e041efa9fd5355edb3a9b1376a8e4":["c1830bd439a127bb3dc9c376f8c6d0cc667c67ef"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["2dcb3817c18e041efa9fd5355edb3a9b1376a8e4"],"65f4e997b946a4eadce22b758749046a63ba2eff":["ad94625fb8d088209f46650c8097196fec67f00c"],"782154d790b2066a4483cdc8f835e4d8c4ad66d8":["65f4e997b946a4eadce22b758749046a63ba2eff"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ed55495a0b2d338e8cf9c537712c96ed11804049":["d7440ac2370cd87eacfa33120a325f7fcb0f2973"],"c1830bd439a127bb3dc9c376f8c6d0cc667c67ef":["22087ae54bf4d3f6b58f5d836ea252ec572900c4"],"22087ae54bf4d3f6b58f5d836ea252ec572900c4":["ed55495a0b2d338e8cf9c537712c96ed11804049"],"d7440ac2370cd87eacfa33120a325f7fcb0f2973":["782154d790b2066a4483cdc8f835e4d8c4ad66d8"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}