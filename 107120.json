{"path":"solr/core/src/java/org/apache/solr/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","commits":[{"id":"a178ac3dec643551e66363c457a9074f55545f86","date":1496133188,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 32 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 32 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedInts(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n      \n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedIntShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 32 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 32 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedInts(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n      \n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedIntShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 32 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 32 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedInts(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n      \n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedIntShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 32 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 32 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedInts(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n      \n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedIntShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 32 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 32 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedInts(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n      \n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedIntShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 32 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 32 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedInts(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n      \n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedIntShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","pathOld":"solr/core/src/java/org/apache/solr/legacy/LegacyNumericUtils#filterPrefixCodedInts(TermsEnum).mjava","sourceNew":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 32 bit\n   * terms with a shift value of <code>0</code>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 32 bit\n   *         terms with a shift value of <code>0</code>.\n   */\n  public static TermsEnum filterPrefixCodedInts(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n      \n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedIntShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Filters the given {@link TermsEnum} by accepting only prefix coded 32 bit\n   * terms with a shift value of <tt>0</tt>.\n   * \n   * @param termsEnum\n   *          the terms enum to filter\n   * @return a filtered {@link TermsEnum} that only returns prefix coded 32 bit\n   *         terms with a shift value of <tt>0</tt>.\n   */\n  public static TermsEnum filterPrefixCodedInts(TermsEnum termsEnum) {\n    return new SeekingNumericFilteredTermsEnum(termsEnum) {\n      \n      @Override\n      protected AcceptStatus accept(BytesRef term) {\n        return LegacyNumericUtils.getPrefixCodedIntShift(term) == 0 ? AcceptStatus.YES : AcceptStatus.END;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a178ac3dec643551e66363c457a9074f55545f86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a178ac3dec643551e66363c457a9074f55545f86"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a178ac3dec643551e66363c457a9074f55545f86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"]},"commit2Childs":{"a178ac3dec643551e66363c457a9074f55545f86":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a178ac3dec643551e66363c457a9074f55545f86","e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}