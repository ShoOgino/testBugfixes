{"path":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(response, \"cnr\", \"double\", \"sum\");\n    double calculated = (Double)getStatResult(response, \"cnr\", \"double\", \"sumc\");\n    assertTrue(result==calculated);\n    \n    result = (Double)getStatResult(response, \"cnr\", \"double\", \"mean\");\n    calculated = (Double)getStatResult(response, \"cnr\", \"double\", \"meanc\");\n    assertTrue(result==calculated);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2408d2a60b59b9f5d910383ce065127078892c04","date":1385328825,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","sourceNew":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(\"cnr\", \"sum\", VAL_TYPE.DOUBLE);\n    double calculated = (Double)getStatResult(\"cnr\", \"sumc\", VAL_TYPE.DOUBLE);\n    assertTrue(result==calculated);\n    \n    result = (Double)getStatResult(\"cnr\", \"mean\", VAL_TYPE.DOUBLE);\n    calculated = (Double)getStatResult(\"cnr\", \"meanc\", VAL_TYPE.DOUBLE);\n    assertTrue(result==calculated);\n  }\n\n","sourceOld":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(response, \"cnr\", \"double\", \"sum\");\n    double calculated = (Double)getStatResult(response, \"cnr\", \"double\", \"sumc\");\n    assertTrue(result==calculated);\n    \n    result = (Double)getStatResult(response, \"cnr\", \"double\", \"mean\");\n    calculated = (Double)getStatResult(response, \"cnr\", \"double\", \"meanc\");\n    assertTrue(result==calculated);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c38de7fccba85ce7e002b575cb4efae36a598c90","date":1385416749,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","sourceNew":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(\"cnr\", \"sum\", VAL_TYPE.DOUBLE);\n    double calculated = (Double)getStatResult(\"cnr\", \"sumc\", VAL_TYPE.DOUBLE);\n    assertTrue(result==calculated);\n    assertEquals(\"constant sum\", result, calculated, 0.0);\n    \n    result = (Double)getStatResult(\"cnr\", \"mean\", VAL_TYPE.DOUBLE);\n    calculated = (Double)getStatResult(\"cnr\", \"meanc\", VAL_TYPE.DOUBLE);\n    assertTrue(result==calculated);\n    assertEquals(\"constant mean\", result, calculated, 0.0);\n  }\n\n","sourceOld":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(\"cnr\", \"sum\", VAL_TYPE.DOUBLE);\n    double calculated = (Double)getStatResult(\"cnr\", \"sumc\", VAL_TYPE.DOUBLE);\n    assertTrue(result==calculated);\n    \n    result = (Double)getStatResult(\"cnr\", \"mean\", VAL_TYPE.DOUBLE);\n    calculated = (Double)getStatResult(\"cnr\", \"meanc\", VAL_TYPE.DOUBLE);\n    assertTrue(result==calculated);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d840db4e4ec73c3ff5d5457046c6854cc630e26","date":1385608650,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","sourceNew":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(\"cnr\", \"sum\", VAL_TYPE.DOUBLE);\n    double calculated = (Double)getStatResult(\"cnr\", \"sumc\", VAL_TYPE.DOUBLE);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    \n    result = (Double)getStatResult(\"cnr\", \"mean\", VAL_TYPE.DOUBLE);\n    calculated = (Double)getStatResult(\"cnr\", \"meanc\", VAL_TYPE.DOUBLE);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    assertEquals(getRawResponse(),  result, calculated, 0.0);\n  }\n\n","sourceOld":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(\"cnr\", \"sum\", VAL_TYPE.DOUBLE);\n    double calculated = (Double)getStatResult(\"cnr\", \"sumc\", VAL_TYPE.DOUBLE);\n    assertTrue(result==calculated);\n    assertEquals(\"constant sum\", result, calculated, 0.0);\n    \n    result = (Double)getStatResult(\"cnr\", \"mean\", VAL_TYPE.DOUBLE);\n    calculated = (Double)getStatResult(\"cnr\", \"meanc\", VAL_TYPE.DOUBLE);\n    assertTrue(result==calculated);\n    assertEquals(\"constant mean\", result, calculated, 0.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(\"cnr\", \"sum\", VAL_TYPE.DOUBLE);\n    double calculated = (Double)getStatResult(\"cnr\", \"sumc\", VAL_TYPE.DOUBLE);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    \n    result = (Double)getStatResult(\"cnr\", \"mean\", VAL_TYPE.DOUBLE);\n    calculated = (Double)getStatResult(\"cnr\", \"meanc\", VAL_TYPE.DOUBLE);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    assertEquals(getRawResponse(),  result, calculated, 0.0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/util/valuesource/FunctionTest#constantNumberTest().mjava","sourceNew":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(\"cnr\", \"sum\", VAL_TYPE.DOUBLE);\n    double calculated = (Double)getStatResult(\"cnr\", \"sumc\", VAL_TYPE.DOUBLE);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    \n    result = (Double)getStatResult(\"cnr\", \"mean\", VAL_TYPE.DOUBLE);\n    calculated = (Double)getStatResult(\"cnr\", \"meanc\", VAL_TYPE.DOUBLE);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    assertEquals(getRawResponse(),  result, calculated, 0.0);\n  }\n\n","sourceOld":"  @Test\n  public void constantNumberTest() throws Exception { \n    double result = (Double)getStatResult(\"cnr\", \"sum\", VAL_TYPE.DOUBLE);\n    double calculated = (Double)getStatResult(\"cnr\", \"sumc\", VAL_TYPE.DOUBLE);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    \n    result = (Double)getStatResult(\"cnr\", \"mean\", VAL_TYPE.DOUBLE);\n    calculated = (Double)getStatResult(\"cnr\", \"meanc\", VAL_TYPE.DOUBLE);\n    assertEquals(getRawResponse(), result, calculated, 0.0);\n    assertEquals(getRawResponse(),  result, calculated, 0.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c38de7fccba85ce7e002b575cb4efae36a598c90":["2408d2a60b59b9f5d910383ce065127078892c04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"2408d2a60b59b9f5d910383ce065127078892c04":["ff403346522eaa9de75403763e297e83a3ea585c"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2d840db4e4ec73c3ff5d5457046c6854cc630e26":["c38de7fccba85ce7e002b575cb4efae36a598c90"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"c38de7fccba85ce7e002b575cb4efae36a598c90":["2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"2408d2a60b59b9f5d910383ce065127078892c04":["c38de7fccba85ce7e002b575cb4efae36a598c90"],"ff403346522eaa9de75403763e297e83a3ea585c":["2408d2a60b59b9f5d910383ce065127078892c04"],"2d840db4e4ec73c3ff5d5457046c6854cc630e26":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}