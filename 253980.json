{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int).mjava","commits":[{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int).mjava","pathOld":"/dev/null","sourceNew":"    private Object parseSingleFieldValue(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return Boolean.toString(parser.getBoolean()); // for legacy reasons, single values s are expected to be strings\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. Unexpected \"+JSONParser.getEventString(ev) );\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3cfdc85a0c5d23bc0bacfd44398b148058cb350","date":1370393263,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int).mjava","sourceNew":"    private Object parseSingleFieldValue(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return (new ObjectBuilder(parser)).getBigNumber();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. Unexpected \"+JSONParser.getEventString(ev) );\n      }\n    }\n\n","sourceOld":"    private Object parseSingleFieldValue(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return Boolean.toString(parser.getBoolean()); // for legacy reasons, single values s are expected to be strings\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. Unexpected \"+JSONParser.getEventString(ev) );\n      }\n    }\n\n","bugFix":null,"bugIntro":["7cc06bf372c14250dd19e96f105b987c528618aa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7cc06bf372c14250dd19e96f105b987c528618aa","date":1370446051,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int).mjava","sourceNew":"    private Object parseSingleFieldValue(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. Unexpected \"+JSONParser.getEventString(ev) );\n      }\n    }\n\n","sourceOld":"    private Object parseSingleFieldValue(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return (new ObjectBuilder(parser)).getBigNumber();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. Unexpected \"+JSONParser.getEventString(ev) );\n      }\n    }\n\n","bugFix":["e3cfdc85a0c5d23bc0bacfd44398b148058cb350"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a63f62e9f506b7a15c76fddc8ad5f22112070c2","date":1423521689,"type":5,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int).mjava","sourceNew":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \"+JSONParser.getEventString(ev)+\" at [\"+parser.getPosition()+\"], field=\"+fieldName );\n      }\n    }\n\n","sourceOld":"    private Object parseSingleFieldValue(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. Unexpected \"+JSONParser.getEventString(ev) );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"042e4d934397657ba04c82b46cc5665076bc5c58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a63f62e9f506b7a15c76fddc8ad5f22112070c2":["7cc06bf372c14250dd19e96f105b987c528618aa"],"7cc06bf372c14250dd19e96f105b987c528618aa":["e3cfdc85a0c5d23bc0bacfd44398b148058cb350"],"e3cfdc85a0c5d23bc0bacfd44398b148058cb350":["042e4d934397657ba04c82b46cc5665076bc5c58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a63f62e9f506b7a15c76fddc8ad5f22112070c2"]},"commit2Childs":{"042e4d934397657ba04c82b46cc5665076bc5c58":["e3cfdc85a0c5d23bc0bacfd44398b148058cb350"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["042e4d934397657ba04c82b46cc5665076bc5c58"],"2a63f62e9f506b7a15c76fddc8ad5f22112070c2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7cc06bf372c14250dd19e96f105b987c528618aa":["2a63f62e9f506b7a15c76fddc8ad5f22112070c2"],"e3cfdc85a0c5d23bc0bacfd44398b148058cb350":["7cc06bf372c14250dd19e96f105b987c528618aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}