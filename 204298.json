{"path":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","commits":[{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","sourceNew":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  // LUCENE-591\n  public void testIndexKeywords() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex2\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries2.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testUnicodeHtml().mjava","sourceNew":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  // LUCENE-589\n  public void testUnicodeHtml() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testIndexKeywords().mjava","sourceNew":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  // LUCENE-591\n  public void testIndexKeywords() throws Exception {\n    File dir = getDataFile(\"test-files/html\");\n    File indexDir = new File(TEMP_DIR, \"demoIndex2\");\n    IndexHTML.main(new String[] { \"-create\", \"-index\", indexDir.getPath(), dir.getPath() });\n    File queries = getDataFile(\"test-files/queries2.txt\");\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] { \"-index\", indexDir.getPath(), \"-queries\", queries.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(output.contains(\"1 total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87eeb057b3ec12b3b95368edef84373bc9f54147","date":1302173473,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","sourceNew":"  private void testOneSearch(File indexPath, String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query, \"-index\", indexPath.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","sourceNew":"  private void testOneSearch(File indexPath, String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query, \"-index\", indexPath.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","sourceNew":null,"sourceOld":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","sourceNew":null,"sourceOld":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["81ea17596392ebd5d12741eb9e3b2516258b9413","87eeb057b3ec12b3b95368edef84373bc9f54147"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","87eeb057b3ec12b3b95368edef84373bc9f54147"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","87eeb057b3ec12b3b95368edef84373bc9f54147"],"87eeb057b3ec12b3b95368edef84373bc9f54147":["81ea17596392ebd5d12741eb9e3b2516258b9413"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87eeb057b3ec12b3b95368edef84373bc9f54147"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["f1bdbf92da222965b46c0a942c3857ba56e5c638","a3776dccca01c11e7046323cfad46a3b4a471233","87eeb057b3ec12b3b95368edef84373bc9f54147","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1bdbf92da222965b46c0a942c3857ba56e5c638","81ea17596392ebd5d12741eb9e3b2516258b9413","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"962d04139994fce5193143ef35615499a9a96d78":[],"87eeb057b3ec12b3b95368edef84373bc9f54147":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}