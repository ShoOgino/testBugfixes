{"path":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","commits":[{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#getTopReaderContext().mjava","sourceNew":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf resaons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = (CompositeReaderContext) ReaderUtil.buildReaderContext(this);\n    }\n    return readerContext;\n  }\n\n","sourceOld":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf resaons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = (CompositeReaderContext) ReaderUtil.buildReaderContext(this);\n    }\n    return readerContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e00dc2d44dc4e14788fbeb649970c757f024592d","date":1327883708,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","sourceNew":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf resaons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = (CompositeReaderContext) new ReaderContextBuilder(this).build();\n    }\n    return readerContext;\n  }\n\n","sourceOld":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf resaons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = (CompositeReaderContext) ReaderUtil.buildReaderContext(this);\n    }\n    return readerContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8493985e6883b3fa8231d172694d2aa3a85cb182","date":1327920390,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","sourceNew":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf reasons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = new ReaderContextBuilder(this).build();\n    }\n    return readerContext;\n  }\n\n","sourceOld":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf resaons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = (CompositeReaderContext) new ReaderContextBuilder(this).build();\n    }\n    return readerContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7184cc2c0261f3b9a1abc772edd1ec0d071ca9ea","date":1327930581,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","sourceNew":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf reasons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = CompositeReaderContext.create(this);\n    }\n    return readerContext;\n  }\n\n","sourceOld":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf reasons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = new ReaderContextBuilder(this).build();\n    }\n    return readerContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf reasons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = CompositeReaderContext.create(this);\n    }\n    return readerContext;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeReader#getTopReaderContext().mjava","sourceNew":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf reasons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = CompositeReaderContext.create(this);\n    }\n    return readerContext;\n  }\n\n","sourceOld":"  @Override\n  public final CompositeReaderContext getTopReaderContext() {\n    ensureOpen();\n    // lazy init without thread safety for perf reasons: Building the readerContext twice does not hurt!\n    if (readerContext == null) {\n      assert getSequentialSubReaders() != null;\n      readerContext = CompositeReaderContext.create(this);\n    }\n    return readerContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["e00dc2d44dc4e14788fbeb649970c757f024592d"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e00dc2d44dc4e14788fbeb649970c757f024592d":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7184cc2c0261f3b9a1abc772edd1ec0d071ca9ea"],"7184cc2c0261f3b9a1abc772edd1ec0d071ca9ea":["8493985e6883b3fa8231d172694d2aa3a85cb182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["7184cc2c0261f3b9a1abc772edd1ec0d071ca9ea"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["e00dc2d44dc4e14788fbeb649970c757f024592d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e00dc2d44dc4e14788fbeb649970c757f024592d":["8493985e6883b3fa8231d172694d2aa3a85cb182"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da6d5ac19a80d65b1e864251f155d30960353b7e","5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7184cc2c0261f3b9a1abc772edd1ec0d071ca9ea":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}