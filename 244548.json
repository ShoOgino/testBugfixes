{"path":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","commits":[{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      streams.result = new StopFilter(streams.source, stopWords);\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54c106a73719ede69e08f8b0ffe2950cc9ebfa07","date":1244055085,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      if (useDefaultStopPositionIncrement) {\n        streams.result = new StopFilter(streams.source, stopWords);\n      } else {\n        streams.result = new StopFilter(enablePositionIncrements, streams.source, stopWords);\n      }\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","sourceOld":"  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      streams.result = new StopFilter(streams.source, stopWords);\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      streams.result = new StopFilter(enablePositionIncrements, streams.source, stopWords);\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","sourceOld":"  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      if (useDefaultStopPositionIncrement) {\n        streams.result = new StopFilter(streams.source, stopWords);\n      } else {\n        streams.result = new StopFilter(enablePositionIncrements, streams.source, stopWords);\n      }\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      streams.result = new StopFilter(enablePositionIncrements, streams.source, stopWords);\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","sourceOld":"  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      streams.result = new StopFilter(enablePositionIncrements, streams.source, stopWords);\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      streams.result = new StopFilter(matchVersion,\n          streams.source, stopWords);\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      streams.result = new StopFilter(enablePositionIncrements, streams.source, stopWords);\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/StopAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader) throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new LowerCaseTokenizer(reader);\n      streams.result = new StopFilter(matchVersion,\n          streams.source, stopWords);\n      setPreviousTokenStream(streams);\n    } else\n      streams.source.reset(reader);\n    return streams.result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6864413dbc0c12104c978c05456f3da1d45adb03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"ddc5fbfd4c64963aba52713a4496522540294d69":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc5fbfd4c64963aba52713a4496522540294d69"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["8a9e385641d717e641408d8fbbc62be8fc766357"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["6864413dbc0c12104c978c05456f3da1d45adb03"]},"commit2Childs":{"6864413dbc0c12104c978c05456f3da1d45adb03":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6864413dbc0c12104c978c05456f3da1d45adb03"],"8a9e385641d717e641408d8fbbc62be8fc766357":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"ddc5fbfd4c64963aba52713a4496522540294d69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["ddc5fbfd4c64963aba52713a4496522540294d69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}