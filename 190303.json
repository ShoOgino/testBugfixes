{"path":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","commits":[{"id":"540d8a5fd510a46e41f9a51f7a93f8b2d37c1c4c","date":1378490020,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      UnInvertedField ui0 = UnInvertedField.getUnInvertedField(\"f0_ws\", currentSearcher);\n      UnInvertedField ui1 = UnInvertedField.getUnInvertedField(\"f1_ws\", currentSearcher);\n      UnInvertedField ui2 = UnInvertedField.getUnInvertedField(\"f2_ws\", currentSearcher);\n      UnInvertedField ui3 = UnInvertedField.getUnInvertedField(\"f3_ws\", currentSearcher);\n      UnInvertedField ui4 = UnInvertedField.getUnInvertedField(\"f4_ws\", currentSearcher);\n      UnInvertedField ui5 = UnInvertedField.getUnInvertedField(\"f5_ws\", currentSearcher);\n      UnInvertedField ui6 = UnInvertedField.getUnInvertedField(\"f6_ws\", currentSearcher);\n      UnInvertedField ui7 = UnInvertedField.getUnInvertedField(\"f7_ws\", currentSearcher);\n      UnInvertedField ui8 = UnInvertedField.getUnInvertedField(\"f8_ws\", currentSearcher);\n      UnInvertedField ui9 = UnInvertedField.getUnInvertedField(\"f9_ws\", currentSearcher);\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n\n      // Now, are all the UnInvertedFields still the same? Meaning they weren't re-fetched even when a bunch were\n      // requested at the same time?\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui0, UnInvertedField.getUnInvertedField(\"f0_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui1, UnInvertedField.getUnInvertedField(\"f1_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui2, UnInvertedField.getUnInvertedField(\"f2_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui3, UnInvertedField.getUnInvertedField(\"f3_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui4, UnInvertedField.getUnInvertedField(\"f4_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui5, UnInvertedField.getUnInvertedField(\"f5_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui6, UnInvertedField.getUnInvertedField(\"f6_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui7, UnInvertedField.getUnInvertedField(\"f7_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui8, UnInvertedField.getUnInvertedField(\"f8_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui9, UnInvertedField.getUnInvertedField(\"f9_ws\", currentSearcher));\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5275a994b4fc707fafce0408625bd3456edc28a4","date":1400004510,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n\n      // Now, are all the UnInvertedFields still the same? Meaning they weren't re-fetched even when a bunch were\n      // requested at the same time?\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui0, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui1, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui2, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui3, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui4, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui5, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui6, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui7, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui8, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui9, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\"));\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      UnInvertedField ui0 = UnInvertedField.getUnInvertedField(\"f0_ws\", currentSearcher);\n      UnInvertedField ui1 = UnInvertedField.getUnInvertedField(\"f1_ws\", currentSearcher);\n      UnInvertedField ui2 = UnInvertedField.getUnInvertedField(\"f2_ws\", currentSearcher);\n      UnInvertedField ui3 = UnInvertedField.getUnInvertedField(\"f3_ws\", currentSearcher);\n      UnInvertedField ui4 = UnInvertedField.getUnInvertedField(\"f4_ws\", currentSearcher);\n      UnInvertedField ui5 = UnInvertedField.getUnInvertedField(\"f5_ws\", currentSearcher);\n      UnInvertedField ui6 = UnInvertedField.getUnInvertedField(\"f6_ws\", currentSearcher);\n      UnInvertedField ui7 = UnInvertedField.getUnInvertedField(\"f7_ws\", currentSearcher);\n      UnInvertedField ui8 = UnInvertedField.getUnInvertedField(\"f8_ws\", currentSearcher);\n      UnInvertedField ui9 = UnInvertedField.getUnInvertedField(\"f9_ws\", currentSearcher);\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n\n      // Now, are all the UnInvertedFields still the same? Meaning they weren't re-fetched even when a bunch were\n      // requested at the same time?\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui0, UnInvertedField.getUnInvertedField(\"f0_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui1, UnInvertedField.getUnInvertedField(\"f1_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui2, UnInvertedField.getUnInvertedField(\"f2_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui3, UnInvertedField.getUnInvertedField(\"f3_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui4, UnInvertedField.getUnInvertedField(\"f4_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui5, UnInvertedField.getUnInvertedField(\"f5_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui6, UnInvertedField.getUnInvertedField(\"f6_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui7, UnInvertedField.getUnInvertedField(\"f7_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui8, UnInvertedField.getUnInvertedField(\"f8_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui9, UnInvertedField.getUnInvertedField(\"f9_ws\", currentSearcher));\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n\n      // Now, are all the UnInvertedFields still the same? Meaning they weren't re-fetched even when a bunch were\n      // requested at the same time?\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui0, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui1, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui2, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui3, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui4, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui5, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui6, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui7, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui8, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui9, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\"));\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      UnInvertedField ui0 = UnInvertedField.getUnInvertedField(\"f0_ws\", currentSearcher);\n      UnInvertedField ui1 = UnInvertedField.getUnInvertedField(\"f1_ws\", currentSearcher);\n      UnInvertedField ui2 = UnInvertedField.getUnInvertedField(\"f2_ws\", currentSearcher);\n      UnInvertedField ui3 = UnInvertedField.getUnInvertedField(\"f3_ws\", currentSearcher);\n      UnInvertedField ui4 = UnInvertedField.getUnInvertedField(\"f4_ws\", currentSearcher);\n      UnInvertedField ui5 = UnInvertedField.getUnInvertedField(\"f5_ws\", currentSearcher);\n      UnInvertedField ui6 = UnInvertedField.getUnInvertedField(\"f6_ws\", currentSearcher);\n      UnInvertedField ui7 = UnInvertedField.getUnInvertedField(\"f7_ws\", currentSearcher);\n      UnInvertedField ui8 = UnInvertedField.getUnInvertedField(\"f8_ws\", currentSearcher);\n      UnInvertedField ui9 = UnInvertedField.getUnInvertedField(\"f9_ws\", currentSearcher);\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n\n      // Now, are all the UnInvertedFields still the same? Meaning they weren't re-fetched even when a bunch were\n      // requested at the same time?\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui0, UnInvertedField.getUnInvertedField(\"f0_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui1, UnInvertedField.getUnInvertedField(\"f1_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui2, UnInvertedField.getUnInvertedField(\"f2_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui3, UnInvertedField.getUnInvertedField(\"f3_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui4, UnInvertedField.getUnInvertedField(\"f4_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui5, UnInvertedField.getUnInvertedField(\"f5_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui6, UnInvertedField.getUnInvertedField(\"f6_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui7, UnInvertedField.getUnInvertedField(\"f7_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui8, UnInvertedField.getUnInvertedField(\"f8_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui9, UnInvertedField.getUnInvertedField(\"f9_ws\", currentSearcher));\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n\n      // Now, are all the UnInvertedFields still the same? Meaning they weren't re-fetched even when a bunch were\n      // requested at the same time?\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui0, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui1, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui2, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui3, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui4, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui5, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui6, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui7, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui8, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui9, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\"));\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      UnInvertedField ui0 = UnInvertedField.getUnInvertedField(\"f0_ws\", currentSearcher);\n      UnInvertedField ui1 = UnInvertedField.getUnInvertedField(\"f1_ws\", currentSearcher);\n      UnInvertedField ui2 = UnInvertedField.getUnInvertedField(\"f2_ws\", currentSearcher);\n      UnInvertedField ui3 = UnInvertedField.getUnInvertedField(\"f3_ws\", currentSearcher);\n      UnInvertedField ui4 = UnInvertedField.getUnInvertedField(\"f4_ws\", currentSearcher);\n      UnInvertedField ui5 = UnInvertedField.getUnInvertedField(\"f5_ws\", currentSearcher);\n      UnInvertedField ui6 = UnInvertedField.getUnInvertedField(\"f6_ws\", currentSearcher);\n      UnInvertedField ui7 = UnInvertedField.getUnInvertedField(\"f7_ws\", currentSearcher);\n      UnInvertedField ui8 = UnInvertedField.getUnInvertedField(\"f8_ws\", currentSearcher);\n      UnInvertedField ui9 = UnInvertedField.getUnInvertedField(\"f9_ws\", currentSearcher);\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n\n      // Now, are all the UnInvertedFields still the same? Meaning they weren't re-fetched even when a bunch were\n      // requested at the same time?\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui0, UnInvertedField.getUnInvertedField(\"f0_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui1, UnInvertedField.getUnInvertedField(\"f1_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui2, UnInvertedField.getUnInvertedField(\"f2_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui3, UnInvertedField.getUnInvertedField(\"f3_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui4, UnInvertedField.getUnInvertedField(\"f4_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui5, UnInvertedField.getUnInvertedField(\"f5_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui6, UnInvertedField.getUnInvertedField(\"f6_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui7, UnInvertedField.getUnInvertedField(\"f7_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui8, UnInvertedField.getUnInvertedField(\"f8_ws\", currentSearcher));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui9, UnInvertedField.getUnInvertedField(\"f9_ws\", currentSearcher));\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n\n      // Now, are all the UnInvertedFields still the same? Meaning they weren't re-fetched even when a bunch were\n      // requested at the same time?\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui0, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui1, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui2, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui3, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui4, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui5, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui6, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui7, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui8, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\"));\n      assertEquals(\"UnInvertedField coming back from the seacher should not have changed! \",\n          ui9, DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\"));\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8a06631c6dd7816f50f77a22d08dac33e15f1f1","date":1408391117,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code. Which, BTW, doesn't detect\n      // if you've asked for the same field more than once.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=50]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=100]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3802d95c3a31be21ea2971945049b711d95ef8d5","date":1455055616,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c64189697927b548f74ba66dfa5051548662938","date":1455059336,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    assertQ(\"check no threading, threads == 0\",\n        req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e07c409cff8701e4dc3d45934b021a949a5a8822","date":1475694629,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getLeafReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ab833f2b623042c834458d4cbcad05073a93793","date":1527625631,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    h.getCore().withSearcher(currentSearcher -> {\n\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n      return null;\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2138c838f1c8052d94d61eb1e205dce7fa6932ef","date":1527642223,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#testMultiThreadedFacets().mjava","sourceNew":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    h.getCore().withSearcher(currentSearcher -> {\n\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n      return null;\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreadedFacets() throws Exception {\n    add50ocs();\n    \n    String[] methodParam = random().nextBoolean() ? new String[]{} : new String[]{\"facet.method\",\"uif\"} ;\n    \n    assertQ(\"check no threading, threads == 0\",\n        req(methodParam\n            , \"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n            , \"facet\", \"true\"\n            , \"facet.field\", \"f0_ws\"\n            , \"facet.field\", \"f1_ws\"\n            , \"facet.field\", \"f2_ws\"\n            , \"facet.field\", \"f3_ws\"\n            , \"facet.field\", \"f4_ws\"\n            , \"facet.field\", \"f5_ws\"\n            , \"facet.field\", \"f6_ws\"\n            , \"facet.field\", \"f7_ws\"\n            , \"facet.field\", \"f8_ws\"\n            , \"facet.field\", \"f9_ws\"\n            , \"facet.threads\", \"0\"\n            , \"facet.limit\", \"-1\"\n        )\n        , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n        , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n        , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n        , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n        , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n        , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n        , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n        , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n        , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n        , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n        , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n        , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n    );\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n      SortedSetDocValues ui0 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f0_ws\");\n      SortedSetDocValues ui1 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f1_ws\");\n      SortedSetDocValues ui2 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f2_ws\");\n      SortedSetDocValues ui3 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f3_ws\");\n      SortedSetDocValues ui4 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f4_ws\");\n      SortedSetDocValues ui5 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f5_ws\");\n      SortedSetDocValues ui6 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f6_ws\");\n      SortedSetDocValues ui7 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f7_ws\");\n      SortedSetDocValues ui8 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f8_ws\");\n      SortedSetDocValues ui9 = DocValues.getSortedSet(currentSearcher.getSlowAtomicReader(), \"f9_ws\");\n\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n      assertQ(\"check threading, fewer threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"3\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_1'][.='25']\"\n          , \"//lst[@name='f0_ws']/int[@name='zero_2'][.='25']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_1'][.='33']\"\n          , \"//lst[@name='f1_ws']/int[@name='one_3'][.='17']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_1'][.='37']\"\n          , \"//lst[@name='f2_ws']/int[@name='two_4'][.='13']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_1'][.='40']\"\n          , \"//lst[@name='f3_ws']/int[@name='three_5'][.='10']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_1'][.='41']\"\n          , \"//lst[@name='f4_ws']/int[@name='four_6'][.='9']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_1'][.='42']\"\n          , \"//lst[@name='f5_ws']/int[@name='five_7'][.='8']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_1'][.='43']\"\n          , \"//lst[@name='f6_ws']/int[@name='six_8'][.='7']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_1'][.='44']\"\n          , \"//lst[@name='f7_ws']/int[@name='seven_9'][.='6']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_1'][.='45']\"\n          , \"//lst[@name='f8_ws']/int[@name='eight_10'][.='5']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_1'][.='45']\"\n          , \"//lst[@name='f9_ws']/int[@name='nine_11'][.='5']\"\n\n      );\n\n      // After this all, the uninverted fields should be exactly the same as they were the first time, even if we\n      // blast a whole bunch of identical fields at the facet code.\n      // The way fetching the uninverted field is written, all this is really testing is if the cache is working.\n      // It's NOT testing whether the pending/sleep is actually functioning, I had to do that by hand since I don't\n      // see how to make sure that uninverting the field multiple times actually happens to hit the wait state.\n      assertQ(\"check threading, more threads than fields\",\n          req(methodParam\n              ,\"q\", \"id:*\", \"indent\", \"true\", \"fl\", \"id\", \"rows\", \"1\"\n              , \"facet\", \"true\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f0_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f1_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f2_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f3_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f4_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f5_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f6_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f7_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f8_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.field\", \"f9_ws\"\n              , \"facet.threads\", \"1000\"\n              , \"facet.limit\", \"-1\"\n          )\n          , \"*[count(//lst[@name='facet_fields']/lst)=10]\"\n          , \"*[count(//lst[@name='facet_fields']/lst/int)=20]\"\n      );\n    } finally {\n      currentSearcherRef.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5275a994b4fc707fafce0408625bd3456edc28a4":["540d8a5fd510a46e41f9a51f7a93f8b2d37c1c4c"],"b8a06631c6dd7816f50f77a22d08dac33e15f1f1":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"3c64189697927b548f74ba66dfa5051548662938":["c9fb5f46e264daf5ba3860defe623a89d202dd87","3802d95c3a31be21ea2971945049b711d95ef8d5"],"e07c409cff8701e4dc3d45934b021a949a5a8822":["3c64189697927b548f74ba66dfa5051548662938"],"56572ec06f1407c066d6b7399413178b33176cd8":["540d8a5fd510a46e41f9a51f7a93f8b2d37c1c4c","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["b8a06631c6dd7816f50f77a22d08dac33e15f1f1"],"4ab833f2b623042c834458d4cbcad05073a93793":["e07c409cff8701e4dc3d45934b021a949a5a8822"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3c64189697927b548f74ba66dfa5051548662938","e07c409cff8701e4dc3d45934b021a949a5a8822"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["540d8a5fd510a46e41f9a51f7a93f8b2d37c1c4c","5275a994b4fc707fafce0408625bd3456edc28a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"540d8a5fd510a46e41f9a51f7a93f8b2d37c1c4c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"2138c838f1c8052d94d61eb1e205dce7fa6932ef":["e07c409cff8701e4dc3d45934b021a949a5a8822","4ab833f2b623042c834458d4cbcad05073a93793"]},"commit2Childs":{"5275a994b4fc707fafce0408625bd3456edc28a4":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"b8a06631c6dd7816f50f77a22d08dac33e15f1f1":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["b8a06631c6dd7816f50f77a22d08dac33e15f1f1"],"3c64189697927b548f74ba66dfa5051548662938":["e07c409cff8701e4dc3d45934b021a949a5a8822","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e07c409cff8701e4dc3d45934b021a949a5a8822":["4ab833f2b623042c834458d4cbcad05073a93793","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["3c64189697927b548f74ba66dfa5051548662938","3802d95c3a31be21ea2971945049b711d95ef8d5"],"4ab833f2b623042c834458d4cbcad05073a93793":["2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"93dd449115a9247533e44bab47e8429e5dccbc6d":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["540d8a5fd510a46e41f9a51f7a93f8b2d37c1c4c"],"540d8a5fd510a46e41f9a51f7a93f8b2d37c1c4c":["5275a994b4fc707fafce0408625bd3456edc28a4","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["3c64189697927b548f74ba66dfa5051548662938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2138c838f1c8052d94d61eb1e205dce7fa6932ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}