{"path":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","commits":[{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    List<String> lst = (List<String>)rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertTrue(lst.toString(), lst.contains(\"solr.jvm\"));\n    assertTrue(lst.toString(), lst.contains(\"solr.node\"));\n    assertTrue(lst.toString(), lst.contains(\"solr.collection..system\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8f0f2472d437d44ec2144932e1d13fb494e82a3","date":1528403207,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","sourceNew":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    SimpleOrderedMap<Object> lst = (SimpleOrderedMap<Object>) rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertNotNull(lst.toString(), lst.get(\"solr.jvm\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.node\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.collection..system\"));\n  }\n\n","sourceOld":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    List<String> lst = (List<String>)rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertTrue(lst.toString(), lst.contains(\"solr.jvm\"));\n    assertTrue(lst.toString(), lst.contains(\"solr.node\"));\n    assertTrue(lst.toString(), lst.contains(\"solr.collection..system\"));\n  }\n\n","bugFix":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","sourceNew":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    SimpleOrderedMap<Object> lst = (SimpleOrderedMap<Object>) rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertNotNull(lst.toString(), lst.get(\"solr.jvm\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.node\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.collection..system\"));\n  }\n\n","sourceOld":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    List<String> lst = (List<String>)rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertTrue(lst.toString(), lst.contains(\"solr.jvm\"));\n    assertTrue(lst.toString(), lst.contains(\"solr.node\"));\n    assertTrue(lst.toString(), lst.contains(\"solr.collection..system\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","sourceNew":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    SimpleOrderedMap<Object> lst = (SimpleOrderedMap<Object>) rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertNotNull(lst.toString(), lst.get(\"solr.jvm\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.node\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.collection..system\"));\n  }\n\n","sourceOld":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    List<String> lst = (List<String>)rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertTrue(lst.toString(), lst.contains(\"solr.jvm\"));\n    assertTrue(lst.toString(), lst.contains(\"solr.node\"));\n    assertTrue(lst.toString(), lst.contains(\"solr.collection..system\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testList().mjava","sourceNew":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    @SuppressWarnings({\"unchecked\"})\n    SimpleOrderedMap<Object> lst = (SimpleOrderedMap<Object>) rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertNotNull(lst.toString(), lst.get(\"solr.jvm\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.node\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.collection..system\"));\n  }\n\n","sourceOld":"  @Test\n  public void testList() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(params(CommonParams.ACTION, \"list\")));\n    assertNotNull(rsp);\n    // expected solr.jvm, solr.node and solr.collection..system\n    SimpleOrderedMap<Object> lst = (SimpleOrderedMap<Object>) rsp.get(\"metrics\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    assertNotNull(lst.toString(), lst.get(\"solr.jvm\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.node\"));\n    assertNotNull(lst.toString(), lst.get(\"solr.collection..system\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f8f0f2472d437d44ec2144932e1d13fb494e82a3":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","f8f0f2472d437d44ec2144932e1d13fb494e82a3"]},"commit2Childs":{"f8f0f2472d437d44ec2144932e1d13fb494e82a3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","aa2585c33d5d66a1c837c312221eb55ddb3c4300","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["f8f0f2472d437d44ec2144932e1d13fb494e82a3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}