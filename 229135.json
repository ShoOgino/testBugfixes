{"path":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df9bf66ed405ee5c7d32b47bdb36c2e36d2c1392","date":1377503666,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.shutdown();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"099c774ddd27f4ad437ca5df14d153bab0a3affe","date":1424527689,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["b89678825b68eccaf09e6ab71675fc0b0af1e099","df9bf66ed405ee5c7d32b47bdb36c2e36d2c1392"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"df9bf66ed405ee5c7d32b47bdb36c2e36d2c1392":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["df9bf66ed405ee5c7d32b47bdb36c2e36d2c1392"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["099c774ddd27f4ad437ca5df14d153bab0a3affe"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","df9bf66ed405ee5c7d32b47bdb36c2e36d2c1392"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["099c774ddd27f4ad437ca5df14d153bab0a3affe"],"df9bf66ed405ee5c7d32b47bdb36c2e36d2c1392":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}