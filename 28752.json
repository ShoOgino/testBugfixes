{"path":"solr/solrj/src/java/org/noggit/JSONParser#matchBareWord(char[]).mjava","commits":[{"id":"980f4ef5a16664be88d82c37e6af5c49a3d57c9c","date":1557969027,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/noggit/JSONParser#matchBareWord(char[]).mjava","pathOld":"/dev/null","sourceNew":"  protected boolean matchBareWord(char[] arr) throws IOException {\n    for (int i = 1; i < arr.length; i++) {\n      int ch = getChar();\n      if (ch != arr[i]) {\n        if ((flags & ALLOW_UNQUOTED_STRING_VALUES) == 0) {\n          throw err(\"Expected \" + new String(arr));\n        } else {\n          stringTerm = 0;\n          out.reset();\n          out.write(arr, 0, i);\n          if (!eof) {\n            start--;\n          }\n          return false;\n        }\n      }\n    }\n\n    // if we don't allow bare strings, we don't need to check that the string actually terminates... just\n    // let things fail as the parser tries to continue\n    if ((flags & ALLOW_UNQUOTED_STRING_VALUES) == 0) {\n      return true;\n    }\n\n    // check that the string actually terminates... for example trueX should return false\n    int ch = getChar();\n    if (eof) {\n      return true;\n    } else if (!isUnquotedStringChar(ch)) {\n      start--;\n      return true;\n    }\n\n    // we encountered something like \"trueX\" when matching \"true\"\n    stringTerm = 0;\n    out.reset();\n    out.unsafeWrite(arr, 0, arr.length);\n    out.unsafeWrite(ch);\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"]},"commit2Childs":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}