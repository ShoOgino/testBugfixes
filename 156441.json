{"path":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testRenameTmpFile().mjava","commits":[{"id":"90671118e7e92007dbc908dd155b24990f315e82","date":1560840479,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testRenameTmpFile().mjava","pathOld":"/dev/null","sourceNew":"  public void testRenameTmpFile() throws IOException {\n    try (Directory directory = getDirectory(createTempDir())) {\n      final String name;\n      try (IndexOutput out = directory.createTempOutput(\"foo.cfs\", \"\", IOContext.DEFAULT)) {\n        out.writeInt(1);\n        name = out.getName();\n      }\n      assertEquals(1, Arrays.stream(directory.listAll()).filter(f -> f.equals(name)).count());\n      assertEquals(0, Arrays.stream(directory.listAll()).filter(f -> f.equals(\"foo.cfs\")).count());\n      directory.rename(name, \"foo.cfs\");\n      assertEquals(1, Arrays.stream(directory.listAll()).filter(f -> f.equals(\"foo.cfs\")).count());\n      assertEquals(0, Arrays.stream(directory.listAll()).filter(f -> f.equals(name)).count());\n    }\n\n    try (Directory directory= newFSSwitchDirectory(Collections.singleton(\"bar\"))) {\n      String brokenName;\n      try (IndexOutput out = directory.createTempOutput(\"foo\", \"bar\", IOContext.DEFAULT)) {\n        out.writeInt(1);\n        brokenName = out.getName();\n      }\n      AtomicMoveNotSupportedException exception = expectThrows(AtomicMoveNotSupportedException.class,\n          () -> directory.rename(brokenName, \"foo.bar\"));\n      assertEquals(\"foo_bar_0.tmp -> foo.bar: source and dest are in different directories\", exception.getMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90671118e7e92007dbc908dd155b24990f315e82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90671118e7e92007dbc908dd155b24990f315e82"]},"commit2Childs":{"90671118e7e92007dbc908dd155b24990f315e82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["90671118e7e92007dbc908dd155b24990f315e82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}