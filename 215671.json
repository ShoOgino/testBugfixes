{"path":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random);\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newField(\"content\", \"aaa bbb ccc ddd\" + i, TextField.TYPE_STORED));\n          doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = IndexReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = IndexReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = IndexReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random);\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newField(\"content\", \"aaa bbb ccc ddd\" + i, TextField.TYPE_STORED));\n          doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = IndexReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = IndexReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = IndexReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newField(\"content\", \"aaa bbb ccc ddd\" + i, TextField.TYPE_STORED));\n          doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = IndexReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = IndexReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = IndexReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random);\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newField(\"content\", \"aaa bbb ccc ddd\" + i, TextField.TYPE_STORED));\n          doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = IndexReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = IndexReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = IndexReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newField(\"content\", \"aaa bbb ccc ddd\" + i, TextField.TYPE_STORED));\n          doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newField(\"content\", \"aaa bbb ccc ddd\" + i, TextField.TYPE_STORED));\n          doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = IndexReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = IndexReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = IndexReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newField(\"content\", \"aaa bbb ccc ddd\" + i, TextField.TYPE_STORED));\n          doc.add(newField(\"id\", \"\" + i, TextField.TYPE_STORED));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":["77cc5d33c4ecf450c71edad489df69de68a73a11"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = _TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = TestUtil.createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be04a7534a8a0679382542b62556ea5fba6cfb7f","date":1396613089,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = TestUtil.createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = TestUtil.createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = TestUtil.createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = TestUtil.getTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.shutdown();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.shutdown();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        TestUtil.rm(indexDir);\n      }\n    }\n\n","bugFix":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      File indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), null, 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer, true);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer, true);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer, true);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      IndexWriter writer = new IndexWriter(\n                                           dir,\n                                           new IndexWriterConfig(new MockAnalyzer(random())).\n                                           setOpenMode(OpenMode.CREATE).\n                                           setMergePolicy(newLogMergePolicy(false))\n                                           );\n      for(int i=0;i<37;i++) {\n        Document doc = new Document();\n        doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n        doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n        writer.addDocument(doc);\n      }\n\n      dir.allIndexInputs.clear();\n\n      IndexReader reader = DirectoryReader.open(writer);\n      Term aaa = new Term(\"content\", \"aaa\");\n      Term bbb = new Term(\"content\", \"bbb\");\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"0\"));\n      reader = DirectoryReader.open(writer);\n      IndexSearcher searcher = newSearcher(reader);\n      ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(36, hits.length);\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"4\"));\n      reader = DirectoryReader.open(writer);\n      searcher = newSearcher(reader);\n\n      hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      dir.tweakBufferSizes();\n      hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(1, hits.length);\n      hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      writer.close();\n      reader.close();\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      IndexWriter writer = new IndexWriter(\n                                           dir,\n                                           new IndexWriterConfig(new MockAnalyzer(random())).\n                                           setOpenMode(OpenMode.CREATE).\n                                           setMergePolicy(newLogMergePolicy(false))\n                                           );\n      for(int i=0;i<37;i++) {\n        Document doc = new Document();\n        doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n        doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n        writer.addDocument(doc);\n      }\n\n      dir.allIndexInputs.clear();\n\n      IndexReader reader = DirectoryReader.open(writer);\n      Term aaa = new Term(\"content\", \"aaa\");\n      Term bbb = new Term(\"content\", \"bbb\");\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"0\"));\n      reader = DirectoryReader.open(writer);\n      IndexSearcher searcher = newSearcher(reader);\n      ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(36, hits.length);\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"4\"));\n      reader = DirectoryReader.open(writer);\n      searcher = newSearcher(reader);\n\n      hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      dir.tweakBufferSizes();\n      hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(1, hits.length);\n      hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      writer.close();\n      reader.close();\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      IndexWriter writer = new IndexWriter(\n                                           dir,\n                                           new IndexWriterConfig(new MockAnalyzer(random())).\n                                           setOpenMode(OpenMode.CREATE).\n                                           setMergePolicy(newLogMergePolicy(false))\n                                           );\n      for(int i=0;i<37;i++) {\n        Document doc = new Document();\n        doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n        doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n        writer.addDocument(doc);\n      }\n\n      dir.allIndexInputs.clear();\n\n      IndexReader reader = DirectoryReader.open(writer);\n      Term aaa = new Term(\"content\", \"aaa\");\n      Term bbb = new Term(\"content\", \"bbb\");\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"0\"));\n      reader = DirectoryReader.open(writer);\n      IndexSearcher searcher = newSearcher(reader);\n      ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(36, hits.length);\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"4\"));\n      reader = DirectoryReader.open(writer);\n      searcher = newSearcher(reader);\n\n      hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      dir.tweakBufferSizes();\n      hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(1, hits.length);\n      hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      writer.close();\n      reader.close();\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      IndexWriter writer = new IndexWriter(\n                                           dir,\n                                           new IndexWriterConfig(new MockAnalyzer(random())).\n                                           setOpenMode(OpenMode.CREATE).\n                                           setMergePolicy(newLogMergePolicy(false))\n                                           );\n      for(int i=0;i<37;i++) {\n        Document doc = new Document();\n        doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n        doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n        writer.addDocument(doc);\n      }\n\n      dir.allIndexInputs.clear();\n\n      IndexReader reader = DirectoryReader.open(writer);\n      Term aaa = new Term(\"content\", \"aaa\");\n      Term bbb = new Term(\"content\", \"bbb\");\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"0\"));\n      reader = DirectoryReader.open(writer);\n      IndexSearcher searcher = newSearcher(reader);\n      ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(36, hits.length);\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"4\"));\n      reader = DirectoryReader.open(writer);\n      searcher = newSearcher(reader);\n\n      hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      dir.tweakBufferSizes();\n      hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(1, hits.length);\n      hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      writer.close();\n      reader.close();\n    }\n\n","sourceOld":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      try {\n        IndexWriter writer = new IndexWriter(\n            dir,\n            new IndexWriterConfig(new MockAnalyzer(random())).\n                setOpenMode(OpenMode.CREATE).\n                setMergePolicy(newLogMergePolicy(false))\n        );\n        for(int i=0;i<37;i++) {\n          Document doc = new Document();\n          doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n          doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n          writer.addDocument(doc);\n        }\n\n        dir.allIndexInputs.clear();\n\n        IndexReader reader = DirectoryReader.open(writer);\n        Term aaa = new Term(\"content\", \"aaa\");\n        Term bbb = new Term(\"content\", \"bbb\");\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"0\"));\n        reader = DirectoryReader.open(writer);\n        IndexSearcher searcher = newSearcher(reader);\n        ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(36, hits.length);\n        \n        reader.close();\n        \n        dir.tweakBufferSizes();\n        writer.deleteDocuments(new Term(\"id\", \"4\"));\n        reader = DirectoryReader.open(writer);\n        searcher = newSearcher(reader);\n\n        hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        dir.tweakBufferSizes();\n        hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(1, hits.length);\n        hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n        dir.tweakBufferSizes();\n        assertEquals(35, hits.length);\n        writer.close();\n        reader.close();\n      } finally {\n        IOUtils.rm(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c924ed848363114bc21dd13c3a1953c42aefb554","date":1586956211,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput#testSetBufferSize().mjava","sourceNew":null,"sourceOld":"    public void testSetBufferSize() throws IOException {\n      Path indexDir = createTempDir(\"testSetBufferSize\");\n      MockFSDirectory dir = new MockFSDirectory(indexDir, random());\n      IndexWriter writer = new IndexWriter(\n                                           dir,\n                                           new IndexWriterConfig(new MockAnalyzer(random())).\n                                           setOpenMode(OpenMode.CREATE).\n                                           setMergePolicy(newLogMergePolicy(false))\n                                           );\n      for(int i=0;i<37;i++) {\n        Document doc = new Document();\n        doc.add(newTextField(\"content\", \"aaa bbb ccc ddd\" + i, Field.Store.YES));\n        doc.add(newTextField(\"id\", \"\" + i, Field.Store.YES));\n        writer.addDocument(doc);\n      }\n\n      dir.allIndexInputs.clear();\n\n      IndexReader reader = DirectoryReader.open(writer);\n      Term aaa = new Term(\"content\", \"aaa\");\n      Term bbb = new Term(\"content\", \"bbb\");\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"0\"));\n      reader = DirectoryReader.open(writer);\n      IndexSearcher searcher = newSearcher(reader);\n      ScoreDoc[] hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(36, hits.length);\n        \n      reader.close();\n        \n      dir.tweakBufferSizes();\n      writer.deleteDocuments(new Term(\"id\", \"4\"));\n      reader = DirectoryReader.open(writer);\n      searcher = newSearcher(reader);\n\n      hits = searcher.search(new TermQuery(bbb), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      dir.tweakBufferSizes();\n      hits = searcher.search(new TermQuery(new Term(\"id\", \"33\")), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(1, hits.length);\n      hits = searcher.search(new TermQuery(aaa), 1000).scoreDocs;\n      dir.tweakBufferSizes();\n      assertEquals(35, hits.length);\n      writer.close();\n      reader.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c924ed848363114bc21dd13c3a1953c42aefb554":["5a207d19eac354d649c3f0e2cce070017c78125e"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["2a1862266772deb28cdcb7d996b64d2177022687","b470f36a9372c97283360b1304eacbde22df6c0d"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["2a1862266772deb28cdcb7d996b64d2177022687","b470f36a9372c97283360b1304eacbde22df6c0d"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["d0d579490a72f2e6297eaa648940611234c57cf1"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"2a1862266772deb28cdcb7d996b64d2177022687":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"b470f36a9372c97283360b1304eacbde22df6c0d":["2a1862266772deb28cdcb7d996b64d2177022687","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["2a1862266772deb28cdcb7d996b64d2177022687"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c924ed848363114bc21dd13c3a1953c42aefb554"]},"commit2Childs":{"c924ed848363114bc21dd13c3a1953c42aefb554":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"5a207d19eac354d649c3f0e2cce070017c78125e":["c924ed848363114bc21dd13c3a1953c42aefb554"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["6613659748fe4411a7dcf85266e55db1f95f7315"],"f4abec28b874149a7223e32cc7a01704c27790de":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"d0d579490a72f2e6297eaa648940611234c57cf1":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["19275ba31e621f6da1b83bf13af75233876fd3d4","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"2a1862266772deb28cdcb7d996b64d2177022687":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b470f36a9372c97283360b1304eacbde22df6c0d","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["2a1862266772deb28cdcb7d996b64d2177022687"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}