{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/BasqueStemmer#r_izenak().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/BasqueStemmer#r_izenak().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/BasqueStemmer#r_izenak().mjava","sourceNew":"                private boolean r_izenak() {\n            int among_var;\n                    // (, line 74\n                    // [, line 75\n                    ket = cursor;\n                    // substring, line 75\n                    among_var = find_among_b(a_1, 295);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 75\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 105\n                            // call RV, line 105\n                            if (!r_RV())\n                            {\n                                return false;\n                            }\n                            // delete, line 105\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 107\n                            // call R2, line 107\n                            if (!r_R2())\n                            {\n                                return false;\n                            }\n                            // delete, line 107\n                            slice_del();\n                            break;\n                        case 3:\n                            // (, line 109\n                            // <-, line 109\n                            slice_from(\"jok\");\n                            break;\n                        case 4:\n                            // (, line 111\n                            // call R1, line 111\n                            if (!r_R1())\n                            {\n                                return false;\n                            }\n                            // delete, line 111\n                            slice_del();\n                            break;\n                        case 5:\n                            // (, line 113\n                            // <-, line 113\n                            slice_from(\"tra\");\n                            break;\n                        case 6:\n                            // (, line 115\n                            // <-, line 115\n                            slice_from(\"minutu\");\n                            break;\n                        case 7:\n                            // (, line 117\n                            // <-, line 117\n                            slice_from(\"zehar\");\n                            break;\n                        case 8:\n                            // (, line 119\n                            // <-, line 119\n                            slice_from(\"geldi\");\n                            break;\n                        case 9:\n                            // (, line 121\n                            // <-, line 121\n                            slice_from(\"igaro\");\n                            break;\n                        case 10:\n                            // (, line 123\n                            // <-, line 123\n                            slice_from(\"aurka\");\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"                private boolean r_izenak() {\n            int among_var;\n                    // (, line 74\n                    // [, line 75\n                    ket = cursor;\n                    // substring, line 75\n                    among_var = find_among_b(a_1, 295);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 75\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 105\n                            // call RV, line 105\n                            if (!r_RV())\n                            {\n                                return false;\n                            }\n                            // delete, line 105\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 107\n                            // call R2, line 107\n                            if (!r_R2())\n                            {\n                                return false;\n                            }\n                            // delete, line 107\n                            slice_del();\n                            break;\n                        case 3:\n                            // (, line 109\n                            // <-, line 109\n                            slice_from(\"jok\");\n                            break;\n                        case 4:\n                            // (, line 111\n                            // call R1, line 111\n                            if (!r_R1())\n                            {\n                                return false;\n                            }\n                            // delete, line 111\n                            slice_del();\n                            break;\n                        case 5:\n                            // (, line 113\n                            // <-, line 113\n                            slice_from(\"tra\");\n                            break;\n                        case 6:\n                            // (, line 115\n                            // <-, line 115\n                            slice_from(\"minutu\");\n                            break;\n                        case 7:\n                            // (, line 117\n                            // <-, line 117\n                            slice_from(\"zehar\");\n                            break;\n                        case 8:\n                            // (, line 119\n                            // <-, line 119\n                            slice_from(\"geldi\");\n                            break;\n                        case 9:\n                            // (, line 121\n                            // <-, line 121\n                            slice_from(\"igaro\");\n                            break;\n                        case 10:\n                            // (, line 123\n                            // <-, line 123\n                            slice_from(\"aurka\");\n                            break;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/BasqueStemmer#r_izenak().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/BasqueStemmer#r_izenak().mjava","sourceNew":"private boolean r_izenak() {\n  int among_var;\n  ket = cursor;\n  among_var = find_among_b(a_1);\n  if (among_var == 0)\n  {\n    return false;\n  }\n  bra = cursor;\n  switch (among_var) {\n    case 1:\n      if (!r_RV())\n      {\n        return false;\n      }\n      slice_del();\n      break;\n    case 2:\n      if (!r_R2())\n      {\n        return false;\n      }\n      slice_del();\n      break;\n    case 3:\n      slice_from(\"jok\");\n      break;\n    case 4:\n      if (!r_R1())\n      {\n        return false;\n      }\n      slice_del();\n      break;\n    case 5:\n      slice_from(\"tra\");\n      break;\n    case 6:\n      slice_from(\"minutu\");\n      break;\n    case 7:\n      slice_from(\"zehar\");\n      break;\n    case 8:\n      slice_from(\"geldi\");\n      break;\n    case 9:\n      slice_from(\"igaro\");\n      break;\n    case 10:\n      slice_from(\"aurka\");\n      break;\n  }\n  return true;\n}\n\n","sourceOld":"                private boolean r_izenak() {\n            int among_var;\n                    // (, line 74\n                    // [, line 75\n                    ket = cursor;\n                    // substring, line 75\n                    among_var = find_among_b(a_1, 295);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 75\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 105\n                            // call RV, line 105\n                            if (!r_RV())\n                            {\n                                return false;\n                            }\n                            // delete, line 105\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 107\n                            // call R2, line 107\n                            if (!r_R2())\n                            {\n                                return false;\n                            }\n                            // delete, line 107\n                            slice_del();\n                            break;\n                        case 3:\n                            // (, line 109\n                            // <-, line 109\n                            slice_from(\"jok\");\n                            break;\n                        case 4:\n                            // (, line 111\n                            // call R1, line 111\n                            if (!r_R1())\n                            {\n                                return false;\n                            }\n                            // delete, line 111\n                            slice_del();\n                            break;\n                        case 5:\n                            // (, line 113\n                            // <-, line 113\n                            slice_from(\"tra\");\n                            break;\n                        case 6:\n                            // (, line 115\n                            // <-, line 115\n                            slice_from(\"minutu\");\n                            break;\n                        case 7:\n                            // (, line 117\n                            // <-, line 117\n                            slice_from(\"zehar\");\n                            break;\n                        case 8:\n                            // (, line 119\n                            // <-, line 119\n                            slice_from(\"geldi\");\n                            break;\n                        case 9:\n                            // (, line 121\n                            // <-, line 121\n                            slice_from(\"igaro\");\n                            break;\n                        case 10:\n                            // (, line 123\n                            // <-, line 123\n                            slice_from(\"aurka\");\n                            break;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["09479cd2de06c67a115b7346a8e5de8af4d62e81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}