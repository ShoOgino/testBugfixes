{"path":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","commits":[{"id":"d60c1bb96a28a26d197c36299f7b6c9c5da617a1","date":1522484702,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"/dev/null","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, 0, 0);\n    PendingDeletes deletes = new PendingDeletes(null, commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aa5e39259dfd4a68287c824d3b7e1bc9097dc895","date":1522505041,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"/dev/null","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, 0, 0);\n    PendingDeletes deletes = new PendingDeletes(null, commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, 0, 0);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, 0, 0);\n    PendingDeletes deletes = new PendingDeletes(null, commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"49575fe0d33c4904ac42b0526411d1dee7549e9b","date":1523529874,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, -1, -1, -1);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, 0, 0);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5d36ba65c7e095c7938bfc2343a9a6cf689bfb43","date":1523531370,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, -1, -1, -1);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, 0, 0);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e716649e2bd79a98b5e68c464154ea4c44677a","date":1523975212,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, -1, -1, -1);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfo[0]);\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, -1, -1, -1);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted());\n    }\n  }\n\n","bugFix":["d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"bugIntro":["7bc10aeb596994a4cbfa5801932a4dac9fdd2afc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfo[0]);\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, -1, -1, -1);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfo[0]);\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfo[0]);\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, -1, -1, -1);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfo[0]);\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfo[0]);\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, -1, -1, -1);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfo[0]);\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc","date":1541533532,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1);\n    FieldInfos fieldInfos = FieldInfos.EMPTY;\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfo[0]);\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","bugFix":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    Directory dir = new ByteBuffersDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1);\n    FieldInfos fieldInfos = FieldInfos.EMPTY;\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    RAMDirectory dir = new RAMDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1);\n    FieldInfos fieldInfos = FieldInfos.EMPTY;\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14654be3f7a82c9a3c52169e365baa55bfe64f66","date":1587212697,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPendingDeletes#testIsFullyDeleted().mjava","sourceNew":"  public void testIsFullyDeleted() throws IOException {\n    Directory dir = new ByteBuffersDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1, StringHelper.randomId());\n    FieldInfos fieldInfos = FieldInfos.EMPTY;\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","sourceOld":"  public void testIsFullyDeleted() throws IOException {\n    Directory dir = new ByteBuffersDirectory();\n    SegmentInfo si = new SegmentInfo(dir, Version.LATEST, Version.LATEST, \"test\", 3, false, Codec.getDefault(),\n        Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    SegmentCommitInfo commitInfo = new SegmentCommitInfo(si, 0, 0, -1, -1, -1);\n    FieldInfos fieldInfos = FieldInfos.EMPTY;\n    si.getCodec().fieldInfosFormat().write(dir, si, \"\", fieldInfos, IOContext.DEFAULT);\n    PendingDeletes deletes = newPendingDeletes(commitInfo);\n    for (int i = 0; i < 3; i++) {\n      assertTrue(deletes.delete(i));\n      if (random().nextBoolean()) {\n        assertTrue(deletes.writeLiveDocs(dir));\n      }\n      assertEquals(i == 2, deletes.isFullyDeleted(() -> null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"5d36ba65c7e095c7938bfc2343a9a6cf689bfb43":["5ee0394b8176abd7c90a4be8c05465be1879db79","49575fe0d33c4904ac42b0526411d1dee7549e9b"],"d77dafd89756a5161d244985903e3487ca109182":["7bc10aeb596994a4cbfa5801932a4dac9fdd2afc"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"14654be3f7a82c9a3c52169e365baa55bfe64f66":["d77dafd89756a5161d244985903e3487ca109182"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"49575fe0d33c4904ac42b0526411d1dee7549e9b":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"b70042a8a492f7054d480ccdd2be9796510d4327":["15e716649e2bd79a98b5e68c464154ea4c44677a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["5d36ba65c7e095c7938bfc2343a9a6cf689bfb43"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"f592209545c71895260367152601e9200399776d":["15e716649e2bd79a98b5e68c464154ea4c44677a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["14654be3f7a82c9a3c52169e365baa55bfe64f66"]},"commit2Childs":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["5d36ba65c7e095c7938bfc2343a9a6cf689bfb43","49575fe0d33c4904ac42b0526411d1dee7549e9b"],"5d36ba65c7e095c7938bfc2343a9a6cf689bfb43":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"d77dafd89756a5161d244985903e3487ca109182":["14654be3f7a82c9a3c52169e365baa55bfe64f66"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc":["d77dafd89756a5161d244985903e3487ca109182"],"14654be3f7a82c9a3c52169e365baa55bfe64f66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"49575fe0d33c4904ac42b0526411d1dee7549e9b":["5d36ba65c7e095c7938bfc2343a9a6cf689bfb43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"15e716649e2bd79a98b5e68c464154ea4c44677a":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["7bc10aeb596994a4cbfa5801932a4dac9fdd2afc","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}