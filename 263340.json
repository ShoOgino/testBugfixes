{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#checkSet(CharArraySet).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#checkSet(CharArraySet).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#checkSet(CharArraySet).mjava","sourceNew":"  private void checkSet(CharArraySet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\t\t// case is not modified\n    assertTrue(wordset.contains(\"two\"));\t\t// surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","sourceOld":"  private void checkSet(CharArraySet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\t\t// case is not modified\n    assertTrue(wordset.contains(\"two\"));\t\t// surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#checkSet(CharArraySet).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#checkSet(CharArraySet).mjava","sourceNew":"  private void checkSet(CharArraySet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));  // case is not modified\n    assertTrue(wordset.contains(\"two\"));  // surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","sourceOld":"  private void checkSet(CharArraySet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\t\t// case is not modified\n    assertTrue(wordset.contains(\"two\"));\t\t// surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","date":1465936684,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestWordlistLoader#checkSet(CharArraySet).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#checkSet(CharArraySet).mjava","sourceNew":"  private void checkSet(CharArraySet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));  // case is not modified\n    assertTrue(wordset.contains(\"two\"));  // surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","sourceOld":"  private void checkSet(CharArraySet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));  // case is not modified\n    assertTrue(wordset.contains(\"two\"));  // surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestWordlistLoader#checkSet(CharArraySet).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestWordlistLoader#checkSet(CharArraySet).mjava","sourceNew":"  private void checkSet(CharArraySet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));  // case is not modified\n    assertTrue(wordset.contains(\"two\"));  // surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","sourceOld":"  private void checkSet(CharArraySet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));  // case is not modified\n    assertTrue(wordset.contains(\"two\"));  // surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}