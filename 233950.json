{"path":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#setupIndex().mjava","commits":[{"id":"361b1afc99f68598c73d37074aec089c9c951586","date":1522744632,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#setupIndex().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupIndex() throws IOException {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer));\n    for (int i = 0; i < field1_docs.length; i++) {\n      Document doc = new Document();\n      doc.add(new TextField(\"field1\", field1_docs[i], Field.Store.NO));\n      doc.add(new TextField(\"field2\", field2_docs[i], Field.Store.NO));\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(DirectoryReader.open(directory));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2375622520a4e480775e3104a2f9a423536755b4","date":1536005521,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#setupIndex().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#setupIndex().mjava","sourceNew":"  @BeforeClass\n  public static void setupIndex() throws IOException {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < field1_docs.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field1\", field1_docs[i], FIELD_TYPE));\n      doc.add(new TextField(\"field2\", field2_docs[i], Field.Store.NO));\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(DirectoryReader.open(directory));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupIndex() throws IOException {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer));\n    for (int i = 0; i < field1_docs.length; i++) {\n      Document doc = new Document();\n      doc.add(new TextField(\"field1\", field1_docs[i], Field.Store.NO));\n      doc.add(new TextField(\"field2\", field2_docs[i], Field.Store.NO));\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(DirectoryReader.open(directory));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff275d3941a30f2db7c9278444015f412b835254","date":1544435249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#setupIndex().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#setupIndex().mjava","sourceNew":"  @BeforeClass\n  public static void setupIndex() throws IOException {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < field1_docs.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field1\", field1_docs[i], FIELD_TYPE));\n      doc.add(new Field(\"field2\", field2_docs[i], FIELD_TYPE));\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(DirectoryReader.open(directory));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupIndex() throws IOException {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < field1_docs.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field1\", field1_docs[i], FIELD_TYPE));\n      doc.add(new TextField(\"field2\", field2_docs[i], Field.Store.NO));\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(DirectoryReader.open(directory));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestIntervals#setupIndex().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#setupIndex().mjava","sourceNew":"  @BeforeClass\n  public static void setupIndex() throws IOException {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < field1_docs.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field1\", field1_docs[i], FIELD_TYPE));\n      doc.add(new Field(\"field2\", field2_docs[i], FIELD_TYPE));\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(DirectoryReader.open(directory));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupIndex() throws IOException {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < field1_docs.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field1\", field1_docs[i], FIELD_TYPE));\n      doc.add(new Field(\"field2\", field2_docs[i], FIELD_TYPE));\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(DirectoryReader.open(directory));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["ff275d3941a30f2db7c9278444015f412b835254"],"ff275d3941a30f2db7c9278444015f412b835254":["2375622520a4e480775e3104a2f9a423536755b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"361b1afc99f68598c73d37074aec089c9c951586":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2375622520a4e480775e3104a2f9a423536755b4":["361b1afc99f68598c73d37074aec089c9c951586"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ff275d3941a30f2db7c9278444015f412b835254":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["361b1afc99f68598c73d37074aec089c9c951586"],"361b1afc99f68598c73d37074aec089c9c951586":["2375622520a4e480775e3104a2f9a423536755b4"],"2375622520a4e480775e3104a2f9a423536755b4":["ff275d3941a30f2db7c9278444015f412b835254"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}