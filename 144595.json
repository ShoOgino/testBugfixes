{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testStaleState().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testStaleState().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testStaleState().mjava","sourceNew":"  // LUCENE-5090\n  public void testStaleState() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    IndexReader r = writer.getReader();\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(r);\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"baz\"));\n    writer.addDocument(config.build(doc));\n\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    try {\n      new SortedSetDocValuesFacetCounts(state, c);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    writer.close();\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5090\n  public void testStaleState() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    IndexReader r = writer.getReader();\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(r);\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"baz\"));\n    writer.addDocument(config.build(doc));\n\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    try {\n      new SortedSetDocValuesFacetCounts(state, c);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    writer.close();\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testStaleState().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testStaleState().mjava","sourceNew":"  // LUCENE-5090\n  @SuppressWarnings(\"unused\")\n  public void testStaleState() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    IndexReader r = writer.getReader();\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(r);\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"baz\"));\n    writer.addDocument(config.build(doc));\n\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    try {\n      new SortedSetDocValuesFacetCounts(state, c);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    writer.close();\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5090\n  public void testStaleState() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    IndexReader r = writer.getReader();\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(r);\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"baz\"));\n    writer.addDocument(config.build(doc));\n\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    try {\n      new SortedSetDocValuesFacetCounts(state, c);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    writer.close();\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["21d36d0db865f7b84026b447bec653469a6e66df"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}