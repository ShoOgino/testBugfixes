{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","commits":[{"id":"deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4","date":1522388336,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    SolrClient solrClient = cluster.getSolrClient();\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acfe8d3b837b6b66eaddf114bb99cf9e2257764d","date":1522406637,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    SolrClient solrClient = cluster.getSolrClient();\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89948af0461fead48f44ba8fb7866f107ce83f22","date":1545157711,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // disable .scheduled_maintenance (once it exists)\n    CloudTestUtils.waitForTriggerToBeScheduled(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n    CloudTestUtils.suspendTrigger(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    SolrClient solrClient = cluster.getSolrClient();\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2010e2591e2d11678b59291d2ab31bd30e3ac7","date":1559150835,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // disable .scheduled_maintenance (once it exists)\n    CloudTestUtils.waitForTriggerToBeScheduled(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n    CloudTestUtils.suspendTrigger(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n\n    listenerEvents.clear();\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // disable .scheduled_maintenance (once it exists)\n    CloudTestUtils.waitForTriggerToBeScheduled(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n    CloudTestUtils.suspendTrigger(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // disable .scheduled_maintenance (once it exists)\n    CloudTestUtils.waitForTriggerToBeScheduled(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n    CloudTestUtils.suspendTrigger(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n\n    listenerEvents.clear();\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // disable .scheduled_maintenance (once it exists)\n    CloudTestUtils.waitForTriggerToBeScheduled(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n    CloudTestUtils.suspendTrigger(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/MetricTriggerIntegrationTest#setupCluster().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    // disable .scheduled_maintenance (once it exists)\n    CloudTestUtils.waitForTriggerToBeScheduled(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n    CloudTestUtils.suspendTrigger(cluster.getOpenOverseer().getSolrCloudManager(), \".scheduled_maintenance\");\n\n    listenerEvents.clear();\n    triggerFiredLatch = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["89948af0461fead48f44ba8fb7866f107ce83f22","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["89948af0461fead48f44ba8fb7866f107ce83f22"],"acfe8d3b837b6b66eaddf114bb99cf9e2257764d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4"],"89948af0461fead48f44ba8fb7866f107ce83f22":["acfe8d3b837b6b66eaddf114bb99cf9e2257764d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4":["acfe8d3b837b6b66eaddf114bb99cf9e2257764d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4","acfe8d3b837b6b66eaddf114bb99cf9e2257764d"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["3f504512a03d978990cbff30db0522b354e846db","58af973abe9f7c0faa777c1a6285fc7f72c171c5"],"acfe8d3b837b6b66eaddf114bb99cf9e2257764d":["89948af0461fead48f44ba8fb7866f107ce83f22"],"89948af0461fead48f44ba8fb7866f107ce83f22":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}