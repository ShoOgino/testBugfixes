{"path":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#setSavedStartTerm(BytesRef).mjava","commits":[{"id":"e2297162a22c55456e200caef2cbcb00fe381120","date":1321551342,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#setSavedStartTerm(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"      // only for assert:\n      private boolean setSavedStartTerm(BytesRef startTerm) {\n        savedStartTerm = startTerm == null ? null : new BytesRef(startTerm);\n        return true;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6e919043fa85ee891123768dd655a98edbbf63c","date":1322225413,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#setSavedStartTerm(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#setSavedStartTerm(BytesRef).mjava","sourceNew":"      // only for assert:\n      private boolean setSavedStartTerm(BytesRef startTerm) {\n        savedStartTerm = startTerm == null ? null : BytesRef.deepCopyOf(startTerm);\n        return true;\n      }\n\n","sourceOld":"      // only for assert:\n      private boolean setSavedStartTerm(BytesRef startTerm) {\n        savedStartTerm = startTerm == null ? null : new BytesRef(startTerm);\n        return true;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#setSavedStartTerm(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.IntersectEnum#setSavedStartTerm(BytesRef).mjava","sourceNew":"      // only for assert:\n      private boolean setSavedStartTerm(BytesRef startTerm) {\n        savedStartTerm = startTerm == null ? null : BytesRef.deepCopyOf(startTerm);\n        return true;\n      }\n\n","sourceOld":"      // only for assert:\n      private boolean setSavedStartTerm(BytesRef startTerm) {\n        savedStartTerm = startTerm == null ? null : BytesRef.deepCopyOf(startTerm);\n        return true;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e2297162a22c55456e200caef2cbcb00fe381120":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["e6e919043fa85ee891123768dd655a98edbbf63c"],"e6e919043fa85ee891123768dd655a98edbbf63c":["e2297162a22c55456e200caef2cbcb00fe381120"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e2297162a22c55456e200caef2cbcb00fe381120"],"e2297162a22c55456e200caef2cbcb00fe381120":["e6e919043fa85ee891123768dd655a98edbbf63c"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6e919043fa85ee891123768dd655a98edbbf63c":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}