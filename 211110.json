{"path":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#seek(long).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#seek(long).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#seek(long).mjava","sourceNew":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","sourceOld":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bfcba4bd0c8918a6db1993d4e7818f08cc2a827","date":1349788355,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#seek(long).mjava","sourceNew":null,"sourceOld":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bfcba4bd0c8918a6db1993d4e7818f08cc2a827":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5bfcba4bd0c8918a6db1993d4e7818f08cc2a827"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5bfcba4bd0c8918a6db1993d4e7818f08cc2a827"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5bfcba4bd0c8918a6db1993d4e7818f08cc2a827":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}