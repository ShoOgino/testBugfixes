{"path":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    // INT field can be parsed as float\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(INT_AS_FLOAT_VALUESOURCE, 5.0);\n\n    // same values, but in float format\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7732a106554be0db3e03ac5211e46f6e0c285b8","date":1511975378,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    doTestCustomScore(FLOAT_VALUESOURCE, 1f);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6f);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    doTestCustomScore(FLOAT_VALUESOURCE, 1f);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6f);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    doTestCustomScore(FLOAT_VALUESOURCE, 1.0);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreFloat().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.FLOAT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreFloat() throws Exception {\n    doTestCustomScore(FLOAT_VALUESOURCE, 1f);\n    doTestCustomScore(FLOAT_VALUESOURCE, 6f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7732a106554be0db3e03ac5211e46f6e0c285b8":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["93dd449115a9247533e44bab47e8429e5dccbc6d","c7732a106554be0db3e03ac5211e46f6e0c285b8"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a82662cae660e76ded4de1e9b451633e523d83e1":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["19275ba31e621f6da1b83bf13af75233876fd3d4","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"56572ec06f1407c066d6b7399413178b33176cd8":["19275ba31e621f6da1b83bf13af75233876fd3d4","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"c7732a106554be0db3e03ac5211e46f6e0c285b8":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["a82662cae660e76ded4de1e9b451633e523d83e1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["c7732a106554be0db3e03ac5211e46f6e0c285b8","1aad05eeff7818b0833c02ac6b743aa72054963b","56572ec06f1407c066d6b7399413178b33176cd8"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}