{"path":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","commits":[{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<String> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (String path : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + path, true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8f0f2472d437d44ec2144932e1d13fb494e82a3","date":1528403207,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<String> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (String path : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + path, true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","bugFix":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<String> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (String path : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + path, true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<String> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (String path : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + path, true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14076e7b40405aa1f08702d8df762d08b5d44f70","date":1537071979,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 15-Sep-2018\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44dd40f6c2c1465aebf4677bab10f696c7ea18d8","date":1539566013,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","sourceNew":"  @Test\n  //Commented 14-Oct-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 15-Sep-2018\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 15-Sep-2018\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3adc4d119a7deba35b2721853853464857d9d0a9","date":1594608068,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHistoryHandlerTest#testBasic().mjava","sourceNew":"  @Test\n  //Commented 14-Oct-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 15-Sep-2018\n  public void testBasic() throws Exception {\n    timeSource.sleep(15000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  //Commented 14-Oct-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 15-Sep-2018\n  public void testBasic() throws Exception {\n    timeSource.sleep(10000);\n    List<Pair<String, Long>> list = handler.getFactory().list(100);\n    // solr.jvm, solr.node, solr.collection..system\n    assertEquals(list.toString(), 3, list.size());\n    for (Pair<String, Long> p : list) {\n      RrdDb db = new RrdDb(MetricsHistoryHandler.URI_PREFIX + p.first(), true, handler.getFactory());\n      int dsCount = db.getDsCount();\n      int arcCount = db.getArcCount();\n      assertTrue(\"dsCount should be > 0, was \" + dsCount, dsCount > 0);\n      assertEquals(\"arcCount\", 5, arcCount);\n      db.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44dd40f6c2c1465aebf4677bab10f696c7ea18d8":["14076e7b40405aa1f08702d8df762d08b5d44f70"],"f8f0f2472d437d44ec2144932e1d13fb494e82a3":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3adc4d119a7deba35b2721853853464857d9d0a9":["44dd40f6c2c1465aebf4677bab10f696c7ea18d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"14076e7b40405aa1f08702d8df762d08b5d44f70":["f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3adc4d119a7deba35b2721853853464857d9d0a9"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","f8f0f2472d437d44ec2144932e1d13fb494e82a3"]},"commit2Childs":{"44dd40f6c2c1465aebf4677bab10f696c7ea18d8":["3adc4d119a7deba35b2721853853464857d9d0a9"],"f8f0f2472d437d44ec2144932e1d13fb494e82a3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","14076e7b40405aa1f08702d8df762d08b5d44f70","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["f8f0f2472d437d44ec2144932e1d13fb494e82a3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"3adc4d119a7deba35b2721853853464857d9d0a9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"14076e7b40405aa1f08702d8df762d08b5d44f70":["44dd40f6c2c1465aebf4677bab10f696c7ea18d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}