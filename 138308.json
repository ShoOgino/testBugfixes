{"path":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#segmentHeaderLength(String).mjava","commits":[{"id":"a5d957b3a23cce91c77a2c9971ecf0c9f99dd503","date":1411708843,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#segmentHeaderLength(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Computes the length of a segment header.\n   * \n   * @param codec Codec name.\n   * @return length of the entire segment header.\n   * @see #writeSegmentHeader(DataOutput, String, int, byte[])\n   */\n  public static int segmentHeaderLength(String codec) {\n    return headerLength(codec) + StringHelper.ID_LENGTH;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#segmentHeaderLength(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Computes the length of a segment header.\n   * \n   * @param codec Codec name.\n   * @return length of the entire segment header.\n   * @see #writeSegmentHeader(DataOutput, String, int, byte[])\n   */\n  public static int segmentHeaderLength(String codec) {\n    return headerLength(codec) + StringHelper.ID_LENGTH;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a78b813d9350cc28625598f6dbbb49b586a40618","date":1412073147,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#segmentHeaderLength(String,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#segmentHeaderLength(String).mjava","sourceNew":"  /**\n   * Computes the length of a segment header.\n   * \n   * @param codec Codec name.\n   * @return length of the entire segment header.\n   * @see #writeSegmentHeader(DataOutput, String, int, byte[], String)\n   */\n  public static int segmentHeaderLength(String codec, String segmentSuffix) {\n    return headerLength(codec) + StringHelper.ID_LENGTH + 1 + segmentSuffix.length();\n  }\n\n","sourceOld":"  /**\n   * Computes the length of a segment header.\n   * \n   * @param codec Codec name.\n   * @return length of the entire segment header.\n   * @see #writeSegmentHeader(DataOutput, String, int, byte[])\n   */\n  public static int segmentHeaderLength(String codec) {\n    return headerLength(codec) + StringHelper.ID_LENGTH;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#segmentHeaderLength(String,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#segmentHeaderLength(String).mjava","sourceNew":"  /**\n   * Computes the length of a segment header.\n   * \n   * @param codec Codec name.\n   * @return length of the entire segment header.\n   * @see #writeSegmentHeader(DataOutput, String, int, byte[], String)\n   */\n  public static int segmentHeaderLength(String codec, String segmentSuffix) {\n    return headerLength(codec) + StringHelper.ID_LENGTH + 1 + segmentSuffix.length();\n  }\n\n","sourceOld":"  /**\n   * Computes the length of a segment header.\n   * \n   * @param codec Codec name.\n   * @return length of the entire segment header.\n   * @see #writeSegmentHeader(DataOutput, String, int, byte[])\n   */\n  public static int segmentHeaderLength(String codec) {\n    return headerLength(codec) + StringHelper.ID_LENGTH;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a78b813d9350cc28625598f6dbbb49b586a40618":["a5d957b3a23cce91c77a2c9971ecf0c9f99dd503"],"a5d957b3a23cce91c77a2c9971ecf0c9f99dd503":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["5f6bd27530a2846413fe2d00030493c0e2d3a072","a78b813d9350cc28625598f6dbbb49b586a40618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a5d957b3a23cce91c77a2c9971ecf0c9f99dd503"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"a78b813d9350cc28625598f6dbbb49b586a40618":["9bb9a29a5e71a90295f175df8919802993142c9a"],"a5d957b3a23cce91c77a2c9971ecf0c9f99dd503":["a78b813d9350cc28625598f6dbbb49b586a40618","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5d957b3a23cce91c77a2c9971ecf0c9f99dd503","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}