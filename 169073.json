{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","sourceNew":"  /**\n   * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\n   *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\n   */\n  public void startElement(String uri, String local, String raw,\n      Attributes attrs) {\n    if (local.equals(\"hyphen-char\")) {\n      String h = attrs.getValue(\"value\");\n      if (h != null && h.length() == 1) {\n        hyphenChar = h.charAt(0);\n      }\n    } else if (local.equals(\"classes\")) {\n      currElement = ELEM_CLASSES;\n    } else if (local.equals(\"patterns\")) {\n      currElement = ELEM_PATTERNS;\n    } else if (local.equals(\"exceptions\")) {\n      currElement = ELEM_EXCEPTIONS;\n      exception = new ArrayList();\n    } else if (local.equals(\"hyphen\")) {\n      if (token.length() > 0) {\n        exception.add(token.toString());\n      }\n      exception.add(new Hyphen(attrs.getValue(\"pre\"), attrs.getValue(\"no\"),\n          attrs.getValue(\"post\")));\n      currElement = ELEM_HYPHEN;\n    }\n    token.setLength(0);\n  }\n\n","sourceOld":"  /**\n   * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\n   *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\n   */\n  public void startElement(String uri, String local, String raw,\n      Attributes attrs) {\n    if (local.equals(\"hyphen-char\")) {\n      String h = attrs.getValue(\"value\");\n      if (h != null && h.length() == 1) {\n        hyphenChar = h.charAt(0);\n      }\n    } else if (local.equals(\"classes\")) {\n      currElement = ELEM_CLASSES;\n    } else if (local.equals(\"patterns\")) {\n      currElement = ELEM_PATTERNS;\n    } else if (local.equals(\"exceptions\")) {\n      currElement = ELEM_EXCEPTIONS;\n      exception = new ArrayList();\n    } else if (local.equals(\"hyphen\")) {\n      if (token.length() > 0) {\n        exception.add(token.toString());\n      }\n      exception.add(new Hyphen(attrs.getValue(\"pre\"), attrs.getValue(\"no\"),\n          attrs.getValue(\"post\")));\n      currElement = ELEM_HYPHEN;\n    }\n    token.setLength(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","sourceNew":"  /**\n   * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\n   *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\n   */\n  @Override\n  public void startElement(String uri, String local, String raw,\n      Attributes attrs) {\n    if (local.equals(\"hyphen-char\")) {\n      String h = attrs.getValue(\"value\");\n      if (h != null && h.length() == 1) {\n        hyphenChar = h.charAt(0);\n      }\n    } else if (local.equals(\"classes\")) {\n      currElement = ELEM_CLASSES;\n    } else if (local.equals(\"patterns\")) {\n      currElement = ELEM_PATTERNS;\n    } else if (local.equals(\"exceptions\")) {\n      currElement = ELEM_EXCEPTIONS;\n      exception = new ArrayList();\n    } else if (local.equals(\"hyphen\")) {\n      if (token.length() > 0) {\n        exception.add(token.toString());\n      }\n      exception.add(new Hyphen(attrs.getValue(\"pre\"), attrs.getValue(\"no\"),\n          attrs.getValue(\"post\")));\n      currElement = ELEM_HYPHEN;\n    }\n    token.setLength(0);\n  }\n\n","sourceOld":"  /**\n   * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\n   *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\n   */\n  public void startElement(String uri, String local, String raw,\n      Attributes attrs) {\n    if (local.equals(\"hyphen-char\")) {\n      String h = attrs.getValue(\"value\");\n      if (h != null && h.length() == 1) {\n        hyphenChar = h.charAt(0);\n      }\n    } else if (local.equals(\"classes\")) {\n      currElement = ELEM_CLASSES;\n    } else if (local.equals(\"patterns\")) {\n      currElement = ELEM_PATTERNS;\n    } else if (local.equals(\"exceptions\")) {\n      currElement = ELEM_EXCEPTIONS;\n      exception = new ArrayList();\n    } else if (local.equals(\"hyphen\")) {\n      if (token.length() > 0) {\n        exception.add(token.toString());\n      }\n      exception.add(new Hyphen(attrs.getValue(\"pre\"), attrs.getValue(\"no\"),\n          attrs.getValue(\"post\")));\n      currElement = ELEM_HYPHEN;\n    }\n    token.setLength(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","sourceNew":"  /**\n   * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\n   *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\n   */\n  @Override\n  public void startElement(String uri, String local, String raw,\n      Attributes attrs) {\n    if (local.equals(\"hyphen-char\")) {\n      String h = attrs.getValue(\"value\");\n      if (h != null && h.length() == 1) {\n        hyphenChar = h.charAt(0);\n      }\n    } else if (local.equals(\"classes\")) {\n      currElement = ELEM_CLASSES;\n    } else if (local.equals(\"patterns\")) {\n      currElement = ELEM_PATTERNS;\n    } else if (local.equals(\"exceptions\")) {\n      currElement = ELEM_EXCEPTIONS;\n      exception = new ArrayList<Object>();\n    } else if (local.equals(\"hyphen\")) {\n      if (token.length() > 0) {\n        exception.add(token.toString());\n      }\n      exception.add(new Hyphen(attrs.getValue(\"pre\"), attrs.getValue(\"no\"),\n          attrs.getValue(\"post\")));\n      currElement = ELEM_HYPHEN;\n    }\n    token.setLength(0);\n  }\n\n","sourceOld":"  /**\n   * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\n   *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\n   */\n  @Override\n  public void startElement(String uri, String local, String raw,\n      Attributes attrs) {\n    if (local.equals(\"hyphen-char\")) {\n      String h = attrs.getValue(\"value\");\n      if (h != null && h.length() == 1) {\n        hyphenChar = h.charAt(0);\n      }\n    } else if (local.equals(\"classes\")) {\n      currElement = ELEM_CLASSES;\n    } else if (local.equals(\"patterns\")) {\n      currElement = ELEM_PATTERNS;\n    } else if (local.equals(\"exceptions\")) {\n      currElement = ELEM_EXCEPTIONS;\n      exception = new ArrayList();\n    } else if (local.equals(\"hyphen\")) {\n      if (token.length() > 0) {\n        exception.add(token.toString());\n      }\n      exception.add(new Hyphen(attrs.getValue(\"pre\"), attrs.getValue(\"no\"),\n          attrs.getValue(\"post\")));\n      currElement = ELEM_HYPHEN;\n    }\n    token.setLength(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#startElement(String,String,String,Attributes).mjava","sourceNew":"  /**\n   * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\n   *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\n   */\n  @Override\n  public void startElement(String uri, String local, String raw,\n      Attributes attrs) {\n    if (local.equals(\"hyphen-char\")) {\n      String h = attrs.getValue(\"value\");\n      if (h != null && h.length() == 1) {\n        hyphenChar = h.charAt(0);\n      }\n    } else if (local.equals(\"classes\")) {\n      currElement = ELEM_CLASSES;\n    } else if (local.equals(\"patterns\")) {\n      currElement = ELEM_PATTERNS;\n    } else if (local.equals(\"exceptions\")) {\n      currElement = ELEM_EXCEPTIONS;\n      exception = new ArrayList<Object>();\n    } else if (local.equals(\"hyphen\")) {\n      if (token.length() > 0) {\n        exception.add(token.toString());\n      }\n      exception.add(new Hyphen(attrs.getValue(\"pre\"), attrs.getValue(\"no\"),\n          attrs.getValue(\"post\")));\n      currElement = ELEM_HYPHEN;\n    }\n    token.setLength(0);\n  }\n\n","sourceOld":"  /**\n   * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\n   *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\n   */\n  @Override\n  public void startElement(String uri, String local, String raw,\n      Attributes attrs) {\n    if (local.equals(\"hyphen-char\")) {\n      String h = attrs.getValue(\"value\");\n      if (h != null && h.length() == 1) {\n        hyphenChar = h.charAt(0);\n      }\n    } else if (local.equals(\"classes\")) {\n      currElement = ELEM_CLASSES;\n    } else if (local.equals(\"patterns\")) {\n      currElement = ELEM_PATTERNS;\n    } else if (local.equals(\"exceptions\")) {\n      currElement = ELEM_EXCEPTIONS;\n      exception = new ArrayList<Object>();\n    } else if (local.equals(\"hyphen\")) {\n      if (token.length() > 0) {\n        exception.add(token.toString());\n      }\n      exception.add(new Hyphen(attrs.getValue(\"pre\"), attrs.getValue(\"no\"),\n          attrs.getValue(\"post\")));\n      currElement = ELEM_HYPHEN;\n    }\n    token.setLength(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}