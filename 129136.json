{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues,SegCountGlobal,int,boolean).mjava","commits":[{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":1,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues,SegCountGlobal,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal, SegCountGlobal segCounter, int maxIdx, boolean collectBase) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    // This code handles faceting prefixes, which narrows the range of ords we want to collect.\n    // It’s not an error for an ord to fall outside this range… we simply want to skip it.\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      segCounter.incrementCount(arrIdx, 1, maxIdx);\n      if (collectBase) {\n        if (collectAcc != null) {\n          collectAcc.collect(doc, arrIdx, slotContext);\n        }\n        if (allBucketsAcc != null) {\n          allBucketsAcc.collect(doc, arrIdx, slotContext);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    // This code handles faceting prefixes, which narrows the range of ords we want to collect.\n    // It’s not an error for an ord to fall outside this range… we simply want to skip it.\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx, slotContext);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx, slotContext);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}