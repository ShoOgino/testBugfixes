{"path":"src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","commits":[{"id":"e4b5867a57b32674ce740e66e6a7da8db3d4dd33","date":1148163441,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new NamedList();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n      String docname = \"\";\n      if (strid != null) docname=\"id=\"+strid+\",\";\n      docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(docname, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4145b7b13874de95211223a6edb648da8794a688","date":1170182192,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n      String docname = \"\";\n      if (strid != null) docname=\"id=\"+strid+\",\";\n      docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(docname, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new NamedList();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n      String docname = \"\";\n      if (strid != null) docname=\"id=\"+strid+\",\";\n      docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(docname, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76","date":1204055227,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n      String docname = \"\";\n      if (strid != null) docname=\"id=\"+strid+\",\";\n      docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(docname, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"4145b7b13874de95211223a6edb648da8794a688":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["4145b7b13874de95211223a6edb648da8794a688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["4145b7b13874de95211223a6edb648da8794a688"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"4145b7b13874de95211223a6edb648da8794a688":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}