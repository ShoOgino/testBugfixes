{"path":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","commits":[{"id":"be9a5d1846ac0beb625ba68da060e16119d9f51e","date":1328820081,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modifiy the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e09ee36db6a94b127fc8f2f1079370206ce5543","date":1337287903,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modifiy the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modifiy the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e2656623e57ced6c16aae473bab02019c951802","date":1342126181,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","sourceNew":null,"sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","sourceNew":null,"sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e2656623e57ced6c16aae473bab02019c951802":["1e09ee36db6a94b127fc8f2f1079370206ce5543"],"1e09ee36db6a94b127fc8f2f1079370206ce5543":["be9a5d1846ac0beb625ba68da060e16119d9f51e"],"be9a5d1846ac0beb625ba68da060e16119d9f51e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["1e09ee36db6a94b127fc8f2f1079370206ce5543","9e2656623e57ced6c16aae473bab02019c951802"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["1e09ee36db6a94b127fc8f2f1079370206ce5543","9e2656623e57ced6c16aae473bab02019c951802"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef0d8a69209261514c5739c770bba706c2308450":["be9a5d1846ac0beb625ba68da060e16119d9f51e","1e09ee36db6a94b127fc8f2f1079370206ce5543"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e2656623e57ced6c16aae473bab02019c951802"]},"commit2Childs":{"9e2656623e57ced6c16aae473bab02019c951802":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e09ee36db6a94b127fc8f2f1079370206ce5543":["9e2656623e57ced6c16aae473bab02019c951802","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","ef0d8a69209261514c5739c770bba706c2308450"],"be9a5d1846ac0beb625ba68da060e16119d9f51e":["1e09ee36db6a94b127fc8f2f1079370206ce5543","ef0d8a69209261514c5739c770bba706c2308450"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be9a5d1846ac0beb625ba68da060e16119d9f51e"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}