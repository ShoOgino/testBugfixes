{"path":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testForceCommit().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testForceCommit().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriter#testForceCommit().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testForceCommit().mjava","sourceNew":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1044: test writer.commit() when ac=false\n  public void testForceCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(2);\n    writer.setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n    writer.commit();\n    IndexReader reader2 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(23, reader2.numDocs());\n    reader.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n    assertEquals(23, reader2.numDocs());\n    reader2.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n    writer.commit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}