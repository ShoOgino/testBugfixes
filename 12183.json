{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","commits":[{"id":"e4d1401af44658b2fa7b2e026b111d82ee8c2989","date":1347578533,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","pathOld":"/dev/null","sourceNew":"  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = req.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n      dbg.add(\"explain\", explainStruct\n              ? explanationsToNamedLists(explain)\n              : explanationsToStrings(explain));\n\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["820731f8480edb13c35c29432e85168fe2c5749f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","sourceNew":"  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = searcher.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n      dbg.add(\"explain\", explainStruct\n              ? explanationsToNamedLists(explain)\n              : explanationsToStrings(explain));\n\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","sourceOld":"  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = req.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n      dbg.add(\"explain\", explainStruct\n              ? explanationsToNamedLists(explain)\n              : explanationsToStrings(explain));\n\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d9d424bd039937b4125152b454b3a32754b06f6c","date":1384391321,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","sourceNew":"  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = searcher.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n      dbg.add(\"explain\", explainStruct\n              ? explanationsToNamedLists(explain)\n              : explanationsToStrings(explain));\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","sourceOld":"  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = searcher.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n      dbg.add(\"explain\", explainStruct\n              ? explanationsToNamedLists(explain)\n              : explanationsToStrings(explain));\n\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"820731f8480edb13c35c29432e85168fe2c5749f","date":1384418937,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","sourceNew":"  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = searcher.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      if (results != null) {\n        NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n        dbg.add(\"explain\", explainStruct\n            ? explanationsToNamedLists(explain)\n            : explanationsToStrings(explain));\n      }\n\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","sourceOld":"  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = searcher.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n      dbg.add(\"explain\", explainStruct\n              ? explanationsToNamedLists(explain)\n              : explanationsToStrings(explain));\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","bugFix":["e4d1401af44658b2fa7b2e026b111d82ee8c2989"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#doStandardResultsDebug(SolrQueryRequest,Query,DocList,boolean,NamedList).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          @SuppressWarnings({\"rawtypes\"})NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = searcher.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      if (results != null) {\n        NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n        dbg.add(\"explain\", explainStruct\n            ? explanationsToNamedLists(explain)\n            : explanationsToStrings(explain));\n      }\n\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","sourceOld":"  public static void doStandardResultsDebug(\n          SolrQueryRequest req,\n          Query query,\n          DocList results,\n          boolean dbgResults,\n          NamedList dbg) throws IOException\n  {\n    if (dbgResults) {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexSchema schema = searcher.getSchema();\n      boolean explainStruct = req.getParams().getBool(CommonParams.EXPLAIN_STRUCT, false);\n\n      if (results != null) {\n        NamedList<Explanation> explain = getExplanations(query, results, searcher, schema);\n        dbg.add(\"explain\", explainStruct\n            ? explanationsToNamedLists(explain)\n            : explanationsToStrings(explain));\n      }\n\n      String otherQueryS = req.getParams().get(CommonParams.EXPLAIN_OTHER);\n      if (otherQueryS != null && otherQueryS.length() > 0) {\n        DocList otherResults = doSimpleQuery(otherQueryS, req, 0, 10);\n        dbg.add(\"otherQuery\", otherQueryS);\n        NamedList<Explanation> explainO = getExplanations(query, otherResults, searcher, schema);\n        dbg.add(\"explainOther\", explainStruct\n                ? explanationsToNamedLists(explainO)\n                : explanationsToStrings(explainO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9d424bd039937b4125152b454b3a32754b06f6c":["08970e5b8411182a29412c177eff67ec1110095b"],"820731f8480edb13c35c29432e85168fe2c5749f":["d9d424bd039937b4125152b454b3a32754b06f6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a8891f085f71282bb3ece1b1732b68f07813a3":["820731f8480edb13c35c29432e85168fe2c5749f"],"e4d1401af44658b2fa7b2e026b111d82ee8c2989":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"08970e5b8411182a29412c177eff67ec1110095b":["e4d1401af44658b2fa7b2e026b111d82ee8c2989"]},"commit2Childs":{"d9d424bd039937b4125152b454b3a32754b06f6c":["820731f8480edb13c35c29432e85168fe2c5749f"],"820731f8480edb13c35c29432e85168fe2c5749f":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4d1401af44658b2fa7b2e026b111d82ee8c2989"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e4d1401af44658b2fa7b2e026b111d82ee8c2989":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["d9d424bd039937b4125152b454b3a32754b06f6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}