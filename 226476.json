{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#noDups().mjava","commits":[{"id":"3af8c90c5e965a1a8011e827ab59de734c7dfb79","date":1368108782,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#noDups().mjava","pathOld":"/dev/null","sourceNew":"    // Make sure that every segment appears only once in the\n    // pool:\n    private boolean noDups() {\n      Set<String> seen = new HashSet<String>();\n      for(SegmentInfoPerCommit info : readerMap.keySet()) {\n        assert !seen.contains(info.info.name);\n        seen.add(info.info.name);\n      }\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#noDups().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#noDups().mjava","sourceNew":"    // Make sure that every segment appears only once in the\n    // pool:\n    private boolean noDups() {\n      Set<String> seen = new HashSet<String>();\n      for(SegmentCommitInfo info : readerMap.keySet()) {\n        assert !seen.contains(info.info.name);\n        seen.add(info.info.name);\n      }\n      return true;\n    }\n\n","sourceOld":"    // Make sure that every segment appears only once in the\n    // pool:\n    private boolean noDups() {\n      Set<String> seen = new HashSet<String>();\n      for(SegmentInfoPerCommit info : readerMap.keySet()) {\n        assert !seen.contains(info.info.name);\n        seen.add(info.info.name);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#noDups().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#noDups().mjava","sourceNew":"    // Make sure that every segment appears only once in the\n    // pool:\n    private boolean noDups() {\n      Set<String> seen = new HashSet<>();\n      for(SegmentCommitInfo info : readerMap.keySet()) {\n        assert !seen.contains(info.info.name);\n        seen.add(info.info.name);\n      }\n      return true;\n    }\n\n","sourceOld":"    // Make sure that every segment appears only once in the\n    // pool:\n    private boolean noDups() {\n      Set<String> seen = new HashSet<String>();\n      for(SegmentCommitInfo info : readerMap.keySet()) {\n        assert !seen.contains(info.info.name);\n        seen.add(info.info.name);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1926100d9b67becc9701c54266fee3ba7878a5f0","date":1524472150,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#noDups().mjava","sourceNew":null,"sourceOld":"    // Make sure that every segment appears only once in the\n    // pool:\n    private boolean noDups() {\n      Set<String> seen = new HashSet<>();\n      for(SegmentCommitInfo info : readerMap.keySet()) {\n        assert !seen.contains(info.info.name);\n        seen.add(info.info.name);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["3af8c90c5e965a1a8011e827ab59de734c7dfb79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3af8c90c5e965a1a8011e827ab59de734c7dfb79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1926100d9b67becc9701c54266fee3ba7878a5f0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1926100d9b67becc9701c54266fee3ba7878a5f0"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3af8c90c5e965a1a8011e827ab59de734c7dfb79"],"3af8c90c5e965a1a8011e827ab59de734c7dfb79":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"1926100d9b67becc9701c54266fee3ba7878a5f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}