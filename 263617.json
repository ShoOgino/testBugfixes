{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#uploadConfigDir(Path,String).mjava","commits":[{"id":"6c8a2521797f14d1d697a17a0069f5619cd211a6","date":1424361535,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#uploadConfigDir(Path,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Upload files from a given path to a config in Zookeeper\n   * @param dir         {@link java.nio.file.Path} to the files\n   * @param configName  the name to give the config\n   * @throws IOException\n   *                    if an I/O error occurs or the path does not exist\n   */\n  public void uploadConfigDir(Path dir, String configName) throws IOException {\n    uploadToZK(dir, CONFIGS_ZKNODE + \"/\" + configName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"198966886b1666a28e299aeb05a224d8579ee1da","date":1460030082,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#uploadConfigDir(Path,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#uploadConfigDir(Path,String).mjava","sourceNew":"  /**\n   * Upload files from a given path to a config in Zookeeper\n   * @param dir         {@link java.nio.file.Path} to the files\n   * @param configName  the name to give the config\n   * @throws IOException\n   *                    if an I/O error occurs or the path does not exist\n   */\n  public void uploadConfigDir(Path dir, String configName) throws IOException {\n    uploadToZK(dir, CONFIGS_ZKNODE + \"/\" + configName, UPLOAD_FILENAME_EXCLUDE_PATTERN);\n  }\n\n","sourceOld":"  /**\n   * Upload files from a given path to a config in Zookeeper\n   * @param dir         {@link java.nio.file.Path} to the files\n   * @param configName  the name to give the config\n   * @throws IOException\n   *                    if an I/O error occurs or the path does not exist\n   */\n  public void uploadConfigDir(Path dir, String configName) throws IOException {\n    uploadToZK(dir, CONFIGS_ZKNODE + \"/\" + configName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#uploadConfigDir(Path,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#uploadConfigDir(Path,String).mjava","sourceNew":"  /**\n   * Upload files from a given path to a config in Zookeeper\n   * @param dir         {@link java.nio.file.Path} to the files\n   * @param configName  the name to give the config\n   * @throws IOException\n   *                    if an I/O error occurs or the path does not exist\n   */\n  public void uploadConfigDir(Path dir, String configName) throws IOException {\n    zkClient.uploadToZK(dir, CONFIGS_ZKNODE + \"/\" + configName, UPLOAD_FILENAME_EXCLUDE_PATTERN);\n  }\n\n","sourceOld":"  /**\n   * Upload files from a given path to a config in Zookeeper\n   * @param dir         {@link java.nio.file.Path} to the files\n   * @param configName  the name to give the config\n   * @throws IOException\n   *                    if an I/O error occurs or the path does not exist\n   */\n  public void uploadConfigDir(Path dir, String configName) throws IOException {\n    uploadToZK(dir, CONFIGS_ZKNODE + \"/\" + configName, UPLOAD_FILENAME_EXCLUDE_PATTERN);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#uploadConfigDir(Path,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager#uploadConfigDir(Path,String).mjava","sourceNew":"  /**\n   * Upload files from a given path to a config in Zookeeper\n   * @param dir         {@link java.nio.file.Path} to the files\n   * @param configName  the name to give the config\n   * @throws IOException\n   *                    if an I/O error occurs or the path does not exist\n   */\n  public void uploadConfigDir(Path dir, String configName) throws IOException {\n    zkClient.uploadToZK(dir, CONFIGS_ZKNODE + \"/\" + configName, UPLOAD_FILENAME_EXCLUDE_PATTERN);\n  }\n\n","sourceOld":"  /**\n   * Upload files from a given path to a config in Zookeeper\n   * @param dir         {@link java.nio.file.Path} to the files\n   * @param configName  the name to give the config\n   * @throws IOException\n   *                    if an I/O error occurs or the path does not exist\n   */\n  public void uploadConfigDir(Path dir, String configName) throws IOException {\n    uploadToZK(dir, CONFIGS_ZKNODE + \"/\" + configName, UPLOAD_FILENAME_EXCLUDE_PATTERN);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["198966886b1666a28e299aeb05a224d8579ee1da"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"198966886b1666a28e299aeb05a224d8579ee1da":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["198966886b1666a28e299aeb05a224d8579ee1da","9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"]},"commit2Childs":{"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["198966886b1666a28e299aeb05a224d8579ee1da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"198966886b1666a28e299aeb05a224d8579ee1da":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}