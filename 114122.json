{"path":"src/java/org/apache/solr/schema/TrieField#getSortField(SchemaField,boolean).mjava","commits":[{"id":"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0","date":1236796963,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/TrieField#getSortField(SchemaField,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public SortField getSortField(SchemaField field, boolean top) {\n    switch (type) {\n      case INTEGER:\n      case FLOAT:\n        return TrieUtils.getIntSortField(field.getName(), top);\n      case LONG:\n      case DOUBLE:\n      case DATE:\n        return TrieUtils.getLongSortField(field.getName(), top);\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + field.name);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e77721aaf23393f6ea7926045ae6f8efea0ce8e","date":1247678464,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/TrieField#getSortField(SchemaField,boolean).mjava","pathOld":"src/java/org/apache/solr/schema/TrieField#getSortField(SchemaField,boolean).mjava","sourceNew":"  public SortField getSortField(SchemaField field, boolean top) {\n    switch (type) {\n      case INTEGER:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_INT_PARSER, top);\n      case FLOAT:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_FLOAT_PARSER, top);\n      case DATE:\n      case LONG:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_LONG_PARSER, top);\n      case DOUBLE:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_DOUBLE_PARSER, top);\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + field.name);\n    }\n  }\n\n","sourceOld":"  public SortField getSortField(SchemaField field, boolean top) {\n    switch (type) {\n      case INTEGER:\n      case FLOAT:\n        return TrieUtils.getIntSortField(field.getName(), top);\n      case LONG:\n      case DOUBLE:\n      case DATE:\n        return TrieUtils.getLongSortField(field.getName(), top);\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + field.name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c","date":1249333745,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/TrieField#getSortField(SchemaField,boolean).mjava","pathOld":"src/java/org/apache/solr/schema/TrieField#getSortField(SchemaField,boolean).mjava","sourceNew":"  public SortField getSortField(SchemaField field, boolean top) {\n    switch (type) {\n      case INTEGER:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_INT_PARSER, top);\n      case FLOAT:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_FLOAT_PARSER, top);\n      case DATE: // fallthrough\n      case LONG:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_LONG_PARSER, top);\n      case DOUBLE:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_DOUBLE_PARSER, top);\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + field.name);\n    }\n  }\n\n","sourceOld":"  public SortField getSortField(SchemaField field, boolean top) {\n    switch (type) {\n      case INTEGER:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_INT_PARSER, top);\n      case FLOAT:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_FLOAT_PARSER, top);\n      case DATE:\n      case LONG:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_LONG_PARSER, top);\n      case DOUBLE:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_DOUBLE_PARSER, top);\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + field.name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#getSortField(SchemaField,boolean).mjava","pathOld":"src/java/org/apache/solr/schema/TrieField#getSortField(SchemaField,boolean).mjava","sourceNew":"  public SortField getSortField(SchemaField field, boolean top) {\n    switch (type) {\n      case INTEGER:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_INT_PARSER, top);\n      case FLOAT:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_FLOAT_PARSER, top);\n      case DATE: // fallthrough\n      case LONG:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_LONG_PARSER, top);\n      case DOUBLE:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_DOUBLE_PARSER, top);\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + field.name);\n    }\n  }\n\n","sourceOld":"  public SortField getSortField(SchemaField field, boolean top) {\n    switch (type) {\n      case INTEGER:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_INT_PARSER, top);\n      case FLOAT:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_FLOAT_PARSER, top);\n      case DATE: // fallthrough\n      case LONG:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_LONG_PARSER, top);\n      case DOUBLE:\n        return new SortField(field.getName(), FieldCache.NUMERIC_UTILS_DOUBLE_PARSER, top);\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + field.name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0"],"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c":["ad94625fb8d088209f46650c8097196fec67f00c"],"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}