{"path":"solr/core/src/java/org/apache/solr/legacy/BBoxValueSource#getValues(LeafReaderContext).mjava","commits":[{"id":"32b9119890a8e82252b6cc341ac491d18fa1e49b","date":1498575219,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/legacy/BBoxValueSource#getValues(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ShapeValues getValues(LeafReaderContext readerContext) throws IOException {\n\n    final DoubleValues minX = DoubleValuesSource.fromDoubleField(strategy.field_minX).getValues(readerContext, null);\n    final DoubleValues minY = DoubleValuesSource.fromDoubleField(strategy.field_minY).getValues(readerContext, null);\n    final DoubleValues maxX = DoubleValuesSource.fromDoubleField(strategy.field_maxX).getValues(readerContext, null);\n    final DoubleValues maxY = DoubleValuesSource.fromDoubleField(strategy.field_maxY).getValues(readerContext, null);\n\n    //reused\n    final Rectangle rect = strategy.getSpatialContext().makeRectangle(0,0,0,0);\n\n    return new ShapeValues() {\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return minX.advanceExact(doc) && maxX.advanceExact(doc) && minY.advanceExact(doc) && maxY.advanceExact(doc);\n      }\n\n      @Override\n      public Shape value() throws IOException {\n        rect.reset(minX.doubleValue(), maxX.doubleValue(), minY.doubleValue(), maxY.doubleValue());\n        return rect;\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/BBoxValueSource#getValues(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ShapeValues getValues(LeafReaderContext readerContext) throws IOException {\n\n    final DoubleValues minX = DoubleValuesSource.fromDoubleField(strategy.field_minX).getValues(readerContext, null);\n    final DoubleValues minY = DoubleValuesSource.fromDoubleField(strategy.field_minY).getValues(readerContext, null);\n    final DoubleValues maxX = DoubleValuesSource.fromDoubleField(strategy.field_maxX).getValues(readerContext, null);\n    final DoubleValues maxY = DoubleValuesSource.fromDoubleField(strategy.field_maxY).getValues(readerContext, null);\n\n    //reused\n    final Rectangle rect = strategy.getSpatialContext().makeRectangle(0,0,0,0);\n\n    return new ShapeValues() {\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return minX.advanceExact(doc) && maxX.advanceExact(doc) && minY.advanceExact(doc) && maxY.advanceExact(doc);\n      }\n\n      @Override\n      public Shape value() throws IOException {\n        rect.reset(minX.doubleValue(), maxX.doubleValue(), minY.doubleValue(), maxY.doubleValue());\n        return rect;\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/BBoxValueSource#getValues(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ShapeValues getValues(LeafReaderContext readerContext) throws IOException {\n\n    final DoubleValues minX = DoubleValuesSource.fromDoubleField(strategy.field_minX).getValues(readerContext, null);\n    final DoubleValues minY = DoubleValuesSource.fromDoubleField(strategy.field_minY).getValues(readerContext, null);\n    final DoubleValues maxX = DoubleValuesSource.fromDoubleField(strategy.field_maxX).getValues(readerContext, null);\n    final DoubleValues maxY = DoubleValuesSource.fromDoubleField(strategy.field_maxY).getValues(readerContext, null);\n\n    //reused\n    final Rectangle rect = strategy.getSpatialContext().makeRectangle(0,0,0,0);\n\n    return new ShapeValues() {\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return minX.advanceExact(doc) && maxX.advanceExact(doc) && minY.advanceExact(doc) && maxY.advanceExact(doc);\n      }\n\n      @Override\n      public Shape value() throws IOException {\n        rect.reset(minX.doubleValue(), maxX.doubleValue(), minY.doubleValue(), maxY.doubleValue());\n        return rect;\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/legacy/BBoxValueSource#getValues(LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/legacy/BBoxValueSource#getValues(LeafReaderContext).mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  @Override\n  public ShapeValues getValues(LeafReaderContext readerContext) throws IOException {\n\n    final DoubleValues minX = DoubleValuesSource.fromDoubleField(strategy.field_minX).getValues(readerContext, null);\n    final DoubleValues minY = DoubleValuesSource.fromDoubleField(strategy.field_minY).getValues(readerContext, null);\n    final DoubleValues maxX = DoubleValuesSource.fromDoubleField(strategy.field_maxX).getValues(readerContext, null);\n    final DoubleValues maxY = DoubleValuesSource.fromDoubleField(strategy.field_maxY).getValues(readerContext, null);\n\n    //reused\n    final Rectangle rect = strategy.getSpatialContext().makeRectangle(0,0,0,0);\n\n    return new ShapeValues() {\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return minX.advanceExact(doc) && maxX.advanceExact(doc) && minY.advanceExact(doc) && maxY.advanceExact(doc);\n      }\n\n      @Override\n      public Shape value() throws IOException {\n        rect.reset(minX.doubleValue(), maxX.doubleValue(), minY.doubleValue(), maxY.doubleValue());\n        return rect;\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public ShapeValues getValues(LeafReaderContext readerContext) throws IOException {\n\n    final DoubleValues minX = DoubleValuesSource.fromDoubleField(strategy.field_minX).getValues(readerContext, null);\n    final DoubleValues minY = DoubleValuesSource.fromDoubleField(strategy.field_minY).getValues(readerContext, null);\n    final DoubleValues maxX = DoubleValuesSource.fromDoubleField(strategy.field_maxX).getValues(readerContext, null);\n    final DoubleValues maxY = DoubleValuesSource.fromDoubleField(strategy.field_maxY).getValues(readerContext, null);\n\n    //reused\n    final Rectangle rect = strategy.getSpatialContext().makeRectangle(0,0,0,0);\n\n    return new ShapeValues() {\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return minX.advanceExact(doc) && maxX.advanceExact(doc) && minY.advanceExact(doc) && maxY.advanceExact(doc);\n      }\n\n      @Override\n      public Shape value() throws IOException {\n        rect.reset(minX.doubleValue(), maxX.doubleValue(), minY.doubleValue(), maxY.doubleValue());\n        return rect;\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/legacy/BBoxValueSource#getValues(LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/legacy/BBoxValueSource#getValues(LeafReaderContext).mjava","sourceNew":"  @Override\n  public ShapeValues getValues(LeafReaderContext readerContext) throws IOException {\n\n    final DoubleValues minX = DoubleValuesSource.fromDoubleField(strategy.field_minX).getValues(readerContext, null);\n    final DoubleValues minY = DoubleValuesSource.fromDoubleField(strategy.field_minY).getValues(readerContext, null);\n    final DoubleValues maxX = DoubleValuesSource.fromDoubleField(strategy.field_maxX).getValues(readerContext, null);\n    final DoubleValues maxY = DoubleValuesSource.fromDoubleField(strategy.field_maxY).getValues(readerContext, null);\n\n    //reused\n    final Rectangle rect = strategy.getSpatialContext().makeRectangle(0,0,0,0);\n\n    return new ShapeValues() {\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return minX.advanceExact(doc) && maxX.advanceExact(doc) && minY.advanceExact(doc) && maxY.advanceExact(doc);\n      }\n\n      @Override\n      public Shape value() throws IOException {\n        rect.reset(minX.doubleValue(), maxX.doubleValue(), minY.doubleValue(), maxY.doubleValue());\n        return rect;\n      }\n\n    };\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  @Override\n  public ShapeValues getValues(LeafReaderContext readerContext) throws IOException {\n\n    final DoubleValues minX = DoubleValuesSource.fromDoubleField(strategy.field_minX).getValues(readerContext, null);\n    final DoubleValues minY = DoubleValuesSource.fromDoubleField(strategy.field_minY).getValues(readerContext, null);\n    final DoubleValues maxX = DoubleValuesSource.fromDoubleField(strategy.field_maxX).getValues(readerContext, null);\n    final DoubleValues maxY = DoubleValuesSource.fromDoubleField(strategy.field_maxY).getValues(readerContext, null);\n\n    //reused\n    final Rectangle rect = strategy.getSpatialContext().makeRectangle(0,0,0,0);\n\n    return new ShapeValues() {\n\n      @Override\n      public boolean advanceExact(int doc) throws IOException {\n        return minX.advanceExact(doc) && maxX.advanceExact(doc) && minY.advanceExact(doc) && maxY.advanceExact(doc);\n      }\n\n      @Override\n      public Shape value() throws IOException {\n        rect.reset(minX.doubleValue(), maxX.doubleValue(), minY.doubleValue(), maxY.doubleValue());\n        return rect;\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"98f11c416d30e556e0004a9a84960702d12d35b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"]},"commit2Childs":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32b9119890a8e82252b6cc341ac491d18fa1e49b","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}