{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton.Builder#finish().mjava","commits":[{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton.Builder#finish().mjava","pathOld":"/dev/null","sourceNew":"    public LightAutomaton finish() {\n      //System.out.println(\"LA.Builder.finish: count=\" + (nextTransition/4));\n      // nocommit: we could make this more efficient,\n      // e.g. somehow xfer the int[] to the automaton, or\n      // alloc exactly the right size from the automaton\n      //System.out.println(\"finish pending\");\n      sorter.sort(0, nextTransition/4);\n      int upto = 0;\n      while (upto < nextTransition) {\n        a.addTransition(transitions[upto],\n                        transitions[upto+1],\n                        transitions[upto+2],\n                        transitions[upto+3]);\n        upto += 4;\n      }\n\n      a.finish();\n      return a;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9","date":1402946522,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton.Builder#finish().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton.Builder#finish().mjava","sourceNew":"    public LightAutomaton finish() {\n      //System.out.println(\"LA.Builder.finish: count=\" + (nextTransition/4));\n      // nocommit: we could make this more efficient,\n      // e.g. somehow xfer the int[] to the automaton, or\n      // alloc exactly the right size from the automaton\n      //System.out.println(\"finish pending\");\n      sorter.sort(0, nextTransition/4);\n      int upto = 0;\n      while (upto < nextTransition) {\n        a.addTransition(transitions[upto],\n                        transitions[upto+1],\n                        transitions[upto+2],\n                        transitions[upto+3]);\n        upto += 4;\n      }\n\n      a.finishState();\n      return a;\n    }\n\n","sourceOld":"    public LightAutomaton finish() {\n      //System.out.println(\"LA.Builder.finish: count=\" + (nextTransition/4));\n      // nocommit: we could make this more efficient,\n      // e.g. somehow xfer the int[] to the automaton, or\n      // alloc exactly the right size from the automaton\n      //System.out.println(\"finish pending\");\n      sorter.sort(0, nextTransition/4);\n      int upto = 0;\n      while (upto < nextTransition) {\n        a.addTransition(transitions[upto],\n                        transitions[upto+1],\n                        transitions[upto+2],\n                        transitions[upto+3]);\n        upto += 4;\n      }\n\n      a.finish();\n      return a;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton.Builder#finish().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/LightAutomaton.Builder#finish().mjava","sourceNew":"    public Automaton finish() {\n      //System.out.println(\"LA.Builder.finish: count=\" + (nextTransition/4));\n      // nocommit: we could make this more efficient,\n      // e.g. somehow xfer the int[] to the automaton, or\n      // alloc exactly the right size from the automaton\n      //System.out.println(\"finish pending\");\n      sorter.sort(0, nextTransition/4);\n      int upto = 0;\n      while (upto < nextTransition) {\n        a.addTransition(transitions[upto],\n                        transitions[upto+1],\n                        transitions[upto+2],\n                        transitions[upto+3]);\n        upto += 4;\n      }\n\n      a.finishState();\n      return a;\n    }\n\n","sourceOld":"    public LightAutomaton finish() {\n      //System.out.println(\"LA.Builder.finish: count=\" + (nextTransition/4));\n      // nocommit: we could make this more efficient,\n      // e.g. somehow xfer the int[] to the automaton, or\n      // alloc exactly the right size from the automaton\n      //System.out.println(\"finish pending\");\n      sorter.sort(0, nextTransition/4);\n      int upto = 0;\n      while (upto < nextTransition) {\n        a.addTransition(transitions[upto],\n                        transitions[upto+1],\n                        transitions[upto+2],\n                        transitions[upto+3]);\n        upto += 4;\n      }\n\n      a.finishState();\n      return a;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}