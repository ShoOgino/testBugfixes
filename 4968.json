{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[AbstractDistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","commits":[{"id":"854f97cd3613b9579fba83755c80b697e2f3993f","date":1353527621,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[AbstractDistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","pathOld":"/dev/null","sourceNew":"  private void printGroups(List<AbstractDistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      AbstractDistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[AbstractDistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","pathOld":"/dev/null","sourceNew":"  private void printGroups(List<AbstractDistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      AbstractDistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[#-extends-DistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[AbstractDistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","sourceNew":"  private void printGroups(List<? extends DistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      DistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void printGroups(List<AbstractDistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      AbstractDistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[#-extends-DistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[AbstractDistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","sourceNew":"  private void printGroups(List<? extends DistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      DistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void printGroups(List<AbstractDistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      AbstractDistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"20e94e61fe5291647346b70437617e6b6c370408":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","854f97cd3613b9579fba83755c80b697e2f3993f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["d4d69c535930b5cce125cff868d40f6373dc27d4","20e94e61fe5291647346b70437617e6b6c370408"],"854f97cd3613b9579fba83755c80b697e2f3993f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"20e94e61fe5291647346b70437617e6b6c370408":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","854f97cd3613b9579fba83755c80b697e2f3993f"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"854f97cd3613b9579fba83755c80b697e2f3993f":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}