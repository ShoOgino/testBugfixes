{"path":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","commits":[{"id":"455aeff4fef915340c5b19d71d5e147034e83093","date":1210099270,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","pathOld":"/dev/null","sourceNew":"  /** <p>Expert: prepare for commit.  This does the first\n   *  phase of 2-phase commit.  You can only call this when\n   *  autoCommit is false.  This method does all steps\n   *  necessary to commit changes since this writer was\n   *  opened: flushes pending added and deleted docs, syncs\n   *  the index files, writes most of next segments_N file.\n   *  After calling this you must call either {@link\n   *  #commit()} to finish the commit, or {@link\n   *  #rollback()} to revert the commit and undo all changes\n   *  done since the writer was opened.</p>\n   *\n   * You can also just call {@link #commit()} directly\n   * without prepareCommit first in which case that method\n   * will internally call prepareCommit.\n   */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    prepareCommit(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2586f96f60332eb97ecd2934b0763791462568b2","date":1220116589,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","sourceNew":"  /** <p>Expert: prepare for commit.  This does the first\n   *  phase of 2-phase commit.  You can only call this when\n   *  autoCommit is false.  This method does all steps\n   *  necessary to commit changes since this writer was\n   *  opened: flushes pending added and deleted docs, syncs\n   *  the index files, writes most of next segments_N file.\n   *  After calling this you must call either {@link\n   *  #commit()} to finish the commit, or {@link\n   *  #rollback()} to revert the commit and undo all changes\n   *  done since the writer was opened.</p>\n   *\n   * You can also just call {@link #commit()} directly\n   * without prepareCommit first in which case that method\n   * will internally call prepareCommit.\n   */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(false);\n  }\n\n","sourceOld":"  /** <p>Expert: prepare for commit.  This does the first\n   *  phase of 2-phase commit.  You can only call this when\n   *  autoCommit is false.  This method does all steps\n   *  necessary to commit changes since this writer was\n   *  opened: flushes pending added and deleted docs, syncs\n   *  the index files, writes most of next segments_N file.\n   *  After calling this you must call either {@link\n   *  #commit()} to finish the commit, or {@link\n   *  #rollback()} to revert the commit and undo all changes\n   *  done since the writer was opened.</p>\n   *\n   * You can also just call {@link #commit()} directly\n   * without prepareCommit first in which case that method\n   * will internally call prepareCommit.\n   */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    prepareCommit(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b1444275c93a8051a6fe6158639467a144ae0a4","date":1224502393,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","sourceNew":"  /** Expert: prepare for commit.\n   * @see #prepareCommit(String) */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(null);\n  }\n\n","sourceOld":"  /** <p>Expert: prepare for commit.  This does the first\n   *  phase of 2-phase commit.  You can only call this when\n   *  autoCommit is false.  This method does all steps\n   *  necessary to commit changes since this writer was\n   *  opened: flushes pending added and deleted docs, syncs\n   *  the index files, writes most of next segments_N file.\n   *  After calling this you must call either {@link\n   *  #commit()} to finish the commit, or {@link\n   *  #rollback()} to revert the commit and undo all changes\n   *  done since the writer was opened.</p>\n   *\n   * You can also just call {@link #commit()} directly\n   * without prepareCommit first in which case that method\n   * will internally call prepareCommit.\n   */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9665d17707cc21b1db995118ff36129723139ab","date":1225384420,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","sourceNew":"  /** Expert: prepare for commit.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @see #prepareCommit(String) */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(null);\n  }\n\n","sourceOld":"  /** Expert: prepare for commit.\n   * @see #prepareCommit(String) */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3ab91f3bb602daf6393fa7f78b11afd3400d669","date":1243282044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","sourceNew":"  /** Expert: prepare for commit.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @see #prepareCommit(Map) */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(null);\n  }\n\n","sourceOld":"  /** Expert: prepare for commit.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @see #prepareCommit(String) */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#prepareCommit().mjava","sourceNew":"  /** Expert: prepare for commit.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @see #prepareCommit(Map) */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(null);\n  }\n\n","sourceOld":"  /** Expert: prepare for commit.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @see #prepareCommit(Map) */\n  public final void prepareCommit() throws CorruptIndexException, IOException {\n    ensureOpen();\n    prepareCommit(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e9665d17707cc21b1db995118ff36129723139ab":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"4b1444275c93a8051a6fe6158639467a144ae0a4":["2586f96f60332eb97ecd2934b0763791462568b2"],"455aeff4fef915340c5b19d71d5e147034e83093":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["e9665d17707cc21b1db995118ff36129723139ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2586f96f60332eb97ecd2934b0763791462568b2":["455aeff4fef915340c5b19d71d5e147034e83093"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"]},"commit2Childs":{"e9665d17707cc21b1db995118ff36129723139ab":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"4b1444275c93a8051a6fe6158639467a144ae0a4":["e9665d17707cc21b1db995118ff36129723139ab"],"455aeff4fef915340c5b19d71d5e147034e83093":["2586f96f60332eb97ecd2934b0763791462568b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["455aeff4fef915340c5b19d71d5e147034e83093"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"2586f96f60332eb97ecd2934b0763791462568b2":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}