{"path":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneReadOnlyMultiSegmentReader().mjava","commits":[{"id":"6db660b56f04fdb2853d25cdee8ee0d36559a521","date":1233313968,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneReadOnlyMultiSegmentReader().mjava","pathOld":"/dev/null","sourceNew":"  public void testCloneReadOnlyMultiSegmentReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n\n    TestIndexReaderReopen.createIndex(dir1, true);\n    IndexReader reader = IndexReader.open(dir1);\n    IndexReader readOnlyReader = (IndexReader) reader.clone(true);\n    if (!isReadOnly(readOnlyReader)) {\n      fail(\"reader isn't read only\");\n    }\n    reader.close();\n    readOnlyReader.close();\n    dir1.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneReadOnlyDirectoryReader().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneReadOnlyMultiSegmentReader().mjava","sourceNew":"  public void testCloneReadOnlyDirectoryReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n\n    TestIndexReaderReopen.createIndex(dir1, true);\n    IndexReader reader = IndexReader.open(dir1);\n    IndexReader readOnlyReader = reader.clone(true);\n    if (!isReadOnly(readOnlyReader)) {\n      fail(\"reader isn't read only\");\n    }\n    reader.close();\n    readOnlyReader.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testCloneReadOnlyMultiSegmentReader() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n\n    TestIndexReaderReopen.createIndex(dir1, true);\n    IndexReader reader = IndexReader.open(dir1);\n    IndexReader readOnlyReader = (IndexReader) reader.clone(true);\n    if (!isReadOnly(readOnlyReader)) {\n      fail(\"reader isn't read only\");\n    }\n    reader.close();\n    readOnlyReader.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6db660b56f04fdb2853d25cdee8ee0d36559a521":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"]},"commit2Childs":{"6db660b56f04fdb2853d25cdee8ee0d36559a521":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}