{"path":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","commits":[{"id":"ca8125609b7262844370761a4c1f26137c9f3a6b","date":1491831581,"type":0,"author":"jdyer1","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2ef113fb050c2f71e3075c84198045b09385eda3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"/spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","bugFix":null,"bugIntro":["2ef113fb050c2f71e3075c84198045b09385eda3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"/spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"/spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ef113fb050c2f71e3075c84198045b09385eda3","date":1584508910,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorWithCollapseTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n\n    for (SolrParams params : new SolrParams[]{\n        params(CommonParams.FQ, \"{!collapse field=group_i}\"),\n        params(CommonParams.FQ, \"${bleh}\", \"bleh\", \"{!collapse field=group_i}\"), // substitution\n        params(CommonParams.FQ, \"{!tag=collapser}{!collapse field=group_i}\"), // with tag & collapse in localparams\n        params(CommonParams.FQ, \"{!collapse tag=collapser field=group_i}\")\n    }) {\n      assertQ(\n          req(params,\n              SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          CommonParams.Q, \"a_s:lpve\",\n          CommonParams.QT, \"/spellCheckCompRH_Direct\",\n          SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n          \"expand\", \"true\"),\n          \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\"\n      );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    for(int i=0 ; i<200 ; i++) {\n      String[] doc = {\"id\",\"\" + i, \"group_i\", \"\" + (i % 10), \"a_s\", ((i%2)==0 ? \"love\" : \"peace\")};\n      assertU(adoc(doc));\n      if(i%5==0) {\n        assertU(commit());\n      }\n    }\n    assertU(commit());\n    assertQ(\n        req(\n            SpellCheckComponent.COMPONENT_NAME, \"true\",\n            SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n            SpellingParams.SPELLCHECK_COUNT, \"10\",\n            SpellingParams.SPELLCHECK_COLLATE, \"true\",\n            SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"5\",\n            SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"1\",\n            CommonParams.Q, \"a_s:lpve\",\n            CommonParams.QT, \"/spellCheckCompRH_Direct\",\n            SpellingParams.SPELLCHECK_COLLATE_MAX_COLLECT_DOCS, \"5\",\n            CommonParams.FQ, \"{!collapse field=group_i}\",\n            \"expand\", \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='a_s:love'\");\n  }\n\n","bugFix":["ca8125609b7262844370761a4c1f26137c9f3a6b","5ff704ef91e9ae30ca59babb23ece85720701b60"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","28288370235ed02234a64753cdbf0c6ec096304a"],"2ef113fb050c2f71e3075c84198045b09385eda3":["28288370235ed02234a64753cdbf0c6ec096304a"],"ca8125609b7262844370761a4c1f26137c9f3a6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["ca8125609b7262844370761a4c1f26137c9f3a6b","5ff704ef91e9ae30ca59babb23ece85720701b60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ef113fb050c2f71e3075c84198045b09385eda3"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["ca8125609b7262844370761a4c1f26137c9f3a6b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["30c8e5574b55d57947e989443dfde611646530ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","ca8125609b7262844370761a4c1f26137c9f3a6b"],"30c8e5574b55d57947e989443dfde611646530ee":[],"2ef113fb050c2f71e3075c84198045b09385eda3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","2ef113fb050c2f71e3075c84198045b09385eda3"],"ca8125609b7262844370761a4c1f26137c9f3a6b":["28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}