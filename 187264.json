{"path":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#getPrefixMatch(char[],int).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#getPrefixMatch(char[],int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#getPrefixMatch(char[],int).mjava","sourceNew":"  /**\n   * Find the nth word in the dictionary that starts with the supplied prefix\n   * \n   * @see #getPrefixMatch(char[])\n   * @param charArray input prefix\n   * @param knownStart relative position in the dictionary to start\n   * @return index of word, or -1 if not found\n   */\n  public int getPrefixMatch(char[] charArray, int knownStart) {\n    short index = getWordItemTableIndex(charArray[0]);\n    if (index == -1)\n      return -1;\n    char[][] items = wordItem_charArrayTable[wordIndexTable[index]];\n    int start = knownStart, end = items.length - 1;\n\n    int mid = (start + end) / 2, cmpResult;\n\n    // Binary search for the index of idArray\n    while (start <= end) {\n      cmpResult = Utility.compareArrayByPrefix(charArray, 1, items[mid], 0);\n      if (cmpResult == 0) {\n        // Get the first item which match the current word\n        while (mid >= 0\n            && Utility.compareArrayByPrefix(charArray, 1, items[mid], 0) == 0)\n          mid--;\n        mid++;\n        return mid;// 找到第一个以charArray为前缀的单词\n      } else if (cmpResult < 0)\n        end = mid - 1;\n      else\n        start = mid + 1;\n      mid = (start + end) / 2;\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * Find the nth word in the dictionary that starts with the supplied prefix\n   * \n   * @see #getPrefixMatch(char[])\n   * @param charArray input prefix\n   * @param knownStart relative position in the dictionary to start\n   * @return index of word, or -1 if not found\n   */\n  public int getPrefixMatch(char[] charArray, int knownStart) {\n    short index = getWordItemTableIndex(charArray[0]);\n    if (index == -1)\n      return -1;\n    char[][] items = wordItem_charArrayTable[wordIndexTable[index]];\n    int start = knownStart, end = items.length - 1;\n\n    int mid = (start + end) / 2, cmpResult;\n\n    // Binary search for the index of idArray\n    while (start <= end) {\n      cmpResult = Utility.compareArrayByPrefix(charArray, 1, items[mid], 0);\n      if (cmpResult == 0) {\n        // Get the first item which match the current word\n        while (mid >= 0\n            && Utility.compareArrayByPrefix(charArray, 1, items[mid], 0) == 0)\n          mid--;\n        mid++;\n        return mid;// 找到第一个以charArray为前缀的单词\n      } else if (cmpResult < 0)\n        end = mid - 1;\n      else\n        start = mid + 1;\n      mid = (start + end) / 2;\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55fa7b85159e79f79dfdca119db7f0f4cb6a2a74","date":1254579885,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#getPrefixMatch(char[],int).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#getPrefixMatch(char[],int).mjava","sourceNew":"  /**\n   * Find the nth word in the dictionary that starts with the supplied prefix\n   * \n   * @see #getPrefixMatch(char[])\n   * @param charArray input prefix\n   * @param knownStart relative position in the dictionary to start\n   * @return index of word, or -1 if not found\n   */\n  public int getPrefixMatch(char[] charArray, int knownStart) {\n    short index = getWordItemTableIndex(charArray[0]);\n    if (index == -1)\n      return -1;\n    char[][] items = wordItem_charArrayTable[wordIndexTable[index]];\n    int start = knownStart, end = items.length - 1;\n\n    int mid = (start + end) / 2, cmpResult;\n\n    // Binary search for the index of idArray\n    while (start <= end) {\n      cmpResult = Utility.compareArrayByPrefix(charArray, 1, items[mid], 0);\n      if (cmpResult == 0) {\n        // Get the first item which match the current word\n        while (mid >= 0\n            && Utility.compareArrayByPrefix(charArray, 1, items[mid], 0) == 0)\n          mid--;\n        mid++;\n        return mid;// Find the first word that uses charArray as prefix.\n      } else if (cmpResult < 0)\n        end = mid - 1;\n      else\n        start = mid + 1;\n      mid = (start + end) / 2;\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * Find the nth word in the dictionary that starts with the supplied prefix\n   * \n   * @see #getPrefixMatch(char[])\n   * @param charArray input prefix\n   * @param knownStart relative position in the dictionary to start\n   * @return index of word, or -1 if not found\n   */\n  public int getPrefixMatch(char[] charArray, int knownStart) {\n    short index = getWordItemTableIndex(charArray[0]);\n    if (index == -1)\n      return -1;\n    char[][] items = wordItem_charArrayTable[wordIndexTable[index]];\n    int start = knownStart, end = items.length - 1;\n\n    int mid = (start + end) / 2, cmpResult;\n\n    // Binary search for the index of idArray\n    while (start <= end) {\n      cmpResult = Utility.compareArrayByPrefix(charArray, 1, items[mid], 0);\n      if (cmpResult == 0) {\n        // Get the first item which match the current word\n        while (mid >= 0\n            && Utility.compareArrayByPrefix(charArray, 1, items[mid], 0) == 0)\n          mid--;\n        mid++;\n        return mid;// 找到第一个以charArray为前缀的单词\n      } else if (cmpResult < 0)\n        end = mid - 1;\n      else\n        start = mid + 1;\n      mid = (start + end) / 2;\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#getPrefixMatch(char[],int).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#getPrefixMatch(char[],int).mjava","sourceNew":"  /**\n   * Find the nth word in the dictionary that starts with the supplied prefix\n   * \n   * @see #getPrefixMatch(char[])\n   * @param charArray input prefix\n   * @param knownStart relative position in the dictionary to start\n   * @return index of word, or -1 if not found\n   */\n  public int getPrefixMatch(char[] charArray, int knownStart) {\n    short index = getWordItemTableIndex(charArray[0]);\n    if (index == -1)\n      return -1;\n    char[][] items = wordItem_charArrayTable[wordIndexTable[index]];\n    int start = knownStart, end = items.length - 1;\n\n    int mid = (start + end) / 2, cmpResult;\n\n    // Binary search for the index of idArray\n    while (start <= end) {\n      cmpResult = Utility.compareArrayByPrefix(charArray, 1, items[mid], 0);\n      if (cmpResult == 0) {\n        // Get the first item which match the current word\n        while (mid >= 0\n            && Utility.compareArrayByPrefix(charArray, 1, items[mid], 0) == 0)\n          mid--;\n        mid++;\n        return mid;// Find the first word that uses charArray as prefix.\n      } else if (cmpResult < 0)\n        end = mid - 1;\n      else\n        start = mid + 1;\n      mid = (start + end) / 2;\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * Find the nth word in the dictionary that starts with the supplied prefix\n   * \n   * @see #getPrefixMatch(char[])\n   * @param charArray input prefix\n   * @param knownStart relative position in the dictionary to start\n   * @return index of word, or -1 if not found\n   */\n  public int getPrefixMatch(char[] charArray, int knownStart) {\n    short index = getWordItemTableIndex(charArray[0]);\n    if (index == -1)\n      return -1;\n    char[][] items = wordItem_charArrayTable[wordIndexTable[index]];\n    int start = knownStart, end = items.length - 1;\n\n    int mid = (start + end) / 2, cmpResult;\n\n    // Binary search for the index of idArray\n    while (start <= end) {\n      cmpResult = Utility.compareArrayByPrefix(charArray, 1, items[mid], 0);\n      if (cmpResult == 0) {\n        // Get the first item which match the current word\n        while (mid >= 0\n            && Utility.compareArrayByPrefix(charArray, 1, items[mid], 0) == 0)\n          mid--;\n        mid++;\n        return mid;// Find the first word that uses charArray as prefix.\n      } else if (cmpResult < 0)\n        end = mid - 1;\n      else\n        start = mid + 1;\n      mid = (start + end) / 2;\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"55fa7b85159e79f79dfdca119db7f0f4cb6a2a74":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55fa7b85159e79f79dfdca119db7f0f4cb6a2a74"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["55fa7b85159e79f79dfdca119db7f0f4cb6a2a74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"55fa7b85159e79f79dfdca119db7f0f4cb6a2a74":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}