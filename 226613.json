{"path":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"\t  public void testConfig()\n\t  {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\t    log.info( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","sourceOld":"\t  public void testConfig()\n\t  {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\t    log.info( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"\t  public void testConfig()\n\t  {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\t    log.info( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","sourceOld":"\t  public void testConfig()\n\t  {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\t    log.info( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"\t  public void testConfig()\n\t  {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\t    log.info( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","sourceOld":"\t  public void testConfig()\n\t  {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\t    log.info( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"    public void testConfig()\n    {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n      log.info( \"highlighter\" );\n\n      assertTrue( highlighter instanceof DummyHighlighter );\n\n      // check to see that doHighlight is called from the DummyHighlighter\n      HashMap<String,String> args = new HashMap<String,String>();\n      args.put(\"hl\", \"true\");\n      args.put(\"df\", \"t_text\");\n      args.put(\"hl.fl\", \"\");\n      TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n        \"standard\", 0, 200, args);\n\n      assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n      assertU(commit());\n      assertU(optimize());\n      assertQ(\"Basic summarization\",\n              sumLRF.makeRequest(\"long\"),\n              \"//lst[@name='highlighting']/str[@name='dummy']\"\n              );\n    }\n\n","sourceOld":"\t  public void testConfig()\n\t  {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n\t    log.info( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"    public void testConfig()\n    {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n      log.info( \"highlighter\" );\n\n      assertTrue( highlighter instanceof DummyHighlighter );\n\n      // check to see that doHighlight is called from the DummyHighlighter\n      HashMap<String,String> args = new HashMap<>();\n      args.put(\"hl\", \"true\");\n      args.put(\"df\", \"t_text\");\n      args.put(\"hl.fl\", \"\");\n      TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n        \"standard\", 0, 200, args);\n\n      assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n      assertU(commit());\n      assertU(optimize());\n      assertQ(\"Basic summarization\",\n              sumLRF.makeRequest(\"long\"),\n              \"//lst[@name='highlighting']/str[@name='dummy']\"\n              );\n    }\n\n","sourceOld":"    public void testConfig()\n    {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n      log.info( \"highlighter\" );\n\n      assertTrue( highlighter instanceof DummyHighlighter );\n\n      // check to see that doHighlight is called from the DummyHighlighter\n      HashMap<String,String> args = new HashMap<String,String>();\n      args.put(\"hl\", \"true\");\n      args.put(\"df\", \"t_text\");\n      args.put(\"hl.fl\", \"\");\n      TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n        \"standard\", 0, 200, args);\n\n      assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n      assertU(commit());\n      assertU(optimize());\n      assertQ(\"Basic summarization\",\n              sumLRF.makeRequest(\"long\"),\n              \"//lst[@name='highlighting']/str[@name='dummy']\"\n              );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9367dbf5b00d7764583d991c1888f4acc9c9991a","date":1449048142,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"  public void testConfig()\n  {\n          SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    log.info( \"highlighter\" );\n\n    assertTrue( highlighter instanceof DummyHighlighter );\n\n    // check to see that doHighlight is called from the DummyHighlighter\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(\"hl.fl\", \"\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n\n    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"long\"),\n            \"//lst[@name='highlighting']/str[@name='dummy']\"\n            );\n    }\n\n","sourceOld":"    public void testConfig()\n    {\n            SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n      log.info( \"highlighter\" );\n\n      assertTrue( highlighter instanceof DummyHighlighter );\n\n      // check to see that doHighlight is called from the DummyHighlighter\n      HashMap<String,String> args = new HashMap<>();\n      args.put(\"hl\", \"true\");\n      args.put(\"df\", \"t_text\");\n      args.put(\"hl.fl\", \"\");\n      TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n        \"standard\", 0, 200, args);\n\n      assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n      assertU(commit());\n      assertU(optimize());\n      assertQ(\"Basic summarization\",\n              sumLRF.makeRequest(\"long\"),\n              \"//lst[@name='highlighting']/str[@name='dummy']\"\n              );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"  public void testConfig()\n  {\n          SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    log.info( \"highlighter\" );\n\n    assertTrue( highlighter instanceof DummyHighlighter );\n\n    // check to see that doHighlight is called from the DummyHighlighter\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(\"hl.fl\", \"\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"\", 0, 200, args);\n\n    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"long\"),\n            \"//lst[@name='highlighting']/str[@name='dummy']\"\n            );\n    }\n\n","sourceOld":"  public void testConfig()\n  {\n          SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    log.info( \"highlighter\" );\n\n    assertTrue( highlighter instanceof DummyHighlighter );\n\n    // check to see that doHighlight is called from the DummyHighlighter\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(\"hl.fl\", \"\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n\n    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"long\"),\n            \"//lst[@name='highlighting']/str[@name='dummy']\"\n            );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"  public void testConfig()\n  {\n          SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    log.info( \"highlighter\" );\n\n    assertTrue( highlighter instanceof DummyHighlighter );\n\n    // check to see that doHighlight is called from the DummyHighlighter\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(\"hl.fl\", \"\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"\", 0, 200, args);\n\n    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"long\"),\n            \"//lst[@name='highlighting']/str[@name='dummy']\"\n            );\n    }\n\n","sourceOld":"  public void testConfig()\n  {\n          SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    log.info( \"highlighter\" );\n\n    assertTrue( highlighter instanceof DummyHighlighter );\n\n    // check to see that doHighlight is called from the DummyHighlighter\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(\"hl.fl\", \"\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n\n    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"long\"),\n            \"//lst[@name='highlighting']/str[@name='dummy']\"\n            );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"  public void testConfig()\n  {\n          SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    log.info( \"highlighter\" );\n\n    assertTrue( highlighter instanceof DummyHighlighter );\n\n    // check to see that doHighlight is called from the DummyHighlighter\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(\"hl.fl\", \"\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"\", 0, 200, args);\n\n    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"long\"),\n            \"//lst[@name='highlighting']/str[@name='dummy']\"\n            );\n    }\n\n","sourceOld":"  public void testConfig()\n  {\n          SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    log.info( \"highlighter\" );\n\n    assertTrue( highlighter instanceof DummyHighlighter );\n\n    // check to see that doHighlight is called from the DummyHighlighter\n    HashMap<String,String> args = new HashMap<>();\n    args.put(\"hl\", \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(\"hl.fl\", \"\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n\n    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"long\"),\n            \"//lst[@name='highlighting']/str[@name='dummy']\"\n            );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["9367dbf5b00d7764583d991c1888f4acc9c9991a","28288370235ed02234a64753cdbf0c6ec096304a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"28288370235ed02234a64753cdbf0c6ec096304a":["9367dbf5b00d7764583d991c1888f4acc9c9991a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["c26f00b574427b55127e869b935845554afde1fa"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["9367dbf5b00d7764583d991c1888f4acc9c9991a"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"30c8e5574b55d57947e989443dfde611646530ee":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}