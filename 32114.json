{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","commits":[{"id":"941b7027a51547b0a38d711bc08ec354f9e2e4a7","date":1411394279,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene410Codec();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"500867f0f15393f6b2c38c3366e414fccba04ed6","date":1411520390,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene50Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene410Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","date":1434069165,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene53Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene50Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a870f9917149dc600c4ad4417d615c1795de5864","date":1445975387,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene54Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene53Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eee4175312c41f89aa23427f9e4edfc00deeaac","date":1446373190,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene60Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene54Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8","date":1462567286,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene62Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene60Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene62Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene60Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene62Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene60Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene62Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene60Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"084884d4602f4d1c7411eab29e897e349ce62675","date":1475571034,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene70Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene62Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene70Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene62Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene70Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene60Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6930fc653c2b86e857fce0af7ec99993593d0d89","date":1535014305,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene80Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene70Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene84Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene80Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"773bf150032d3ef6c95997a154fb914b82875cb8","date":1590150786,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene86Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene84Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9","date":1598432674,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#getDefaultCodec().mjava","sourceNew":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene87Codec();\n  }\n\n","sourceOld":"  /** \n   * Returns the actual default codec (e.g. LuceneMNCodec) for this version of Lucene.\n   * This may be different than {@link Codec#getDefault()} because that is randomized. \n   */\n  public static Codec getDefaultCodec() {\n    return new Lucene86Codec();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["500867f0f15393f6b2c38c3366e414fccba04ed6"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["6930fc653c2b86e857fce0af7ec99993593d0d89"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["d470c8182e92b264680e34081b75e70a9f2b3c89","084884d4602f4d1c7411eab29e897e349ce62675"],"6930fc653c2b86e857fce0af7ec99993593d0d89":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["773bf150032d3ef6c95997a154fb914b82875cb8"],"0ad30c6a479e764150a3316e57263319775f1df2":["1eee4175312c41f89aa23427f9e4edfc00deeaac","3d33e731a93d4b57e662ff094f64f94a745422d4"],"500867f0f15393f6b2c38c3366e414fccba04ed6":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"a870f9917149dc600c4ad4417d615c1795de5864":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["1eee4175312c41f89aa23427f9e4edfc00deeaac","1967bed916cc89da82a1c2085f27976da6d08cbd"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["1eee4175312c41f89aa23427f9e4edfc00deeaac","0ad30c6a479e764150a3316e57263319775f1df2"],"084884d4602f4d1c7411eab29e897e349ce62675":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"773bf150032d3ef6c95997a154fb914b82875cb8":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1eee4175312c41f89aa23427f9e4edfc00deeaac":["a870f9917149dc600c4ad4417d615c1795de5864"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["1eee4175312c41f89aa23427f9e4edfc00deeaac","fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["1eee4175312c41f89aa23427f9e4edfc00deeaac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["a870f9917149dc600c4ad4417d615c1795de5864"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["773bf150032d3ef6c95997a154fb914b82875cb8"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["6930fc653c2b86e857fce0af7ec99993593d0d89","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6930fc653c2b86e857fce0af7ec99993593d0d89":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"500867f0f15393f6b2c38c3366e414fccba04ed6":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"a870f9917149dc600c4ad4417d615c1795de5864":["1eee4175312c41f89aa23427f9e4edfc00deeaac"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["1967bed916cc89da82a1c2085f27976da6d08cbd","084884d4602f4d1c7411eab29e897e349ce62675"],"084884d4602f4d1c7411eab29e897e349ce62675":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"773bf150032d3ef6c95997a154fb914b82875cb8":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"1eee4175312c41f89aa23427f9e4edfc00deeaac":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","3d33e731a93d4b57e662ff094f64f94a745422d4","fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["500867f0f15393f6b2c38c3366e414fccba04ed6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}