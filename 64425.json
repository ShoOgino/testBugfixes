{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testWeibullDistribution().mjava","commits":[{"id":"f7ca50d1c356fbe15a0179afa80057a096b11753","date":1506390115,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testWeibullDistribution().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWeibullDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=percentile(sample(weibullDistribution(1, 10),5000), 50), \" +\n                       \"b=percentile(sample(weibullDistribution(1, 50),5000), 50), \" +\n                       \"c=percentile(sample(weibullDistribution(1, 100),5000), 50),\" +\n                       \"d=percentile(sample(weibullDistribution(4, 10),5000), 50),\" +\n                       \"e=percentile(sample(weibullDistribution(8, 10),5000), 50))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Number a = (Number)tuples.get(0).get(\"a\");\n    Number b = (Number)tuples.get(0).get(\"b\");\n    Number c = (Number)tuples.get(0).get(\"c\");\n    Number d = (Number)tuples.get(0).get(\"d\");\n    Number e = (Number)tuples.get(0).get(\"e\");\n    assertTrue(a.doubleValue() < b.doubleValue());\n    assertTrue(b.doubleValue() < c.doubleValue());\n    assertTrue(a.doubleValue() < d.doubleValue());\n    assertTrue(d.doubleValue() < e.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9efa9c0fcd87863d1a86eed29d4304c11bc7d50a","date":1506410441,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testWeibullDistribution().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWeibullDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=percentile(sample(weibullDistribution(1, 10),5000), 50), \" +\n                       \"b=percentile(sample(weibullDistribution(1, 50),5000), 50), \" +\n                       \"c=percentile(sample(weibullDistribution(1, 100),5000), 50),\" +\n                       \"d=percentile(sample(weibullDistribution(4, 10),5000), 50),\" +\n                       \"e=percentile(sample(weibullDistribution(8, 10),5000), 50))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Number a = (Number)tuples.get(0).get(\"a\");\n    Number b = (Number)tuples.get(0).get(\"b\");\n    Number c = (Number)tuples.get(0).get(\"c\");\n    Number d = (Number)tuples.get(0).get(\"d\");\n    Number e = (Number)tuples.get(0).get(\"e\");\n    assertTrue(a.doubleValue() < b.doubleValue());\n    assertTrue(b.doubleValue() < c.doubleValue());\n    assertTrue(a.doubleValue() < d.doubleValue());\n    assertTrue(d.doubleValue() < e.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7052a30e794b71229411425f0b5c985a1d49d4d","date":1506534783,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testWeibullDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testWeibullDistribution().mjava","sourceNew":"  @Test\n  public void testWeibullDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=describe(sample(weibullDistribution(.1, 10),10000)), \" +\n                       \"b=describe(sample(weibullDistribution(.5, 10),10000)), \" +\n                       \"c=describe(sample(weibullDistribution(1, 10),10000)),\" +\n                       \"d=describe(sample(weibullDistribution(6, 10),10000)),\" +\n                       \"e=mean(sample(weibullDistribution(1, 10),10000)),\" +\n                       \"f=mean(sample(weibullDistribution(1, 20),10000)),\" +\n                       \"g=mean(sample(weibullDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n    assertTrue(sd.doubleValue() < 0.0);\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  public void testWeibullDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=percentile(sample(weibullDistribution(1, 10),5000), 50), \" +\n                       \"b=percentile(sample(weibullDistribution(1, 50),5000), 50), \" +\n                       \"c=percentile(sample(weibullDistribution(1, 100),5000), 50),\" +\n                       \"d=percentile(sample(weibullDistribution(4, 10),5000), 50),\" +\n                       \"e=percentile(sample(weibullDistribution(8, 10),5000), 50))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Number a = (Number)tuples.get(0).get(\"a\");\n    Number b = (Number)tuples.get(0).get(\"b\");\n    Number c = (Number)tuples.get(0).get(\"c\");\n    Number d = (Number)tuples.get(0).get(\"d\");\n    Number e = (Number)tuples.get(0).get(\"e\");\n    assertTrue(a.doubleValue() < b.doubleValue());\n    assertTrue(b.doubleValue() < c.doubleValue());\n    assertTrue(a.doubleValue() < d.doubleValue());\n    assertTrue(d.doubleValue() < e.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testWeibullDistribution().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWeibullDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=describe(sample(weibullDistribution(.1, 10),10000)), \" +\n                       \"b=describe(sample(weibullDistribution(.5, 10),10000)), \" +\n                       \"c=describe(sample(weibullDistribution(1, 10),10000)),\" +\n                       \"d=describe(sample(weibullDistribution(6, 10),10000)),\" +\n                       \"e=mean(sample(weibullDistribution(1, 10),10000)),\" +\n                       \"f=mean(sample(weibullDistribution(1, 20),10000)),\" +\n                       \"g=mean(sample(weibullDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n    assertTrue(sd.doubleValue() < 0.0);\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testWeibullDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testWeibullDistribution().mjava","sourceNew":"  @Test\n  public void testWeibullDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=describe(sample(weibullDistribution(.1, 10),10000)), \" +\n                       \"b=describe(sample(weibullDistribution(.5, 10),10000)), \" +\n                       \"c=describe(sample(weibullDistribution(1, 10),10000)),\" +\n                       \"d=describe(sample(weibullDistribution(6, 10),10000)),\" +\n                       \"e=mean(sample(weibullDistribution(1, 10),10000)),\" +\n                       \"f=mean(sample(weibullDistribution(1, 20),10000)),\" +\n                       \"g=mean(sample(weibullDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n    assertTrue(sd.doubleValue() < 0.0);\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  public void testWeibullDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n                       \"a=describe(sample(weibullDistribution(.1, 10),10000)), \" +\n                       \"b=describe(sample(weibullDistribution(.5, 10),10000)), \" +\n                       \"c=describe(sample(weibullDistribution(1, 10),10000)),\" +\n                       \"d=describe(sample(weibullDistribution(6, 10),10000)),\" +\n                       \"e=mean(sample(weibullDistribution(1, 10),10000)),\" +\n                       \"f=mean(sample(weibullDistribution(1, 20),10000)),\" +\n                       \"g=mean(sample(weibullDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n    assertTrue(sd.doubleValue() < 0.0);\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9efa9c0fcd87863d1a86eed29d4304c11bc7d50a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f7ca50d1c356fbe15a0179afa80057a096b11753"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f7052a30e794b71229411425f0b5c985a1d49d4d"],"f7052a30e794b71229411425f0b5c985a1d49d4d":["9efa9c0fcd87863d1a86eed29d4304c11bc7d50a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7ca50d1c356fbe15a0179afa80057a096b11753":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["f7052a30e794b71229411425f0b5c985a1d49d4d"]},"commit2Childs":{"9efa9c0fcd87863d1a86eed29d4304c11bc7d50a":["f7052a30e794b71229411425f0b5c985a1d49d4d"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9efa9c0fcd87863d1a86eed29d4304c11bc7d50a","6240b74b884c5587f2a4062dd27d6c32bf228889","f7ca50d1c356fbe15a0179afa80057a096b11753"],"f7052a30e794b71229411425f0b5c985a1d49d4d":["6240b74b884c5587f2a4062dd27d6c32bf228889","8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"f7ca50d1c356fbe15a0179afa80057a096b11753":["9efa9c0fcd87863d1a86eed29d4304c11bc7d50a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}