{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetCloudTest#countTest().mjava","commits":[{"id":"c495edcca4d0bc51bf62d9be3527c87bf9b44ded","date":1498673617,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetCloudTest#countTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void countTest() throws Exception { \n    String[] params = new String[] {\n        \"o.cr.s.int_id\", \"count(int_id)\",\n        \"o.cr.s.long_ld\", \"count(long_ld)\",\n        \"o.cr.s.float_fd\", \"count(float_fd)\",\n        \"o.cr.s.double_dd\", \"count(double_dd)\",\n        \"o.cr.s.date_dtd\", \"count(date_dtd)\",\n        \"o.cr.s.string_sd\", \"count(string_sd)\"\n    };\n    NamedList<Object> response = queryCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int\n    Long intResult = getValue(response, \"cr\", \"int_id\");\n    Long intTest = (Long)calculateStat(intTestStart, \"count\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long\n    Long longResult = getValue(response, \"cr\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"count\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float\n    Long floatResult = getValue(response, \"cr\", \"float_fd\");\n    Long floatTest = (Long)calculateStat(floatTestStart, \"count\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double\n    Long doubleResult = getValue(response, \"cr\", \"double_dd\");\n    Long doubleTest = (Long)calculateStat(doubleTestStart, \"count\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date\n    Long dateResult = getValue(response, \"cr\", \"date_dtd\");\n    Long dateTest = (Long)calculateStat(dateTestStart, \"count\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String\n    Long stringResult = getValue(response, \"cr\", \"string_sd\");\n    Long stringTest = (Long)calculateStat(stringTestStart, \"count\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetCloudTest#countTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void countTest() throws Exception { \n    String[] params = new String[] {\n        \"o.cr.s.int_id\", \"count(int_id)\",\n        \"o.cr.s.long_ld\", \"count(long_ld)\",\n        \"o.cr.s.float_fd\", \"count(float_fd)\",\n        \"o.cr.s.double_dd\", \"count(double_dd)\",\n        \"o.cr.s.date_dtd\", \"count(date_dtd)\",\n        \"o.cr.s.string_sd\", \"count(string_sd)\"\n    };\n    NamedList<Object> response = queryCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int\n    Long intResult = getValue(response, \"cr\", \"int_id\");\n    Long intTest = (Long)calculateStat(intTestStart, \"count\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long\n    Long longResult = getValue(response, \"cr\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"count\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float\n    Long floatResult = getValue(response, \"cr\", \"float_fd\");\n    Long floatTest = (Long)calculateStat(floatTestStart, \"count\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double\n    Long doubleResult = getValue(response, \"cr\", \"double_dd\");\n    Long doubleTest = (Long)calculateStat(doubleTestStart, \"count\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date\n    Long dateResult = getValue(response, \"cr\", \"date_dtd\");\n    Long dateTest = (Long)calculateStat(dateTestStart, \"count\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String\n    Long stringResult = getValue(response, \"cr\", \"string_sd\");\n    Long stringTest = (Long)calculateStat(stringTestStart, \"count\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetCloudTest#countTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void countTest() throws Exception { \n    String[] params = new String[] {\n        \"o.cr.s.int_id\", \"count(int_id)\",\n        \"o.cr.s.long_ld\", \"count(long_ld)\",\n        \"o.cr.s.float_fd\", \"count(float_fd)\",\n        \"o.cr.s.double_dd\", \"count(double_dd)\",\n        \"o.cr.s.date_dtd\", \"count(date_dtd)\",\n        \"o.cr.s.string_sd\", \"count(string_sd)\"\n    };\n    NamedList<Object> response = queryCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int\n    Long intResult = getValue(response, \"cr\", \"int_id\");\n    Long intTest = (Long)calculateStat(intTestStart, \"count\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long\n    Long longResult = getValue(response, \"cr\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"count\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float\n    Long floatResult = getValue(response, \"cr\", \"float_fd\");\n    Long floatTest = (Long)calculateStat(floatTestStart, \"count\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double\n    Long doubleResult = getValue(response, \"cr\", \"double_dd\");\n    Long doubleTest = (Long)calculateStat(doubleTestStart, \"count\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date\n    Long dateResult = getValue(response, \"cr\", \"date_dtd\");\n    Long dateTest = (Long)calculateStat(dateTestStart, \"count\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String\n    Long stringResult = getValue(response, \"cr\", \"string_sd\");\n    Long stringTest = (Long)calculateStat(stringTestStart, \"count\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":4,"author":"Houston Putman","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetCloudTest#countTest().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void countTest() throws Exception { \n    String[] params = new String[] {\n        \"o.cr.s.int_id\", \"count(int_id)\",\n        \"o.cr.s.long_ld\", \"count(long_ld)\",\n        \"o.cr.s.float_fd\", \"count(float_fd)\",\n        \"o.cr.s.double_dd\", \"count(double_dd)\",\n        \"o.cr.s.date_dtd\", \"count(date_dtd)\",\n        \"o.cr.s.string_sd\", \"count(string_sd)\"\n    };\n    NamedList<Object> response = queryCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int\n    Long intResult = getValue(response, \"cr\", \"int_id\");\n    Long intTest = (Long)calculateStat(intTestStart, \"count\");\n    assertEquals(responseStr, intResult,intTest);\n\n    //Long\n    Long longResult = getValue(response, \"cr\", \"long_ld\");\n    Long longTest = (Long)calculateStat(longTestStart, \"count\");\n    assertEquals(responseStr, longResult,longTest);\n\n    //Float\n    Long floatResult = getValue(response, \"cr\", \"float_fd\");\n    Long floatTest = (Long)calculateStat(floatTestStart, \"count\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    //Double\n    Long doubleResult = getValue(response, \"cr\", \"double_dd\");\n    Long doubleTest = (Long)calculateStat(doubleTestStart, \"count\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    //Date\n    Long dateResult = getValue(response, \"cr\", \"date_dtd\");\n    Long dateTest = (Long)calculateStat(dateTestStart, \"count\");\n    assertEquals(responseStr, dateResult,dateTest);\n\n    //String\n    Long stringResult = getValue(response, \"cr\", \"string_sd\");\n    Long stringTest = (Long)calculateStat(stringTestStart, \"count\");\n    assertEquals(responseStr, stringResult,stringTest);\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28288370235ed02234a64753cdbf0c6ec096304a"],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c495edcca4d0bc51bf62d9be3527c87bf9b44ded"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c8e5574b55d57947e989443dfde611646530ee","c495edcca4d0bc51bf62d9be3527c87bf9b44ded","28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","3bd4c6955956e76c96eb12dfe64108ed03522983"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}