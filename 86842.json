{"path":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertIntervalQueriesString(String).mjava","commits":[{"id":"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","date":1406137403,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertIntervalQueriesString(String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertIntervalQueriesString(String field) {\n    assertIntervalQuery(field, \"[bird,bird]\", \"1\");\n    assertIntervalQuery(field, \"(bird,dog)\", \"2\");\n    assertIntervalQuery(field, \"[bird,dog)\", \"3\");\n    assertIntervalQuery(field, \"(bird,turtle]\", \"6\");\n    assertIntervalQuery(field, \"[*,bird]\", \"3\");\n    assertIntervalQuery(field, \"[*,bird)\", \"2\", \"[bird,cat)\", \"1\", \"[cat,dog)\", \"2\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, \"[*,*]\", \"9\", \"[*,dog)\", \"5\", \"[*,dog]\", \"8\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, field + \":dog\", 3, \"[*,*]\", \"3\", \"[*,dog)\", \"0\", \"[*,dog]\", \"3\", \"[dog,*]\", \"3\", \"[bird,cat]\", \"0\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28734fb4930c942ddbcc23e90b746f7e231278b1","date":1477363794,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertIntervalQueriesString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertIntervalQueriesString(String).mjava","sourceNew":"  private void assertIntervalQueriesString(String field) {\n    assertIntervalQuery(field, \"[bird,bird]\", \"1\");\n    assertIntervalQuery(field, \"(bird,dog)\", \"2\");\n    assertIntervalQuery(field, \"[bird,dog)\", \"3\");\n    assertIntervalQuery(field, \"(bird,turtle]\", \"6\");\n    assertIntervalQuery(field, \"[*,bird]\", \"3\");\n    assertIntervalQuery(field, \"[*,bird)\", \"2\", \"[bird,cat)\", \"1\", \"[cat,dog)\", \"2\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, \"[*,*]\", \"9\", \"[*,dog)\", \"5\", \"[*,dog]\", \"8\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, field + \":dog\", 3, \"[*,*]\", \"3\", \"[*,dog)\", \"0\", \"[*,dog]\", \"3\", \"[dog,*]\", \"3\", \"[bird,cat]\", \"0\");\n    assertIntervalQuery(field, \"(*,dog)\", \"5\", \"[dog, dog]\", \"3\", \"(dog,*)\", \"1\");\n    assertIntervalQuery(field, \"[dog, dog]\", \"3\", \"(dog,*)\", \"1\", \"(*,dog)\", \"5\");\n    assertIntervalQuery(field, \"(dog,*)\", \"1\", \"(*,dog)\", \"5\", \"[dog, dog]\", \"3\");\n  }\n\n","sourceOld":"  private void assertIntervalQueriesString(String field) {\n    assertIntervalQuery(field, \"[bird,bird]\", \"1\");\n    assertIntervalQuery(field, \"(bird,dog)\", \"2\");\n    assertIntervalQuery(field, \"[bird,dog)\", \"3\");\n    assertIntervalQuery(field, \"(bird,turtle]\", \"6\");\n    assertIntervalQuery(field, \"[*,bird]\", \"3\");\n    assertIntervalQuery(field, \"[*,bird)\", \"2\", \"[bird,cat)\", \"1\", \"[cat,dog)\", \"2\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, \"[*,*]\", \"9\", \"[*,dog)\", \"5\", \"[*,dog]\", \"8\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, field + \":dog\", 3, \"[*,*]\", \"3\", \"[*,dog)\", \"0\", \"[*,dog]\", \"3\", \"[dog,*]\", \"3\", \"[bird,cat]\", \"0\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60b61628d1912768f51eccaa8ead5a5a32ab34c6","date":1477427681,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertIntervalQueriesString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertIntervalQueriesString(String).mjava","sourceNew":"  private void assertIntervalQueriesString(String field) {\n    assertIntervalQuery(field, \"[bird,bird]\", \"1\");\n    assertIntervalQuery(field, \"(bird,dog)\", \"2\");\n    assertIntervalQuery(field, \"[bird,dog)\", \"3\");\n    assertIntervalQuery(field, \"(bird,turtle]\", \"6\");\n    assertIntervalQuery(field, \"[*,bird]\", \"3\");\n    assertIntervalQuery(field, \"[*,bird)\", \"2\", \"[bird,cat)\", \"1\", \"[cat,dog)\", \"2\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, \"[*,*]\", \"9\", \"[*,dog)\", \"5\", \"[*,dog]\", \"8\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, field + \":dog\", 3, \"[*,*]\", \"3\", \"[*,dog)\", \"0\", \"[*,dog]\", \"3\", \"[dog,*]\", \"3\", \"[bird,cat]\", \"0\");\n    assertIntervalQuery(field, \"(*,dog)\", \"5\", \"[dog, dog]\", \"3\", \"(dog,*)\", \"1\");\n    assertIntervalQuery(field, \"[dog, dog]\", \"3\", \"(dog,*)\", \"1\", \"(*,dog)\", \"5\");\n    assertIntervalQuery(field, \"(dog,*)\", \"1\", \"(*,dog)\", \"5\", \"[dog, dog]\", \"3\");\n  }\n\n","sourceOld":"  private void assertIntervalQueriesString(String field) {\n    assertIntervalQuery(field, \"[bird,bird]\", \"1\");\n    assertIntervalQuery(field, \"(bird,dog)\", \"2\");\n    assertIntervalQuery(field, \"[bird,dog)\", \"3\");\n    assertIntervalQuery(field, \"(bird,turtle]\", \"6\");\n    assertIntervalQuery(field, \"[*,bird]\", \"3\");\n    assertIntervalQuery(field, \"[*,bird)\", \"2\", \"[bird,cat)\", \"1\", \"[cat,dog)\", \"2\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, \"[*,*]\", \"9\", \"[*,dog)\", \"5\", \"[*,dog]\", \"8\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, field + \":dog\", 3, \"[*,*]\", \"3\", \"[*,dog)\", \"0\", \"[*,dog]\", \"3\", \"[dog,*]\", \"3\", \"[bird,cat]\", \"0\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertIntervalQueriesString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertIntervalQueriesString(String).mjava","sourceNew":"  private void assertIntervalQueriesString(String field) {\n    assertIntervalQuery(field, \"[bird,bird]\", \"1\");\n    assertIntervalQuery(field, \"(bird,dog)\", \"2\");\n    assertIntervalQuery(field, \"[bird,dog)\", \"3\");\n    assertIntervalQuery(field, \"(bird,turtle]\", \"6\");\n    assertIntervalQuery(field, \"[*,bird]\", \"3\");\n    assertIntervalQuery(field, \"[*,bird)\", \"2\", \"[bird,cat)\", \"1\", \"[cat,dog)\", \"2\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, \"[*,*]\", \"9\", \"[*,dog)\", \"5\", \"[*,dog]\", \"8\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, field + \":dog\", 3, \"[*,*]\", \"3\", \"[*,dog)\", \"0\", \"[*,dog]\", \"3\", \"[dog,*]\", \"3\", \"[bird,cat]\", \"0\");\n    assertIntervalQuery(field, \"(*,dog)\", \"5\", \"[dog, dog]\", \"3\", \"(dog,*)\", \"1\");\n    assertIntervalQuery(field, \"[dog, dog]\", \"3\", \"(dog,*)\", \"1\", \"(*,dog)\", \"5\");\n    assertIntervalQuery(field, \"(dog,*)\", \"1\", \"(*,dog)\", \"5\", \"[dog, dog]\", \"3\");\n  }\n\n","sourceOld":"  private void assertIntervalQueriesString(String field) {\n    assertIntervalQuery(field, \"[bird,bird]\", \"1\");\n    assertIntervalQuery(field, \"(bird,dog)\", \"2\");\n    assertIntervalQuery(field, \"[bird,dog)\", \"3\");\n    assertIntervalQuery(field, \"(bird,turtle]\", \"6\");\n    assertIntervalQuery(field, \"[*,bird]\", \"3\");\n    assertIntervalQuery(field, \"[*,bird)\", \"2\", \"[bird,cat)\", \"1\", \"[cat,dog)\", \"2\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, \"[*,*]\", \"9\", \"[*,dog)\", \"5\", \"[*,dog]\", \"8\", \"[dog,*]\", \"4\");\n    assertIntervalQuery(field, field + \":dog\", 3, \"[*,*]\", \"3\", \"[*,dog)\", \"0\", \"[*,dog]\", \"3\", \"[dog,*]\", \"3\", \"[bird,cat]\", \"0\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60b61628d1912768f51eccaa8ead5a5a32ab34c6":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","28734fb4930c942ddbcc23e90b746f7e231278b1"],"28734fb4930c942ddbcc23e90b746f7e231278b1":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60b61628d1912768f51eccaa8ead5a5a32ab34c6"]},"commit2Childs":{"60b61628d1912768f51eccaa8ead5a5a32ab34c6":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28734fb4930c942ddbcc23e90b746f7e231278b1":["60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["60b61628d1912768f51eccaa8ead5a5a32ab34c6","28734fb4930c942ddbcc23e90b746f7e231278b1","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}