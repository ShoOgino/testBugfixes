{"path":"solr/core/src/java/org/apache/solr/util/hll/BigEndianAscendingWordDeserializer#BigEndianAscendingWordDeserializer(int,int,byte[]).mjava","commits":[{"id":"6d8714f9ceaaff94f0968d1c2d037978c3fde569","date":1437042727,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/BigEndianAscendingWordDeserializer#BigEndianAscendingWordDeserializer(int,int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"    // ========================================================================\n    /**\n     * @param wordLength the length in bits of the words to be deserialized. Must\n     *        be less than or equal to 64 and greater than or equal to 1.\n     * @param bytePadding the number of leading bytes that pad the serialized words.\n     *        Must be greater than or equal to zero.\n     * @param bytes the byte array containing the serialized words. Cannot be\n     *        <code>null</code>.\n     */\n    public BigEndianAscendingWordDeserializer(final int wordLength, final int bytePadding, final byte[] bytes) {\n        if((wordLength < 1) || (wordLength > 64)) {\n            throw new IllegalArgumentException(\"Word length must be >= 1 and <= 64. (was: \" + wordLength + \")\");\n        }\n\n        if(bytePadding < 0) {\n            throw new IllegalArgumentException(\"Byte padding must be >= zero. (was: \" + bytePadding + \")\");\n        }\n\n        this.wordLength = wordLength;\n        this.bytes = bytes;\n        this.bytePadding = bytePadding;\n\n        final int dataBytes = (bytes.length - bytePadding);\n        final long dataBits = (dataBytes * BITS_PER_BYTE);\n\n        this.wordCount = (int)(dataBits/wordLength);\n\n        currentWordIndex = 0;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/BigEndianAscendingWordDeserializer#BigEndianAscendingWordDeserializer(int,int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"    // ========================================================================\n    /**\n     * @param wordLength the length in bits of the words to be deserialized. Must\n     *        be less than or equal to 64 and greater than or equal to 1.\n     * @param bytePadding the number of leading bytes that pad the serialized words.\n     *        Must be greater than or equal to zero.\n     * @param bytes the byte array containing the serialized words. Cannot be\n     *        <code>null</code>.\n     */\n    public BigEndianAscendingWordDeserializer(final int wordLength, final int bytePadding, final byte[] bytes) {\n        if((wordLength < 1) || (wordLength > 64)) {\n            throw new IllegalArgumentException(\"Word length must be >= 1 and <= 64. (was: \" + wordLength + \")\");\n        }\n\n        if(bytePadding < 0) {\n            throw new IllegalArgumentException(\"Byte padding must be >= zero. (was: \" + bytePadding + \")\");\n        }\n\n        this.wordLength = wordLength;\n        this.bytes = bytes;\n        this.bytePadding = bytePadding;\n\n        final int dataBytes = (bytes.length - bytePadding);\n        final long dataBits = (dataBytes * BITS_PER_BYTE);\n\n        this.wordCount = (int)(dataBits/wordLength);\n\n        currentWordIndex = 0;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}