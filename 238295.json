{"path":"client/java/solrj/src/org/apache/solr/client/solrj/response/FieldStatsInfo#FieldStatsInfo(NamedList[Object],String).mjava","commits":[{"id":"758a0ba5e213f4d1fc89087ae6e4678f7879e450","date":1224361193,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/response/FieldStatsInfo#FieldStatsInfo(NamedList[Object],String).mjava","pathOld":"/dev/null","sourceNew":"  public FieldStatsInfo( NamedList<Object> nl, String fname )\n  {\n    name = fname;\n    \n    for( Map.Entry<String, Object> entry : nl ) {\n      if( \"min\".equals( entry.getKey() ) ) {\n        min = (Double)entry.getValue();\n      }\n      else if( \"max\".equals( entry.getKey() ) ) {\n        max = (Double)entry.getValue();\n      }\n      else if( \"sum\".equals( entry.getKey() ) ) {\n        sum = (Double)entry.getValue();\n      }\n      else if( \"count\".equals( entry.getKey() ) ) {\n        count = (Long)entry.getValue();\n      }\n      else if( \"missing\".equals( entry.getKey() ) ) {\n        missing = (Long)entry.getValue();\n      }\n      else if( \"mean\".equals( entry.getKey() ) ) {\n        mean = (Double)entry.getValue();\n      }\n      else if( \"sumOfSquares\".equals( entry.getKey() ) ) {\n        sumOfSquares = (Double)entry.getValue();\n      }\n      else if( \"stddev\".equals( entry.getKey() ) ) {\n        stddev = (Double)entry.getValue();\n      }\n      else if( \"median\".equals( entry.getKey() ) ) {\n        median = (Double)entry.getValue();\n      }\n      else if( \"facets\".equals( entry.getKey() ) ) {\n        NamedList<Object> fields = (NamedList<Object>)entry.getValue();\n        facets = new HashMap<String, List<FieldStatsInfo>>();\n        for( Map.Entry<String, Object> ev : fields ) {\n          List<FieldStatsInfo> vals = new ArrayList<FieldStatsInfo>();\n          facets.put( ev.getKey(), vals );\n          NamedList<NamedList<Object>> vnl = (NamedList<NamedList<Object>>) ev.getValue();\n          for( int i=0; i<vnl.size(); i++ ) {\n            String n = vnl.getName(i);\n            vals.add( new FieldStatsInfo( vnl.getVal(i), n ) );\n          }\n        }\n      }\n      else {\n        throw new RuntimeException( \"unknown key: \"+entry.getKey() + \" [\"+entry.getValue()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/response/FieldStatsInfo#FieldStatsInfo(NamedList[Object],String).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/response/FieldStatsInfo#FieldStatsInfo(NamedList[Object],String).mjava","sourceNew":"  public FieldStatsInfo( NamedList<Object> nl, String fname )\n  {\n    name = fname;\n    \n    for( Map.Entry<String, Object> entry : nl ) {\n      if( \"min\".equals( entry.getKey() ) ) {\n        min = (Double)entry.getValue();\n      }\n      else if( \"max\".equals( entry.getKey() ) ) {\n        max = (Double)entry.getValue();\n      }\n      else if( \"sum\".equals( entry.getKey() ) ) {\n        sum = (Double)entry.getValue();\n      }\n      else if( \"count\".equals( entry.getKey() ) ) {\n        count = (Long)entry.getValue();\n      }\n      else if( \"missing\".equals( entry.getKey() ) ) {\n        missing = (Long)entry.getValue();\n      }\n      else if( \"mean\".equals( entry.getKey() ) ) {\n        mean = (Double)entry.getValue();\n      }\n      else if( \"sumOfSquares\".equals( entry.getKey() ) ) {\n        sumOfSquares = (Double)entry.getValue();\n      }\n      else if( \"stddev\".equals( entry.getKey() ) ) {\n        stddev = (Double)entry.getValue();\n      }\n      else if( \"median\".equals( entry.getKey() ) ) {\n        median = (Double)entry.getValue();\n      }\n      else if( \"facets\".equals( entry.getKey() ) ) {\n        NamedList<Object> fields = (NamedList<Object>)entry.getValue();\n        facets = new HashMap<String, List<FieldStatsInfo>>();\n        for( Map.Entry<String, Object> ev : fields ) {\n          List<FieldStatsInfo> vals = new ArrayList<FieldStatsInfo>();\n          facets.put( ev.getKey(), vals );\n          NamedList<NamedList<Object>> vnl = (NamedList<NamedList<Object>>) ev.getValue();\n          for( int i=0; i<vnl.size(); i++ ) {\n            String n = vnl.getName(i);\n            vals.add( new FieldStatsInfo( vnl.getVal(i), n ) );\n          }\n        }\n      }\n      else {\n        throw new RuntimeException( \"unknown key: \"+entry.getKey() + \" [\"+entry.getValue()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":"  public FieldStatsInfo( NamedList<Object> nl, String fname )\n  {\n    name = fname;\n    \n    for( Map.Entry<String, Object> entry : nl ) {\n      if( \"min\".equals( entry.getKey() ) ) {\n        min = (Double)entry.getValue();\n      }\n      else if( \"max\".equals( entry.getKey() ) ) {\n        max = (Double)entry.getValue();\n      }\n      else if( \"sum\".equals( entry.getKey() ) ) {\n        sum = (Double)entry.getValue();\n      }\n      else if( \"count\".equals( entry.getKey() ) ) {\n        count = (Long)entry.getValue();\n      }\n      else if( \"missing\".equals( entry.getKey() ) ) {\n        missing = (Long)entry.getValue();\n      }\n      else if( \"mean\".equals( entry.getKey() ) ) {\n        mean = (Double)entry.getValue();\n      }\n      else if( \"sumOfSquares\".equals( entry.getKey() ) ) {\n        sumOfSquares = (Double)entry.getValue();\n      }\n      else if( \"stddev\".equals( entry.getKey() ) ) {\n        stddev = (Double)entry.getValue();\n      }\n      else if( \"median\".equals( entry.getKey() ) ) {\n        median = (Double)entry.getValue();\n      }\n      else if( \"facets\".equals( entry.getKey() ) ) {\n        NamedList<Object> fields = (NamedList<Object>)entry.getValue();\n        facets = new HashMap<String, List<FieldStatsInfo>>();\n        for( Map.Entry<String, Object> ev : fields ) {\n          List<FieldStatsInfo> vals = new ArrayList<FieldStatsInfo>();\n          facets.put( ev.getKey(), vals );\n          NamedList<NamedList<Object>> vnl = (NamedList<NamedList<Object>>) ev.getValue();\n          for( int i=0; i<vnl.size(); i++ ) {\n            String n = vnl.getName(i);\n            vals.add( new FieldStatsInfo( vnl.getVal(i), n ) );\n          }\n        }\n      }\n      else {\n        throw new RuntimeException( \"unknown key: \"+entry.getKey() + \" [\"+entry.getValue()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["758a0ba5e213f4d1fc89087ae6e4678f7879e450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"758a0ba5e213f4d1fc89087ae6e4678f7879e450":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["758a0ba5e213f4d1fc89087ae6e4678f7879e450"],"758a0ba5e213f4d1fc89087ae6e4678f7879e450":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}