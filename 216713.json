{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory#testIllegalArguments().mjava","commits":[{"id":"43acd3a99a12a5bec9c72097de0e294c80cb6daa","date":1396327381,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory#testIllegalArguments().mjava","pathOld":"/dev/null","sourceNew":" public void testIllegalArguments() throws Exception {\n    try {\n      tokenizerFactory(\"UAX29URLEmail\", \"maxTokenLength\", \"-1\").create();\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"maxTokenLength must be greater than zero\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory#testIllegalArguments().mjava","pathOld":"/dev/null","sourceNew":" public void testIllegalArguments() throws Exception {\n    try {\n      tokenizerFactory(\"UAX29URLEmail\", \"maxTokenLength\", \"-1\").create();\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"maxTokenLength must be greater than zero\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory#testIllegalArguments().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory#testIllegalArguments().mjava","sourceNew":"  public void testIllegalArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"UAX29URLEmail\", \"maxTokenLength\", \"-1\").create();\n    });\n    assertTrue(expected.getMessage().contains(\"maxTokenLength must be greater than zero\"));\n  }\n\n","sourceOld":" public void testIllegalArguments() throws Exception {\n    try {\n      tokenizerFactory(\"UAX29URLEmail\", \"maxTokenLength\", \"-1\").create();\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"maxTokenLength must be greater than zero\"));\n    }\n  }\n\n","bugFix":["43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/email/TestUAX29URLEmailTokenizerFactory#testIllegalArguments().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory#testIllegalArguments().mjava","sourceNew":"  public void testIllegalArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"UAX29URLEmail\", \"maxTokenLength\", \"-1\").create();\n    });\n    assertTrue(expected.getMessage().contains(\"maxTokenLength must be greater than zero\"));\n  }\n\n","sourceOld":"  public void testIllegalArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"UAX29URLEmail\", \"maxTokenLength\", \"-1\").create();\n    });\n    assertTrue(expected.getMessage().contains(\"maxTokenLength must be greater than zero\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"43acd3a99a12a5bec9c72097de0e294c80cb6daa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05fe562aa248790944d43cdd478f512572835ba0":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"43acd3a99a12a5bec9c72097de0e294c80cb6daa":["5eb2511ababf862ea11e10761c70ee560cd84510","05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}