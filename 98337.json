{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","commits":[{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.EverythingEnum#EverythingEnum(FieldInfo).mjava","sourceNew":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n\n      this.startDocIn = Lucene50PostingsReader.this.docIn;\n      this.docIn = null;\n      this.posIn = Lucene50PostingsReader.this.posIn.clone();\n      if (indexHasOffsets || indexHasPayloads) {\n        this.payIn = Lucene50PostingsReader.this.payIn.clone();\n      } else {\n        this.payIn = null;\n      }\n      encoded = new byte[MAX_ENCODED_SIZE];\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","sourceOld":"    public EverythingEnum(FieldInfo fieldInfo) throws IOException {\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n\n      this.startDocIn = Lucene50PostingsReader.this.docIn;\n      this.docIn = null;\n      this.posIn = Lucene50PostingsReader.this.posIn.clone();\n      if (indexHasOffsets || indexHasPayloads) {\n        this.payIn = Lucene50PostingsReader.this.payIn.clone();\n      } else {\n        this.payIn = null;\n      }\n      encoded = new byte[MAX_ENCODED_SIZE];\n      if (indexHasOffsets) {\n        offsetStartDeltaBuffer = new int[MAX_DATA_SIZE];\n        offsetLengthBuffer = new int[MAX_DATA_SIZE];\n      } else {\n        offsetStartDeltaBuffer = null;\n        offsetLengthBuffer = null;\n        startOffset = -1;\n        endOffset = -1;\n      }\n\n      if (indexHasPayloads) {\n        payloadLengthBuffer = new int[MAX_DATA_SIZE];\n        payloadBytes = new byte[128];\n        payload = new BytesRef();\n      } else {\n        payloadLengthBuffer = null;\n        payloadBytes = null;\n        payload = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}