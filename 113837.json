{"path":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","commits":[{"id":"11982a7b6834a8571852448312db4624c32990b5","date":1321300684,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"/dev/null","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",\n            \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91","date":1331244655,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",\n            \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",\n            \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.US);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf795ee457272965bd751f513787065bbf0a650a","date":1385015231,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"f.active_dt.stats.calcdistinct\",\"true\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//long[@name='countDistinct'][.='2']\",\n            \"count(//arr[@name='distinctValues']/date)='2'\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":null,"bugIntro":["d0c238d519ed8e8343ab723bcc8f1846786e42a6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"f.active_dt.stats.calcdistinct\",\"true\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//long[@name='countDistinct'][.='2']\",\n            \"count(//arr[@name='distinctValues']/date)='2'\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"f.active_dt.stats.calcdistinct\",\"true\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//long[@name='countDistinct'][.='2']\",\n            \"count(//arr[@name='distinctValues']/date)='2'\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"f.active_dt.stats.calcdistinct\",\"true\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//long[@name='countDistinct'][.='2']\",\n            \"count(//arr[@name='distinctValues']/date)='2'\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0c238d519ed8e8343ab723bcc8f1846786e42a6","date":1409789996,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"f.active_dt.stats.calcdistinct\",\"true\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//long[@name='countDistinct'][.='2']\",\n            \"count(//arr[@name='distinctValues']/date)=2\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"f.active_dt.stats.calcdistinct\",\"true\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//long[@name='countDistinct'][.='2']\",\n            \"count(//arr[@name='distinctValues']/date)='2'\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":["bf795ee457272965bd751f513787065bbf0a650a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a4e2c829188fb99886a64558664d79c9ac0fdf1","date":1431021538,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsDateField().mjava","sourceNew":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"f.active_dt.stats.calcdistinct\",\"true\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//long[@name='countDistinct'][.='2']\",\n            \"count(//arr[@name='distinctValues']/date)=2\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n\n    assertQ(\"cardinality\", \n            req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}active_dt\")\n            , \"//lst[@name='active_dt']/long[@name='cardinality'][.='2']\");\n\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsDateField() throws Exception {\n    SolrCore core = h.getCore();\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\", Locale.ROOT);\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    String date1 = dateFormat.format(new Date(123456789)) + \"Z\";\n    String date2 = dateFormat.format(new Date(987654321)) + \"Z\";\n\n    assertU(adoc(\"id\", \"1\", \"active_dt\", date1));\n    assertU(adoc(\"id\", \"2\", \"active_dt\", date2));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_dt\");\n    args.put(\"f.active_dt.stats.calcdistinct\",\"true\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test date statistics values\", req,\n            \"//long[@name='count'][.='2']\",\n            \"//long[@name='missing'][.='1']\",\n            \"//date[@name='min'][.='1970-01-02T10:17:36Z']\",\n            \"//date[@name='max'][.='1970-01-12T10:20:54Z']\",\n            \"//long[@name='countDistinct'][.='2']\",\n            \"count(//arr[@name='distinctValues']/date)=2\"\n        //  \"//date[@name='sum'][.='1970-01-13T20:38:30Z']\",  // sometimes 29.999Z\n        //  \"//date[@name='mean'][.='1970-01-07T10:19:15Z']\"  // sometiems 14.999Z\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["11982a7b6834a8571852448312db4624c32990b5","ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bf795ee457272965bd751f513787065bbf0a650a"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["d0c238d519ed8e8343ab723bcc8f1846786e42a6"],"ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91":["11982a7b6834a8571852448312db4624c32990b5"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91"],"2acf500f78aa12b92e371fd89c719291986b6b90":["ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"bf795ee457272965bd751f513787065bbf0a650a":["2acf500f78aa12b92e371fd89c719291986b6b90"],"d0c238d519ed8e8343ab723bcc8f1846786e42a6":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"46d8ada1fff8d18cb197c38c7983225162599948":["ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91","2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["2acf500f78aa12b92e371fd89c719291986b6b90","bf795ee457272965bd751f513787065bbf0a650a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"11982a7b6834a8571852448312db4624c32990b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d0c238d519ed8e8343ab723bcc8f1846786e42a6"],"ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91":["38e3b736c7ca086d61b7dbb841c905ee115490da","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["bf795ee457272965bd751f513787065bbf0a650a","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"bf795ee457272965bd751f513787065bbf0a650a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"d0c238d519ed8e8343ab723bcc8f1846786e42a6":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11982a7b6834a8571852448312db4624c32990b5"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"11982a7b6834a8571852448312db4624c32990b5":["38e3b736c7ca086d61b7dbb841c905ee115490da","ef58ad5cde5ca70da71b8b5863e8c0feb7e1ca91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}