{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","commits":[{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/block/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/block/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/block/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ce24aa081e44190692bbebc8aead342ad7060e8","date":1374951664,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc.clone());\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":["ff942eedf4644036a8679a9420db95d832a185b0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc.clone());\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc.clone());\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc.clone());\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.shutdown();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc.clone());\n    iw.forceMerge(1);\n    iw.shutdown();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc.clone());\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfc45818441587d8004ff1a119fb60ac9ecb9a14","date":1401437797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.shutdown();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.shutdown();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc.clone());\n    iw.forceMerge(1);\n    iw.shutdown();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e83d728a8927f380b864e5363207a55a6f8883d","date":1401439421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.shutdown();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.shutdown();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.shutdown();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.shutdown();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.shutdown();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/TestLucene41PostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(new Lucene41RWCodec());\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene50PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/TestLucene41PostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(new Lucene41RWCodec());\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene50PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new Lucene41PostingsFormat()));\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99eb4a732d1a908f4636ace52928876136bf1896":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["2e83d728a8927f380b864e5363207a55a6f8883d"],"cfc45818441587d8004ff1a119fb60ac9ecb9a14":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6613659748fe4411a7dcf85266e55db1f95f7315":["4ce24aa081e44190692bbebc8aead342ad7060e8"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"2e83d728a8927f380b864e5363207a55a6f8883d":["cfc45818441587d8004ff1a119fb60ac9ecb9a14"],"4ce24aa081e44190692bbebc8aead342ad7060e8":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["d0ef034a4f10871667ae75181537775ddcf8ade4","99eb4a732d1a908f4636ace52928876136bf1896"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cfc45818441587d8004ff1a119fb60ac9ecb9a14":["2e83d728a8927f380b864e5363207a55a6f8883d"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"2e83d728a8927f380b864e5363207a55a6f8883d":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"4ce24aa081e44190692bbebc8aead342ad7060e8":["6613659748fe4411a7dcf85266e55db1f95f7315"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","4ce24aa081e44190692bbebc8aead342ad7060e8","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["99eb4a732d1a908f4636ace52928876136bf1896","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["cfc45818441587d8004ff1a119fb60ac9ecb9a14"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}