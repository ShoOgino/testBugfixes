{"path":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","commits":[{"id":"e4b5867a57b32674ce740e66e6a7da8db3d4dd33","date":1148163441,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  /** sets the default variables for any usefull info it finds in the config\n   * if a config option is not inthe format expected, logs an warning\n   * and ignores it..\n   */\n  public void init(NamedList args) {\n\n    params.setValues(args);\n        \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0907819f524a744c3377371e616839271317ac6","date":1157570948,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","pathOld":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","sourceNew":"  /** sets the default variables for any usefull info it finds in the config\n   * if a config option is not inthe format expected, logs an warning\n   * and ignores it..\n   */\n  public void init(NamedList args) {\n\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      Object o = args.get(\"defaults\");\n      if (o != null && o instanceof NamedList) {\n        defaults = SolrParams.toSolrParams((NamedList)o);\n      }\n    }\n  }\n\n","sourceOld":"  /** sets the default variables for any usefull info it finds in the config\n   * if a config option is not inthe format expected, logs an warning\n   * and ignores it..\n   */\n  public void init(NamedList args) {\n\n    params.setValues(args);\n        \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48f9527d950de8054d6fd72b138e94bc70fd63b4","date":1158101406,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","pathOld":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","sourceNew":"  /** sets the default variables for any usefull info it finds in the config\n   * if a config option is not inthe format expected, logs an warning\n   * and ignores it..\n   */\n  public void init(NamedList args) {\n\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      Object o = args.get(\"defaults\");\n      if (o != null && o instanceof NamedList) {\n        defaults = SolrParams.toSolrParams((NamedList)o);\n      }\n      o = args.get(\"appends\");\n      if (o != null && o instanceof NamedList) {\n        appends = SolrParams.toSolrParams((NamedList)o);\n      }\n      o = args.get(\"invariants\");\n      if (o != null && o instanceof NamedList) {\n        invariants = SolrParams.toSolrParams((NamedList)o);\n      }\n    }\n  }\n\n","sourceOld":"  /** sets the default variables for any usefull info it finds in the config\n   * if a config option is not inthe format expected, logs an warning\n   * and ignores it..\n   */\n  public void init(NamedList args) {\n\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      Object o = args.get(\"defaults\");\n      if (o != null && o instanceof NamedList) {\n        defaults = SolrParams.toSolrParams((NamedList)o);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d80013b5e260def972025c93a0b08524f9c38f49","date":1170102801,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","pathOld":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","sourceNew":"  /** sets the default variables for any usefull info it finds in the config\n   * if a config option is not inthe format expected, logs an warning\n   * and ignores it..\n   */\n  public void init(NamedList args) {\n\t// Handle an old format\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      // otherwise use the new one.\n      super.init( args );\n    }\n  }\n\n","sourceOld":"  /** sets the default variables for any usefull info it finds in the config\n   * if a config option is not inthe format expected, logs an warning\n   * and ignores it..\n   */\n  public void init(NamedList args) {\n\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      Object o = args.get(\"defaults\");\n      if (o != null && o instanceof NamedList) {\n        defaults = SolrParams.toSolrParams((NamedList)o);\n      }\n      o = args.get(\"appends\");\n      if (o != null && o instanceof NamedList) {\n        appends = SolrParams.toSolrParams((NamedList)o);\n      }\n      o = args.get(\"invariants\");\n      if (o != null && o instanceof NamedList) {\n        invariants = SolrParams.toSolrParams((NamedList)o);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"000d253c4af6dddc544b737afa1b3af2b90bd385","date":1172858140,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","pathOld":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","sourceNew":"  /** Sets the default variables for any useful info it finds in the config.\n   * If a config option is not in the format expected, logs a warning\n   * and ignores it.\n   */\n  public void init(NamedList args) {\n\t// Handle an old format\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      // otherwise use the new one.\n      super.init( args );\n    }\n  }\n\n","sourceOld":"  /** sets the default variables for any usefull info it finds in the config\n   * if a config option is not inthe format expected, logs an warning\n   * and ignores it..\n   */\n  public void init(NamedList args) {\n\t// Handle an old format\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      // otherwise use the new one.\n      super.init( args );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","date":1181791578,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/DisMaxRequestHandler#init(NamedList).mjava","pathOld":"src/java/org/apache/solr/request/DisMaxRequestHandler#init(NamedList).mjava","sourceNew":"  /** Sets the default variables for any useful info it finds in the config.\n   * If a config option is not in the format expected, logs a warning\n   * and ignores it.\n   */\n  public void init(NamedList args) {\n\t// Handle an old format\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      // otherwise use the new one.\n      super.init( args );\n    }\n  }\n\n","sourceOld":"  /** Sets the default variables for any useful info it finds in the config.\n   * If a config option is not in the format expected, logs a warning\n   * and ignores it.\n   */\n  public void init(NamedList args) {\n\t// Handle an old format\n    if (-1 == args.indexOf(\"defaults\",0)) {\n      // no explict defaults list, use all args implicitly\n      // indexOf so \"<null name=\"defaults\"/> is valid indicator of no defaults\n      defaults = SolrParams.toSolrParams(args);\n    } else {\n      // otherwise use the new one.\n      super.init( args );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["000d253c4af6dddc544b737afa1b3af2b90bd385"],"000d253c4af6dddc544b737afa1b3af2b90bd385":["d80013b5e260def972025c93a0b08524f9c38f49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c0907819f524a744c3377371e616839271317ac6":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d80013b5e260def972025c93a0b08524f9c38f49":["48f9527d950de8054d6fd72b138e94bc70fd63b4"],"48f9527d950de8054d6fd72b138e94bc70fd63b4":["c0907819f524a744c3377371e616839271317ac6"]},"commit2Childs":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["c0907819f524a744c3377371e616839271317ac6"],"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":[],"000d253c4af6dddc544b737afa1b3af2b90bd385":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0907819f524a744c3377371e616839271317ac6":["48f9527d950de8054d6fd72b138e94bc70fd63b4"],"d80013b5e260def972025c93a0b08524f9c38f49":["000d253c4af6dddc544b737afa1b3af2b90bd385"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"48f9527d950de8054d6fd72b138e94bc70fd63b4":["d80013b5e260def972025c93a0b08524f9c38f49"]},"heads":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}