{"path":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","commits":[{"id":"75ec8c9aaa10ac00b30fd4c2465409770c838f7b","date":1323020115,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#doTestDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","sourceOld":"  public void doTestDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#doTestDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","sourceOld":"  public void doTestDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#doTestDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","sourceOld":"  public void doTestDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd328b3cdb3f944c5c765d81bb246545f85932dd","date":1327857991,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    // nocommit: pretty sure this check makes zero sense TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","sourceOld":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cd232a36e691d3af7035460733f822fb1a5239a","date":1327962711,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    // TODO: pretty sure this check makes zero sense TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","sourceOld":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    // nocommit: pretty sure this check makes zero sense TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    // TODO: pretty sure this check makes zero sense TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","sourceOld":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDirectoryReader#testDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    // TODO: pretty sure this check makes zero sense TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","sourceOld":"  public void testDocument() throws IOException {\n    sis.read(dir);\n    IndexReader reader = openReader();\n    assertTrue(reader != null);\n    Document newDoc1 = reader.document(0);\n    assertTrue(newDoc1 != null);\n    assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());\n    Document newDoc2 = reader.document(1);\n    assertTrue(newDoc2 != null);\n    assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());\n    Terms vector = reader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);\n    assertNotNull(vector);\n    // TODO: pretty sure this check makes zero sense TestSegmentReader.checkNorms(reader);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd328b3cdb3f944c5c765d81bb246545f85932dd":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","75ec8c9aaa10ac00b30fd4c2465409770c838f7b"],"8cd232a36e691d3af7035460733f822fb1a5239a":["bd328b3cdb3f944c5c765d81bb246545f85932dd"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","8cd232a36e691d3af7035460733f822fb1a5239a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"bd328b3cdb3f944c5c765d81bb246545f85932dd":["8cd232a36e691d3af7035460733f822fb1a5239a"],"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["75ec8c9aaa10ac00b30fd4c2465409770c838f7b","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["bd328b3cdb3f944c5c765d81bb246545f85932dd","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a"],"8cd232a36e691d3af7035460733f822fb1a5239a":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}