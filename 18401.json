{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    savedFactory = System.getProperty(\"solr.DirectoryFactory\");\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b71270589e15ba8ded04828dc24cd7d9d5d7cdaf","date":1341697699,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // need an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    savedFactory = System.getProperty(\"solr.DirectoryFactory\");\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"22659e4b60cbbd3c13216360578240ddeca2d8b4","date":1341827398,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // need an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    savedFactory = System.getProperty(\"solr.DirectoryFactory\");\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e7f30683f53928b2fce016e6430c9795caff22","date":1341839598,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // need an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    savedFactory = System.getProperty(\"solr.DirectoryFactory\");\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // need an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    savedFactory = System.getProperty(\"solr.DirectoryFactory\");\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setup().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @Before\n  public void setup() throws Exception {\n    super.setUp();\n    // For manual testing only\n    // useFactory(null); // force an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // need an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#setup().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @Before\n  public void setup() throws Exception {\n    super.setUp();\n    // For manual testing only\n    // useFactory(null); // force an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // need an FS factory\n    master = new SolrInstance(\"master\", null);\n    master.setUp();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave = new SolrInstance(\"slave\", masterJetty.getLocalPort());\n    slave.setUp();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() {\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() {\n    useLegacyParams = rarely();\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() {\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04e7f30683f53928b2fce016e6430c9795caff22":["8be580b58bcc650d428f3f22de81cadcf51d650a","b71270589e15ba8ded04828dc24cd7d9d5d7cdaf"],"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"b71270589e15ba8ded04828dc24cd7d9d5d7cdaf":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["c26f00b574427b55127e869b935845554afde1fa"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["b71270589e15ba8ded04828dc24cd7d9d5d7cdaf"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["8be580b58bcc650d428f3f22de81cadcf51d650a","b71270589e15ba8ded04828dc24cd7d9d5d7cdaf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22659e4b60cbbd3c13216360578240ddeca2d8b4":["8be580b58bcc650d428f3f22de81cadcf51d650a","b71270589e15ba8ded04828dc24cd7d9d5d7cdaf"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["b71270589e15ba8ded04828dc24cd7d9d5d7cdaf","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"]},"commit2Childs":{"04e7f30683f53928b2fce016e6430c9795caff22":[],"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c26f00b574427b55127e869b935845554afde1fa":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"b71270589e15ba8ded04828dc24cd7d9d5d7cdaf":["04e7f30683f53928b2fce016e6430c9795caff22","d9405f486872f1e416304dfe389741f4ee2f8a4d","fe33227f6805edab2036cbb80645cc4e2d1fa424","22659e4b60cbbd3c13216360578240ddeca2d8b4","f2126b84bd093fa3d921582a109a0ee578c28126"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["04e7f30683f53928b2fce016e6430c9795caff22","b71270589e15ba8ded04828dc24cd7d9d5d7cdaf","fe33227f6805edab2036cbb80645cc4e2d1fa424","22659e4b60cbbd3c13216360578240ddeca2d8b4"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","f2126b84bd093fa3d921582a109a0ee578c28126"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"22659e4b60cbbd3c13216360578240ddeca2d8b4":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","22659e4b60cbbd3c13216360578240ddeca2d8b4","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}