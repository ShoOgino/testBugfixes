{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingTerms#getMin().mjava","commits":[{"id":"0974f33be0e2189e71f36b67f1017f4072b1a126","date":1398347867,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingTerms#getMin().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public BytesRef getMin() throws IOException {\n      BytesRef v = in.getMin();\n      assert v == null || v.isValid();\n      return v;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingTerms#getMin().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public BytesRef getMin() throws IOException {\n      BytesRef v = in.getMin();\n      assert v == null || v.isValid();\n      return v;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTerms#getMin().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingTerms#getMin().mjava","sourceNew":"    @Override\n    public BytesRef getMin() throws IOException {\n      BytesRef v = in.getMin();\n      assert v == null || v.isValid();\n      return v;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getMin() throws IOException {\n      BytesRef v = in.getMin();\n      assert v == null || v.isValid();\n      return v;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0974f33be0e2189e71f36b67f1017f4072b1a126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0974f33be0e2189e71f36b67f1017f4072b1a126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["0974f33be0e2189e71f36b67f1017f4072b1a126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"0974f33be0e2189e71f36b67f1017f4072b1a126":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0974f33be0e2189e71f36b67f1017f4072b1a126","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}