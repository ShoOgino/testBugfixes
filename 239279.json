{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hi/TestHindiStemmer#check(String,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hi/TestHindiStemmer#check(String,String).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/hi/TestHindiStemmer#check(String,String).mjava","sourceNew":"  private void check(String input, String output) throws IOException {\n    Tokenizer tokenizer = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n    TokenFilter tf = new HindiStemFilter(tokenizer);\n    assertTokenStreamContents(tf, new String[] { output });\n  }\n\n","sourceOld":"  private void check(String input, String output) throws IOException {\n    Tokenizer tokenizer = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n    TokenFilter tf = new HindiStemFilter(tokenizer);\n    assertTokenStreamContents(tf, new String[] { output });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hi/TestHindiStemmer#check(String,String).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hi/TestHindiStemmer#check(String,String).mjava","sourceNew":"  private void check(String input, String output) throws IOException {\n    Tokenizer tokenizer = whitespaceMockTokenizer(input);\n    TokenFilter tf = new HindiStemFilter(tokenizer);\n    assertTokenStreamContents(tf, new String[] { output });\n  }\n\n","sourceOld":"  private void check(String input, String output) throws IOException {\n    Tokenizer tokenizer = new MockTokenizer(new StringReader(input), MockTokenizer.WHITESPACE, false);\n    TokenFilter tf = new HindiStemFilter(tokenizer);\n    assertTokenStreamContents(tf, new String[] { output });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}