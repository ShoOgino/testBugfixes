{"path":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","sourceNew":"  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, RamUsageEstimator.NUM_BYTES_CHAR)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","sourceOld":"  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, RamUsageEstimator.NUM_BYTES_CHAR)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","sourceNew":"  @Override\n  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, RamUsageEstimator.NUM_BYTES_CHAR)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","sourceOld":"  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, RamUsageEstimator.NUM_BYTES_CHAR)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","sourceNew":"  @Override\n  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, RamUsageEstimator.NUM_BYTES_CHAR)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","sourceOld":"  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, RamUsageEstimator.NUM_BYTES_CHAR)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f226a8b088dd9c8f6ab287a77237c4aa00a238e5","date":1456187572,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","sourceNew":"  @Override\n  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, Character.BYTES)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","sourceOld":"  @Override\n  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, RamUsageEstimator.NUM_BYTES_CHAR)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl#resizeBuffer(int).mjava","sourceNew":"  @Override\n  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, Character.BYTES)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","sourceOld":"  @Override\n  public final char[] resizeBuffer(int newSize) {\n    if(termBuffer.length < newSize){\n      // Not big enough; create a new array with slight\n      // over allocation and preserve content\n      final char[] newCharBuffer = new char[ArrayUtil.oversize(newSize, RamUsageEstimator.NUM_BYTES_CHAR)];\n      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);\n      termBuffer = newCharBuffer;\n    }\n    return termBuffer;   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7530de27b87b961b51f01bd1299b7004d46e8823"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"419a8f52c6635419beb951255cacbbb281044c57":["7530de27b87b961b51f01bd1299b7004d46e8823","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["419a8f52c6635419beb951255cacbbb281044c57"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"419a8f52c6635419beb951255cacbbb281044c57":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["419a8f52c6635419beb951255cacbbb281044c57"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","419a8f52c6635419beb951255cacbbb281044c57","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}