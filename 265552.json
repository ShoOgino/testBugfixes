{"path":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfoPerCommit,SegmentInfoPerCommit).mjava","commits":[{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfoPerCommit,SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfo,SegmentInfo).mjava","sourceNew":"    public int compare(SegmentInfoPerCommit o1, SegmentInfoPerCommit o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.info.name.compareTo(o2.info.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","sourceOld":"    public int compare(SegmentInfo o1, SegmentInfo o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.name.compareTo(o2.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfoPerCommit,SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfo,SegmentInfo).mjava","sourceNew":"    public int compare(SegmentInfoPerCommit o1, SegmentInfoPerCommit o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.info.name.compareTo(o2.info.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","sourceOld":"    public int compare(SegmentInfo o1, SegmentInfo o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.name.compareTo(o2.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfoPerCommit,SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfoPerCommit,SegmentInfoPerCommit).mjava","sourceNew":"    @Override\n    public int compare(SegmentInfoPerCommit o1, SegmentInfoPerCommit o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.info.name.compareTo(o2.info.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","sourceOld":"    public int compare(SegmentInfoPerCommit o1, SegmentInfoPerCommit o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.info.name.compareTo(o2.info.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfoPerCommit,SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfoPerCommit,SegmentInfoPerCommit).mjava","sourceNew":"    @Override\n    public int compare(SegmentInfoPerCommit o1, SegmentInfoPerCommit o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.info.name.compareTo(o2.info.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","sourceOld":"    public int compare(SegmentInfoPerCommit o1, SegmentInfoPerCommit o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.info.name.compareTo(o2.info.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentCommitInfo,SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy.SegmentByteSizeDescending#compare(SegmentInfoPerCommit,SegmentInfoPerCommit).mjava","sourceNew":"    @Override\n    public int compare(SegmentCommitInfo o1, SegmentCommitInfo o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.info.name.compareTo(o2.info.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","sourceOld":"    @Override\n    public int compare(SegmentInfoPerCommit o1, SegmentInfoPerCommit o2) {\n      try {\n        final long sz1 = size(o1);\n        final long sz2 = size(o2);\n        if (sz1 > sz2) {\n          return -1;\n        } else if (sz2 > sz1) {\n          return 1;\n        } else {\n          return o1.info.name.compareTo(o2.info.name);\n        }\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","7530de27b87b961b51f01bd1299b7004d46e8823"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["7530de27b87b961b51f01bd1299b7004d46e8823"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d153abcf92dc5329d98571a8c3035df9bd80648"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}