{"path":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","sourceNew":"  /**\n   * Returns true if a newly flushed (not from merge)\n   * segment should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment);\n\n","sourceOld":"  /**\n   * Returns true if a newly flushed (not from merge)\n   * segment should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38a62612cfa4e104080d89d7751a8f1a258ac335","date":1291442315,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","sourceNew":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment) throws IOException;\n\n","sourceOld":"  /**\n   * Returns true if a newly flushed (not from merge)\n   * segment should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","date":1291833341,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","sourceNew":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment) throws IOException;\n\n","sourceOld":"  /**\n   * Returns true if a newly flushed (not from merge)\n   * segment should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","sourceNew":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment) throws IOException;\n\n","sourceOld":"  /**\n   * Returns true if a newly flushed (not from merge)\n   * segment should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfo).mjava","sourceNew":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment) throws IOException;\n\n","sourceOld":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the compound file format.\n   */\n  public abstract boolean useCompoundFile(SegmentInfos segments, SegmentInfo newSegment) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38a62612cfa4e104080d89d7751a8f1a258ac335":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38a62612cfa4e104080d89d7751a8f1a258ac335"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","38a62612cfa4e104080d89d7751a8f1a258ac335"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38a62612cfa4e104080d89d7751a8f1a258ac335":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["38a62612cfa4e104080d89d7751a8f1a258ac335","4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}