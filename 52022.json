{"path":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","commits":[{"id":"acb8905efb68758118cfb4ff3c75d2169aa0182b","date":1359637120,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","pathOld":"/dev/null","sourceNew":"  RegexpBoostProcessor(SolrParams parameters,\n                       SolrQueryRequest request,\n                       SolrQueryResponse response,\n                       UpdateRequestProcessor nextProcessor,\n                       final Map<Object, Object> sharedObjectCache) {\n    super(nextProcessor);\n    this.initParameters(parameters);\n\n    if (this.boostFilename == null) {\n      log.warn(\"Null boost filename.  Disabling processor.\");\n      setEnabled(false);\n    }\n\n    if (!isEnabled()) {\n      return;\n    }\n\n    try {\n      synchronized (sharedObjectCache) {\n        List<BoostEntry> cachedBoostEntries =\n            (List<BoostEntry>) sharedObjectCache.get(BOOST_ENTRIES_CACHE_KEY);\n\n        if (cachedBoostEntries == null) {\n          log.debug(\"No pre-cached boost entry list found, initializing new\");\n          InputStream is = request.getCore().getResourceLoader().openResource(boostFilename);\n          cachedBoostEntries = initBoostEntries(is);\n          sharedObjectCache.put(BOOST_ENTRIES_CACHE_KEY, cachedBoostEntries);\n        } else {\n          if (log.isDebugEnabled()) {\n            log.debug(\"Using cached boost entry list with \" + cachedBoostEntries.size() + \" elements.\");\n          }\n        }\n\n        this.boostEntries = cachedBoostEntries;\n      }\n    } catch (IOException ioe) {\n      log.warn(\"IOException while initializing boost entries from file \" + this.boostFilename, ioe);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","date":1359670147,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","pathOld":"/dev/null","sourceNew":"  RegexpBoostProcessor(SolrParams parameters,\n                       SolrQueryRequest request,\n                       SolrQueryResponse response,\n                       UpdateRequestProcessor nextProcessor,\n                       final Map<Object, Object> sharedObjectCache) {\n    super(nextProcessor);\n    this.initParameters(parameters);\n\n    if (this.boostFilename == null) {\n      log.warn(\"Null boost filename.  Disabling processor.\");\n      setEnabled(false);\n    }\n\n    if (!isEnabled()) {\n      return;\n    }\n\n    try {\n      synchronized (sharedObjectCache) {\n        List<BoostEntry> cachedBoostEntries =\n            (List<BoostEntry>) sharedObjectCache.get(BOOST_ENTRIES_CACHE_KEY);\n\n        if (cachedBoostEntries == null) {\n          log.debug(\"No pre-cached boost entry list found, initializing new\");\n          InputStream is = request.getCore().getResourceLoader().openResource(boostFilename);\n          cachedBoostEntries = initBoostEntries(is);\n          sharedObjectCache.put(BOOST_ENTRIES_CACHE_KEY, cachedBoostEntries);\n        } else {\n          if (log.isDebugEnabled()) {\n            log.debug(\"Using cached boost entry list with \" + cachedBoostEntries.size() + \" elements.\");\n          }\n        }\n\n        this.boostEntries = cachedBoostEntries;\n      }\n    } catch (IOException ioe) {\n      log.warn(\"IOException while initializing boost entries from file \" + this.boostFilename, ioe);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","sourceNew":"  RegexpBoostProcessor(SolrParams parameters,\n                       SolrQueryRequest request,\n                       SolrQueryResponse response,\n                       UpdateRequestProcessor nextProcessor,\n                       final Map<Object, Object> sharedObjectCache) {\n    super(nextProcessor);\n    this.initParameters(parameters);\n\n    if (this.boostFilename == null) {\n      log.warn(\"Null boost filename.  Disabling processor.\");\n      setEnabled(false);\n    }\n\n    if (!isEnabled()) {\n      return;\n    }\n\n    try {\n      synchronized (sharedObjectCache) {\n        List<BoostEntry> cachedBoostEntries =\n            (List<BoostEntry>) sharedObjectCache.get(BOOST_ENTRIES_CACHE_KEY);\n\n        if (cachedBoostEntries == null) {\n          log.debug(\"No pre-cached boost entry list found, initializing new\");\n          InputStream is = request.getCore().getResourceLoader().openResource(boostFilename);\n          cachedBoostEntries = initBoostEntries(is);\n          sharedObjectCache.put(BOOST_ENTRIES_CACHE_KEY, cachedBoostEntries);\n        } else {\n          if (log.isDebugEnabled()) {\n            log.debug(\"Using cached boost entry list with \" + cachedBoostEntries.size() + \" elements.\");\n          }\n        }\n\n        this.boostEntries = cachedBoostEntries;\n      }\n    } catch (IOException ioe) {\n      log.warn(\"IOException while initializing boost entries from file {}\", this.boostFilename, ioe);\n    }\n  }\n\n","sourceOld":"  RegexpBoostProcessor(SolrParams parameters,\n                       SolrQueryRequest request,\n                       SolrQueryResponse response,\n                       UpdateRequestProcessor nextProcessor,\n                       final Map<Object, Object> sharedObjectCache) {\n    super(nextProcessor);\n    this.initParameters(parameters);\n\n    if (this.boostFilename == null) {\n      log.warn(\"Null boost filename.  Disabling processor.\");\n      setEnabled(false);\n    }\n\n    if (!isEnabled()) {\n      return;\n    }\n\n    try {\n      synchronized (sharedObjectCache) {\n        List<BoostEntry> cachedBoostEntries =\n            (List<BoostEntry>) sharedObjectCache.get(BOOST_ENTRIES_CACHE_KEY);\n\n        if (cachedBoostEntries == null) {\n          log.debug(\"No pre-cached boost entry list found, initializing new\");\n          InputStream is = request.getCore().getResourceLoader().openResource(boostFilename);\n          cachedBoostEntries = initBoostEntries(is);\n          sharedObjectCache.put(BOOST_ENTRIES_CACHE_KEY, cachedBoostEntries);\n        } else {\n          if (log.isDebugEnabled()) {\n            log.debug(\"Using cached boost entry list with \" + cachedBoostEntries.size() + \" elements.\");\n          }\n        }\n\n        this.boostEntries = cachedBoostEntries;\n      }\n    } catch (IOException ioe) {\n      log.warn(\"IOException while initializing boost entries from file \" + this.boostFilename, ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","sourceNew":"  RegexpBoostProcessor(SolrParams parameters,\n                       SolrQueryRequest request,\n                       SolrQueryResponse response,\n                       UpdateRequestProcessor nextProcessor,\n                       final Map<Object, Object> sharedObjectCache) {\n    super(nextProcessor);\n    this.initParameters(parameters);\n\n    if (this.boostFilename == null) {\n      log.warn(\"Null boost filename.  Disabling processor.\");\n      setEnabled(false);\n    }\n\n    if (!isEnabled()) {\n      return;\n    }\n\n    try {\n      synchronized (sharedObjectCache) {\n        List<BoostEntry> cachedBoostEntries =\n            (List<BoostEntry>) sharedObjectCache.get(BOOST_ENTRIES_CACHE_KEY);\n\n        if (cachedBoostEntries == null) {\n          log.debug(\"No pre-cached boost entry list found, initializing new\");\n          InputStream is = request.getCore().getResourceLoader().openResource(boostFilename);\n          cachedBoostEntries = initBoostEntries(is);\n          sharedObjectCache.put(BOOST_ENTRIES_CACHE_KEY, cachedBoostEntries);\n        } else {\n          if (log.isDebugEnabled()) {\n            log.debug(\"Using cached boost entry list with {} elements\", cachedBoostEntries.size());\n          }\n        }\n\n        this.boostEntries = cachedBoostEntries;\n      }\n    } catch (IOException ioe) {\n      log.warn(\"IOException while initializing boost entries from file {}\", this.boostFilename, ioe);\n    }\n  }\n\n","sourceOld":"  RegexpBoostProcessor(SolrParams parameters,\n                       SolrQueryRequest request,\n                       SolrQueryResponse response,\n                       UpdateRequestProcessor nextProcessor,\n                       final Map<Object, Object> sharedObjectCache) {\n    super(nextProcessor);\n    this.initParameters(parameters);\n\n    if (this.boostFilename == null) {\n      log.warn(\"Null boost filename.  Disabling processor.\");\n      setEnabled(false);\n    }\n\n    if (!isEnabled()) {\n      return;\n    }\n\n    try {\n      synchronized (sharedObjectCache) {\n        List<BoostEntry> cachedBoostEntries =\n            (List<BoostEntry>) sharedObjectCache.get(BOOST_ENTRIES_CACHE_KEY);\n\n        if (cachedBoostEntries == null) {\n          log.debug(\"No pre-cached boost entry list found, initializing new\");\n          InputStream is = request.getCore().getResourceLoader().openResource(boostFilename);\n          cachedBoostEntries = initBoostEntries(is);\n          sharedObjectCache.put(BOOST_ENTRIES_CACHE_KEY, cachedBoostEntries);\n        } else {\n          if (log.isDebugEnabled()) {\n            log.debug(\"Using cached boost entry list with \" + cachedBoostEntries.size() + \" elements.\");\n          }\n        }\n\n        this.boostEntries = cachedBoostEntries;\n      }\n    } catch (IOException ioe) {\n      log.warn(\"IOException while initializing boost entries from file {}\", this.boostFilename, ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"018a36ff4088cb91ab12cbe44f696d81d1fadd77","date":1591657414,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/RegexpBoostProcessor#RegexpBoostProcessor(SolrParams,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,Map[Object,Object]).mjava","sourceNew":"  RegexpBoostProcessor(SolrParams parameters,\n                       SolrQueryRequest request,\n                       SolrQueryResponse response,\n                       UpdateRequestProcessor nextProcessor,\n                       final Map<Object, Object> sharedObjectCache) {\n    super(nextProcessor);\n    this.initParameters(parameters);\n\n    if (this.boostFilename == null) {\n      log.warn(\"Null boost filename.  Disabling processor.\");\n      setEnabled(false);\n    }\n\n    if (!isEnabled()) {\n      return;\n    }\n\n    try {\n      synchronized (sharedObjectCache) {\n        @SuppressWarnings({\"unchecked\"})\n        List<BoostEntry> cachedBoostEntries =\n            (List<BoostEntry>) sharedObjectCache.get(BOOST_ENTRIES_CACHE_KEY);\n\n        if (cachedBoostEntries == null) {\n          log.debug(\"No pre-cached boost entry list found, initializing new\");\n          InputStream is = request.getCore().getResourceLoader().openResource(boostFilename);\n          cachedBoostEntries = initBoostEntries(is);\n          sharedObjectCache.put(BOOST_ENTRIES_CACHE_KEY, cachedBoostEntries);\n        } else {\n          if (log.isDebugEnabled()) {\n            log.debug(\"Using cached boost entry list with {} elements\", cachedBoostEntries.size());\n          }\n        }\n\n        this.boostEntries = cachedBoostEntries;\n      }\n    } catch (IOException ioe) {\n      log.warn(\"IOException while initializing boost entries from file {}\", this.boostFilename, ioe);\n    }\n  }\n\n","sourceOld":"  RegexpBoostProcessor(SolrParams parameters,\n                       SolrQueryRequest request,\n                       SolrQueryResponse response,\n                       UpdateRequestProcessor nextProcessor,\n                       final Map<Object, Object> sharedObjectCache) {\n    super(nextProcessor);\n    this.initParameters(parameters);\n\n    if (this.boostFilename == null) {\n      log.warn(\"Null boost filename.  Disabling processor.\");\n      setEnabled(false);\n    }\n\n    if (!isEnabled()) {\n      return;\n    }\n\n    try {\n      synchronized (sharedObjectCache) {\n        List<BoostEntry> cachedBoostEntries =\n            (List<BoostEntry>) sharedObjectCache.get(BOOST_ENTRIES_CACHE_KEY);\n\n        if (cachedBoostEntries == null) {\n          log.debug(\"No pre-cached boost entry list found, initializing new\");\n          InputStream is = request.getCore().getResourceLoader().openResource(boostFilename);\n          cachedBoostEntries = initBoostEntries(is);\n          sharedObjectCache.put(BOOST_ENTRIES_CACHE_KEY, cachedBoostEntries);\n        } else {\n          if (log.isDebugEnabled()) {\n            log.debug(\"Using cached boost entry list with {} elements\", cachedBoostEntries.size());\n          }\n        }\n\n        this.boostEntries = cachedBoostEntries;\n      }\n    } catch (IOException ioe) {\n      log.warn(\"IOException while initializing boost entries from file {}\", this.boostFilename, ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","acb8905efb68758118cfb4ff3c75d2169aa0182b"],"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["575e66bd4b2349209027f6801184da7fc3cba13f"],"740d649f013f07efbeb73ca854f106c60166e7c0":["acb8905efb68758118cfb4ff3c75d2169aa0182b"],"acb8905efb68758118cfb4ff3c75d2169aa0182b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["740d649f013f07efbeb73ca854f106c60166e7c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"]},"commit2Childs":{"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86":[],"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"740d649f013f07efbeb73ca854f106c60166e7c0":["575e66bd4b2349209027f6801184da7fc3cba13f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","acb8905efb68758118cfb4ff3c75d2169aa0182b"],"acb8905efb68758118cfb4ff3c75d2169aa0182b":["b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","740d649f013f07efbeb73ca854f106c60166e7c0"],"575e66bd4b2349209027f6801184da7fc3cba13f":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}