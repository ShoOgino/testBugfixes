{"path":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","commits":[{"id":"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","date":1379624229,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings(Comparator[BytesRef]).mjava","sourceNew":"  /** Collapse the hash table & sort in-place. */\n  public int[] sortPostings() {\n    return bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n  }\n\n","sourceOld":"  /** Collapse the hash table & sort in-place. */\n  public int[] sortPostings(Comparator<BytesRef> termComp) {\n   return bytesHash.sort(termComp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table & sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","sourceOld":"  /** Collapse the hash table & sort in-place. */\n  public int[] sortPostings() {\n    return bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table & sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","sourceOld":"  /** Collapse the hash table & sort in-place. */\n  public int[] sortPostings() {\n    return bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table & sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","sourceOld":"  /** Collapse the hash table & sort in-place. */\n  public int[] sortPostings() {\n    return bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","sourceOld":"  /** Collapse the hash table & sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99761ac3b0c4136140f9cd2d081b80934bba16fa","date":1456263279,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    long t0 = System.nanoTime();\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    // nocommit\n    System.out.println(\"MKM: field \" + fieldInfo.name + \" has \" + bytesHash.size() + \" unique terms \" + ((System.nanoTime()-t0)/1000000.0) + \" msec to sort\");\n    return sortedTermIDs;\n  }\n\n","sourceOld":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca03930518f11c6f5a16b14477016599ddd32ff7","date":1456265951,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","sourceOld":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    long t0 = System.nanoTime();\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    // nocommit\n    System.out.println(\"MKM: field \" + fieldInfo.name + \" has \" + bytesHash.size() + \" unique terms \" + ((System.nanoTime()-t0)/1000000.0) + \" msec to sort\");\n    return sortedTermIDs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78cf5dd35bc9be11f14b0c5b5806b05d3f529f91","date":1456586780,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort();\n    return sortedTermIDs;\n  }\n\n","sourceOld":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort();\n    return sortedTermIDs;\n  }\n\n","sourceOld":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort(BytesRef.getUTF8SortedAsUnicodeComparator());\n    return sortedTermIDs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3cc3fa1ecad75b99ec55169e44628808f9866ad","date":1592311545,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortTerms().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#sortPostings().mjava","sourceNew":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results\n   * This method must not be called twice unless {@link #reset()}\n   * or {@link #reinitHash()} was called. */\n  final void sortTerms() {\n    assert sortedTermIDs == null;\n    sortedTermIDs = bytesHash.sort();\n  }\n\n","sourceOld":"  /** Collapse the hash table and sort in-place; also sets\n   * this.sortedTermIDs to the results */\n  public int[] sortPostings() {\n    sortedTermIDs = bytesHash.sort();\n    return sortedTermIDs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","52c7e49be259508735752fba88085255014a6ecf"],"b1eb427f2c6beed80d1724555fc1db003ccf3030":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"af2638813028b254a88b418ebeafb541afb49653":["b1eb427f2c6beed80d1724555fc1db003ccf3030","78cf5dd35bc9be11f14b0c5b5806b05d3f529f91"],"ca03930518f11c6f5a16b14477016599ddd32ff7":["99761ac3b0c4136140f9cd2d081b80934bba16fa"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","3394716f52b34ab259ad5247e7595d9f9db6e935"],"78cf5dd35bc9be11f14b0c5b5806b05d3f529f91":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"99761ac3b0c4136140f9cd2d081b80934bba16fa":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"52c7e49be259508735752fba88085255014a6ecf":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["b1eb427f2c6beed80d1724555fc1db003ccf3030","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe"],"b1eb427f2c6beed80d1724555fc1db003ccf3030":["af2638813028b254a88b418ebeafb541afb49653","78cf5dd35bc9be11f14b0c5b5806b05d3f529f91","99761ac3b0c4136140f9cd2d081b80934bba16fa"],"af2638813028b254a88b418ebeafb541afb49653":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"],"ca03930518f11c6f5a16b14477016599ddd32ff7":[],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"78cf5dd35bc9be11f14b0c5b5806b05d3f529f91":["af2638813028b254a88b418ebeafb541afb49653"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"99761ac3b0c4136140f9cd2d081b80934bba16fa":["ca03930518f11c6f5a16b14477016599ddd32ff7"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ca03930518f11c6f5a16b14477016599ddd32ff7","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}