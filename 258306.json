{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternCaptureGroupTokenFilter#incrementToken().mjava","commits":[{"id":"40e1523ffd1c98c46180e96f5e5e3612267d09d0","date":1366798864,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternCaptureGroupTokenFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n\n    if (currentMatcher != -1 && nextCapture()) {\n      assert state != null;\n      clearAttributes();\n      restoreState(state);\n      final int start = matchers[currentMatcher]\n          .start(currentGroup[currentMatcher]);\n      final int end = matchers[currentMatcher]\n          .end(currentGroup[currentMatcher]);\n\n      posAttr.setPositionIncrement(0);\n      charTermAttr.copyBuffer(spare.chars, start, end - start);\n      currentGroup[currentMatcher]++;\n      return true;\n    }\n\n    if (!input.incrementToken()) {\n      return false;\n    }\n\n    char[] buffer = charTermAttr.buffer();\n    int length = charTermAttr.length();\n    spare.copyChars(buffer, 0, length);\n    state = captureState();\n\n    for (int i = 0; i < matchers.length; i++) {\n      matchers[i].reset(spare);\n      currentGroup[i] = -1;\n    }\n\n    if (preserveOriginal) {\n      currentMatcher = 0;\n    } else if (nextCapture()) {\n      final int start = matchers[currentMatcher]\n          .start(currentGroup[currentMatcher]);\n      final int end = matchers[currentMatcher]\n          .end(currentGroup[currentMatcher]);\n\n      // if we start at 0 we can simply set the length and save the copy\n      if (start == 0) {\n        charTermAttr.setLength(end);\n      } else {\n        charTermAttr.copyBuffer(spare.chars, start, end - start);\n      }\n      currentGroup[currentMatcher]++;\n    }\n    return true;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternCaptureGroupTokenFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternCaptureGroupTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n\n    if (currentMatcher != -1 && nextCapture()) {\n      assert state != null;\n      clearAttributes();\n      restoreState(state);\n      final int start = matchers[currentMatcher]\n          .start(currentGroup[currentMatcher]);\n      final int end = matchers[currentMatcher]\n          .end(currentGroup[currentMatcher]);\n\n      posAttr.setPositionIncrement(0);\n      charTermAttr.copyBuffer(spare.chars(), start, end - start);\n      currentGroup[currentMatcher]++;\n      return true;\n    }\n\n    if (!input.incrementToken()) {\n      return false;\n    }\n\n    char[] buffer = charTermAttr.buffer();\n    int length = charTermAttr.length();\n    spare.copyChars(buffer, 0, length);\n    state = captureState();\n\n    for (int i = 0; i < matchers.length; i++) {\n      matchers[i].reset(spare.get());\n      currentGroup[i] = -1;\n    }\n\n    if (preserveOriginal) {\n      currentMatcher = 0;\n    } else if (nextCapture()) {\n      final int start = matchers[currentMatcher]\n          .start(currentGroup[currentMatcher]);\n      final int end = matchers[currentMatcher]\n          .end(currentGroup[currentMatcher]);\n\n      // if we start at 0 we can simply set the length and save the copy\n      if (start == 0) {\n        charTermAttr.setLength(end);\n      } else {\n        charTermAttr.copyBuffer(spare.chars(), start, end - start);\n      }\n      currentGroup[currentMatcher]++;\n    }\n    return true;\n\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n\n    if (currentMatcher != -1 && nextCapture()) {\n      assert state != null;\n      clearAttributes();\n      restoreState(state);\n      final int start = matchers[currentMatcher]\n          .start(currentGroup[currentMatcher]);\n      final int end = matchers[currentMatcher]\n          .end(currentGroup[currentMatcher]);\n\n      posAttr.setPositionIncrement(0);\n      charTermAttr.copyBuffer(spare.chars, start, end - start);\n      currentGroup[currentMatcher]++;\n      return true;\n    }\n\n    if (!input.incrementToken()) {\n      return false;\n    }\n\n    char[] buffer = charTermAttr.buffer();\n    int length = charTermAttr.length();\n    spare.copyChars(buffer, 0, length);\n    state = captureState();\n\n    for (int i = 0; i < matchers.length; i++) {\n      matchers[i].reset(spare);\n      currentGroup[i] = -1;\n    }\n\n    if (preserveOriginal) {\n      currentMatcher = 0;\n    } else if (nextCapture()) {\n      final int start = matchers[currentMatcher]\n          .start(currentGroup[currentMatcher]);\n      final int end = matchers[currentMatcher]\n          .end(currentGroup[currentMatcher]);\n\n      // if we start at 0 we can simply set the length and save the copy\n      if (start == 0) {\n        charTermAttr.setLength(end);\n      } else {\n        charTermAttr.copyBuffer(spare.chars, start, end - start);\n      }\n      currentGroup[currentMatcher]++;\n    }\n    return true;\n\n  }\n\n","bugFix":["40e1523ffd1c98c46180e96f5e5e3612267d09d0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["40e1523ffd1c98c46180e96f5e5e3612267d09d0"],"40e1523ffd1c98c46180e96f5e5e3612267d09d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40e1523ffd1c98c46180e96f5e5e3612267d09d0"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"40e1523ffd1c98c46180e96f5e5e3612267d09d0":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}