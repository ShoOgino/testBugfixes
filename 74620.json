{"path":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","commits":[{"id":"bb3e075eaa5788b2762ec235bf72b069cefe3f50","date":1548244981,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void xSolrAuthDataHeader() {\n    testConfig.put(\"adminUiScope\", \"solr:admin\");\n    testConfig.put(\"authorizationEndpoint\", \"http://acmepaymentscorp/oauth/auz/authorize\");\n    testConfig.put(\"clientId\", \"solr-cluster\");\n    plugin.init(testConfig);\n    String headerBase64 = plugin.generateAuthDataHeader();\n    String headerJson = new String(Base64.base64ToByteArray(headerBase64), StandardCharsets.UTF_8);\n    Map<String,String> parsed = (Map<String, String>) JSON.parse(headerJson);\n    assertEquals(\"solr:admin\", parsed.get(\"scope\"));\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", parsed.get(\"authorizationEndpoint\"));\n    assertEquals(\"solr-cluster\", parsed.get(\"client_id\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void xSolrAuthDataHeader() {\n    testConfig.put(\"adminUiScope\", \"solr:admin\");\n    testConfig.put(\"authorizationEndpoint\", \"http://acmepaymentscorp/oauth/auz/authorize\");\n    testConfig.put(\"clientId\", \"solr-cluster\");\n    plugin.init(testConfig);\n    String headerBase64 = plugin.generateAuthDataHeader();\n    String headerJson = new String(Base64.base64ToByteArray(headerBase64), StandardCharsets.UTF_8);\n    Map<String,String> parsed = (Map<String, String>) JSON.parse(headerJson);\n    assertEquals(\"solr:admin\", parsed.get(\"scope\"));\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", parsed.get(\"authorizationEndpoint\"));\n    assertEquals(\"solr-cluster\", parsed.get(\"client_id\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99b97f030e743d8dd4d7685202f71718d7e5af22","date":1548957620,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","sourceNew":"  @Test\n  public void xSolrAuthDataHeader() {\n    testConfig.put(\"adminUiScope\", \"solr:admin\");\n    testConfig.put(\"authorizationEndpoint\", \"http://acmepaymentscorp/oauth/auz/authorize\");\n    testConfig.put(\"clientId\", \"solr-cluster\");\n    plugin.init(testConfig);\n    String headerBase64 = plugin.generateAuthDataHeader();\n    String headerJson = new String(Base64.base64ToByteArray(headerBase64), StandardCharsets.UTF_8);\n    Map<String,String> parsed = (Map<String, String>) Utils.fromJSONString(headerJson);\n    assertEquals(\"solr:admin\", parsed.get(\"scope\"));\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", parsed.get(\"authorizationEndpoint\"));\n    assertEquals(\"solr-cluster\", parsed.get(\"client_id\"));\n  }\n\n","sourceOld":"  @Test\n  public void xSolrAuthDataHeader() {\n    testConfig.put(\"adminUiScope\", \"solr:admin\");\n    testConfig.put(\"authorizationEndpoint\", \"http://acmepaymentscorp/oauth/auz/authorize\");\n    testConfig.put(\"clientId\", \"solr-cluster\");\n    plugin.init(testConfig);\n    String headerBase64 = plugin.generateAuthDataHeader();\n    String headerJson = new String(Base64.base64ToByteArray(headerBase64), StandardCharsets.UTF_8);\n    Map<String,String> parsed = (Map<String, String>) JSON.parse(headerJson);\n    assertEquals(\"solr:admin\", parsed.get(\"scope\"));\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", parsed.get(\"authorizationEndpoint\"));\n    assertEquals(\"solr-cluster\", parsed.get(\"client_id\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b74c124d68d8e306d6ef09624f3cd053b8a2fd","date":1548981962,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","sourceNew":"  @Test\n  public void xSolrAuthDataHeader() {\n    testConfig.put(\"adminUiScope\", \"solr:admin\");\n    testConfig.put(\"authorizationEndpoint\", \"http://acmepaymentscorp/oauth/auz/authorize\");\n    testConfig.put(\"clientId\", \"solr-cluster\");\n    plugin.init(testConfig);\n    String headerBase64 = plugin.generateAuthDataHeader();\n    String headerJson = new String(Base64.base64ToByteArray(headerBase64), StandardCharsets.UTF_8);\n    Map<String,String> parsed = (Map<String, String>) JSON.parse(headerJson);\n    assertEquals(\"solr:admin\", parsed.get(\"scope\"));\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", parsed.get(\"authorizationEndpoint\"));\n    assertEquals(\"solr-cluster\", parsed.get(\"client_id\"));\n  }\n\n","sourceOld":"  @Test\n  public void xSolrAuthDataHeader() {\n    testConfig.put(\"adminUiScope\", \"solr:admin\");\n    testConfig.put(\"authorizationEndpoint\", \"http://acmepaymentscorp/oauth/auz/authorize\");\n    testConfig.put(\"clientId\", \"solr-cluster\");\n    plugin.init(testConfig);\n    String headerBase64 = plugin.generateAuthDataHeader();\n    String headerJson = new String(Base64.base64ToByteArray(headerBase64), StandardCharsets.UTF_8);\n    Map<String,String> parsed = (Map<String, String>) Utils.fromJSONString(headerJson);\n    assertEquals(\"solr:admin\", parsed.get(\"scope\"));\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", parsed.get(\"authorizationEndpoint\"));\n    assertEquals(\"solr-cluster\", parsed.get(\"client_id\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#xSolrAuthDataHeader().mjava","sourceNew":"  @Test\n  public void xSolrAuthDataHeader() {\n    testConfig.put(\"adminUiScope\", \"solr:admin\");\n    testConfig.put(\"authorizationEndpoint\", \"http://acmepaymentscorp/oauth/auz/authorize\");\n    testConfig.put(\"clientId\", \"solr-cluster\");\n    plugin.init(testConfig);\n    String headerBase64 = plugin.generateAuthDataHeader();\n    String headerJson = new String(Base64.base64ToByteArray(headerBase64), StandardCharsets.UTF_8);\n    Map<String,String> parsed = (Map<String, String>) Utils.fromJSONString(headerJson);\n    assertEquals(\"solr:admin\", parsed.get(\"scope\"));\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", parsed.get(\"authorizationEndpoint\"));\n    assertEquals(\"solr-cluster\", parsed.get(\"client_id\"));\n  }\n\n","sourceOld":"  @Test\n  public void xSolrAuthDataHeader() {\n    testConfig.put(\"adminUiScope\", \"solr:admin\");\n    testConfig.put(\"authorizationEndpoint\", \"http://acmepaymentscorp/oauth/auz/authorize\");\n    testConfig.put(\"clientId\", \"solr-cluster\");\n    plugin.init(testConfig);\n    String headerBase64 = plugin.generateAuthDataHeader();\n    String headerJson = new String(Base64.base64ToByteArray(headerBase64), StandardCharsets.UTF_8);\n    Map<String,String> parsed = (Map<String, String>) JSON.parse(headerJson);\n    assertEquals(\"solr:admin\", parsed.get(\"scope\"));\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", parsed.get(\"authorizationEndpoint\"));\n    assertEquals(\"solr-cluster\", parsed.get(\"client_id\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["bb3e075eaa5788b2762ec235bf72b069cefe3f50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb3e075eaa5788b2762ec235bf72b069cefe3f50"]},"commit2Childs":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["99b97f030e743d8dd4d7685202f71718d7e5af22","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}