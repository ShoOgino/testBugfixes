{"path":"lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.RandomApproximationScorer#advanceShallow(int).mjava","commits":[{"id":"523cc6563c99a55527ef7993efc5413c6648852d","date":1518704038,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.RandomApproximationScorer#advanceShallow(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int advanceShallow(int target) throws IOException {\n      return scorer.advanceShallow(target);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd80b885e3e9bdc61935e784f634562d13b81979","date":1533736198,"type":3,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.RandomApproximationScorer#advanceShallow(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.RandomApproximationScorer#advanceShallow(int).mjava","sourceNew":"    @Override\n    public int advanceShallow(int target) throws IOException {\n      if (scorer.docID() > target && twoPhaseView.approximation.docID() != scorer.docID()) {\n        // The random approximation can return doc ids that are not present in the underlying\n        // scorer. These additional doc ids are always *before* the next matching doc so we\n        // cannot use them to shallow advance the main scorer which is already ahead.\n        target = scorer.docID();\n      }\n      return scorer.advanceShallow(target);\n    }\n\n","sourceOld":"    @Override\n    public int advanceShallow(int target) throws IOException {\n      return scorer.advanceShallow(target);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"523cc6563c99a55527ef7993efc5413c6648852d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd80b885e3e9bdc61935e784f634562d13b81979":["523cc6563c99a55527ef7993efc5413c6648852d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd80b885e3e9bdc61935e784f634562d13b81979"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["523cc6563c99a55527ef7993efc5413c6648852d"],"523cc6563c99a55527ef7993efc5413c6648852d":["fd80b885e3e9bdc61935e784f634562d13b81979"],"fd80b885e3e9bdc61935e784f634562d13b81979":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}