{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testComplementStream().mjava","commits":[{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testComplementStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testComplementStream().mjava","sourceNew":"  @Test\n  public void testComplementStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"setA\", \"a_i\", \"0\")\n        .add(id, \"2\", \"a_s\", \"setA\", \"a_i\", \"1\")\n        .add(id, \"3\", \"a_s\", \"setA\", \"a_i\", \"2\")\n        .add(id, \"4\", \"a_s\", \"setA\", \"a_i\", \"3\")\n\n        .add(id, \"5\", \"a_s\", \"setB\", \"a_i\", \"2\")\n        .add(id, \"6\", \"a_s\", \"setB\", \"a_i\", \"3\")\n        .add(id, \"9\", \"a_s\", \"setB\", \"a_i\", \"5\")\n\n        .add(id, \"7\", \"a_s\", \"setAB\", \"a_i\", \"0\")\n        .add(id, \"8\", \"a_s\", \"setAB\", \"a_i\", \"6\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    \n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"search\", CloudSolrStream.class)\n      .withFunctionName(\"complement\", ComplementStream.class);\n\n    try {\n      // basic\n      expression = StreamExpressionParser.parse(\"complement(\"\n          + \"search(collection1, q=a_s:(setA || setAB), fl=\\\"id,a_s,a_i\\\", sort=\\\"a_i asc, a_s asc\\\"),\"\n          + \"search(collection1, q=a_s:(setB || setAB), fl=\\\"id,a_s,a_i\\\", sort=\\\"a_i asc\\\"),\"\n          + \"on=\\\"a_i\\\")\");\n      stream = new ComplementStream(expression, factory);\n      stream.setStreamContext(streamContext);\n      tuples = getTuples(stream);\n\n      assert (tuples.size() == 1);\n      assertOrder(tuples, 2);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testComplementStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"setA\", \"a_i\", \"0\")\n        .add(id, \"2\", \"a_s\", \"setA\", \"a_i\", \"1\")\n        .add(id, \"3\", \"a_s\", \"setA\", \"a_i\", \"2\")\n        .add(id, \"4\", \"a_s\", \"setA\", \"a_i\", \"3\")\n\n        .add(id, \"5\", \"a_s\", \"setB\", \"a_i\", \"2\")\n        .add(id, \"6\", \"a_s\", \"setB\", \"a_i\", \"3\")\n        .add(id, \"9\", \"a_s\", \"setB\", \"a_i\", \"5\")\n\n        .add(id, \"7\", \"a_s\", \"setAB\", \"a_i\", \"0\")\n        .add(id, \"8\", \"a_s\", \"setAB\", \"a_i\", \"6\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    \n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"search\", CloudSolrStream.class)\n      .withFunctionName(\"complement\", ComplementStream.class);\n\n    try {\n      // basic\n      expression = StreamExpressionParser.parse(\"complement(\"\n          + \"search(collection1, q=a_s:(setA || setAB), fl=\\\"id,a_s,a_i\\\", sort=\\\"a_i asc, a_s asc\\\"),\"\n          + \"search(collection1, q=a_s:(setB || setAB), fl=\\\"id,a_s,a_i\\\", sort=\\\"a_i asc\\\"),\"\n          + \"on=\\\"a_i\\\")\");\n      stream = new ComplementStream(expression, factory);\n      stream.setStreamContext(streamContext);\n      tuples = getTuples(stream);\n\n      assert (tuples.size() == 1);\n      assertOrder(tuples, 2);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}