{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts2#indexDocsWithFacetsAndSomeTerms(IndexWriter,TaxonomyWriter,Map[String,Integer]).mjava","commits":[{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts2#indexDocsWithFacetsAndSomeTerms(IndexWriter,TaxonomyWriter,Map[String,Integer]).mjava","pathOld":"/dev/null","sourceNew":"  private static void indexDocsWithFacetsAndSomeTerms(IndexWriter indexWriter, TaxonomyWriter taxoWriter, \n                                                      Map<String,Integer> expectedCounts) throws IOException {\n    Random random = random();\n    int numDocs = atLeast(random, 2);\n    FacetsConfig config = getConfig(taxoWriter);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      boolean hasContent = random.nextBoolean();\n      if (hasContent) {\n        addField(doc);\n      }\n      addFacets(doc, config, hasContent);\n      indexWriter.addDocument(config.build(doc));\n    }\n    indexWriter.commit(); // flush a segment\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts2#indexDocsWithFacetsAndSomeTerms(IndexWriter,TaxonomyWriter,Map[String,Integer]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts2#indexDocsWithFacetsAndSomeTerms(IndexWriter,TaxonomyWriter,Map[String,Integer]).mjava","sourceNew":"  private static void indexDocsWithFacetsAndSomeTerms(IndexWriter indexWriter, TaxonomyWriter taxoWriter, \n                                                      Map<String,Integer> expectedCounts) throws IOException {\n    Random random = random();\n    int numDocs = atLeast(random, 2);\n    FacetsConfig config = getConfig(taxoWriter);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      boolean hasContent = random.nextBoolean();\n      if (hasContent) {\n        addField(doc);\n      }\n      addFacets(doc, config, hasContent);\n      indexWriter.addDocument(config.build(doc));\n    }\n    indexWriter.commit(); // flush a segment\n  }\n\n","sourceOld":"  private static void indexDocsWithFacetsAndSomeTerms(IndexWriter indexWriter, TaxonomyWriter taxoWriter, \n                                                      Map<String,Integer> expectedCounts) throws IOException {\n    Random random = random();\n    int numDocs = atLeast(random, 2);\n    FacetsConfig config = getConfig(taxoWriter);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      boolean hasContent = random.nextBoolean();\n      if (hasContent) {\n        addField(doc);\n      }\n      addFacets(doc, config, hasContent);\n      indexWriter.addDocument(config.build(doc));\n    }\n    indexWriter.commit(); // flush a segment\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d33e19a97046248623a7591aeaa6547233fd15e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}