{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","commits":[{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.copyFrom(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.copyFrom(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c447e0427ce53ca53d708ce8b64eaf8cfd372591","date":1359552077,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.readBytes(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.copyFrom(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2b3cc2f5fa15326949acef967166394fb5b4a5e8","date":1359739263,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      assert spare.offset == 0;\n      spare.grow(length);\n      spare.length = length;\n      pool.readBytes(offset, spare.bytes, spare.offset, spare.length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      pool.readBytes(spare, offset, length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      assert spare.offset == 0;\n      spare.grow(length);\n      spare.length = length;\n      pool.readBytes(offset, spare.bytes, spare.offset, spare.length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a4e3a7c47e11ff0c156c646c37d20af7249370d2","date":1363813308,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param index the elements index to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int index) {\n    if (lastElement > index) {\n      int offset = offsets[index];\n      int length = index == lastElement - 1 ? currentOffset - offset\n          : offsets[index + 1] - offset;\n      assert spare.offset == 0;\n      spare.grow(length);\n      spare.length = length;\n      pool.readBytes(offset, spare.bytes, spare.offset, spare.length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + index\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param ord the elements ordinal to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int ord) {\n    if (lastElement > ord) {\n      int offset = offsets[ord];\n      int length = ord == lastElement - 1 ? currentOffset - offset\n          : offsets[ord + 1] - offset;\n      assert spare.offset == 0;\n      spare.grow(length);\n      spare.length = length;\n      pool.readBytes(offset, spare.bytes, spare.offset, spare.length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + ord\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63","dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#get(BytesRef,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param index the elements index to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int index) {\n    if (lastElement > index) {\n      int offset = offsets[index];\n      int length = index == lastElement - 1 ? currentOffset - offset\n          : offsets[index + 1] - offset;\n      assert spare.offset == 0;\n      spare.grow(length);\n      spare.length = length;\n      pool.readBytes(offset, spare.bytes, spare.offset, spare.length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + index\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param index the elements index to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int index) {\n    if (lastElement > index) {\n      int offset = offsets[index];\n      int length = index == lastElement - 1 ? currentOffset - offset\n          : offsets[index + 1] - offset;\n      assert spare.offset == 0;\n      spare.grow(length);\n      spare.length = length;\n      pool.readBytes(offset, spare.bytes, spare.offset, spare.length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + index\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#get(BytesRef,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#get(BytesRef,int).mjava","sourceNew":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param index the elements index to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int index) {\n    if (lastElement > index) {\n      int offset = offsets[index];\n      int length = index == lastElement - 1 ? currentOffset - offset\n          : offsets[index + 1] - offset;\n      assert spare.offset == 0;\n      spare.grow(length);\n      spare.length = length;\n      pool.readBytes(offset, spare.bytes, spare.offset, spare.length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + index\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the <i>n'th</i> element of this {@link BytesRefArray}\n   * @param spare a spare {@link BytesRef} instance\n   * @param index the elements index to retrieve \n   * @return the <i>n'th</i> element of this {@link BytesRefArray}\n   */\n  public BytesRef get(BytesRef spare, int index) {\n    if (lastElement > index) {\n      int offset = offsets[index];\n      int length = index == lastElement - 1 ? currentOffset - offset\n          : offsets[index + 1] - offset;\n      assert spare.offset == 0;\n      spare.grow(length);\n      spare.length = length;\n      pool.readBytes(offset, spare.bytes, spare.offset, spare.length);\n      return spare;\n    }\n    throw new IndexOutOfBoundsException(\"index \" + index\n        + \" must be less than the size: \" + lastElement);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c447e0427ce53ca53d708ce8b64eaf8cfd372591":["847d1294c8ff2f0172af20892ef98a1c6a952e09"],"2b3cc2f5fa15326949acef967166394fb5b4a5e8":["c447e0427ce53ca53d708ce8b64eaf8cfd372591"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b3cc2f5fa15326949acef967166394fb5b4a5e8"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["a4e3a7c47e11ff0c156c646c37d20af7249370d2","36f5a8c57e16c0f801006a52f87c75378427852e"],"a4e3a7c47e11ff0c156c646c37d20af7249370d2":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"36f5a8c57e16c0f801006a52f87c75378427852e":["a4e3a7c47e11ff0c156c646c37d20af7249370d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba791bce8103c79e38f957e9c5a53a75871bd918"]},"commit2Childs":{"c447e0427ce53ca53d708ce8b64eaf8cfd372591":["2b3cc2f5fa15326949acef967166394fb5b4a5e8"],"2b3cc2f5fa15326949acef967166394fb5b4a5e8":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a4e3a7c47e11ff0c156c646c37d20af7249370d2"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a4e3a7c47e11ff0c156c646c37d20af7249370d2":["ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["c447e0427ce53ca53d708ce8b64eaf8cfd372591"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}