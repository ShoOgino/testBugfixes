{"path":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","commits":[{"id":"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10","date":1449514606,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","pathOld":"/dev/null","sourceNew":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      try {\n        out.print(Long.toHexString(NumericUtils.prefixCodedToLong(ref))+\"L\");\n      } catch (Exception e) {\n        try {\n          out.print(Integer.toHexString(NumericUtils.prefixCodedToInt(ref))+\"i\");\n        } catch (Exception ee) {\n        }\n      }\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["50b8410419cbbe9d8e1a96c918a951976bffe680"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","sourceNew":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      try {\n        out.print(Long.toHexString(LegacyNumericUtils.prefixCodedToLong(ref))+\"L\");\n      } catch (Exception e) {\n        try {\n          out.print(Integer.toHexString(LegacyNumericUtils.prefixCodedToInt(ref))+\"i\");\n        } catch (Exception ee) {\n        }\n      }\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","sourceOld":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      try {\n        out.print(Long.toHexString(NumericUtils.prefixCodedToLong(ref))+\"L\");\n      } catch (Exception e) {\n        try {\n          out.print(Integer.toHexString(NumericUtils.prefixCodedToInt(ref))+\"i\");\n        } catch (Exception ee) {\n        }\n      }\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","bugFix":null,"bugIntro":["50b8410419cbbe9d8e1a96c918a951976bffe680"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"50b8410419cbbe9d8e1a96c918a951976bffe680","date":1471869553,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","sourceNew":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","sourceOld":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      try {\n        out.print(Long.toHexString(LegacyNumericUtils.prefixCodedToLong(ref))+\"L\");\n      } catch (Exception e) {\n        try {\n          out.print(Integer.toHexString(LegacyNumericUtils.prefixCodedToInt(ref))+\"i\");\n        } catch (Exception ee) {\n        }\n      }\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","bugFix":["770342641f7b505eaa8dccdc666158bff2419109","af3f3d3f7a6a159ccf14d58544fd71ae72c89b10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c82557b0a8c9d4012f208e5de912ae7500ea351","date":1471888093,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","sourceNew":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","sourceOld":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      try {\n        out.print(Long.toHexString(LegacyNumericUtils.prefixCodedToLong(ref))+\"L\");\n      } catch (Exception e) {\n        try {\n          out.print(Integer.toHexString(LegacyNumericUtils.prefixCodedToInt(ref))+\"i\");\n        } catch (Exception ee) {\n        }\n      }\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","sourceNew":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","sourceOld":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      try {\n        out.print(Long.toHexString(LegacyNumericUtils.prefixCodedToLong(ref))+\"L\");\n      } catch (Exception e) {\n        try {\n          out.print(Integer.toHexString(LegacyNumericUtils.prefixCodedToInt(ref))+\"i\");\n        } catch (Exception ee) {\n        }\n      }\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","sourceNew":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","sourceOld":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      try {\n        out.print(Long.toHexString(LegacyNumericUtils.prefixCodedToLong(ref))+\"L\");\n      } catch (Exception e) {\n        try {\n          out.print(Integer.toHexString(LegacyNumericUtils.prefixCodedToInt(ref))+\"i\");\n        } catch (Exception ee) {\n        }\n      }\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7","date":1495529154,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","sourceNew":null,"sourceOld":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#dump(PrintStream).mjava","sourceNew":null,"sourceOld":"  void dump(PrintStream out){\n    out.println(field+\":\");\n    final BytesRef ref = new BytesRef();\n    for (int i = 0; i < terms.size(); i++) {\n      terms.get(ords[i], ref);\n      out.print(ref+\" \"+ref.utf8ToString()+\" \");\n      out.println(\" score=\"+scores[ords[i]]);\n      out.println(\"\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7"],"00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["770342641f7b505eaa8dccdc666158bff2419109","50b8410419cbbe9d8e1a96c918a951976bffe680"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["770342641f7b505eaa8dccdc666158bff2419109"],"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["770342641f7b505eaa8dccdc666158bff2419109","0c82557b0a8c9d4012f208e5de912ae7500ea351"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["770342641f7b505eaa8dccdc666158bff2419109","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["0c82557b0a8c9d4012f208e5de912ae7500ea351"],"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["e9017cf144952056066919f1ebc7897ff9bd71b1","00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"770342641f7b505eaa8dccdc666158bff2419109":["0c82557b0a8c9d4012f208e5de912ae7500ea351","50b8410419cbbe9d8e1a96c918a951976bffe680","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}