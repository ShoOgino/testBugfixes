{"path":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36","date":1308677293,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5090f41e198d9dd9374e99981f940b111973af2","date":1325969785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    assert checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      assert checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    assert checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      assert checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    assert checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      assert checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e5090f41e198d9dd9374e99981f940b111973af2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["b1add9ddc0005b07550d4350720aac22dc9886b3","6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36"],"e5090f41e198d9dd9374e99981f940b111973af2":["6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["b1add9ddc0005b07550d4350720aac22dc9886b3","6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36":["2553b00f699380c64959ccb27991289aae87be2e","e5090f41e198d9dd9374e99981f940b111973af2","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36","29ef99d61cda9641b6250bf9567329a6e65f901d","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"2553b00f699380c64959ccb27991289aae87be2e":[],"e5090f41e198d9dd9374e99981f940b111973af2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}