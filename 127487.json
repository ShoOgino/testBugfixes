{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","commits":[{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.optimize();\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir, true);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir, true);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e","date":1327848882,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a81e1267c45ab68de86e86ac4b4c99e6e628ceb","date":1327857831,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, IndexReader.getCommitUserData(dir).size());\n\n    IndexReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", IndexReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testCommitUserData().mjava","sourceNew":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1382\n  public void testCommitUserData() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    w.close();\n\n    assertEquals(0, DirectoryReader.getCommitUserData(dir).size());\n\n    DirectoryReader r = IndexReader.open(dir);\n    // commit(Map) never called for this index\n    assertEquals(0, r.getCommitUserData().size());\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n    for(int j=0;j<17;j++)\n      TestIndexWriter.addDoc(w);\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"label\", \"test1\");\n    w.commit(data);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    r = IndexReader.open(dir);\n    assertEquals(\"test1\", r.getCommitUserData().get(\"label\"));\n    r.close();\n\n    w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    w.forceMerge(1);\n    w.close();\n\n    assertEquals(\"test1\", DirectoryReader.getCommitUserData(dir).get(\"label\"));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3a81e1267c45ab68de86e86ac4b4c99e6e628ceb":["f9172d6bebb12f0bba2ebb1756779c2f8948ab7e"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","3a81e1267c45ab68de86e86ac4b4c99e6e628ceb"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e":["3a81e1267c45ab68de86e86ac4b4c99e6e628ceb"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a81e1267c45ab68de86e86ac4b4c99e6e628ceb":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","f9172d6bebb12f0bba2ebb1756779c2f8948ab7e","5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}