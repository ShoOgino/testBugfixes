{"path":"contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#FakeDeleteIndexReader(IndexReader).mjava","commits":[{"id":"422a649a45aaa37e53615faeca74d891f876a139","date":1255445670,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#FakeDeleteIndexReader(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    public FakeDeleteIndexReader(IndexReader in) {\n      super(in);\n      dels = new OpenBitSet(in.maxDoc());\n      if (in.hasDeletions()) {\n        oldDels = new OpenBitSet(in.maxDoc());\n        for (int i = 0; i < in.maxDoc(); i++) {\n          if (in.isDeleted(i)) oldDels.set(i);\n        }\n        dels.or(oldDels);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["406e7055a3e99d3fa6ce49a555a51dd18b321806"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#FakeDeleteIndexReader(IndexReader).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#FakeDeleteIndexReader(IndexReader).mjava","sourceNew":"    public FakeDeleteIndexReader(IndexReader in) {\n      super(in);\n      dels = new OpenBitSet(in.maxDoc());\n      if (in.hasDeletions()) {\n        oldDels = new OpenBitSet(in.maxDoc());\n        for (int i = 0; i < in.maxDoc(); i++) {\n          if (in.isDeleted(i)) oldDels.set(i);\n        }\n        dels.or(oldDels);\n      }\n    }\n\n","sourceOld":"    public FakeDeleteIndexReader(IndexReader in) {\n      super(in);\n      dels = new OpenBitSet(in.maxDoc());\n      if (in.hasDeletions()) {\n        oldDels = new OpenBitSet(in.maxDoc());\n        for (int i = 0; i < in.maxDoc(); i++) {\n          if (in.isDeleted(i)) oldDels.set(i);\n        }\n        dels.or(oldDels);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"422a649a45aaa37e53615faeca74d891f876a139":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["422a649a45aaa37e53615faeca74d891f876a139"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["422a649a45aaa37e53615faeca74d891f876a139"],"422a649a45aaa37e53615faeca74d891f876a139":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}