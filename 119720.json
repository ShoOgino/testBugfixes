{"path":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    \n    Directory taxoDir = new RAMDirectory();\n    TaxonomyWriter taxoWriter = new LuceneTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new Field(\"content\", \"foo\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new Field(\"content\", \"bar\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    writer.commit();\n    writer.close();\n    \n    reader = IndexReader.open(dir, true);\n    taxo = new LuceneTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a4df66e06e0c3b520d7d5941e1c043076f06f17","date":1309454196,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","sourceNew":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new LuceneTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new Field(\"content\", \"foo\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new Field(\"content\", \"bar\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new LuceneTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    \n    Directory taxoDir = new RAMDirectory();\n    TaxonomyWriter taxoWriter = new LuceneTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new Field(\"content\", \"foo\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new Field(\"content\", \"bar\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    writer.commit();\n    writer.close();\n    \n    reader = IndexReader.open(dir, true);\n    taxo = new LuceneTaxonomyReader(taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new LuceneTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new Field(\"content\", \"foo\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new Field(\"content\", \"bar\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new LuceneTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new LuceneTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new Field(\"content\", \"foo\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new Field(\"content\", \"bar\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new LuceneTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","sourceNew":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new LuceneTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new TextField(\"content\", \"foo\"));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new TextField(\"content\", \"bar\"));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new LuceneTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new LuceneTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new Field(\"content\", \"foo\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new Field(\"content\", \"bar\", Store.NO, Index.ANALYZED));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new LuceneTaxonomyReader(taxoDir);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","sourceNew":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new TextField(\"content\", \"foo\"));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new TextField(\"content\", \"bar\"));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new LuceneTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new TextField(\"content\", \"foo\"));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new TextField(\"content\", \"bar\"));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new LuceneTaxonomyReader(taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","sourceNew":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new TextField(\"content\", \"foo\"));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new TextField(\"content\", \"bar\"));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new TextField(\"content\", \"foo\"));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new TextField(\"content\", \"bar\"));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/DrillDownTest#createIndexes().mjava","sourceNew":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new TextField(\"content\", \"foo\"));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new TextField(\"content\", \"bar\"));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createIndexes() throws CorruptIndexException, LockObtainFailedException, IOException {\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false)));\n    \n    taxoDir = newDirectory();\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    \n    for (int i = 0; i < 100; i++) {\n      ArrayList<CategoryPath> paths = new ArrayList<CategoryPath>();\n      Document doc = new Document();\n      if (i % 2 == 0) { // 50\n        doc.add(new TextField(\"content\", \"foo\"));\n      }\n      if (i % 3 == 0) { // 33\n        doc.add(new TextField(\"content\", \"bar\"));\n      }\n      if (i % 4 == 0) { // 25\n        paths.add(new CategoryPath(\"a\"));\n      }\n      if (i % 5 == 0) { // 20\n        paths.add(new CategoryPath(\"b\"));\n      }\n      CategoryDocumentBuilder builder = new CategoryDocumentBuilder(taxoWriter);\n      builder.setCategoryPaths(paths).build(doc);\n      writer.addDocument(doc);\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    \n    taxo = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"7a4df66e06e0c3b520d7d5941e1c043076f06f17":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"7a4df66e06e0c3b520d7d5941e1c043076f06f17":["1509f151d7692d84fae414b2b799ac06ba60fcb4","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}