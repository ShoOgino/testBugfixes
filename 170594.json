{"path":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#convertFieldValueUsingType(Object,SchemaField).mjava","commits":[{"id":"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15","date":1523556268,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#convertFieldValueUsingType(Object,SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Inspects a raw field value (which may come from a doc in the index, or a\n   * doc in the UpdateLog that still has String values, or a String sent by\n   * the user as a param) and if it is a String, asks the versionField FieldType\n   * to convert it to an Object suitable for comparison.\n   */\n  private static Object convertFieldValueUsingType(final Object rawValue, SchemaField field) {\n    if (rawValue instanceof CharSequence) {\n      // in theory, the FieldType might still be CharSequence based,\n      // but in that case trust it to do an identity conversion...\n      FieldType fieldType = field.getType();\n      BytesRefBuilder term = new BytesRefBuilder();\n      fieldType.readableToIndexed((CharSequence)rawValue, term);\n      return fieldType.toObject(field, term.get());\n    }\n    // else...\n    return rawValue;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31b9d540ce892a94ad2ad89f9b9cddc9180b6c15"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31b9d540ce892a94ad2ad89f9b9cddc9180b6c15"],"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}