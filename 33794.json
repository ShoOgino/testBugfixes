{"path":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a tokenizer for this Reader. */\n  public StandardTokenizer(Reader reader) {\n    this(new FastCharStream(reader));\n    this.input = reader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e","date":1186612004,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","sourceNew":"    /**\n     * Creates a new instance of the {@link StandardTokenizer}. Attaches the\n     * <code>input</code> to a newly created JFlex scanner.\n     */\n    public StandardTokenizer(Reader input) {\n\tthis.input = input;\n\tthis.scanner = new StandardTokenizerImpl(input);\n    }\n\n","sourceOld":"  /** Constructs a tokenizer for this Reader. */\n  public StandardTokenizer(Reader reader) {\n    this(new FastCharStream(reader));\n    this.input = reader;\n  }\n\n","bugFix":null,"bugIntro":["c79a056cc0ebc0f62e4a01c20808260cc4c70074"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c79a056cc0ebc0f62e4a01c20808260cc4c70074","date":1198809971,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","sourceNew":"    /**\n     * Creates a new instance of the {@link StandardTokenizer}. Attaches the\n     * <code>input</code> to a newly created JFlex scanner.\n     */\n    public StandardTokenizer(Reader input) {\n\t    this.input = input;\n\t    this.scanner = new StandardTokenizerImpl(input);\n    }\n\n","sourceOld":"    /**\n     * Creates a new instance of the {@link StandardTokenizer}. Attaches the\n     * <code>input</code> to a newly created JFlex scanner.\n     */\n    public StandardTokenizer(Reader input) {\n\tthis.input = input;\n\tthis.scanner = new StandardTokenizerImpl(input);\n    }\n\n","bugFix":["8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","sourceNew":"  /**\n   * Creates a new instance of the {@link StandardTokenizer}. Attaches the\n   * <code>input</code> to a newly created JFlex scanner.\n   */\n  public StandardTokenizer(Reader input) {\n    this(input, false);\n  }\n\n","sourceOld":"    /**\n     * Creates a new instance of the {@link StandardTokenizer}. Attaches the\n     * <code>input</code> to a newly created JFlex scanner.\n     */\n    public StandardTokenizer(Reader input) {\n\t    this.input = input;\n\t    this.scanner = new StandardTokenizerImpl(input);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#StandardTokenizer(Reader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new instance of the {@link StandardTokenizer}. Attaches the\n   * <code>input</code> to a newly created JFlex scanner.\n   */\n  public StandardTokenizer(Reader input) {\n    this(input, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["c79a056cc0ebc0f62e4a01c20808260cc4c70074"],"c79a056cc0ebc0f62e4a01c20808260cc4c70074":["8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"]},"commit2Childs":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["ba1116b3450a9c1642c89445d131b37344055245"],"c79a056cc0ebc0f62e4a01c20808260cc4c70074":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e"],"8e191901ff30c9f34f5e72d2e7b6f6c975eb9b4e":["c79a056cc0ebc0f62e4a01c20808260cc4c70074"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ba1116b3450a9c1642c89445d131b37344055245":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}