{"path":"src/java/org/apache/solr/search/MissingStringLastComparatorSource#newComparator(IndexReader,String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/MissingStringLastComparatorSource#newComparator(IndexReader,String).mjava","pathOld":"/dev/null","sourceNew":"  public ScoreDocComparator newComparator(final IndexReader reader,\n                                          final String fieldname)\n          throws IOException {\n\n    final String field = fieldname.intern();\n    final FieldCache.StringIndex index =\n            FieldCache.DEFAULT.getStringIndex (reader, field);\n\n    // :HACK:\n    // final String lastString =\n    // (index.lookup[index.lookup.length-1]+\"X\").intern();\n    //\n    // Note: basing lastStringValue on the StringIndex won't work\n    // with a multisearcher.\n\n\n    return new ScoreDocComparator () {\n\n      public final int compare (final ScoreDoc i, final ScoreDoc j) {\n        final int fi = index.order[i.doc];\n        final int fj = index.order[j.doc];\n\n        // 0 is the magic position of null\n\n        /**** alternate logic\n         if (fi < fj && fi != 0) return -1;\n         if (fj < fi && fj != 0) return 1;\n         if (fi==fj) return 0;\n         return fi==0 ? 1 : -1;\n         ****/\n\n        if (fi==fj) return 0;\n        if (fi==0) return 1;\n        if (fj==0) return -1;\n        return fi < fj ? -1 : 1;\n\n      }\n\n      public Comparable sortValue (final ScoreDoc i) {\n        int f = index.order[i.doc];\n        return (0 == f) ? missingValueProxy : index.lookup[f];\n      }\n\n      public int sortType() {\n        return SortField.CUSTOM;\n      }\n    };\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac3e6437547a34cce2b5405ce0cf9e3af578401e","date":1243373693,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/search/MissingStringLastComparatorSource#newComparator(IndexReader,String).mjava","sourceNew":null,"sourceOld":"  public ScoreDocComparator newComparator(final IndexReader reader,\n                                          final String fieldname)\n          throws IOException {\n\n    final String field = fieldname.intern();\n    final FieldCache.StringIndex index =\n            FieldCache.DEFAULT.getStringIndex (reader, field);\n\n    // :HACK:\n    // final String lastString =\n    // (index.lookup[index.lookup.length-1]+\"X\").intern();\n    //\n    // Note: basing lastStringValue on the StringIndex won't work\n    // with a multisearcher.\n\n\n    return new ScoreDocComparator () {\n\n      public final int compare (final ScoreDoc i, final ScoreDoc j) {\n        final int fi = index.order[i.doc];\n        final int fj = index.order[j.doc];\n\n        // 0 is the magic position of null\n\n        /**** alternate logic\n         if (fi < fj && fi != 0) return -1;\n         if (fj < fi && fj != 0) return 1;\n         if (fi==fj) return 0;\n         return fi==0 ? 1 : -1;\n         ****/\n\n        if (fi==fj) return 0;\n        if (fi==0) return 1;\n        if (fj==0) return -1;\n        return fi < fj ? -1 : 1;\n\n      }\n\n      public Comparable sortValue (final ScoreDoc i) {\n        int f = index.order[i.doc];\n        return (0 == f) ? missingValueProxy : index.lookup[f];\n      }\n\n      public int sortType() {\n        return SortField.CUSTOM;\n      }\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac3e6437547a34cce2b5405ce0cf9e3af578401e":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ac3e6437547a34cce2b5405ce0cf9e3af578401e":[],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["ac3e6437547a34cce2b5405ce0cf9e3af578401e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ac3e6437547a34cce2b5405ce0cf9e3af578401e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}