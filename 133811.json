{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","commits":[{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error it's thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error it's thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fa5fd476baad3daae685a00a384512a83178dc9","date":1475222743,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          return;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          return;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          return;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a83fe2688c761a0a0af5f5558589b0f7bac52b15","date":1481738241,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    this.thread = Thread.currentThread();\n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          return;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          return;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    this.thread = Thread.currentThread();\n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          return;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    \n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          return;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"717e5ceb2acae36d422ec75e5a4ce9fac40506e1","date":1501239603,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void run() {\n    this.thread = Thread.currentThread();\n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          return;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void run() {\n    this.thread = Thread.currentThread();\n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          return;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":4,"author":"Cao Manh Dat","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerAutoReplicaFailoverThread#run().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void run() {\n    this.thread = Thread.currentThread();\n    while (!this.isClosed) {\n      // work loop\n      log.debug(\"do \" + this.getClass().getSimpleName() + \" work loop\");\n\n      // every n, look at state and make add / remove calls\n\n      try {\n        doWork();\n      } catch (Exception e) {\n        SolrException.log(log, this.getClass().getSimpleName()\n            + \" had an error in its thread work loop.\", e);\n      }\n      \n      if (!this.isClosed) {\n        try {\n          Thread.sleep(workLoopDelay);\n        } catch (InterruptedException e) {\n          return;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a83fe2688c761a0a0af5f5558589b0f7bac52b15":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"4fa5fd476baad3daae685a00a384512a83178dc9":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a83fe2688c761a0a0af5f5558589b0f7bac52b15","717e5ceb2acae36d422ec75e5a4ce9fac40506e1"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["a83fe2688c761a0a0af5f5558589b0f7bac52b15"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","4fa5fd476baad3daae685a00a384512a83178dc9"],"9856095f7afb5a607bf5e65077615ed91273508c":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a83fe2688c761a0a0af5f5558589b0f7bac52b15"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a83fe2688c761a0a0af5f5558589b0f7bac52b15","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["560c18d71dad43d675158783c3840f8c80d6d39c"]},"commit2Childs":{"a83fe2688c761a0a0af5f5558589b0f7bac52b15":["c304e97e7c1d472bc70e801b35ee78583916c6cd","717e5ceb2acae36d422ec75e5a4ce9fac40506e1","9856095f7afb5a607bf5e65077615ed91273508c","560c18d71dad43d675158783c3840f8c80d6d39c"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["4fa5fd476baad3daae685a00a384512a83178dc9","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4fa5fd476baad3daae685a00a384512a83178dc9":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a83fe2688c761a0a0af5f5558589b0f7bac52b15","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"560c18d71dad43d675158783c3840f8c80d6d39c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9856095f7afb5a607bf5e65077615ed91273508c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}