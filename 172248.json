{"path":"solr/contrib/langid/src/java/org/apache/solr/update/processor/SolrInputDocumentReader#nextDocChunk(StringBuilder,int).mjava","commits":[{"id":"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687","date":1546536444,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/SolrInputDocumentReader#nextDocChunk(StringBuilder,int).mjava","pathOld":"/dev/null","sourceNew":"  private int nextDocChunk(StringBuilder sb, int maxChunkLength) {\n    if (currentFieldIdx > fields.length-1) {\n      return returnEod();\n    }\n\n    int startFieldValueIdx = currentFieldValueIdx;\n    int startFieldValueOffset = currentFieldValueOffset;\n    \n    do {\n      SolrInputField f = doc.getField(fields[currentFieldIdx]);\n      if (f == null) {\n        log.debug(\"Field with name {} did not exist on docuemnt.\", fields[currentFieldIdx]);\n        incField(sb);\n        continue;\n      }\n      Iterator<Object> fvIt = f.iterator();\n      currentFieldValueIdx = -1;\n      while (fvIt.hasNext() && sb.length() < maxChunkLength) {\n        currentFieldValueIdx++;\n        String fvStr = String.valueOf(fvIt.next());\n        if (currentFieldValueIdx < startFieldValueIdx) continue;\n        startFieldValueIdx = 0;\n        if (sb.length() > 0) {\n          if (maxChunkLength - sb.length() < fieldValueSep.length()) {\n            sb.append(fieldValueSep.substring(0,maxChunkLength - sb.length()));\n          } else {\n            sb.append(fieldValueSep);\n          }\n        }\n        currentFieldValueOffset = startFieldValueOffset;\n        startFieldValueOffset = 0;\n        int charsNeeded = maxChunkLength - sb.length();\n        int endOffset = fvStr.length();\n        if (fvStr.length() - currentFieldValueOffset > charsNeeded) {\n          endOffset = currentFieldValueOffset + charsNeeded;\n        }\n        if (endOffset - currentFieldValueOffset > maxCharsPerFieldValue) {\n          endOffset = maxCharsPerFieldValue - currentFieldValueOffset;\n        }\n        sb.append(fvStr.substring(currentFieldValueOffset, endOffset));\n        currentFieldValueOffset = endOffset == fvStr.length() ? 0 : endOffset;\n      }\n      if (sb.length() >= maxChunkLength) {\n        return returnValue(sb);\n      } else {\n        incField(sb);\n      }\n    } while (currentFieldIdx <= fields.length-1 && sb.length() < maxChunkLength);\n    return sb.length() == 0 ? eodReturnValue : sb.length();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}