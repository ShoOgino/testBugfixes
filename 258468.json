{"path":"lucene/core/src/test/org/apache/lucene/util/TestFutureObjects#testCheckFromIndexSize().mjava","commits":[{"id":"456d7e7092cb043c740b4674301660ee8abc26fe","date":1517645879,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFutureObjects#testCheckFromIndexSize().mjava","pathOld":"/dev/null","sourceNew":"  public void testCheckFromIndexSize() {\r\n    assertEquals(0, FutureObjects.checkFromIndexSize(0, 0, 0));\r\n    assertEquals(1, FutureObjects.checkFromIndexSize(1, 2, 3));\r\n    \r\n    Exception e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(-1, 0, 1);\r\n    });\r\n    assertEquals(\"Range [-1, -1 + 0) out-of-bounds for length 1\", e.getMessage());\r\n    \r\n    e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(0, -1, 1);\r\n    });\r\n    assertEquals(\"Range [0, 0 + -1) out-of-bounds for length 1\", e.getMessage());\r\n    \r\n    e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(0, 2, 1);\r\n    });\r\n    assertEquals(\"Range [0, 0 + 2) out-of-bounds for length 1\", e.getMessage());\r\n    \r\n    e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(1, Integer.MAX_VALUE, Integer.MAX_VALUE);\r\n    });\r\n    assertEquals(\"Range [1, 1 + 2147483647) out-of-bounds for length 2147483647\", e.getMessage());\r\n    \r\n    e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(0, 0, -1);\r\n    });\r\n    assertEquals(\"Range [0, 0 + 0) out-of-bounds for length -1\", e.getMessage());\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFutureObjects#testCheckFromIndexSize().mjava","sourceNew":null,"sourceOld":"  public void testCheckFromIndexSize() {\r\n    assertEquals(0, FutureObjects.checkFromIndexSize(0, 0, 0));\r\n    assertEquals(1, FutureObjects.checkFromIndexSize(1, 2, 3));\r\n    \r\n    Exception e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(-1, 0, 1);\r\n    });\r\n    assertEquals(\"Range [-1, -1 + 0) out-of-bounds for length 1\", e.getMessage());\r\n    \r\n    e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(0, -1, 1);\r\n    });\r\n    assertEquals(\"Range [0, 0 + -1) out-of-bounds for length 1\", e.getMessage());\r\n    \r\n    e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(0, 2, 1);\r\n    });\r\n    assertEquals(\"Range [0, 0 + 2) out-of-bounds for length 1\", e.getMessage());\r\n    \r\n    e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(1, Integer.MAX_VALUE, Integer.MAX_VALUE);\r\n    });\r\n    assertEquals(\"Range [1, 1 + 2147483647) out-of-bounds for length 2147483647\", e.getMessage());\r\n    \r\n    e = expectThrows(IndexOutOfBoundsException.class, () -> {\r\n      FutureObjects.checkFromIndexSize(0, 0, -1);\r\n    });\r\n    assertEquals(\"Range [0, 0 + 0) out-of-bounds for length -1\", e.getMessage());\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["456d7e7092cb043c740b4674301660ee8abc26fe"],"456d7e7092cb043c740b4674301660ee8abc26fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"]},"commit2Childs":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"456d7e7092cb043c740b4674301660ee8abc26fe":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["456d7e7092cb043c740b4674301660ee8abc26fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}