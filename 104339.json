{"path":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            System.out.println(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            System.out.println(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            System.out.println(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            System.out.println(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            System.out.println(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce83f0d72db4660fd277a9d357698004d8f4336","date":1269047368,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            System.out.println(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5763789d165278309f152680f88d0e9148ec4b3","date":1269609666,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"9ce83f0d72db4660fd277a9d357698004d8f4336":["1da8d55113b689b06716246649de6f62430f15c0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["b5763789d165278309f152680f88d0e9148ec4b3"],"c26f00b574427b55127e869b935845554afde1fa":["b5763789d165278309f152680f88d0e9148ec4b3","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["b5763789d165278309f152680f88d0e9148ec4b3"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"b5763789d165278309f152680f88d0e9148ec4b3":["9ce83f0d72db4660fd277a9d357698004d8f4336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["9ce83f0d72db4660fd277a9d357698004d8f4336"],"9ce83f0d72db4660fd277a9d357698004d8f4336":["b5763789d165278309f152680f88d0e9148ec4b3"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"b5763789d165278309f152680f88d0e9148ec4b3":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}