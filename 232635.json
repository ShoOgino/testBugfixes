{"path":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","commits":[{"id":"1513361122ebc5ddd6075f633cd77d2345611767","date":1273770174,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","pathOld":"/dev/null","sourceNew":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public static void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    reader.close();\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24bbea3efc4507c483f922462353c5994867de42","date":1284405081,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","sourceNew":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    reader.close();\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","sourceOld":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public static void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    reader.close();\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efa9034619d03b2401e67ff3ea445f269f639bf4","date":1284540557,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","sourceNew":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","sourceOld":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    reader.close();\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","sourceNew":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","sourceOld":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public static void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    reader.close();\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestHighFreqTerms#testGetTotalTermFreq().mjava","sourceNew":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","sourceOld":"  /********************Tests for getTotalTermFreq**********************************/\n    \n  public void testGetTotalTermFreq() throws Exception{\n    String term =\"highTF\";\n    BytesRef termtext = new BytesRef (term);\n    String field = \"FIELD_1\";\n    long totalTermFreq = HighFreqTerms.getTotalTermFreq(reader, field, termtext);\n    assertEquals(\"highTf tf should be 200\",200,totalTermFreq);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24bbea3efc4507c483f922462353c5994867de42":["1513361122ebc5ddd6075f633cd77d2345611767"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["efa9034619d03b2401e67ff3ea445f269f639bf4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1513361122ebc5ddd6075f633cd77d2345611767","efa9034619d03b2401e67ff3ea445f269f639bf4"],"efa9034619d03b2401e67ff3ea445f269f639bf4":["24bbea3efc4507c483f922462353c5994867de42"],"1513361122ebc5ddd6075f633cd77d2345611767":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"24bbea3efc4507c483f922462353c5994867de42":["efa9034619d03b2401e67ff3ea445f269f639bf4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1513361122ebc5ddd6075f633cd77d2345611767"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1513361122ebc5ddd6075f633cd77d2345611767":["24bbea3efc4507c483f922462353c5994867de42","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"efa9034619d03b2401e67ff3ea445f269f639bf4":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}