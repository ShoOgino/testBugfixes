{"path":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#close().mjava","commits":[{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() {\n    CoreContainer cc = cores;\n    cores = null;\n    try {\n      try {\n        FileCleaningTracker fileCleaningTracker = SolrRequestParsers.fileCleaningTracker;\n        if (fileCleaningTracker != null) {\n          fileCleaningTracker.exitWhenFinished();\n        }\n      } catch (NullPointerException e) {\n        // okay\n      } catch (Exception e) {\n        log.warn(\"Exception closing FileCleaningTracker\", e);\n      } finally {\n        SolrRequestParsers.fileCleaningTracker = null;\n      }\n\n      if (metricManager != null) {\n        try {\n          metricManager.unregisterGauges(registryName, metricTag);\n        } catch (NullPointerException e) {\n          // okay\n        } catch (Exception e) {\n          log.warn(\"Exception closing FileCleaningTracker\", e);\n        } finally {\n          metricManager = null;\n        }\n      }\n    } finally {\n      if (cc != null) {\n        httpClient = null;\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbaf96cfda5422c42955ce34344f0e01839894ea","date":1559675051,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#close().mjava","sourceNew":"  public void close() {\n    CoreContainer cc = cores;\n    cores = null;\n    try {\n      try {\n        FileCleaningTracker fileCleaningTracker = SolrRequestParsers.fileCleaningTracker;\n        if (fileCleaningTracker != null) {\n          fileCleaningTracker.exitWhenFinished();\n        }\n      } catch (NullPointerException e) {\n        // okay\n      } catch (Exception e) {\n        log.warn(\"Exception closing FileCleaningTracker\", e);\n      } finally {\n        SolrRequestParsers.fileCleaningTracker = null;\n      }\n\n      if (metricManager != null) {\n        try {\n          metricManager.unregisterGauges(registryName, metricTag);\n        } catch (NullPointerException e) {\n          // okay\n        } catch (Exception e) {\n          log.warn(\"Exception closing FileCleaningTracker\", e);\n        } finally {\n          metricManager = null;\n        }\n      }\n    } finally {\n      if (cc != null) {\n        httpClient = null;\n        cc.shutdown();\n      }\n      GlobalTracer.get().close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    CoreContainer cc = cores;\n    cores = null;\n    try {\n      try {\n        FileCleaningTracker fileCleaningTracker = SolrRequestParsers.fileCleaningTracker;\n        if (fileCleaningTracker != null) {\n          fileCleaningTracker.exitWhenFinished();\n        }\n      } catch (NullPointerException e) {\n        // okay\n      } catch (Exception e) {\n        log.warn(\"Exception closing FileCleaningTracker\", e);\n      } finally {\n        SolrRequestParsers.fileCleaningTracker = null;\n      }\n\n      if (metricManager != null) {\n        try {\n          metricManager.unregisterGauges(registryName, metricTag);\n        } catch (NullPointerException e) {\n          // okay\n        } catch (Exception e) {\n          log.warn(\"Exception closing FileCleaningTracker\", e);\n        } finally {\n          metricManager = null;\n        }\n      }\n    } finally {\n      if (cc != null) {\n        httpClient = null;\n        cc.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac5c4637fb06d45efdeaf0f2d262b133ab2de181","date":1590122088,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#close().mjava","sourceNew":"  public void close() {\n    CoreContainer cc = cores;\n    cores = null;\n    try {\n      if (metricManager != null) {\n        try {\n          metricManager.unregisterGauges(registryName, metricTag);\n        } catch (NullPointerException e) {\n          // okay\n        } catch (Exception e) {\n          log.warn(\"Exception closing FileCleaningTracker\", e);\n        } finally {\n          metricManager = null;\n        }\n      }\n    } finally {\n      if (cc != null) {\n        httpClient = null;\n        cc.shutdown();\n      }\n      GlobalTracer.get().close();\n    }\n  }\n\n","sourceOld":"  public void close() {\n    CoreContainer cc = cores;\n    cores = null;\n    try {\n      try {\n        FileCleaningTracker fileCleaningTracker = SolrRequestParsers.fileCleaningTracker;\n        if (fileCleaningTracker != null) {\n          fileCleaningTracker.exitWhenFinished();\n        }\n      } catch (NullPointerException e) {\n        // okay\n      } catch (Exception e) {\n        log.warn(\"Exception closing FileCleaningTracker\", e);\n      } finally {\n        SolrRequestParsers.fileCleaningTracker = null;\n      }\n\n      if (metricManager != null) {\n        try {\n          metricManager.unregisterGauges(registryName, metricTag);\n        } catch (NullPointerException e) {\n          // okay\n        } catch (Exception e) {\n          log.warn(\"Exception closing FileCleaningTracker\", e);\n        } finally {\n          metricManager = null;\n        }\n      }\n    } finally {\n      if (cc != null) {\n        httpClient = null;\n        cc.shutdown();\n      }\n      GlobalTracer.get().close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac5c4637fb06d45efdeaf0f2d262b133ab2de181":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac5c4637fb06d45efdeaf0f2d262b133ab2de181"]},"commit2Childs":{"ac5c4637fb06d45efdeaf0f2d262b133ab2de181":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["ac5c4637fb06d45efdeaf0f2d262b133ab2de181"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}