{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","sourceNew":"    /**\n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by\n     * the {@link GDataRequest}\n     * \n     * @param request -\n     *            the request to build the instance from\n     * @return - a BaseFeed instance\n     * \n     * @throws IOException -\n     *             if an I/O Exception occures on the provided reader\n     * @throws ParseException -\n     *             if the feed could not be parsed\n     */\n    public static BaseFeed buildFeed(final GDataRequest request)\n            throws IOException, ParseException {\n        if (request == null)\n            throw new IllegalArgumentException(\"request must not be null\");\n        ProvidedService config = request.getConfigurator();\n        return buildFeed(request.getReader(), config);\n    }\n\n","sourceOld":"    /**\n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by\n     * the {@link GDataRequest}\n     * \n     * @param request -\n     *            the request to build the instance from\n     * @return - a BaseFeed instance\n     * \n     * @throws IOException -\n     *             if an I/O Exception occures on the provided reader\n     * @throws ParseException -\n     *             if the feed could not be parsed\n     */\n    public static BaseFeed buildFeed(final GDataRequest request)\n            throws IOException, ParseException {\n        if (request == null)\n            throw new IllegalArgumentException(\"request must not be null\");\n        ProvidedService config = request.getConfigurator();\n        return buildFeed(request.getReader(), config);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","sourceNew":"    /**\n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by\n     * the {@link GDataRequest}\n     * \n     * @param request -\n     *            the request to build the instance from\n     * @return - a BaseFeed instance\n     * \n     * @throws IOException -\n     *             if an I/O Exception occures on the provided reader\n     * @throws ParseException -\n     *             if the feed could not be parsed\n     */\n    public static BaseFeed buildFeed(final GDataRequest request)\n            throws IOException, ParseException {\n        if (request == null)\n            throw new IllegalArgumentException(\"request must not be null\");\n        ProvidedService config = request.getConfigurator();\n        return buildFeed(request.getReader(), config);\n    }\n\n","sourceOld":"    /**\n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by\n     * the {@link GDataRequest}\n     * \n     * @param request -\n     *            the request to build the instance from\n     * @return - a BaseFeed instance\n     * \n     * @throws IOException -\n     *             if an I/O Exception occures on the provided reader\n     * @throws ParseException -\n     *             if the feed could not be parsed\n     */\n    public static BaseFeed buildFeed(final GDataRequest request)\n            throws IOException, ParseException {\n        if (request == null)\n            throw new IllegalArgumentException(\"request must not be null\");\n        ProvidedService config = request.getConfigurator();\n        return buildFeed(request.getReader(), config);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}