{"path":"solr/core/src/test/org/apache/solr/cloud/TestUtilizeNode#setupCluster().mjava","commits":[{"id":"30572b5bb51001316f9a67e632d09750dc627a53","date":1511445746,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestUtilizeNode#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n    NamedList<Object> overSeerStatus = cluster.getSolrClient().request(CollectionAdminRequest.getOverseerStatus());\n    JettySolrRunner overseerJetty = null;\n    String overseerLeader = (String) overSeerStatus.get(\"leader\");\n    for (int i = 0; i < cluster.getJettySolrRunners().size(); i++) {\n      JettySolrRunner jetty = cluster.getJettySolrRunner(i);\n      if (jetty.getNodeName().equals(overseerLeader)) {\n        overseerJetty = jetty;\n        break;\n      }\n    }\n    if (overseerJetty == null) {\n      fail(\"no overseer leader!\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f0e33082a86447f4f2b59a1a5f69a310500276a","date":1519970482,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestUtilizeNode#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestUtilizeNode#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n    NamedList<Object> overSeerStatus = cluster.getSolrClient().request(CollectionAdminRequest.getOverseerStatus());\n    JettySolrRunner overseerJetty = null;\n    String overseerLeader = (String) overSeerStatus.get(\"leader\");\n    for (int i = 0; i < cluster.getJettySolrRunners().size(); i++) {\n      JettySolrRunner jetty = cluster.getJettySolrRunner(i);\n      if (jetty.getNodeName().equals(overseerLeader)) {\n        overseerJetty = jetty;\n        break;\n      }\n    }\n    if (overseerJetty == null) {\n      fail(\"no overseer leader!\");\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n    NamedList<Object> overSeerStatus = cluster.getSolrClient().request(CollectionAdminRequest.getOverseerStatus());\n    JettySolrRunner overseerJetty = null;\n    String overseerLeader = (String) overSeerStatus.get(\"leader\");\n    for (int i = 0; i < cluster.getJettySolrRunners().size(); i++) {\n      JettySolrRunner jetty = cluster.getJettySolrRunner(i);\n      if (jetty.getNodeName().equals(overseerLeader)) {\n        overseerJetty = jetty;\n        break;\n      }\n    }\n    if (overseerJetty == null) {\n      fail(\"no overseer leader!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestUtilizeNode#setupCluster().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n    NamedList<Object> overSeerStatus = cluster.getSolrClient().request(CollectionAdminRequest.getOverseerStatus());\n    JettySolrRunner overseerJetty = null;\n    String overseerLeader = (String) overSeerStatus.get(\"leader\");\n    for (int i = 0; i < cluster.getJettySolrRunners().size(); i++) {\n      JettySolrRunner jetty = cluster.getJettySolrRunner(i);\n      if (jetty.getNodeName().equals(overseerLeader)) {\n        overseerJetty = jetty;\n        break;\n      }\n    }\n    if (overseerJetty == null) {\n      fail(\"no overseer leader!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30572b5bb51001316f9a67e632d09750dc627a53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["30572b5bb51001316f9a67e632d09750dc627a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30572b5bb51001316f9a67e632d09750dc627a53"],"30572b5bb51001316f9a67e632d09750dc627a53":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}