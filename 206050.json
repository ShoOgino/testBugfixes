{"path":"lucene/src/test/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","commits":[{"id":"4b1b3c84254f47b901114aa4aa6099b98227356a","date":1272492539,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","pathOld":"/dev/null","sourceNew":"  public void setParameters(Parameter[] pParameters) {\n    super.setParameters(pParameters);\n    for (int j = 0; j < pParameters.length; j++) {\n      Parameter p = pParameters[j];\n      if (\"divisor\".equalsIgnoreCase(p.getName())) {\n        divisor = Integer.parseInt(p.getValue());\n      }\n      else if (\"part\".equalsIgnoreCase(p.getName())) {\n        part = Integer.parseInt(p.getValue());\n      }\n      else {\n        throw new BuildException(\"unknown \" + p.getName());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","sourceNew":"  @Override\n  public void setParameters(Parameter[] pParameters) {\n    super.setParameters(pParameters);\n    for (int j = 0; j < pParameters.length; j++) {\n      Parameter p = pParameters[j];\n      if (\"divisor\".equalsIgnoreCase(p.getName())) {\n        divisor = Integer.parseInt(p.getValue());\n      }\n      else if (\"part\".equalsIgnoreCase(p.getName())) {\n        part = Integer.parseInt(p.getValue());\n      }\n      else {\n        throw new BuildException(\"unknown \" + p.getName());\n      }\n    }\n  }\n\n","sourceOld":"  public void setParameters(Parameter[] pParameters) {\n    super.setParameters(pParameters);\n    for (int j = 0; j < pParameters.length; j++) {\n      Parameter p = pParameters[j];\n      if (\"divisor\".equalsIgnoreCase(p.getName())) {\n        divisor = Integer.parseInt(p.getValue());\n      }\n      else if (\"part\".equalsIgnoreCase(p.getName())) {\n        part = Integer.parseInt(p.getValue());\n      }\n      else {\n        throw new BuildException(\"unknown \" + p.getName());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","sourceNew":"  @Override\n  public void setParameters(Parameter[] pParameters) {\n    super.setParameters(pParameters);\n    for (int j = 0; j < pParameters.length; j++) {\n      Parameter p = pParameters[j];\n      if (\"divisor\".equalsIgnoreCase(p.getName())) {\n        divisor = Integer.parseInt(p.getValue());\n      }\n      else if (\"part\".equalsIgnoreCase(p.getName())) {\n        part = Integer.parseInt(p.getValue());\n      }\n      else {\n        throw new BuildException(\"unknown \" + p.getName());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setParameters(Parameter[] pParameters) {\n    super.setParameters(pParameters);\n    for (int j = 0; j < pParameters.length; j++) {\n      Parameter p = pParameters[j];\n      if (\"divisor\".equalsIgnoreCase(p.getName())) {\n        divisor = Integer.parseInt(p.getValue());\n      }\n      else if (\"part\".equalsIgnoreCase(p.getName())) {\n        part = Integer.parseInt(p.getValue());\n      }\n      else {\n        throw new BuildException(\"unknown \" + p.getName());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","sourceNew":null,"sourceOld":"  public void setParameters(Parameter[] pParameters) {\n    super.setParameters(pParameters);\n    for (int j = 0; j < pParameters.length; j++) {\n      Parameter p = pParameters[j];\n      if (\"divisor\".equalsIgnoreCase(p.getName())) {\n        divisor = Integer.parseInt(p.getValue());\n      }\n      else if (\"part\".equalsIgnoreCase(p.getName())) {\n        part = Integer.parseInt(p.getValue());\n      }\n      else {\n        throw new BuildException(\"unknown \" + p.getName());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneJUnitDividingSelector#setParameters(Parameter[]).mjava","sourceNew":"  @Override\n  public void setParameters(Parameter[] pParameters) {\n    super.setParameters(pParameters);\n    for (int j = 0; j < pParameters.length; j++) {\n      Parameter p = pParameters[j];\n      if (\"divisor\".equalsIgnoreCase(p.getName())) {\n        divisor = Integer.parseInt(p.getValue());\n      }\n      else if (\"part\".equalsIgnoreCase(p.getName())) {\n        part = Integer.parseInt(p.getValue());\n      }\n      else {\n        throw new BuildException(\"unknown \" + p.getName());\n      }\n    }\n  }\n\n","sourceOld":"  public void setParameters(Parameter[] pParameters) {\n    super.setParameters(pParameters);\n    for (int j = 0; j < pParameters.length; j++) {\n      Parameter p = pParameters[j];\n      if (\"divisor\".equalsIgnoreCase(p.getName())) {\n        divisor = Integer.parseInt(p.getValue());\n      }\n      else if (\"part\".equalsIgnoreCase(p.getName())) {\n        part = Integer.parseInt(p.getValue());\n      }\n      else {\n        throw new BuildException(\"unknown \" + p.getName());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["4b1b3c84254f47b901114aa4aa6099b98227356a"],"4b1b3c84254f47b901114aa4aa6099b98227356a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4b1b3c84254f47b901114aa4aa6099b98227356a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["4b1b3c84254f47b901114aa4aa6099b98227356a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"4b1b3c84254f47b901114aa4aa6099b98227356a":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b1b3c84254f47b901114aa4aa6099b98227356a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}