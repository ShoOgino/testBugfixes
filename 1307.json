{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#rewrite(Query).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#rewrite(Query).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#rewrite(Query).mjava","sourceNew":"  /** Expert: called to re-write queries into primitive queries.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public Query rewrite(Query original) throws IOException {\n    Query query = original;\n    for (Query rewrittenQuery = query.rewrite(reader); rewrittenQuery != query;\n         rewrittenQuery = query.rewrite(reader)) {\n      query = rewrittenQuery;\n    }\n    return query;\n  }\n\n","sourceOld":"  /** Expert: called to re-write queries into primitive queries.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public Query rewrite(Query original) throws IOException {\n    Query query = original;\n    for (Query rewrittenQuery = query.rewrite(reader); rewrittenQuery != query;\n         rewrittenQuery = query.rewrite(reader)) {\n      query = rewrittenQuery;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#rewrite(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#rewrite(Query).mjava","sourceNew":"  /** Expert: called to re-write queries into primitive queries.\n   * @throws BooleanQuery.TooManyClauses If a query would exceed \n   *         {@link BooleanQuery#getMaxClauseCount()} clauses.\n   */\n  public Query rewrite(Query original) throws IOException {\n    Query query = original;\n    for (Query rewrittenQuery = query.rewrite(reader); rewrittenQuery != query;\n         rewrittenQuery = query.rewrite(reader)) {\n      query = rewrittenQuery;\n    }\n    return query;\n  }\n\n","sourceOld":"  /** Expert: called to re-write queries into primitive queries.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public Query rewrite(Query original) throws IOException {\n    Query query = original;\n    for (Query rewrittenQuery = query.rewrite(reader); rewrittenQuery != query;\n         rewrittenQuery = query.rewrite(reader)) {\n      query = rewrittenQuery;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36c70eb3b44de4355a7168b762cadc0f1cf194bc","date":1561542955,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#rewrite(Query).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#rewrite(Query).mjava","sourceNew":"  /** Expert: called to re-write queries into primitive queries.\n   * @throws TooManyClauses If a query would exceed\n   *         {@link IndexSearcher#getMaxClauseCount()} clauses.\n   */\n  public Query rewrite(Query original) throws IOException {\n    Query query = original;\n    for (Query rewrittenQuery = query.rewrite(reader); rewrittenQuery != query;\n         rewrittenQuery = query.rewrite(reader)) {\n      query = rewrittenQuery;\n    }\n    query.visit(getNumClausesCheckVisitor());\n    return query;\n  }\n\n","sourceOld":"  /** Expert: called to re-write queries into primitive queries.\n   * @throws BooleanQuery.TooManyClauses If a query would exceed \n   *         {@link BooleanQuery#getMaxClauseCount()} clauses.\n   */\n  public Query rewrite(Query original) throws IOException {\n    Query query = original;\n    for (Query rewrittenQuery = query.rewrite(reader); rewrittenQuery != query;\n         rewrittenQuery = query.rewrite(reader)) {\n      query = rewrittenQuery;\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}