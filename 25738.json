{"path":"lucene/core/src/test/org/apache/lucene/search/BaseTestRangeFilter#pad(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/BaseTestRangeFilter#pad(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#pad(int).mjava","sourceNew":"  /**\n   * a simple padding function that should work with any int\n   */\n  public static String pad(int n) {\n    StringBuilder b = new StringBuilder(40);\n    String p = \"0\";\n    if (n < 0) {\n      p = \"-\";\n      n = Integer.MAX_VALUE + n + 1;\n    }\n    b.append(p);\n    String s = Integer.toString(n);\n    for (int i = s.length(); i <= intLength; i++) {\n      b.append(\"0\");\n    }\n    b.append(s);\n    \n    return b.toString();\n  }\n\n","sourceOld":"  /**\n   * a simple padding function that should work with any int\n   */\n  public static String pad(int n) {\n    StringBuilder b = new StringBuilder(40);\n    String p = \"0\";\n    if (n < 0) {\n      p = \"-\";\n      n = Integer.MAX_VALUE + n + 1;\n    }\n    b.append(p);\n    String s = Integer.toString(n);\n    for (int i = s.length(); i <= intLength; i++) {\n      b.append(\"0\");\n    }\n    b.append(s);\n    \n    return b.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}