{"path":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(AtomicReaderContext,ValueSourceWeight).mjava","commits":[{"id":"e5e679b9c5f68f1f331de920ae8366af75b44060","date":1295555804,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(AtomicReaderContext,ValueSourceWeight).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(Similarity,AtomicReaderContext,ValueSourceWeight).mjava","sourceNew":"    // constructor\n    private ValueSourceScorer(AtomicReaderContext context, ValueSourceWeight w) throws IOException {\n      super(w);\n      final IndexReader reader = context.reader;\n      qWeight = w.getValue();\n      // this is when/where the values are first created.\n      vals = valSrc.getValues(context);\n      delDocs = reader.getDeletedDocs();\n      maxDoc = reader.maxDoc();\n    }\n\n","sourceOld":"    // constructor\n    private ValueSourceScorer(Similarity similarity, AtomicReaderContext context, ValueSourceWeight w) throws IOException {\n      super(similarity,w);\n      final IndexReader reader = context.reader;\n      qWeight = w.getValue();\n      // this is when/where the values are first created.\n      vals = valSrc.getValues(context);\n      delDocs = reader.getDeletedDocs();\n      maxDoc = reader.maxDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(AtomicReaderContext,ValueSourceWeight).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(Similarity,AtomicReaderContext,ValueSourceWeight).mjava","sourceNew":"    // constructor\n    private ValueSourceScorer(AtomicReaderContext context, ValueSourceWeight w) throws IOException {\n      super(w);\n      final IndexReader reader = context.reader;\n      qWeight = w.getValue();\n      // this is when/where the values are first created.\n      vals = valSrc.getValues(context);\n      delDocs = reader.getDeletedDocs();\n      maxDoc = reader.maxDoc();\n    }\n\n","sourceOld":"    // constructor\n    private ValueSourceScorer(Similarity similarity, AtomicReaderContext context, ValueSourceWeight w) throws IOException {\n      super(similarity,w);\n      final IndexReader reader = context.reader;\n      qWeight = w.getValue();\n      // this is when/where the values are first created.\n      vals = valSrc.getValues(context);\n      delDocs = reader.getDeletedDocs();\n      maxDoc = reader.maxDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(AtomicReaderContext,ValueSourceWeight).mjava","pathOld":"/dev/null","sourceNew":"    // constructor\n    private ValueSourceScorer(AtomicReaderContext context, ValueSourceWeight w) throws IOException {\n      super(w);\n      final IndexReader reader = context.reader;\n      qWeight = w.getValue();\n      // this is when/where the values are first created.\n      vals = valSrc.getValues(context);\n      delDocs = reader.getDeletedDocs();\n      maxDoc = reader.maxDoc();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"290622dd4fb1bcc2f06bcd5d4494522d1f24df5c","date":1309476031,"type":4,"author":"Christopher John Male","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(AtomicReaderContext,ValueSourceWeight).mjava","sourceNew":null,"sourceOld":"    // constructor\n    private ValueSourceScorer(AtomicReaderContext context, ValueSourceWeight w) throws IOException {\n      super(w);\n      final IndexReader reader = context.reader;\n      qWeight = w.getValue();\n      // this is when/where the values are first created.\n      vals = valSrc.getValues(context);\n      delDocs = reader.getDeletedDocs();\n      maxDoc = reader.maxDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(AtomicReaderContext,ValueSourceWeight).mjava","sourceNew":null,"sourceOld":"    // constructor\n    private ValueSourceScorer(AtomicReaderContext context, ValueSourceWeight w) throws IOException {\n      super(w);\n      final IndexReader reader = context.reader;\n      qWeight = w.getValue();\n      // this is when/where the values are first created.\n      vals = valSrc.getValues(context);\n      delDocs = reader.getDeletedDocs();\n      maxDoc = reader.maxDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.ValueSourceScorer#ValueSourceScorer(AtomicReaderContext,ValueSourceWeight).mjava","sourceNew":null,"sourceOld":"    // constructor\n    private ValueSourceScorer(AtomicReaderContext context, ValueSourceWeight w) throws IOException {\n      super(w);\n      final IndexReader reader = context.reader;\n      qWeight = w.getValue();\n      // this is when/where the values are first created.\n      vals = valSrc.getValues(context);\n      delDocs = reader.getDeletedDocs();\n      maxDoc = reader.maxDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"290622dd4fb1bcc2f06bcd5d4494522d1f24df5c":["e5e679b9c5f68f1f331de920ae8366af75b44060"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e5e679b9c5f68f1f331de920ae8366af75b44060"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e5e679b9c5f68f1f331de920ae8366af75b44060":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["e5e679b9c5f68f1f331de920ae8366af75b44060","290622dd4fb1bcc2f06bcd5d4494522d1f24df5c"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e5e679b9c5f68f1f331de920ae8366af75b44060"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["e5e679b9c5f68f1f331de920ae8366af75b44060","290622dd4fb1bcc2f06bcd5d4494522d1f24df5c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["290622dd4fb1bcc2f06bcd5d4494522d1f24df5c"]},"commit2Childs":{"290622dd4fb1bcc2f06bcd5d4494522d1f24df5c":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","e5e679b9c5f68f1f331de920ae8366af75b44060","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e5e679b9c5f68f1f331de920ae8366af75b44060":["290622dd4fb1bcc2f06bcd5d4494522d1f24df5c","29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}