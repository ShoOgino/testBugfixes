{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream#appendJson(StringBuilder,Metric[]).mjava","commits":[{"id":"570664407cd3123a8039f1b4f2f6c6693bdaee31","date":1589893823,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream#appendJson(StringBuilder,Metric[]).mjava","pathOld":"/dev/null","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    //buf.append(\"}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dd52e26964d3bf8d6de8d71f62c4d6f9d017742","date":1589893823,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream#appendJson(StringBuilder,Metric[]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/StatsStream#appendJson(StringBuilder,Metric[]).mjava","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n  }\n\n","sourceOld":"  private void appendJson(StringBuilder buf,\n                          Metric[] _metrics) {\n    \n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        if(identifier.startsWith(\"per(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"per\", \"percentile\")).append('\"');\n        } else if(identifier.startsWith(\"std(\")) {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier.replaceFirst(\"std\", \"stddev\")).append('\"');\n        } else {\n          buf.append(\"\\\"facet_\").append(metricCount).append(\"\\\":\\\"\").append(identifier).append('\"');\n        }\n        ++metricCount;\n      }\n    }\n    //buf.append(\"}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0dd52e26964d3bf8d6de8d71f62c4d6f9d017742":["570664407cd3123a8039f1b4f2f6c6693bdaee31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"570664407cd3123a8039f1b4f2f6c6693bdaee31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0dd52e26964d3bf8d6de8d71f62c4d6f9d017742"]},"commit2Childs":{"0dd52e26964d3bf8d6de8d71f62c4d6f9d017742":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["570664407cd3123a8039f1b4f2f6c6693bdaee31"],"570664407cd3123a8039f1b4f2f6c6693bdaee31":["0dd52e26964d3bf8d6de8d71f62c4d6f9d017742"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}