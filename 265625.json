{"path":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#mergeSameWords().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#mergeSameWords().mjava","pathOld":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#mergeSameWords().mjava","sourceNew":"  /*\n   * since we aren't doing POS-tagging, merge the frequencies for entries of the same word (with different POS)\n   */\n  private void mergeSameWords() {\n    int i;\n    for (i = 0; i < GB2312_FIRST_CHAR + CHAR_NUM_IN_FILE; i++) {\n      if (wordItem_charArrayTable[i] == null)\n        continue;\n      int len = 1;\n      for (int j = 1; j < wordItem_charArrayTable[i].length; j++) {\n        if (Utility.compareArray(wordItem_charArrayTable[i][j], 0,\n            wordItem_charArrayTable[i][j - 1], 0) != 0)\n          len++;\n\n      }\n      if (len < wordItem_charArrayTable[i].length) {\n        char[][] tempArray = new char[len][];\n        int[] tempFreq = new int[len];\n        int k = 0;\n        tempArray[0] = wordItem_charArrayTable[i][0];\n        tempFreq[0] = wordItem_frequencyTable[i][0];\n        for (int j = 1; j < wordItem_charArrayTable[i].length; j++) {\n          if (Utility.compareArray(wordItem_charArrayTable[i][j], 0,\n              tempArray[k], 0) != 0) {\n            k++;\n            // temp[k] = wordItemTable[i][j];\n            tempArray[k] = wordItem_charArrayTable[i][j];\n            tempFreq[k] = wordItem_frequencyTable[i][j];\n          } else {\n            // temp[k].frequency += wordItemTable[i][j].frequency;\n            tempFreq[k] += wordItem_frequencyTable[i][j];\n          }\n        }\n        // wordItemTable[i] = temp;\n        wordItem_charArrayTable[i] = tempArray;\n        wordItem_frequencyTable[i] = tempFreq;\n      }\n    }\n  }\n\n","sourceOld":"  /*\n   * since we aren't doing POS-tagging, merge the frequencies for entries of the same word (with different POS)\n   */\n  private void mergeSameWords() {\n    int i;\n    for (i = 0; i < GB2312_FIRST_CHAR + CHAR_NUM_IN_FILE; i++) {\n      if (wordItem_charArrayTable[i] == null)\n        continue;\n      int len = 1;\n      for (int j = 1; j < wordItem_charArrayTable[i].length; j++) {\n        if (Utility.compareArray(wordItem_charArrayTable[i][j], 0,\n            wordItem_charArrayTable[i][j - 1], 0) != 0)\n          len++;\n\n      }\n      if (len < wordItem_charArrayTable[i].length) {\n        char[][] tempArray = new char[len][];\n        int[] tempFreq = new int[len];\n        int k = 0;\n        tempArray[0] = wordItem_charArrayTable[i][0];\n        tempFreq[0] = wordItem_frequencyTable[i][0];\n        for (int j = 1; j < wordItem_charArrayTable[i].length; j++) {\n          if (Utility.compareArray(wordItem_charArrayTable[i][j], 0,\n              tempArray[k], 0) != 0) {\n            k++;\n            // temp[k] = wordItemTable[i][j];\n            tempArray[k] = wordItem_charArrayTable[i][j];\n            tempFreq[k] = wordItem_frequencyTable[i][j];\n          } else {\n            // temp[k].frequency += wordItemTable[i][j].frequency;\n            tempFreq[k] += wordItem_frequencyTable[i][j];\n          }\n        }\n        // wordItemTable[i] = temp;\n        wordItem_charArrayTable[i] = tempArray;\n        wordItem_frequencyTable[i] = tempFreq;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}