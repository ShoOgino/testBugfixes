{"path":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    /* For testing:\n    MMapDirectory dir=new MMapDirectory(path, lockFactory);\n    dir.setUseUnmap(true);\n    return dir;\n    */\n\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    /* For testing:\n    MMapDirectory dir=new MMapDirectory(path, lockFactory);\n    dir.setUseUnmap(true);\n    return dir;\n    */\n\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4b4e97a5e8ab5b96cc56c561131d720c756756b","date":1269362401,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    /* For testing:\n    MMapDirectory dir=new MMapDirectory(path, lockFactory);\n    dir.setUseUnmap(true);\n    return dir;\n    */\n\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"304b0cf5f0d57c82882c9e69b0436c4f3b37cc10","date":1285076435,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.WINDOWS) {\n      if (MMapDirectory.UNMAP_SUPPORTED && Constants.JRE_IS_64BIT)\n        return new MMapDirectory(path, lockFactory);\n      else\n        return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.WINDOWS) {\n      if (MMapDirectory.UNMAP_SUPPORTED && Constants.JRE_IS_64BIT)\n        return new MMapDirectory(path, lockFactory);\n      else\n        return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b96295a82ab348e34b46fbab563908c64e0e111","date":1293404132,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.WINDOWS) {\n      if (MMapDirectory.UNMAP_SUPPORTED && Constants.JRE_IS_64BIT)\n        return new MMapDirectory(path, lockFactory);\n      else\n        return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.WINDOWS) {\n      if (MMapDirectory.UNMAP_SUPPORTED && Constants.JRE_IS_64BIT)\n        return new MMapDirectory(path, lockFactory);\n      else\n        return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.WINDOWS) {\n      if (MMapDirectory.UNMAP_SUPPORTED && Constants.JRE_IS_64BIT)\n        return new MMapDirectory(path, lockFactory);\n      else\n        return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56e95d7458ec68a4180d39536eb8b87c54b837e8","date":1308065938,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS || Constants.LINUX)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ed208afa1e7aa98899ddb1dedfddedddf898253","date":1308079587,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS || Constants.LINUX)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS || Constants.LINUX)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS || Constants.LINUX)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["304b0cf5f0d57c82882c9e69b0436c4f3b37cc10","4b96295a82ab348e34b46fbab563908c64e0e111"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4b96295a82ab348e34b46fbab563908c64e0e111"],"304b0cf5f0d57c82882c9e69b0436c4f3b37cc10":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["56e95d7458ec68a4180d39536eb8b87c54b837e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b96295a82ab348e34b46fbab563908c64e0e111":["304b0cf5f0d57c82882c9e69b0436c4f3b37cc10"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e4b4e97a5e8ab5b96cc56c561131d720c756756b","304b0cf5f0d57c82882c9e69b0436c4f3b37cc10"],"56e95d7458ec68a4180d39536eb8b87c54b837e8":["4b96295a82ab348e34b46fbab563908c64e0e111"],"9ed208afa1e7aa98899ddb1dedfddedddf898253":["4b96295a82ab348e34b46fbab563908c64e0e111","56e95d7458ec68a4180d39536eb8b87c54b837e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"304b0cf5f0d57c82882c9e69b0436c4f3b37cc10":["70ad682703b8585f5d0a637efec044d57ec05efb","4b96295a82ab348e34b46fbab563908c64e0e111","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4b96295a82ab348e34b46fbab563908c64e0e111":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","56e95d7458ec68a4180d39536eb8b87c54b837e8","9ed208afa1e7aa98899ddb1dedfddedddf898253"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"56e95d7458ec68a4180d39536eb8b87c54b837e8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9ed208afa1e7aa98899ddb1dedfddedddf898253"],"9ed208afa1e7aa98899ddb1dedfddedddf898253":[],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["304b0cf5f0d57c82882c9e69b0436c4f3b37cc10","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","9ed208afa1e7aa98899ddb1dedfddedddf898253","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}