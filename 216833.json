{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 120 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 120 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 120 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 120 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 120 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 120 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de1105a708782bf9bb60cc8107bab4d182a7ea87","date":1346759847,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 480 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 120 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e64e92242ae7abd6292da925cc0df6562b3304f9","date":1347731101,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 600 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 480 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad4a95e4e24f12ea4dad18db456c92edd64fca4e","date":1351468815,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 180 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 600 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 180 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 600 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5f4d6f5a775242403f0bce479e7b79aeb920fb8","date":1356016145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 230);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 180 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 230);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 180 * (TEST_NIGHTLY ? 2 : 1) * RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 330);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 230);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 330);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 230);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add1e7dd742ea533ff4318cea83ca0a1f669f662","date":1585262285,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#waitForRecoveriesToFinish(String,ZkStateReader,boolean,boolean).mjava","sourceNew":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 330, SECONDS);\n  }\n\n","sourceOld":"  protected void waitForRecoveriesToFinish(String collection, ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout)\n      throws Exception {\n    waitForRecoveriesToFinish(collection, zkStateReader, verbose, failOnTimeout, 330);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["ad4a95e4e24f12ea4dad18db456c92edd64fca4e","c5f4d6f5a775242403f0bce479e7b79aeb920fb8"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c5f4d6f5a775242403f0bce479e7b79aeb920fb8","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"ad4a95e4e24f12ea4dad18db456c92edd64fca4e":["e64e92242ae7abd6292da925cc0df6562b3304f9"],"c5f4d6f5a775242403f0bce479e7b79aeb920fb8":["ad4a95e4e24f12ea4dad18db456c92edd64fca4e"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["c5f4d6f5a775242403f0bce479e7b79aeb920fb8"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"de1105a708782bf9bb60cc8107bab4d182a7ea87":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"add1e7dd742ea533ff4318cea83ca0a1f669f662":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"e64e92242ae7abd6292da925cc0df6562b3304f9":["de1105a708782bf9bb60cc8107bab4d182a7ea87"],"f2126b84bd093fa3d921582a109a0ee578c28126":["e64e92242ae7abd6292da925cc0df6562b3304f9","ad4a95e4e24f12ea4dad18db456c92edd64fca4e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["add1e7dd742ea533ff4318cea83ca0a1f669f662"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"ad4a95e4e24f12ea4dad18db456c92edd64fca4e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c5f4d6f5a775242403f0bce479e7b79aeb920fb8","f2126b84bd093fa3d921582a109a0ee578c28126"],"c5f4d6f5a775242403f0bce479e7b79aeb920fb8":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","add1e7dd742ea533ff4318cea83ca0a1f669f662"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"de1105a708782bf9bb60cc8107bab4d182a7ea87":["e64e92242ae7abd6292da925cc0df6562b3304f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"add1e7dd742ea533ff4318cea83ca0a1f669f662":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"e64e92242ae7abd6292da925cc0df6562b3304f9":["ad4a95e4e24f12ea4dad18db456c92edd64fca4e","f2126b84bd093fa3d921582a109a0ee578c28126"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"2c30e4c1cee08b3b229a77991882594fe7250b66":["c7869f64c874ebf7f317d22c00baf2b6857797a6","de1105a708782bf9bb60cc8107bab4d182a7ea87","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}