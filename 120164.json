{"path":"lucene/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,int[],Outputs[T]).mjava","commits":[{"id":"b3be20ca1091c0b7cdb2308b9023606a5e451cec","date":1327877325,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,int[],Outputs[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, int[] nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","sourceOld":"  // make a new empty FST, for building\n  public FST(INPUT_TYPE inputType, Outputs<T> outputs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    writer = new BytesWriter();\n\n    emptyOutput = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,int[],Outputs[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, int[] nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","sourceOld":"  // make a new empty FST, for building\n  public FST(INPUT_TYPE inputType, Outputs<T> outputs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    writer = new BytesWriter();\n\n    emptyOutput = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,int[],Outputs[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, int[] nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","sourceOld":"  // make a new empty FST, for building\n  public FST(INPUT_TYPE inputType, Outputs<T> outputs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    \n    writer = new BytesWriter();\n\n    emptyOutput = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,int[],Outputs[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,int[],Outputs[T]).mjava","sourceNew":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, int[] nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","sourceOld":"  // Creates a packed FST\n  private FST(INPUT_TYPE inputType, int[] nodeRefToAddress, Outputs<T> outputs) {\n    packed = true;\n    this.inputType = inputType;\n    bytes = new byte[128];\n    this.nodeRefToAddress = nodeRefToAddress;\n    this.outputs = outputs;\n    NO_OUTPUT = outputs.getNoOutput();\n    writer = new BytesWriter();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["817882884229bace7dc5d1b75f6b0e4aa1e47122","3a119bbc8703c10faa329ec201c654b3a35a1e3e","5b6fdfce35d0adb18836cf8711abe487a934df33"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3be20ca1091c0b7cdb2308b9023606a5e451cec","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}