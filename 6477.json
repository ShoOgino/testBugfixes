{"path":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(List[TermInfo],float,int).mjava","commits":[{"id":"7327eec6fde8afb35c01f6234cb50c42a7c737d3","date":1374238360,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(List[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( List<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(List[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( List<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08","date":1378464767,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(List[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( List<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7327eec6fde8afb35c01f6234cb50c42a7c737d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08":["7327eec6fde8afb35c01f6234cb50c42a7c737d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","7327eec6fde8afb35c01f6234cb50c42a7c737d3"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"7327eec6fde8afb35c01f6234cb50c42a7c737d3":["cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08"],"cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}