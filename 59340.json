{"path":"src/test/org/apache/solr/highlight/HighlighterTest#testMaxChars().mjava","commits":[{"id":"f1a2d7b9584088df2db62e5e4f42dc23b357de8e","date":1183506271,"type":0,"author":"Mike Klaas","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testMaxChars().mjava","pathOld":"/dev/null","sourceNew":"  public void testMaxChars() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"fl\", \"id score\");\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.snippets\", \"10\");\n    args.put(\"hl.fl\", \"t_text\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n\n    assertU(adoc(\"t_text\", LONG_TEXT, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"token at start of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[count(str)=1]\"\n            );\n    args.put(\"hl.maxAnalyzedChars\", \"20\");\n    sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n    assertQ(\"token at end of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1'][not(*)]\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82fff9df8ebf1830fe880d4d1cbed04e81684a4d","date":1215474756,"type":3,"author":"Mike Klaas","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testMaxChars().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testMaxChars().mjava","sourceNew":"  public void testMaxChars() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"fl\", \"id score\");\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.snippets\", \"10\");\n    args.put(\"hl.fl\", \"t_text\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n\n    assertU(adoc(\"t_text\", LONG_TEXT, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"token at start of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[count(str)=1]\"\n            );\n    args.put(\"hl.maxAnalyzedChars\", \"20\");\n    sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n    assertQ(\"token at end of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1'][not(*)]\"\n            );\n    args.put(\"hl.maxAnalyzedChars\", \"-1\");\n    sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n    assertQ(\"token at start of text\",\n        sumLRF.makeRequest(\"t_text:disjoint\"),\n        \"//lst[@name='highlighting']/lst[@name='1']\",\n        \"//lst[@name='1']/arr[count(str)=1]\"\n    );\n  }\n\n","sourceOld":"  public void testMaxChars() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"fl\", \"id score\");\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.snippets\", \"10\");\n    args.put(\"hl.fl\", \"t_text\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n\n    assertU(adoc(\"t_text\", LONG_TEXT, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"token at start of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[count(str)=1]\"\n            );\n    args.put(\"hl.maxAnalyzedChars\", \"20\");\n    sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n    assertQ(\"token at end of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1'][not(*)]\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/HighlighterTest#testMaxChars().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testMaxChars().mjava","sourceNew":"  public void testMaxChars() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"fl\", \"id score\");\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.snippets\", \"10\");\n    args.put(\"hl.fl\", \"t_text\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n\n    assertU(adoc(\"t_text\", LONG_TEXT, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"token at start of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[count(str)=1]\"\n            );\n    args.put(\"hl.maxAnalyzedChars\", \"20\");\n    sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n    assertQ(\"token at end of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1'][not(*)]\"\n            );\n    args.put(\"hl.maxAnalyzedChars\", \"-1\");\n    sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n    assertQ(\"token at start of text\",\n        sumLRF.makeRequest(\"t_text:disjoint\"),\n        \"//lst[@name='highlighting']/lst[@name='1']\",\n        \"//lst[@name='1']/arr[count(str)=1]\"\n    );\n  }\n\n","sourceOld":"  public void testMaxChars() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"fl\", \"id score\");\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.snippets\", \"10\");\n    args.put(\"hl.fl\", \"t_text\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n\n    assertU(adoc(\"t_text\", LONG_TEXT, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"token at start of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[count(str)=1]\"\n            );\n    args.put(\"hl.maxAnalyzedChars\", \"20\");\n    sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n    assertQ(\"token at end of text\",\n            sumLRF.makeRequest(\"t_text:disjoint\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1'][not(*)]\"\n            );\n    args.put(\"hl.maxAnalyzedChars\", \"-1\");\n    sumLRF = h.getRequestFactory(\"standard\", 0, 200, args);\n    assertQ(\"token at start of text\",\n        sumLRF.makeRequest(\"t_text:disjoint\"),\n        \"//lst[@name='highlighting']/lst[@name='1']\",\n        \"//lst[@name='1']/arr[count(str)=1]\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82fff9df8ebf1830fe880d4d1cbed04e81684a4d":["f1a2d7b9584088df2db62e5e4f42dc23b357de8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["82fff9df8ebf1830fe880d4d1cbed04e81684a4d"],"f1a2d7b9584088df2db62e5e4f42dc23b357de8e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"82fff9df8ebf1830fe880d4d1cbed04e81684a4d":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f1a2d7b9584088df2db62e5e4f42dc23b357de8e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f1a2d7b9584088df2db62e5e4f42dc23b357de8e":["82fff9df8ebf1830fe880d4d1cbed04e81684a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}