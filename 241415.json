{"path":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxMergeCount(int).mjava","commits":[{"id":"8984893e6e8e4eaf80ab863dafae092a2e9b0eaa","date":1261431504,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxMergeCount(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Sets the max # simultaneous merges that are allowed.\n   *  If a merge is necessary yet we already have this many\n   *  threads running, the incoming thread (that is calling\n   *  add/updateDocument) will block until a merge thread\n   *  has completed.  Note that we will only run the\n   *  smallest {@link #setMaxThreadCount} merges at a time. */\n  public void setMaxMergeCount(int count) {\n    if (count < 1) {\n      throw new IllegalArgumentException(\"count should be at least 1\");\n    }\n    if (count < maxThreadCount) {\n      throw new IllegalArgumentException(\"count should be >= maxThreadCount (= \" + maxThreadCount + \")\");\n    }\n    maxMergeCount = count;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxMergeCount(int).mjava","pathOld":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxMergeCount(int).mjava","sourceNew":"  /** Sets the max # simultaneous merges that are allowed.\n   *  If a merge is necessary yet we already have this many\n   *  threads running, the incoming thread (that is calling\n   *  add/updateDocument) will block until a merge thread\n   *  has completed.  Note that we will only run the\n   *  smallest {@link #setMaxThreadCount} merges at a time. */\n  public void setMaxMergeCount(int count) {\n    if (count < 1) {\n      throw new IllegalArgumentException(\"count should be at least 1\");\n    }\n    if (count < maxThreadCount) {\n      throw new IllegalArgumentException(\"count should be >= maxThreadCount (= \" + maxThreadCount + \")\");\n    }\n    maxMergeCount = count;\n  }\n\n","sourceOld":"  /** Sets the max # simultaneous merges that are allowed.\n   *  If a merge is necessary yet we already have this many\n   *  threads running, the incoming thread (that is calling\n   *  add/updateDocument) will block until a merge thread\n   *  has completed.  Note that we will only run the\n   *  smallest {@link #setMaxThreadCount} merges at a time. */\n  public void setMaxMergeCount(int count) {\n    if (count < 1) {\n      throw new IllegalArgumentException(\"count should be at least 1\");\n    }\n    if (count < maxThreadCount) {\n      throw new IllegalArgumentException(\"count should be >= maxThreadCount (= \" + maxThreadCount + \")\");\n    }\n    maxMergeCount = count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8984893e6e8e4eaf80ab863dafae092a2e9b0eaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8984893e6e8e4eaf80ab863dafae092a2e9b0eaa"]},"commit2Childs":{"8984893e6e8e4eaf80ab863dafae092a2e9b0eaa":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8984893e6e8e4eaf80ab863dafae092a2e9b0eaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}