{"path":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","commits":[{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codec instanceof Lucene3xCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random(), 13, 27);\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, termIndexInterval, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","date":1379624229,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    codec.postingsFormat().fieldsConsumer(state).write(new DataFields(fields));\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    final FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77f264c55cbf75404f8601ae7290d69157273a56","date":1380484282,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    codec.postingsFormat().fieldsConsumer(state).write(new DataFields(fields));\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    codec.postingsFormat().fieldsConsumer(state).write(new DataFields(fields));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63","date":1398957288,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    codec.postingsFormat().fieldsConsumer(state).write(new DataFields(fields));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"057a1793765d068ea9302f1a29e21734ee58d41e","date":1408130117,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Constants.LUCENE_MAIN_VERSION, SEGMENT, 10000, false, codec, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb","date":1411653326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null, StringHelper.randomId());\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null, StringHelper.randomId());\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null);\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","bugFix":["057a1793765d068ea9302f1a29e21734ee58d41e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","date":1412231650,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(SegmentInfo,FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(SegmentInfo si, final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = si.getCodec();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null, StringHelper.randomId());\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(SegmentInfo,FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(SegmentInfo si, final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = si.getCodec();\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final Codec codec = Codec.getDefault();\n    final SegmentInfo si = new SegmentInfo(dir, Version.LATEST, SEGMENT, 10000, false, codec, null, StringHelper.randomId());\n    final SegmentWriteState state = new SegmentWriteState(InfoStream.getDefault(), dir, si, fieldInfos, null, newIOContext(random()));\n\n    Arrays.sort(fields);\n    FieldsConsumer consumer = codec.postingsFormat().fieldsConsumer(state);\n    boolean success = false;\n    try {\n      consumer.write(new DataFields(fields));\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(consumer);\n      } else {\n        IOUtils.closeWhileHandlingException(consumer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"a45bec74b98f6fc05f52770cfb425739e6563960":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["057a1793765d068ea9302f1a29e21734ee58d41e","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"057a1793765d068ea9302f1a29e21734ee58d41e":["7afb64ff3a701f68b2689cafff6c5bdeb4f67f63"],"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63":["77f264c55cbf75404f8601ae7290d69157273a56"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["5f6bd27530a2846413fe2d00030493c0e2d3a072","f382b2e9f4ca7dbe98e2f15da70983ecfc02b171"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["a45bec74b98f6fc05f52770cfb425739e6563960"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"77f264c55cbf75404f8601ae7290d69157273a56":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["057a1793765d068ea9302f1a29e21734ee58d41e"]},"commit2Childs":{"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["9bb9a29a5e71a90295f175df8919802993142c9a"],"a45bec74b98f6fc05f52770cfb425739e6563960":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["9bb9a29a5e71a90295f175df8919802993142c9a"],"057a1793765d068ea9302f1a29e21734ee58d41e":["5f6bd27530a2846413fe2d00030493c0e2d3a072","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"7afb64ff3a701f68b2689cafff6c5bdeb4f67f63":["057a1793765d068ea9302f1a29e21734ee58d41e"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["77f264c55cbf75404f8601ae7290d69157273a56"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"77f264c55cbf75404f8601ae7290d69157273a56":["7afb64ff3a701f68b2689cafff6c5bdeb4f67f63"],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}