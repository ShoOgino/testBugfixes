{"path":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","commits":[{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testDerefBytesDocValuesField().mjava","sourceNew":"  public void testBinaryDocValuesField() throws Exception {\n    BinaryDocValuesField field = new BinaryDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetBoost(field);\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(\"UTF-8\"));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","sourceOld":"  public void testDerefBytesDocValuesField() throws Exception {\n    DerefBytesDocValuesField field = new DerefBytesDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetBoost(field);\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(\"UTF-8\"));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","pathOld":"/dev/null","sourceNew":"  public void testBinaryDocValuesField() throws Exception {\n    BinaryDocValuesField field = new BinaryDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetBoost(field);\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(\"UTF-8\"));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","sourceNew":"  public void testBinaryDocValuesField() throws Exception {\n    BinaryDocValuesField field = new BinaryDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetBoost(field);\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(StandardCharsets.UTF_8));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","sourceOld":"  public void testBinaryDocValuesField() throws Exception {\n    BinaryDocValuesField field = new BinaryDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetBoost(field);\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(\"UTF-8\"));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","sourceNew":"  public void testBinaryDocValuesField() throws Exception {\n    BinaryDocValuesField field = new BinaryDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetBoost(field);\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(StandardCharsets.UTF_8));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","sourceOld":"  public void testBinaryDocValuesField() throws Exception {\n    BinaryDocValuesField field = new BinaryDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetBoost(field);\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(\"UTF-8\"));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testBinaryDocValuesField().mjava","sourceNew":"  public void testBinaryDocValuesField() throws Exception {\n    BinaryDocValuesField field = new BinaryDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(StandardCharsets.UTF_8));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","sourceOld":"  public void testBinaryDocValuesField() throws Exception {\n    BinaryDocValuesField field = new BinaryDocValuesField(\"foo\", new BytesRef(\"bar\"));\n\n    trySetBoost(field);\n    trySetByteValue(field);\n    field.setBytesValue(\"fubar\".getBytes(StandardCharsets.UTF_8));\n    field.setBytesValue(new BytesRef(\"baz\"));\n    trySetDoubleValue(field);\n    trySetIntValue(field);\n    trySetFloatValue(field);\n    trySetLongValue(field);\n    trySetReaderValue(field);\n    trySetShortValue(field);\n    trySetStringValue(field);\n    trySetTokenStreamValue(field);\n    \n    assertEquals(new BytesRef(\"baz\"), field.binaryValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["d4d69c535930b5cce125cff868d40f6373dc27d4","7d89d7e4e5101347833eea558851bf4209218619"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d89d7e4e5101347833eea558851bf4209218619":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"acd9883560fd89e6448b2b447302fe543040cd4f":["7d89d7e4e5101347833eea558851bf4209218619"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}