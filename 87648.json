{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","commits":[{"id":"a684698d2d785b642cc0dda9c81091abc2bd90b5","date":1078844108,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Substitute �, �, �, �, �, � , �, �, �, �\n\t */\n\tprivate void substitute( StringBuffer buffer )\n\t{\n\t\tfor ( int i = 0; i < buffer.length(); i++ )\n\t\t{\n\t\t\tswitch (buffer.charAt(i))\n\t\t\t{\n\t\t\t\tcase '�':\n\t\t\t\tcase '�':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'a');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase '�':\n\t\t\t\tcase '�':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'e');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase '�':\n\t\t\t\tcase '�':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'u');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase '�':\n\t\t\t\tcase 'i':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'i');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase '�':\n\t\t\t\tcase '�':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'o');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9","date":1078974336,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","sourceNew":"  /**\n   * Substitute �, �, �, �, �, � , �, �, �, �\n   */\n  private void substitute(StringBuffer buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case '�':\n        case '�':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case '�':\n        case '�':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case '�':\n        case '�':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case '�':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case '�':\n        case '�':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","sourceOld":"\t/**\n\t * Substitute �, �, �, �, �, � , �, �, �, �\n\t */\n\tprivate void substitute( StringBuffer buffer )\n\t{\n\t\tfor ( int i = 0; i < buffer.length(); i++ )\n\t\t{\n\t\t\tswitch (buffer.charAt(i))\n\t\t\t{\n\t\t\t\tcase '�':\n\t\t\t\tcase '�':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'a');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase '�':\n\t\t\t\tcase '�':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'e');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase '�':\n\t\t\t\tcase '�':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'u');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase '�':\n\t\t\t\tcase 'i':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'i');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase '�':\n\t\t\t\tcase '�':\n\t\t\t\t{\n\t\t\t\t\tbuffer.setCharAt(i, 'o');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c5f80e5f63d41b6106050e62a1b9318297d926e","date":1092779813,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","sourceNew":"  /**\n   * Substitute ä, ë, ï, ö, ü, á , é, í, ó, ú\n   */\n  private void substitute(StringBuffer buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case 'ä':\n        case 'á':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case 'ë':\n        case 'é':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case 'ü':\n        case 'ú':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case 'ï':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case 'ö':\n        case 'ó':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Substitute �, �, �, �, �, � , �, �, �, �\n   */\n  private void substitute(StringBuffer buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case '�':\n        case '�':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case '�':\n        case '�':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case '�':\n        case '�':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case '�':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case '�':\n        case '�':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer#substitute(StringBuffer).mjava","sourceNew":"  /**\n   * Substitute ä, ë, ï, ö, ü, á , é, í, ó, ú\n   */\n  private void substitute(StringBuffer buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case 'ä':\n        case 'á':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case 'ë':\n        case 'é':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case 'ü':\n        case 'ú':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case 'ï':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case 'ö':\n        case 'ó':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Substitute ä, ë, ï, ö, ü, á , é, í, ó, ú\n   */\n  private void substitute(StringBuffer buffer) {\n    for (int i = 0; i < buffer.length(); i++) {\n      switch (buffer.charAt(i)) {\n        case 'ä':\n        case 'á':\n          {\n            buffer.setCharAt(i, 'a');\n            break;\n          }\n        case 'ë':\n        case 'é':\n          {\n            buffer.setCharAt(i, 'e');\n            break;\n          }\n        case 'ü':\n        case 'ú':\n          {\n            buffer.setCharAt(i, 'u');\n            break;\n          }\n        case 'ï':\n        case 'i':\n          {\n            buffer.setCharAt(i, 'i');\n            break;\n          }\n        case 'ö':\n        case 'ó':\n          {\n            buffer.setCharAt(i, 'o');\n            break;\n          }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["6c5f80e5f63d41b6106050e62a1b9318297d926e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a684698d2d785b642cc0dda9c81091abc2bd90b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6c5f80e5f63d41b6106050e62a1b9318297d926e":["37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9":["a684698d2d785b642cc0dda9c81091abc2bd90b5"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a684698d2d785b642cc0dda9c81091abc2bd90b5"],"a684698d2d785b642cc0dda9c81091abc2bd90b5":["37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9"],"6c5f80e5f63d41b6106050e62a1b9318297d926e":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9":["6c5f80e5f63d41b6106050e62a1b9318297d926e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}