{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","commits":[{"id":"4f8c38ac26359dc90605e71c2bfd327e6c18362c","date":1233040912,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      String errs = verifyWithSchema(fields);\n      if (errs != null) {\n        throw new DataImportHandlerException(\n                DataImportHandlerException.SEVERE, errs);\n      }\n    }\n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core,\n               Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      String errs = verifyWithSchema(fields);\n      if (errs != null) {\n        throw new DataImportHandlerException(\n                DataImportHandlerException.SEVERE, errs);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be21b70688b510ce9b71baca540e637755819715","date":1237458453,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n    }\n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      String errs = verifyWithSchema(fields);\n      if (errs != null) {\n        throw new DataImportHandlerException(\n                DataImportHandlerException.SEVERE, errs);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7440ac2370cd87eacfa33120a325f7fcb0f2973","date":1247237728,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n    }    \n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f24d87791042430a77c0e6c1e7a59d5840146f5e","date":1252329554,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n    }    \n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n    }    \n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be21b70688b510ce9b71baca540e637755819715":["4f8c38ac26359dc90605e71c2bfd327e6c18362c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"f24d87791042430a77c0e6c1e7a59d5840146f5e":["d7440ac2370cd87eacfa33120a325f7fcb0f2973"],"4f8c38ac26359dc90605e71c2bfd327e6c18362c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["f24d87791042430a77c0e6c1e7a59d5840146f5e"],"d7440ac2370cd87eacfa33120a325f7fcb0f2973":["be21b70688b510ce9b71baca540e637755819715"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"be21b70688b510ce9b71baca540e637755819715":["d7440ac2370cd87eacfa33120a325f7fcb0f2973"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4f8c38ac26359dc90605e71c2bfd327e6c18362c"],"4f8c38ac26359dc90605e71c2bfd327e6c18362c":["be21b70688b510ce9b71baca540e637755819715"],"f24d87791042430a77c0e6c1e7a59d5840146f5e":["ad94625fb8d088209f46650c8097196fec67f00c"],"d7440ac2370cd87eacfa33120a325f7fcb0f2973":["f24d87791042430a77c0e6c1e7a59d5840146f5e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}