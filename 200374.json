{"path":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","sourceNew":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"optimized\", reader.isOptimized() );\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","sourceOld":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"optimized\", reader.isOptimized() );\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","sourceNew":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"optimized\", reader.isOptimized() );\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","sourceOld":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"optimized\", reader.isOptimized() );\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","sourceNew":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"optimized\", reader.isOptimized() );\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","sourceOld":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"optimized\", reader.isOptimized() );\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","sourceNew":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"segmentCount\", reader.getSequentialSubReaders().length);\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","sourceOld":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"optimized\", reader.isOptimized() );\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","sourceNew":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          Terms terms = fieldsEnum.terms();\n          if (terms != null) {\n            TermsEnum termsEnum = terms.iterator(null);\n            while(termsEnum.next() != null) {\n              numTerms++;\n            }\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"segmentCount\", reader.getSequentialSubReaders().length);\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","sourceOld":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          TermsEnum termsEnum = fieldsEnum.terms();\n          while(termsEnum.next() != null) {\n            numTerms++;\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"segmentCount\", reader.getSequentialSubReaders().length);\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb037ddbc4ef8b427189b9ca13486ea830d0c766","date":1325813112,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","sourceNew":"  public static SimpleOrderedMap<Object> getIndexInfo(IndexReader reader, boolean countTerms) throws IOException {\n    return getIndexInfo(reader, countTerms ? 1 : 0, null, null);\n  }\n\n","sourceOld":"  public static SimpleOrderedMap<Object> getIndexInfo( IndexReader reader, boolean countTerms ) throws IOException {\n    Directory dir = reader.directory();\n    SimpleOrderedMap<Object> indexInfo = new SimpleOrderedMap<Object>();\n    \n    indexInfo.add(\"numDocs\", reader.numDocs());\n    indexInfo.add(\"maxDoc\", reader.maxDoc());\n    \n    if( countTerms ) {\n      Fields fields = MultiFields.getFields(reader);\n      int numTerms = 0;\n      if (fields != null) {\n        FieldsEnum fieldsEnum = fields.iterator();\n        while(fieldsEnum.next() != null) {\n          Terms terms = fieldsEnum.terms();\n          if (terms != null) {\n            TermsEnum termsEnum = terms.iterator(null);\n            while(termsEnum.next() != null) {\n              numTerms++;\n            }\n          }\n        }\n      }\n      indexInfo.add(\"numTerms\", numTerms );\n    }\n\n    indexInfo.add(\"version\", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?\n    indexInfo.add(\"segmentCount\", reader.getSequentialSubReaders().length);\n    indexInfo.add(\"current\", reader.isCurrent() );\n    indexInfo.add(\"hasDeletions\", reader.hasDeletions() );\n    indexInfo.add(\"directory\", dir );\n    indexInfo.add(\"lastModified\", new Date(IndexReader.lastModified(dir)) );\n    return indexInfo;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d207426bd26fa5c1014e26d21d87603aea68b7","date":1327944562,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(DirectoryReader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","sourceNew":"  public static SimpleOrderedMap<Object> getIndexInfo(DirectoryReader reader, boolean countTerms) throws IOException {\n    return getIndexInfo(reader, countTerms ? 1 : 0, null, null);\n  }\n\n","sourceOld":"  public static SimpleOrderedMap<Object> getIndexInfo(IndexReader reader, boolean countTerms) throws IOException {\n    return getIndexInfo(reader, countTerms ? 1 : 0, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(DirectoryReader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexInfo(IndexReader,boolean).mjava","sourceNew":"  public static SimpleOrderedMap<Object> getIndexInfo(DirectoryReader reader, boolean countTerms) throws IOException {\n    return getIndexInfo(reader, countTerms ? 1 : 0, null, null);\n  }\n\n","sourceOld":"  public static SimpleOrderedMap<Object> getIndexInfo(IndexReader reader, boolean countTerms) throws IOException {\n    return getIndexInfo(reader, countTerms ? 1 : 0, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eb037ddbc4ef8b427189b9ca13486ea830d0c766":["3cc749c053615f5871f3b95715fe292f34e70a53"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96d207426bd26fa5c1014e26d21d87603aea68b7":["eb037ddbc4ef8b427189b9ca13486ea830d0c766"],"3cc749c053615f5871f3b95715fe292f34e70a53":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["eb037ddbc4ef8b427189b9ca13486ea830d0c766","96d207426bd26fa5c1014e26d21d87603aea68b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"]},"commit2Childs":{"eb037ddbc4ef8b427189b9ca13486ea830d0c766":["96d207426bd26fa5c1014e26d21d87603aea68b7","5cab9a86bd67202d20b6adc463008c8e982b070a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"96d207426bd26fa5c1014e26d21d87603aea68b7":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3cc749c053615f5871f3b95715fe292f34e70a53":["eb037ddbc4ef8b427189b9ca13486ea830d0c766"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}