{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = childWeight.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitDocIdSet parents = parentsFilter.getDocIdSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents.bits(), firstChildDoc, scoreMode);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext, Bits acceptDocs) throws IOException {\n\n      final Scorer childScorer = childWeight.scorer(readerContext, readerContext.reader().getLiveDocs());\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitDocIdSet parents = parentsFilter.getDocIdSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents.bits(), firstChildDoc, scoreMode, acceptDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3915945926c0bf7def01b0c504977709d3aed3","date":1436197708,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = childWeight.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = childWeight.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitDocIdSet parents = parentsFilter.getDocIdSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents.bits(), firstChildDoc, scoreMode);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = childWeight.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.iterator().nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = childWeight.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ab132e6f739772060bedf1719a057e97d5b759","date":1468422264,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = in.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.iterator().nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = childWeight.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.iterator().nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = in.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.iterator().nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = childWeight.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.iterator().nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c","date":1485769582,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(false);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = in.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.iterator().nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(false);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // parent document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer childScorer = in.scorer(readerContext);\n      if (childScorer == null) {\n        // No matches\n        return null;\n      }\n\n      final int firstChildDoc = childScorer.iterator().nextDoc();\n      if (firstChildDoc == DocIdSetIterator.NO_MORE_DOCS) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this does not take accept docs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n\n      if (parents == null) {\n        // No matches\n        return null;\n      }\n\n      return new BlockJoinScorer(this, childScorer, parents, firstChildDoc, scoreMode);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f3e9c0fc20b3107388ec853a6fbad9f891b461","date":1502359844,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(Long.MAX_VALUE);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d6ba405c7c8192661bdf7ce782181d12f3162a6","date":1502361392,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(Long.MAX_VALUE);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(Long.MAX_VALUE);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","date":1502692251,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(Long.MAX_VALUE);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      final ScorerSupplier scorerSupplier = scorerSupplier(context);\n      if (scorerSupplier == null) {\n        return null;\n      }\n      return scorerSupplier.get(false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24f3e9c0fc20b3107388ec853a6fbad9f891b461":["ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c"],"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c":["96ab132e6f739772060bedf1719a057e97d5b759"],"96ab132e6f739772060bedf1719a057e97d5b759":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"4b3915945926c0bf7def01b0c504977709d3aed3":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dd748bb245633a8195281556bb0e68a6ea97d18","96ab132e6f739772060bedf1719a057e97d5b759"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d6ba405c7c8192661bdf7ce782181d12f3162a6":["ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c","24f3e9c0fc20b3107388ec853a6fbad9f891b461"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c","7d6ba405c7c8192661bdf7ce782181d12f3162a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c","7d6ba405c7c8192661bdf7ce782181d12f3162a6"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["4b3915945926c0bf7def01b0c504977709d3aed3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d6ba405c7c8192661bdf7ce782181d12f3162a6"]},"commit2Childs":{"24f3e9c0fc20b3107388ec853a6fbad9f891b461":["7d6ba405c7c8192661bdf7ce782181d12f3162a6"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c":["24f3e9c0fc20b3107388ec853a6fbad9f891b461","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","7d6ba405c7c8192661bdf7ce782181d12f3162a6","58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"96ab132e6f739772060bedf1719a057e97d5b759":["ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"4b3915945926c0bf7def01b0c504977709d3aed3":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["4b3915945926c0bf7def01b0c504977709d3aed3"],"7d6ba405c7c8192661bdf7ce782181d12f3162a6":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["96ab132e6f739772060bedf1719a057e97d5b759","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}