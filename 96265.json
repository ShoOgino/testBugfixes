{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","commits":[{"id":"8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093","date":1401932592,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    era = random().nextBoolean() ? 0 : 1;\n    year = 1 + random().nextInt(2_000_000);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb53c8e9da2afe33252ee698dda412264252cfa7","date":1418531581,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    era = random().nextBoolean() ? 0 : 1;\n    year = 1 + random().nextInt(2_000_000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0","date":1426015524,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cb53c8e9da2afe33252ee698dda412264252cfa7","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["af2638813028b254a88b418ebeafb541afb49653","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}