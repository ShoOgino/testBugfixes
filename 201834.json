{"path":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredScorer(AtomicReaderContext,boolean,boolean,Weight,DocIdSet).mjava","commits":[{"id":"cc7674a6feb46b954ebfb8ace9eb0383adb93de9","date":1348214796,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredScorer(AtomicReaderContext,boolean,boolean,Weight,DocIdSet).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Scorer filteredScorer(final AtomicReaderContext context,\n        boolean scoreDocsInOrder, boolean topScorer, Weight weight,\n        DocIdSet docIdSet) throws IOException {\n      Bits filterAcceptDocs = docIdSet.bits();\n      if (filterAcceptDocs == null) {\n        return LEAP_FROG_QUERY_FIRST_STRATEGY.filteredScorer(context, scoreDocsInOrder, topScorer, weight, docIdSet);\n      }\n      final Scorer scorer = weight.scorer(context, true, false, null);\n      return scorer == null ? null : new QueryFirstScorer(weight,\n          filterAcceptDocs, scorer);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredScorer(AtomicReaderContext,Weight,DocIdSet).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredScorer(AtomicReaderContext,boolean,boolean,Weight,DocIdSet).mjava","sourceNew":"    @Override\n    public Scorer filteredScorer(final AtomicReaderContext context,\n        Weight weight,\n        DocIdSet docIdSet) throws IOException {\n      Bits filterAcceptDocs = docIdSet.bits();\n      if (filterAcceptDocs == null) {\n        return LEAP_FROG_QUERY_FIRST_STRATEGY.filteredScorer(context, weight, docIdSet);\n      }\n      final Scorer scorer = weight.scorer(context, null);\n      return scorer == null ? null : new QueryFirstScorer(weight,\n          filterAcceptDocs, scorer);\n    }\n\n","sourceOld":"    @Override\n    public Scorer filteredScorer(final AtomicReaderContext context,\n        boolean scoreDocsInOrder, boolean topScorer, Weight weight,\n        DocIdSet docIdSet) throws IOException {\n      Bits filterAcceptDocs = docIdSet.bits();\n      if (filterAcceptDocs == null) {\n        return LEAP_FROG_QUERY_FIRST_STRATEGY.filteredScorer(context, scoreDocsInOrder, topScorer, weight, docIdSet);\n      }\n      final Scorer scorer = weight.scorer(context, true, false, null);\n      return scorer == null ? null : new QueryFirstScorer(weight,\n          filterAcceptDocs, scorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredScorer(AtomicReaderContext,Weight,DocIdSet).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.QueryFirstFilterStrategy#filteredScorer(AtomicReaderContext,boolean,boolean,Weight,DocIdSet).mjava","sourceNew":"    @Override\n    public Scorer filteredScorer(final AtomicReaderContext context,\n        Weight weight,\n        DocIdSet docIdSet) throws IOException {\n      Bits filterAcceptDocs = docIdSet.bits();\n      if (filterAcceptDocs == null) {\n        // Filter does not provide random-access Bits; we\n        // must fallback to leapfrog:\n        return LEAP_FROG_QUERY_FIRST_STRATEGY.filteredScorer(context, weight, docIdSet);\n      }\n      final Scorer scorer = weight.scorer(context, null);\n      return scorer == null ? null : new QueryFirstScorer(weight,\n          filterAcceptDocs, scorer);\n    }\n\n","sourceOld":"    @Override\n    public Scorer filteredScorer(final AtomicReaderContext context,\n        boolean scoreDocsInOrder, boolean topScorer, Weight weight,\n        DocIdSet docIdSet) throws IOException {\n      Bits filterAcceptDocs = docIdSet.bits();\n      if (filterAcceptDocs == null) {\n        return LEAP_FROG_QUERY_FIRST_STRATEGY.filteredScorer(context, scoreDocsInOrder, topScorer, weight, docIdSet);\n      }\n      final Scorer scorer = weight.scorer(context, true, false, null);\n      return scorer == null ? null : new QueryFirstScorer(weight,\n          filterAcceptDocs, scorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["cc7674a6feb46b954ebfb8ace9eb0383adb93de9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc7674a6feb46b954ebfb8ace9eb0383adb93de9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["cc7674a6feb46b954ebfb8ace9eb0383adb93de9","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acf00221f44c5f08ccea014f2492b53af15ecd66"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc7674a6feb46b954ebfb8ace9eb0383adb93de9"],"cc7674a6feb46b954ebfb8ace9eb0383adb93de9":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","acf00221f44c5f08ccea014f2492b53af15ecd66"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}