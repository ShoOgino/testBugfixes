{"path":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","commits":[{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","sourceNew":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","sourceOld":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","sourceNew":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        20);\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        14);\n  }\n\n","sourceOld":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","sourceNew":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        20);\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        14);\n  }\n\n","sourceOld":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","sourceNew":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        20);\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        14);\n  }\n\n","sourceOld":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}