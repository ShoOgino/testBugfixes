{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkForMissingCollection(String).mjava","commits":[{"id":"0622fbd990643ae4cacb693db6a0c82cf8916ae2","date":1397637446,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkForMissingCollection(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkForMissingCollection(String).mjava","sourceNew":"  protected void checkForMissingCollection(String collectionName)\n      throws Exception {\n    // check for a  collection - we poll the state\n    long timeoutAt = System.currentTimeMillis() + 45000;\n    boolean found = true;\n    while (System.currentTimeMillis() < timeoutAt) {\n      getCommonCloudSolrServer().getZkStateReader().updateClusterState(true);\n      ClusterState clusterState = getCommonCloudSolrServer().getZkStateReader().getClusterState();\n//      Map<String,DocCollection> collections = clusterState\n//          .getCollectionStates();\n      if (! clusterState.hasCollection(collectionName)) {\n        found = false;\n        break;\n      }\n      Thread.sleep(100);\n    }\n    if (found) {\n      fail(\"Found collection that should be gone \" + collectionName);\n    }\n  }\n\n","sourceOld":"  private void checkForMissingCollection(String collectionName)\n      throws Exception {\n    // check for a  collection - we poll the state\n    long timeoutAt = System.currentTimeMillis() + 45000;\n    boolean found = true;\n    while (System.currentTimeMillis() < timeoutAt) {\n      getCommonCloudSolrServer().getZkStateReader().updateClusterState(true);\n      ClusterState clusterState = getCommonCloudSolrServer().getZkStateReader().getClusterState();\n//      Map<String,DocCollection> collections = clusterState\n//          .getCollectionStates();\n      if (! clusterState.hasCollection(collectionName)) {\n        found = false;\n        break;\n      }\n      Thread.sleep(100);\n    }\n    if (found) {\n      fail(\"Found collection that should be gone \" + collectionName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkForMissingCollection(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkForMissingCollection(String).mjava","sourceNew":"  protected void checkForMissingCollection(String collectionName)\n      throws Exception {\n    // check for a  collection - we poll the state\n    long timeoutAt = System.currentTimeMillis() + 45000;\n    boolean found = true;\n    while (System.currentTimeMillis() < timeoutAt) {\n      getCommonCloudSolrServer().getZkStateReader().updateClusterState(true);\n      ClusterState clusterState = getCommonCloudSolrServer().getZkStateReader().getClusterState();\n      if (!clusterState.hasCollection(collectionName)) {\n        found = false;\n        break;\n      }\n      Thread.sleep(100);\n    }\n    if (found) {\n      fail(\"Found collection that should be gone \" + collectionName);\n    }\n  }\n\n","sourceOld":"  protected void checkForMissingCollection(String collectionName)\n      throws Exception {\n    // check for a  collection - we poll the state\n    long timeoutAt = System.currentTimeMillis() + 45000;\n    boolean found = true;\n    while (System.currentTimeMillis() < timeoutAt) {\n      getCommonCloudSolrServer().getZkStateReader().updateClusterState(true);\n      ClusterState clusterState = getCommonCloudSolrServer().getZkStateReader().getClusterState();\n//      Map<String,DocCollection> collections = clusterState\n//          .getCollectionStates();\n      if (! clusterState.hasCollection(collectionName)) {\n        found = false;\n        break;\n      }\n      Thread.sleep(100);\n    }\n    if (found) {\n      fail(\"Found collection that should be gone \" + collectionName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkForMissingCollection(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkForMissingCollection(String).mjava","sourceNew":"  protected void checkForMissingCollection(String collectionName)\n      throws Exception {\n    // check for a  collection - we poll the state\n    long timeoutAt = System.currentTimeMillis() + 45000;\n    boolean found = true;\n    while (System.currentTimeMillis() < timeoutAt) {\n      getCommonCloudSolrClient().getZkStateReader().updateClusterState(true);\n      ClusterState clusterState = getCommonCloudSolrClient().getZkStateReader().getClusterState();\n      if (!clusterState.hasCollection(collectionName)) {\n        found = false;\n        break;\n      }\n      Thread.sleep(100);\n    }\n    if (found) {\n      fail(\"Found collection that should be gone \" + collectionName);\n    }\n  }\n\n","sourceOld":"  protected void checkForMissingCollection(String collectionName)\n      throws Exception {\n    // check for a  collection - we poll the state\n    long timeoutAt = System.currentTimeMillis() + 45000;\n    boolean found = true;\n    while (System.currentTimeMillis() < timeoutAt) {\n      getCommonCloudSolrServer().getZkStateReader().updateClusterState(true);\n      ClusterState clusterState = getCommonCloudSolrServer().getZkStateReader().getClusterState();\n      if (!clusterState.hasCollection(collectionName)) {\n        found = false;\n        break;\n      }\n      Thread.sleep(100);\n    }\n    if (found) {\n      fail(\"Found collection that should be gone \" + collectionName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"234afba21d42e6c527535c6aa11baba09a4771f3","date":1432825127,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkForMissingCollection(String).mjava","sourceNew":null,"sourceOld":"  protected void checkForMissingCollection(String collectionName)\n      throws Exception {\n    // check for a  collection - we poll the state\n    long timeoutAt = System.currentTimeMillis() + 45000;\n    boolean found = true;\n    while (System.currentTimeMillis() < timeoutAt) {\n      getCommonCloudSolrClient().getZkStateReader().updateClusterState(true);\n      ClusterState clusterState = getCommonCloudSolrClient().getZkStateReader().getClusterState();\n      if (!clusterState.hasCollection(collectionName)) {\n        found = false;\n        break;\n      }\n      Thread.sleep(100);\n    }\n    if (found) {\n      fail(\"Found collection that should be gone \" + collectionName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"234afba21d42e6c527535c6aa11baba09a4771f3":["bafca15d8e408346a67f4282ad1143b88023893b"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["234afba21d42e6c527535c6aa11baba09a4771f3"]},"commit2Childs":{"234afba21d42e6c527535c6aa11baba09a4771f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"bafca15d8e408346a67f4282ad1143b88023893b":["234afba21d42e6c527535c6aa11baba09a4771f3"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}