{"path":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67","date":1348934182,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67"]},"commit2Childs":{"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}