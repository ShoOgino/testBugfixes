{"path":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#getSegmentSizes(IndexWriter,Collection[SegmentCommitInfo]).mjava","commits":[{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#getSegmentSizes(IndexWriter,Collection[SegmentCommitInfo]).mjava","pathOld":"/dev/null","sourceNew":"  private Map<SegmentCommitInfo,Long> getSegmentSizes(IndexWriter writer, Collection<SegmentCommitInfo> infos) throws IOException {\n    Map<SegmentCommitInfo,Long> sizeInBytes = new HashMap<>();\n    for (SegmentCommitInfo info : infos) {\n      sizeInBytes.put(info, size(info, writer));\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#getSegmentSizes(IndexWriter,Collection[SegmentCommitInfo]).mjava","pathOld":"/dev/null","sourceNew":"  private Map<SegmentCommitInfo,Long> getSegmentSizes(IndexWriter writer, Collection<SegmentCommitInfo> infos) throws IOException {\n    Map<SegmentCommitInfo,Long> sizeInBytes = new HashMap<>();\n    for (SegmentCommitInfo info : infos) {\n      sizeInBytes.put(info, size(info, writer));\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#getSegmentSizes(IndexWriter,Collection[SegmentCommitInfo]).mjava","pathOld":"/dev/null","sourceNew":"  private Map<SegmentCommitInfo,Long> getSegmentSizes(IndexWriter writer, Collection<SegmentCommitInfo> infos) throws IOException {\n    Map<SegmentCommitInfo,Long> sizeInBytes = new HashMap<>();\n    for (SegmentCommitInfo info : infos) {\n      sizeInBytes.put(info, size(info, writer));\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d28f215464f76024caf026606f8ea51a5319c53","date":1527226629,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#getSegmentSizes(MergeContext,Collection[SegmentCommitInfo]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#getSegmentSizes(IndexWriter,Collection[SegmentCommitInfo]).mjava","sourceNew":"  private Map<SegmentCommitInfo,Long> getSegmentSizes(MergeContext mergeContext, Collection<SegmentCommitInfo> infos) throws IOException {\n    Map<SegmentCommitInfo,Long> sizeInBytes = new HashMap<>();\n    for (SegmentCommitInfo info : infos) {\n      sizeInBytes.put(info, size(info, mergeContext));\n    }\n    return sizeInBytes;\n  }\n\n","sourceOld":"  private Map<SegmentCommitInfo,Long> getSegmentSizes(IndexWriter writer, Collection<SegmentCommitInfo> infos) throws IOException {\n    Map<SegmentCommitInfo,Long> sizeInBytes = new HashMap<>();\n    for (SegmentCommitInfo info : infos) {\n      sizeInBytes.put(info, size(info, writer));\n    }\n    return sizeInBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d28f215464f76024caf026606f8ea51a5319c53":["28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d28f215464f76024caf026606f8ea51a5319c53"]},"commit2Childs":{"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"1d28f215464f76024caf026606f8ea51a5319c53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["1d28f215464f76024caf026606f8ea51a5319c53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}