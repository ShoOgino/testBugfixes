{"path":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","commits":[{"id":"432127b09840b2b70209e404d242e7029421ef0a","date":1280433941,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 4 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            \n            ,meta+\"/int[@name='after' ][.='8']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 4 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            \n            ,meta+\"/int[@name='after' ][.='8']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d400df5c2bb943cbffcd0939e71213e78867f607","date":1298941797,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 4 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            \n            ,meta+\"/int[@name='after' ][.='8']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 4 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            \n            ,meta+\"/int[@name='after' ][.='8']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 4 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            // july4th = 2 because exists doc @ 00:00:00.000 on July5\n            // (date faceting is inclusive)\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z'][.='2'  ]\"\n            \n            ,meta+\"/int[@name='after' ][.='8']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d400df5c2bb943cbffcd0939e71213e78867f607"],"d400df5c2bb943cbffcd0939e71213e78867f607":["432127b09840b2b70209e404d242e7029421ef0a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["d400df5c2bb943cbffcd0939e71213e78867f607"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["432127b09840b2b70209e404d242e7029421ef0a","d400df5c2bb943cbffcd0939e71213e78867f607"],"c26f00b574427b55127e869b935845554afde1fa":["d400df5c2bb943cbffcd0939e71213e78867f607","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["d400df5c2bb943cbffcd0939e71213e78867f607"],"432127b09840b2b70209e404d242e7029421ef0a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","432127b09840b2b70209e404d242e7029421ef0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d400df5c2bb943cbffcd0939e71213e78867f607":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","c903c3d15906a3da96b8c0c2fb704491005fdbdb","d619839baa8ce5503e496b94a9e42ad6f079293f","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["432127b09840b2b70209e404d242e7029421ef0a","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"432127b09840b2b70209e404d242e7029421ef0a":["d400df5c2bb943cbffcd0939e71213e78867f607","d619839baa8ce5503e496b94a9e42ad6f079293f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}