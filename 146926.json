{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","commits":[{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Filter,Query,int,int).mjava","sourceNew":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","sourceOld":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Filter filter, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, filter, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e0d5825f76d6bd3636a0dbaf6aa020cb357334","date":1435740067,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","sourceNew":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Weight groupEndDocs = searcher.createNormalizedWeight(this.groupEndDocs, false);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","sourceOld":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","sourceNew":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Weight groupEndDocs = searcher.createNormalizedWeight(this.groupEndDocs, ScoreMode.COMPLETE_NO_SCORES);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","sourceOld":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Weight groupEndDocs = searcher.createNormalizedWeight(this.groupEndDocs, false);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","sourceNew":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Weight groupEndDocs = searcher.createNormalizedWeight(this.groupEndDocs, ScoreMode.COMPLETE_NO_SCORES);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","sourceOld":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Weight groupEndDocs = searcher.createNormalizedWeight(this.groupEndDocs, false);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"475584d5e08a22ad3fc7babefe006d77bc744567","date":1523282824,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","sourceNew":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Query endDocsQuery = searcher.rewrite(this.groupEndDocs);\n    final Weight groupEndDocs = searcher.createWeight(endDocsQuery, ScoreMode.COMPLETE_NO_SCORES, 1);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","sourceOld":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Weight groupEndDocs = searcher.createNormalizedWeight(this.groupEndDocs, ScoreMode.COMPLETE_NO_SCORES);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","sourceNew":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Query endDocsQuery = searcher.rewrite(this.groupEndDocs);\n    final Weight groupEndDocs = searcher.createWeight(endDocsQuery, ScoreMode.COMPLETE_NO_SCORES, 1);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","sourceOld":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Weight groupEndDocs = searcher.createNormalizedWeight(this.groupEndDocs, ScoreMode.COMPLETE_NO_SCORES);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c370507e5521b2eb998530736f1c19b851ed5a","date":1531911305,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","sourceNew":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Query endDocsQuery = searcher.rewrite(this.groupEndDocs);\n    final Weight groupEndDocs = searcher.createWeight(endDocsQuery, ScoreMode.COMPLETE_NO_SCORES, 1);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup);\n  }\n\n","sourceOld":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Query endDocsQuery = searcher.rewrite(this.groupEndDocs);\n    final Weight groupEndDocs = searcher.createWeight(endDocsQuery, ScoreMode.COMPLETE_NO_SCORES, 1);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup, fillSortFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d3f7ab1a502671bbdb03bcced21e764d2483221","date":1532329609,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#groupByDocBlock(IndexSearcher,Query,int,int).mjava","sourceNew":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Query endDocsQuery = searcher.rewrite(this.groupEndDocs);\n    final Weight groupEndDocs = searcher.createWeight(endDocsQuery, ScoreMode.COMPLETE_NO_SCORES, 1);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, groupSort.needsScores() || sortWithinGroup.needsScores(), groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup);\n  }\n\n","sourceOld":"  protected TopGroups<?> groupByDocBlock(IndexSearcher searcher, Query query, int groupOffset, int groupLimit) throws IOException {\n    int topN = groupOffset + groupLimit;\n    final Query endDocsQuery = searcher.rewrite(this.groupEndDocs);\n    final Weight groupEndDocs = searcher.createWeight(endDocsQuery, ScoreMode.COMPLETE_NO_SCORES, 1);\n    BlockGroupingCollector c = new BlockGroupingCollector(groupSort, topN, includeScores, groupEndDocs);\n    searcher.search(query, c);\n    int topNInsideGroup = groupDocsOffset + groupDocsLimit;\n    return c.getTopGroups(sortWithinGroup, groupOffset, groupDocsOffset, topNInsideGroup);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["417142ff08fda9cf0b72d5133e63097a166c6458","475584d5e08a22ad3fc7babefe006d77bc744567"],"475584d5e08a22ad3fc7babefe006d77bc744567":["417142ff08fda9cf0b72d5133e63097a166c6458"],"41e0d5825f76d6bd3636a0dbaf6aa020cb357334":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"04c370507e5521b2eb998530736f1c19b851ed5a":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["41e0d5825f76d6bd3636a0dbaf6aa020cb357334"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["04c370507e5521b2eb998530736f1c19b851ed5a"],"417142ff08fda9cf0b72d5133e63097a166c6458":["41e0d5825f76d6bd3636a0dbaf6aa020cb357334","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["04c370507e5521b2eb998530736f1c19b851ed5a"],"475584d5e08a22ad3fc7babefe006d77bc744567":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"41e0d5825f76d6bd3636a0dbaf6aa020cb357334":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["41e0d5825f76d6bd3636a0dbaf6aa020cb357334"],"04c370507e5521b2eb998530736f1c19b851ed5a":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["d58e44159788900f4a2113b84463dc3fbbf80f20","475584d5e08a22ad3fc7babefe006d77bc744567"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}