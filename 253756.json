{"path":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"/dev/null","sourceNew":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":null,"sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n    }\n  }\n\n","sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"/dev/null","sourceNew":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d","date":1292210954,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(solrReq, solrRsp));\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n      SolrRequestInfo.clearRequestInfo();      \n    }\n  }\n\n","sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(solrReq, solrRsp));\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n      SolrRequestInfo.clearRequestInfo();      \n    }\n  }\n\n","sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(solrReq, solrRsp));\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n      SolrRequestInfo.clearRequestInfo();      \n    }\n  }\n\n","sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f60a6fbcf656b886f3e7ffe63059c54a10c929bc","date":1293253735,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n      String qt = solrReq.getParams().get(CommonParams.QT);\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getParams().get(CommonParams.QT));\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + qt +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + qt + \"'\", true);\n      }\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(solrReq, solrRsp));\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n      SolrRequestInfo.clearRequestInfo();      \n    }\n  }\n\n","sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(solrReq, solrRsp));\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n      SolrRequestInfo.clearRequestInfo();      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d8160791cdc6c6f49e1ad921a57f359c5d8a86a","date":1293749926,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":null,"sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n      String qt = solrReq.getParams().get(CommonParams.QT);\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getParams().get(CommonParams.QT));\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + qt +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + qt + \"'\", true);\n      }\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(solrReq, solrRsp));\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n      SolrRequestInfo.clearRequestInfo();      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":null,"sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(solrReq, solrRsp));\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n      SolrRequestInfo.clearRequestInfo();      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":null,"sourceOld":"  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    if( hasMulticore ) {\n      response.sendError( 400, \"Missing solr core name in path\" );\n      return;\n    }\n    \n    final SolrCore core = SolrCore.getSolrCore();\n    SolrServletRequest solrReq = new SolrServletRequest(core, request);;\n    SolrQueryResponse solrRsp = new SolrQueryResponse();\n    try {\n\n      SolrRequestHandler handler = core.getRequestHandler(solrReq.getQueryType());\n      if (handler==null) {\n        log.warn(\"Unknown Request Handler '\" + solrReq.getQueryType() +\"' :\" + solrReq);\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"Unknown Request Handler '\" + solrReq.getQueryType() + \"'\", true);\n      }\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(solrReq, solrRsp));\n      core.execute(handler, solrReq, solrRsp );\n      if (solrRsp.getException() == null) {\n        QueryResponseWriter responseWriter = core.getQueryResponseWriter(solrReq);\n        response.setContentType(responseWriter.getContentType(solrReq, solrRsp));\n        PrintWriter out = response.getWriter();\n        responseWriter.write(out, solrReq, solrRsp);\n      } else {\n        Exception e = solrRsp.getException();\n        int rc=500;\n        if (e instanceof SolrException) {\n           rc=((SolrException)e).code();\n        }\n        sendErr(rc, SolrException.toStr(e), request, response);\n      }\n    } catch (SolrException e) {\n      if (!e.logged) SolrException.log(log,e);\n      sendErr(e.code(), SolrException.toStr(e), request, response);\n    } catch (Throwable e) {\n      SolrException.log(log,e);\n      sendErr(500, SolrException.toStr(e), request, response);\n    } finally {\n      // This releases the IndexReader associated with the request\n      solrReq.close();\n      SolrRequestInfo.clearRequestInfo();      \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","8d8160791cdc6c6f49e1ad921a57f359c5d8a86a"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f60a6fbcf656b886f3e7ffe63059c54a10c929bc":["227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["1da8d55113b689b06716246649de6f62430f15c0","227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8d8160791cdc6c6f49e1ad921a57f359c5d8a86a"],"8d8160791cdc6c6f49e1ad921a57f359c5d8a86a":["f60a6fbcf656b886f3e7ffe63059c54a10c929bc"],"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d8160791cdc6c6f49e1ad921a57f359c5d8a86a"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"f60a6fbcf656b886f3e7ffe63059c54a10c929bc":["8d8160791cdc6c6f49e1ad921a57f359c5d8a86a"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["70ad682703b8585f5d0a637efec044d57ec05efb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"1da8d55113b689b06716246649de6f62430f15c0":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"8d8160791cdc6c6f49e1ad921a57f359c5d8a86a":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d":["f60a6fbcf656b886f3e7ffe63059c54a10c929bc","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}