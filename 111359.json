{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","commits":[{"id":"19eb0081c9f2dd6265a0f011506fe2af97493573","date":1474872644,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","pathOld":"/dev/null","sourceNew":"  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","pathOld":"/dev/null","sourceNew":"  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","pathOld":"/dev/null","sourceNew":"  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","sourceOld":"  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","sourceNew":"  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","sourceOld":"  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/TemplateTransformer#addToRow(String,Map[String,Object],Object).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  private void addToRow(String key, Map<String, Object> row, Object value) {\n    Object prevVal = row.get(key);\n    if (prevVal != null) {\n      if (prevVal instanceof List) {\n        ((List) prevVal).add(value);\n      } else {\n        ArrayList<Object> valList = new ArrayList<Object>();\n        valList.add(prevVal);\n        valList.add(value);\n        row.put(key, valList);\n      }\n    } else {\n      row.put(key, value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","19eb0081c9f2dd6265a0f011506fe2af97493573"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"19eb0081c9f2dd6265a0f011506fe2af97493573":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","19eb0081c9f2dd6265a0f011506fe2af97493573","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["024e13388acbf5562fcbb77a129620982a5e2d79"],"19eb0081c9f2dd6265a0f011506fe2af97493573":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}