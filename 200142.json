{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","commits":[{"id":"6ecd298fdc085e7eba27afa7fae58df1ba1a2808","date":1295102557,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    return terms.totalTermFreq(term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8028ab7a24273833d53d35eb160dba5b57283cf5","8028ab7a24273833d53d35eb160dba5b57283cf5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"16843358872ed92ba92888ab99df297550b9a36a","date":1295144724,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    return terms.totalTermFreq(term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    return terms.totalTermFreq(term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2297162a22c55456e200caef2cbcb00fe381120","date":1321551342,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    return terms.totalTermFreq(term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"936f1eae75daf11568fe1480aec9e06d2ef55367","date":1323215013,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public final long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public final long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public final long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicIndexReader#totalTermFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public final long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public final long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicReader#totalTermFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public final long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public final long totalTermFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.totalTermFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["e2297162a22c55456e200caef2cbcb00fe381120","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936f1eae75daf11568fe1480aec9e06d2ef55367":["e2297162a22c55456e200caef2cbcb00fe381120"],"16843358872ed92ba92888ab99df297550b9a36a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"e2297162a22c55456e200caef2cbcb00fe381120":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["e2297162a22c55456e200caef2cbcb00fe381120","936f1eae75daf11568fe1480aec9e06d2ef55367"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["3615ce4a1f785ae1b779244de52c6a7d99227e60"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"936f1eae75daf11568fe1480aec9e06d2ef55367":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"16843358872ed92ba92888ab99df297550b9a36a":[],"e2297162a22c55456e200caef2cbcb00fe381120":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","936f1eae75daf11568fe1480aec9e06d2ef55367","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","e2297162a22c55456e200caef2cbcb00fe381120"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}