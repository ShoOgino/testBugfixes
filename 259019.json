{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","commits":[{"id":"c73f63a2a7b9f4a6b21e8723912461026968d87e","date":1539669411,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","pathOld":"/dev/null","sourceNew":"  public void testFreeDiskDeviation() throws IOException {\n    Map map = (Map) TestPolicy2.loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5a27e78e3d29dee02bab19ded25336471e96882","date":1539677468,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","sourceNew":"  public void testFreeDiskDeviation() {\n    Map map = (Map) loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","sourceOld":"  public void testFreeDiskDeviation() throws IOException {\n    Map map = (Map) TestPolicy2.loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ddd9a76400512cda8f22bbc69e3d8b85672a91a","date":1559288755,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","sourceNew":"  public void testFreeDiskDeviation() {\n    Map map = (Map) loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    if(useNodeset){\n      cfg = new AutoScalingConfig((Map<String, Object>) Utils.fromJSONString(\"{\" +\n          \"    'cluster-policy': [{'replica':'<2', 'shard':'#EACH', 'node':'#ANY'},\" +\n          \"      {'replica': '#ALL', 'nodeset': {'freedisk': '>700'}, 'strict': false}]\" +\n          \"  }\"));\n    }\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","sourceOld":"  public void testFreeDiskDeviation() {\n    Map map = (Map) loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","sourceNew":"  public void testFreeDiskDeviation() {\n    Map map = (Map) loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    if(useNodeset){\n      cfg = new AutoScalingConfig((Map<String, Object>) Utils.fromJSONString(\"{\" +\n          \"    'cluster-policy': [{'replica':'<2', 'shard':'#EACH', 'node':'#ANY'},\" +\n          \"      {'replica': '#ALL', 'nodeset': {'freedisk': '>700'}, 'strict': false}]\" +\n          \"  }\"));\n    }\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","sourceOld":"  public void testFreeDiskDeviation() {\n    Map map = (Map) loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public void testFreeDiskDeviation() {\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = (Map) loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    if(useNodeset){\n      cfg = new AutoScalingConfig((Map<String, Object>) Utils.fromJSONString(\"{\" +\n          \"    'cluster-policy': [{'replica':'<2', 'shard':'#EACH', 'node':'#ANY'},\" +\n          \"      {'replica': '#ALL', 'nodeset': {'freedisk': '>700'}, 'strict': false}]\" +\n          \"  }\"));\n    }\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","sourceOld":"  public void testFreeDiskDeviation() {\n    Map map = (Map) loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    if(useNodeset){\n      cfg = new AutoScalingConfig((Map<String, Object>) Utils.fromJSONString(\"{\" +\n          \"    'cluster-policy': [{'replica':'<2', 'shard':'#EACH', 'node':'#ANY'},\" +\n          \"      {'replica': '#ALL', 'nodeset': {'freedisk': '>700'}, 'strict': false}]\" +\n          \"  }\"));\n    }\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testFreeDiskDeviation().mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public void testFreeDiskDeviation() {\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = (Map) loadFromResource(\"testFreeDiskDeviation.json\");\n    AutoScalingConfig cfg = new AutoScalingConfig((Map<String, Object>) map.get(\"config\"));\n    if(useNodeset){\n      cfg = new AutoScalingConfig((Map<String, Object>) Utils.fromJSONString(\"{\" +\n          \"    'cluster-policy': [{'replica':'<2', 'shard':'#EACH', 'node':'#ANY'},\" +\n          \"      {'replica': '#ALL', 'nodeset': {'freedisk': '>700'}, 'strict': false}]\" +\n          \"  }\"));\n    }\n    SolrCloudManager scm = cloudManagerWithData(map);\n    Suggester suggester = cfg.getPolicy()\n        .createSession(scm)\n        .getSuggester(ADDREPLICA);\n\n    MapWriter v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node1\", v2Request._get(\"command/add-replica/node\",null));\n\n\n    suggester = suggester.getSession()\n        .getSuggester(ADDREPLICA);\n    v2Request = (MapWriter) ((V2RequestSupport) suggester\n        .hint(Hint.COLL_SHARD, new Pair<>(\"mycoll2\", \"shard1\"))\n        .getSuggestion()\n        .setUseV2(true))\n        .getV2Request();\n\n    assertEquals(\"/c/mycoll2/shards\", v2Request._get(\"path\",null));\n    assertEquals(\"add-replica\", v2Request._get(\"command[0]/key\",null));\n    assertEquals(\"node2\", v2Request._get(\"command/add-replica/node\",null));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["9ddd9a76400512cda8f22bbc69e3d8b85672a91a"],"3f504512a03d978990cbff30db0522b354e846db":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["f5a27e78e3d29dee02bab19ded25336471e96882","9ddd9a76400512cda8f22bbc69e3d8b85672a91a"],"9ddd9a76400512cda8f22bbc69e3d8b85672a91a":["f5a27e78e3d29dee02bab19ded25336471e96882"],"c73f63a2a7b9f4a6b21e8723912461026968d87e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f5a27e78e3d29dee02bab19ded25336471e96882":["c73f63a2a7b9f4a6b21e8723912461026968d87e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c73f63a2a7b9f4a6b21e8723912461026968d87e"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"9ddd9a76400512cda8f22bbc69e3d8b85672a91a":["9ba1b632c041956c93c41aa1143d16a567014891","58af973abe9f7c0faa777c1a6285fc7f72c171c5"],"c73f63a2a7b9f4a6b21e8723912461026968d87e":["f5a27e78e3d29dee02bab19ded25336471e96882"],"f5a27e78e3d29dee02bab19ded25336471e96882":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","9ddd9a76400512cda8f22bbc69e3d8b85672a91a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}