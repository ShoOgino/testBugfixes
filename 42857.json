{"path":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b","date":1337136355,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new MutableFieldInfos(new MutableFieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"76923f6a33f2c4bec7f584e3f251261afe7ea276","date":1337149711,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new MutableFieldInfos(new MutableFieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new MutableFieldInfos(new MutableFieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a851824c09818632c94eba41e60ef5e72e323c8e","date":1337355760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new MutableFieldInfos(new MutableFieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e2893fd5349134af382d33ccc3d84840394c6c1","date":1353682567,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.shutdown();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.shutdown();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.shutdown();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.shutdown();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"229c9e4d133b2ca0d40130aead6ca64d4db2d266","date":1409606567,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf37ee1c40027de1b0be9d687aebe8f34d274ae3","date":1409655762,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eac6ccb51c439bec7f67cb0e299d3cb77b62b87e","date":1415435053,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      FieldInfo fieldInfo = fieldInfos.getOrAdd(field.name());\n      IndexableFieldType ift = field.fieldType();\n      fieldInfo.setIndexOptions(ift.indexOptions());\n      if (ift.omitNorms()) {\n        fieldInfo.setOmitsNorms();\n      }\n      fieldInfo.setDocValuesType(ift.docValuesType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      fieldInfos.addOrUpdate(field.name(), field.fieldType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7e4ca6dc9612ff741d8713743e2bccfae5eadac","date":1528093718,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder(new FieldInfos.FieldNumbers(null));\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      FieldInfo fieldInfo = fieldInfos.getOrAdd(field.name());\n      IndexableFieldType ift = field.fieldType();\n      fieldInfo.setIndexOptions(ift.indexOptions());\n      if (ift.omitNorms()) {\n        fieldInfo.setOmitsNorms();\n      }\n      fieldInfo.setDocValuesType(ift.docValuesType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      FieldInfo fieldInfo = fieldInfos.getOrAdd(field.name());\n      IndexableFieldType ift = field.fieldType();\n      fieldInfo.setIndexOptions(ift.indexOptions());\n      if (ift.omitNorms()) {\n        fieldInfo.setOmitsNorms();\n      }\n      fieldInfo.setDocValuesType(ift.docValuesType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder(new FieldInfos.FieldNumbers(null));\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      FieldInfo fieldInfo = fieldInfos.getOrAdd(field.name());\n      IndexableFieldType ift = field.fieldType();\n      fieldInfo.setIndexOptions(ift.indexOptions());\n      if (ift.omitNorms()) {\n        fieldInfo.setOmitsNorms();\n      }\n      fieldInfo.setDocValuesType(ift.docValuesType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      FieldInfo fieldInfo = fieldInfos.getOrAdd(field.name());\n      IndexableFieldType ift = field.fieldType();\n      fieldInfo.setIndexOptions(ift.indexOptions());\n      if (ift.omitNorms()) {\n        fieldInfo.setOmitsNorms();\n      }\n      fieldInfo.setDocValuesType(ift.docValuesType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder(new FieldInfos.FieldNumbers(null));\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      FieldInfo fieldInfo = fieldInfos.getOrAdd(field.name());\n      IndexableFieldType ift = field.fieldType();\n      fieldInfo.setIndexOptions(ift.indexOptions());\n      if (ift.omitNorms()) {\n        fieldInfo.setOmitsNorms();\n      }\n      fieldInfo.setDocValuesType(ift.docValuesType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    testDoc = new Document();\n    fieldInfos = new FieldInfos.Builder();\n    DocHelper.setupDoc(testDoc);\n    for (IndexableField field : testDoc.getFields()) {\n      FieldInfo fieldInfo = fieldInfos.getOrAdd(field.name());\n      IndexableFieldType ift = field.fieldType();\n      fieldInfo.setIndexOptions(ift.indexOptions());\n      if (ift.omitNorms()) {\n        fieldInfo.setOmitsNorms();\n      }\n      fieldInfo.setDocValuesType(ift.docValuesType());\n    }\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))\n                               .setMergePolicy(newLogMergePolicy());\n    conf.getMergePolicy().setNoCFSRatio(0.0);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"229c9e4d133b2ca0d40130aead6ca64d4db2d266":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cf37ee1c40027de1b0be9d687aebe8f34d274ae3":["d0ef034a4f10871667ae75181537775ddcf8ade4","229c9e4d133b2ca0d40130aead6ca64d4db2d266"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["1d028314cced5858683a1bb4741423d0f934257b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a851824c09818632c94eba41e60ef5e72e323c8e":["76923f6a33f2c4bec7f584e3f251261afe7ea276"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"76923f6a33f2c4bec7f584e3f251261afe7ea276":["f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"1d028314cced5858683a1bb4741423d0f934257b":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","a851824c09818632c94eba41e60ef5e72e323c8e"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["1d028314cced5858683a1bb4741423d0f934257b","6e2893fd5349134af382d33ccc3d84840394c6c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["eac6ccb51c439bec7f67cb0e299d3cb77b62b87e","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["eac6ccb51c439bec7f67cb0e299d3cb77b62b87e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"eac6ccb51c439bec7f67cb0e299d3cb77b62b87e":["229c9e4d133b2ca0d40130aead6ca64d4db2d266"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f592209545c71895260367152601e9200399776d":["eac6ccb51c439bec7f67cb0e299d3cb77b62b87e","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b7e4ca6dc9612ff741d8713743e2bccfae5eadac"]},"commit2Childs":{"229c9e4d133b2ca0d40130aead6ca64d4db2d266":["cf37ee1c40027de1b0be9d687aebe8f34d274ae3","eac6ccb51c439bec7f67cb0e299d3cb77b62b87e"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"cf37ee1c40027de1b0be9d687aebe8f34d274ae3":[],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a851824c09818632c94eba41e60ef5e72e323c8e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["76923f6a33f2c4bec7f584e3f251261afe7ea276"],"76923f6a33f2c4bec7f584e3f251261afe7ea276":["a851824c09818632c94eba41e60ef5e72e323c8e"],"1d028314cced5858683a1bb4741423d0f934257b":["6e2893fd5349134af382d33ccc3d84840394c6c1","d4d69c535930b5cce125cff868d40f6373dc27d4"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","1d028314cced5858683a1bb4741423d0f934257b"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["229c9e4d133b2ca0d40130aead6ca64d4db2d266","cf37ee1c40027de1b0be9d687aebe8f34d274ae3"],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"eac6ccb51c439bec7f67cb0e299d3cb77b62b87e":["b70042a8a492f7054d480ccdd2be9796510d4327","b7e4ca6dc9612ff741d8713743e2bccfae5eadac","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cf37ee1c40027de1b0be9d687aebe8f34d274ae3","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}