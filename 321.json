{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipReader#Lucene50SkipReader(IndexInput,int,boolean,boolean,boolean).mjava","commits":[{"id":"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","date":1434069165,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipReader#Lucene50SkipReader(IndexInput,int,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipReader#Lucene50SkipReader(IndexInput,int,int,boolean,boolean,boolean).mjava","sourceNew":"  public Lucene50SkipReader(IndexInput skipStream, int maxSkipLevels, boolean hasPos, boolean hasOffsets, boolean hasPayloads) {\n    super(skipStream, maxSkipLevels, BLOCK_SIZE, 8);\n    docPointer = new long[maxSkipLevels];\n    if (hasPos) {\n      posPointer = new long[maxSkipLevels];\n      posBufferUpto = new int[maxSkipLevels];\n      if (hasPayloads) {\n        payloadByteUpto = new int[maxSkipLevels];\n      } else {\n        payloadByteUpto = null;\n      }\n      if (hasOffsets || hasPayloads) {\n        payPointer = new long[maxSkipLevels];\n      } else {\n        payPointer = null;\n      }\n    } else {\n      posPointer = null;\n    }\n  }\n\n","sourceOld":"  public Lucene50SkipReader(IndexInput skipStream, int maxSkipLevels, int blockSize, boolean hasPos, boolean hasOffsets, boolean hasPayloads) {\n    super(skipStream, maxSkipLevels, blockSize, 8);\n    this.blockSize = blockSize;\n    docPointer = new long[maxSkipLevels];\n    if (hasPos) {\n      posPointer = new long[maxSkipLevels];\n      posBufferUpto = new int[maxSkipLevels];\n      if (hasPayloads) {\n        payloadByteUpto = new int[maxSkipLevels];\n      } else {\n        payloadByteUpto = null;\n      }\n      if (hasOffsets || hasPayloads) {\n        payPointer = new long[maxSkipLevels];\n      } else {\n        payPointer = null;\n      }\n    } else {\n      posPointer = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipReader#Lucene50SkipReader(int,IndexInput,int,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipReader#Lucene50SkipReader(IndexInput,int,boolean,boolean,boolean).mjava","sourceNew":"  public Lucene50SkipReader(int version,\n      IndexInput skipStream, int maxSkipLevels,\n      boolean hasPos, boolean hasOffsets, boolean hasPayloads) {\n    super(skipStream, maxSkipLevels, BLOCK_SIZE, 8);\n    this.version = version;\n    docPointer = new long[maxSkipLevels];\n    if (hasPos) {\n      posPointer = new long[maxSkipLevels];\n      posBufferUpto = new int[maxSkipLevels];\n      if (hasPayloads) {\n        payloadByteUpto = new int[maxSkipLevels];\n      } else {\n        payloadByteUpto = null;\n      }\n      if (hasOffsets || hasPayloads) {\n        payPointer = new long[maxSkipLevels];\n      } else {\n        payPointer = null;\n      }\n    } else {\n      posPointer = null;\n    }\n  }\n\n","sourceOld":"  public Lucene50SkipReader(IndexInput skipStream, int maxSkipLevels, boolean hasPos, boolean hasOffsets, boolean hasPayloads) {\n    super(skipStream, maxSkipLevels, BLOCK_SIZE, 8);\n    docPointer = new long[maxSkipLevels];\n    if (hasPos) {\n      posPointer = new long[maxSkipLevels];\n      posBufferUpto = new int[maxSkipLevels];\n      if (hasPayloads) {\n        payloadByteUpto = new int[maxSkipLevels];\n      } else {\n        payloadByteUpto = null;\n      }\n      if (hasOffsets || hasPayloads) {\n        payPointer = new long[maxSkipLevels];\n      } else {\n        payPointer = null;\n      }\n    } else {\n      posPointer = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["622a708571e534680618b3c5e0c28ac539a47776"]},"commit2Childs":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["622a708571e534680618b3c5e0c28ac539a47776"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"622a708571e534680618b3c5e0c28ac539a47776":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}