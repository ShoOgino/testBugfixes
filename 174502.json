{"path":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n                                                     new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random(), dir,\n                                   new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n                                                     new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random, dir,\n                                   new MockAnalyzer(random, MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n                                                     new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random(), dir,\n                                   new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload2\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n                                                     new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new Field(\"hasMaybepayload\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random(), dir,\n                                   new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new Field(\"hasMaybepayload2\", \"here we go\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","bugFix":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n                                                     new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.shutdown();\n\n    writer = new RandomIndexWriter(random(), dir,\n                                   new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload2\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.shutdown();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n                                                     new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random(), dir,\n                                   new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload2\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#testAcrossFields().mjava","sourceNew":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n                                                     new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    writer = new RandomIndexWriter(random(), dir,\n                                   new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload2\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n                                                     new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    Document doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.shutdown();\n\n    writer = new RandomIndexWriter(random(), dir,\n                                   new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true));\n    doc = new Document();\n    doc.add(new TextField(\"hasMaybepayload2\", \"here we go\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.shutdown();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}