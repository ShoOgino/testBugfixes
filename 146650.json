{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","commits":[{"id":"943c3f9cf96b8df37f4273d66a66182e2a669467","date":1249394171,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanScorer#SpanScorer(Query,String,CachingTokenFilter,IndexReader,String).mjava","sourceNew":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public QueryScorer(Query query, IndexReader reader, String field, String defaultField)\n    throws IOException {\n    this.defaultField = defaultField.intern();\n    init(query, field, reader, true);\n  }\n\n","sourceOld":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public SpanScorer(Query query, String field,\n    CachingTokenFilter cachingTokenFilter, IndexReader reader, String defaultField)\n    throws IOException {\n    this.defaultField = defaultField.intern();\n    init(query, field, cachingTokenFilter, reader, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf93f7a278746d4746fa3ebb3d53267b22fd040f","date":1249495506,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","sourceNew":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public QueryScorer(Query query, IndexReader reader, String field, String defaultField)\n    throws IOException {\n    this.defaultField = StringHelper.intern(defaultField);\n    init(query, field, reader, true);\n  }\n\n","sourceOld":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public QueryScorer(Query query, IndexReader reader, String field, String defaultField)\n    throws IOException {\n    this.defaultField = defaultField.intern();\n    init(query, field, reader, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"293814a14ce7f2e7ec55485d701e996ff0ff8fae","date":1250707423,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","sourceNew":"  /**\n   * @param query to use for highlighting\n   * @param reader {@link IndexReader} to use for quasi tf/idf scoring\n   * @param field to highlight - pass null to ignore fields\n   * @param defaultField\n   */\n  public QueryScorer(Query query, IndexReader reader, String field, String defaultField) {\n    this.defaultField = StringHelper.intern(defaultField);\n    init(query, field, reader, true);\n  }\n\n","sourceOld":"  /**\n   * As above, but with ability to pass in an <tt>IndexReader</tt>\n   */\n  public QueryScorer(Query query, IndexReader reader, String field, String defaultField)\n    throws IOException {\n    this.defaultField = StringHelper.intern(defaultField);\n    init(query, field, reader, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#QueryScorer(Query,IndexReader,String,String).mjava","sourceNew":"  /**\n   * @param query to use for highlighting\n   * @param reader {@link IndexReader} to use for quasi tf/idf scoring\n   * @param field to highlight - pass null to ignore fields\n   * @param defaultField\n   */\n  public QueryScorer(Query query, IndexReader reader, String field, String defaultField) {\n    this.defaultField = StringHelper.intern(defaultField);\n    init(query, field, reader, true);\n  }\n\n","sourceOld":"  /**\n   * @param query to use for highlighting\n   * @param reader {@link IndexReader} to use for quasi tf/idf scoring\n   * @param field to highlight - pass null to ignore fields\n   * @param defaultField\n   */\n  public QueryScorer(Query query, IndexReader reader, String field, String defaultField) {\n    this.defaultField = StringHelper.intern(defaultField);\n    init(query, field, reader, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"293814a14ce7f2e7ec55485d701e996ff0ff8fae":["cf93f7a278746d4746fa3ebb3d53267b22fd040f"],"cf93f7a278746d4746fa3ebb3d53267b22fd040f":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"943c3f9cf96b8df37f4273d66a66182e2a669467":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["293814a14ce7f2e7ec55485d701e996ff0ff8fae"]},"commit2Childs":{"293814a14ce7f2e7ec55485d701e996ff0ff8fae":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cf93f7a278746d4746fa3ebb3d53267b22fd040f":["293814a14ce7f2e7ec55485d701e996ff0ff8fae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"943c3f9cf96b8df37f4273d66a66182e2a669467":["cf93f7a278746d4746fa3ebb3d53267b22fd040f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}