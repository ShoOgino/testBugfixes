{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","commits":[{"id":"0a570bec4aec8585a4eea44849bfb2bc264208c4","date":1371308653,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setField(FieldInfo fieldInfo) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    fieldHasFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    fieldHasPositions = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    fieldHasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    fieldHasPayloads = fieldInfo.hasPayloads();\n    skipWriter.setField(fieldHasPositions, fieldHasOffsets, fieldHasPayloads);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135f40667e65c7c4488c5457956f54c20fd79a43","date":1371393873,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  @Override\n  public int setField(FieldInfo fieldInfo) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    fieldHasFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    fieldHasPositions = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    fieldHasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    fieldHasPayloads = fieldInfo.hasPayloads();\n    skipWriter.setField(fieldHasPositions, fieldHasOffsets, fieldHasPayloads);\n    if (fieldHasPositions) {\n      return 3;  // doc + pos + pay FP\n    } else {\n      return 1;  // docFP\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setField(FieldInfo fieldInfo) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    fieldHasFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    fieldHasPositions = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    fieldHasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    fieldHasPayloads = fieldInfo.hasPayloads();\n    skipWriter.setField(fieldHasPositions, fieldHasOffsets, fieldHasPayloads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"000562a7f460954af0deb210cd0c89e4bb72bb40","date":1373819460,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  @Override\n  public int setField(FieldInfo fieldInfo) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    fieldHasFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    fieldHasPositions = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    fieldHasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    fieldHasPayloads = fieldInfo.hasPayloads();\n    skipWriter.setField(fieldHasPositions, fieldHasOffsets, fieldHasPayloads);\n    if (fieldHasPositions) {\n      if (fieldHasPayloads || fieldHasOffsets) {\n        return 3;  // doc + pos + pay FP\n      } else {\n        return 2;  // doc + pos FP\n      }\n    } else {\n      return 1;    // doc FP\n    }\n  }\n\n","sourceOld":"  @Override\n  public int setField(FieldInfo fieldInfo) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    fieldHasFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    fieldHasPositions = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    fieldHasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    fieldHasPayloads = fieldInfo.hasPayloads();\n    skipWriter.setField(fieldHasPositions, fieldHasOffsets, fieldHasPayloads);\n    if (fieldHasPositions) {\n      return 3;  // doc + pos + pay FP\n    } else {\n      return 1;  // docFP\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abfc4a4873131874a50c6f6e3deb59a743ee1f44","date":1376737165,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  @Override\n  public int setField(FieldInfo fieldInfo) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    fieldHasFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    fieldHasPositions = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    fieldHasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    fieldHasPayloads = fieldInfo.hasPayloads();\n    skipWriter.setField(fieldHasPositions, fieldHasOffsets, fieldHasPayloads);\n    lastState = emptyState;\n    if (fieldHasPositions) {\n      if (fieldHasPayloads || fieldHasOffsets) {\n        return 3;  // doc + pos + pay FP\n      } else {\n        return 2;  // doc + pos FP\n      }\n    } else {\n      return 1;    // doc FP\n    }\n  }\n\n","sourceOld":"  @Override\n  public int setField(FieldInfo fieldInfo) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    fieldHasFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    fieldHasPositions = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    fieldHasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    fieldHasPayloads = fieldInfo.hasPayloads();\n    skipWriter.setField(fieldHasPositions, fieldHasOffsets, fieldHasPayloads);\n    if (fieldHasPositions) {\n      if (fieldHasPayloads || fieldHasOffsets) {\n        return 3;  // doc + pos + pay FP\n      } else {\n        return 2;  // doc + pos FP\n      }\n    } else {\n      return 1;    // doc FP\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#setField(FieldInfo).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int setField(FieldInfo fieldInfo) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    fieldHasFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    fieldHasPositions = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    fieldHasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    fieldHasPayloads = fieldInfo.hasPayloads();\n    skipWriter.setField(fieldHasPositions, fieldHasOffsets, fieldHasPayloads);\n    lastState = emptyState;\n    if (fieldHasPositions) {\n      if (fieldHasPayloads || fieldHasOffsets) {\n        return 3;  // doc + pos + pay FP\n      } else {\n        return 2;  // doc + pos FP\n      }\n    } else {\n      return 1;    // doc FP\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"000562a7f460954af0deb210cd0c89e4bb72bb40":["135f40667e65c7c4488c5457956f54c20fd79a43"],"abfc4a4873131874a50c6f6e3deb59a743ee1f44":["000562a7f460954af0deb210cd0c89e4bb72bb40"],"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"135f40667e65c7c4488c5457956f54c20fd79a43":["0a570bec4aec8585a4eea44849bfb2bc264208c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["abfc4a4873131874a50c6f6e3deb59a743ee1f44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"000562a7f460954af0deb210cd0c89e4bb72bb40":["abfc4a4873131874a50c6f6e3deb59a743ee1f44"],"abfc4a4873131874a50c6f6e3deb59a743ee1f44":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"0a570bec4aec8585a4eea44849bfb2bc264208c4":["135f40667e65c7c4488c5457956f54c20fd79a43"],"135f40667e65c7c4488c5457956f54c20fd79a43":["000562a7f460954af0deb210cd0c89e4bb72bb40"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a570bec4aec8585a4eea44849bfb2bc264208c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}