{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","sourceNew":"  public void testElision() {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","sourceOld":"  public void testElision() {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","sourceNew":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","sourceOld":"  public void testElision() {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","sourceNew":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(Version.LUCENE_CURRENT, new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","sourceOld":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","sourceNew":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(Version.LUCENE_CURRENT, new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(Version.LUCENE_CURRENT, tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","sourceOld":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(Version.LUCENE_CURRENT, new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","sourceNew":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(TEST_VERSION_CURRENT, new StringReader(test));\n    Set<String> articles = new HashSet<String>();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(TEST_VERSION_CURRENT, tokenizer, articles);\n    List<String> tas = filter(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","sourceOld":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(Version.LUCENE_CURRENT, new StringReader(test));\n    Set articles = new HashSet();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(Version.LUCENE_CURRENT, tokenizer, articles);\n    List tas = filtre(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","bugFix":null,"bugIntro":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision#testElision().mjava","sourceNew":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(TEST_VERSION_CURRENT, new StringReader(test));\n    Set<String> articles = new HashSet<String>();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(TEST_VERSION_CURRENT, tokenizer, articles);\n    List<String> tas = filter(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","sourceOld":"  public void testElision() throws Exception {\n    String test = \"Plop, juste pour voir l'embrouille avec O'brian. M'enfin.\";\n    Tokenizer tokenizer = new StandardTokenizer(TEST_VERSION_CURRENT, new StringReader(test));\n    Set<String> articles = new HashSet<String>();\n    articles.add(\"l\");\n    articles.add(\"M\");\n    TokenFilter filter = new ElisionFilter(TEST_VERSION_CURRENT, tokenizer, articles);\n    List<String> tas = filter(filter);\n    assertEquals(\"embrouille\", tas.get(4));\n    assertEquals(\"O'brian\", tas.get(6));\n    assertEquals(\"enfin\", tas.get(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["ba1116b3450a9c1642c89445d131b37344055245"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba1116b3450a9c1642c89445d131b37344055245":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}