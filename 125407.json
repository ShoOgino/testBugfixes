{"path":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#receiveGlobalStats(SolrQueryRequest).mjava","commits":[{"id":"a94e45463a0089149b0d148ae5369140e7f54b8c","date":1419231934,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#receiveGlobalStats(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Receive global stats data from the master and update a local cache of stats\n   * with this global data. This event occurs either as a separate request, or\n   * together with the regular query request, in which case this method is\n   * called first, before preparing a {@link QueryCommand} to be submitted to\n   * the local {@link SolrIndexSearcher}.\n   *\n   * @param req query request with global stats data\n   */\n  public abstract void receiveGlobalStats(SolrQueryRequest req);\n\n","sourceOld":null,"bugFix":null,"bugIntro":["df72a23fb74bebe914e3f3972063a884327c0436"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df72a23fb74bebe914e3f3972063a884327c0436","date":1570470832,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#receiveGlobalStats(SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#receiveGlobalStats(SolrQueryRequest).mjava","sourceNew":"  /**\n   * Receive global stats data from the master and update a local cache of global stats\n   * with this global data. This event occurs either as a separate request, or\n   * together with the regular query request, in which case this method is\n   * called first, before preparing a {@link QueryCommand} to be submitted to\n   * the local {@link SolrIndexSearcher}.\n   * <p>This method updates the cache metrics and calls {@link #doReceiveGlobalStats(SolrQueryRequest)}.</p>\n   *\n   * @param req query request with global stats data\n   */\n  public void receiveGlobalStats(SolrQueryRequest req) {\n    statsCacheMetrics.receiveGlobalStats.increment();\n    doReceiveGlobalStats(req);\n  }\n\n","sourceOld":"  /**\n   * Receive global stats data from the master and update a local cache of stats\n   * with this global data. This event occurs either as a separate request, or\n   * together with the regular query request, in which case this method is\n   * called first, before preparing a {@link QueryCommand} to be submitted to\n   * the local {@link SolrIndexSearcher}.\n   *\n   * @param req query request with global stats data\n   */\n  public abstract void receiveGlobalStats(SolrQueryRequest req);\n\n","bugFix":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#receiveGlobalStats(SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#receiveGlobalStats(SolrQueryRequest).mjava","sourceNew":"  /**\n   * Receive global stats data from the master and update a local cache of global stats\n   * with this global data. This event occurs either as a separate request, or\n   * together with the regular query request, in which case this method is\n   * called first, before preparing a {@link QueryCommand} to be submitted to\n   * the local {@link SolrIndexSearcher}.\n   * <p>This method updates the cache metrics and calls {@link #doReceiveGlobalStats(SolrQueryRequest)}.</p>\n   *\n   * @param req query request with global stats data\n   */\n  public void receiveGlobalStats(SolrQueryRequest req) {\n    statsCacheMetrics.receiveGlobalStats.increment();\n    doReceiveGlobalStats(req);\n  }\n\n","sourceOld":"  /**\n   * Receive global stats data from the master and update a local cache of stats\n   * with this global data. This event occurs either as a separate request, or\n   * together with the regular query request, in which case this method is\n   * called first, before preparing a {@link QueryCommand} to be submitted to\n   * the local {@link SolrIndexSearcher}.\n   *\n   * @param req query request with global stats data\n   */\n  public abstract void receiveGlobalStats(SolrQueryRequest req);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#receiveGlobalStats(SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#receiveGlobalStats(SolrQueryRequest).mjava","sourceNew":"  /**\n   * Receive global stats data from the leader and update a local cache of global stats\n   * with this global data. This event occurs either as a separate request, or\n   * together with the regular query request, in which case this method is\n   * called first, before preparing a {@link QueryCommand} to be submitted to\n   * the local {@link SolrIndexSearcher}.\n   * <p>This method updates the cache metrics and calls {@link #doReceiveGlobalStats(SolrQueryRequest)}.</p>\n   *\n   * @param req query request with global stats data\n   */\n  public void receiveGlobalStats(SolrQueryRequest req) {\n    statsCacheMetrics.receiveGlobalStats.increment();\n    doReceiveGlobalStats(req);\n  }\n\n","sourceOld":"  /**\n   * Receive global stats data from the master and update a local cache of global stats\n   * with this global data. This event occurs either as a separate request, or\n   * together with the regular query request, in which case this method is\n   * called first, before preparing a {@link QueryCommand} to be submitted to\n   * the local {@link SolrIndexSearcher}.\n   * <p>This method updates the cache metrics and calls {@link #doReceiveGlobalStats(SolrQueryRequest)}.</p>\n   *\n   * @param req query request with global stats data\n   */\n  public void receiveGlobalStats(SolrQueryRequest req) {\n    statsCacheMetrics.receiveGlobalStats.increment();\n    doReceiveGlobalStats(req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a94e45463a0089149b0d148ae5369140e7f54b8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["df72a23fb74bebe914e3f3972063a884327c0436"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df72a23fb74bebe914e3f3972063a884327c0436":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a94e45463a0089149b0d148ae5369140e7f54b8c","df72a23fb74bebe914e3f3972063a884327c0436"]},"commit2Childs":{"a94e45463a0089149b0d148ae5369140e7f54b8c":["df72a23fb74bebe914e3f3972063a884327c0436","b0b597c65628ca9e73913a07e81691f8229bae35"],"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"df72a23fb74bebe914e3f3972063a884327c0436":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}