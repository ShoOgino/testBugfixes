{"path":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#close().mjava","commits":[{"id":"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96","date":1433340999,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      CodecUtil.writeFooter(out);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(delegate, out);\n      } else {\n        IOUtils.closeWhileHandlingException(delegate, out);\n      }\n    }\n    \n    String metaFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.META_EXTENSION);\n    IndexOutput metaOut = state.directory.createOutput(metaFileName, state.context);\n    success = false;\n    try {\n      CodecUtil.writeIndexHeader(metaOut, BKDTreeDocValuesFormat.META_CODEC_NAME, BKDTreeDocValuesFormat.META_VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n      metaOut.writeVInt(fieldIndexFPs.size());\n      for(Map.Entry<Integer,Long> ent : fieldIndexFPs.entrySet()) {       \n        metaOut.writeVInt(ent.getKey());\n        metaOut.writeVLong(ent.getValue());\n      }\n      CodecUtil.writeFooter(metaOut);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(metaOut);\n      } else {\n        IOUtils.closeWhileHandlingException(metaOut);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#close().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      CodecUtil.writeFooter(out);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(delegate, out);\n      } else {\n        IOUtils.closeWhileHandlingException(delegate, out);\n      }\n    }\n    \n    String metaFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.META_EXTENSION);\n    IndexOutput metaOut = state.directory.createOutput(metaFileName, state.context);\n    success = false;\n    try {\n      CodecUtil.writeIndexHeader(metaOut, BKDTreeDocValuesFormat.META_CODEC_NAME, BKDTreeDocValuesFormat.META_VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n      metaOut.writeVInt(fieldIndexFPs.size());\n      for(Map.Entry<Integer,Long> ent : fieldIndexFPs.entrySet()) {       \n        metaOut.writeVInt(ent.getKey());\n        metaOut.writeVLong(ent.getValue());\n      }\n      CodecUtil.writeFooter(metaOut);\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(metaOut);\n      } else {\n        IOUtils.closeWhileHandlingException(metaOut);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}