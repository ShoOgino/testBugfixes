{"path":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"/dev/null","sourceNew":"  /** test arabic PDF extraction is functional */\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":null,"sourceOld":"  /** test arabic PDF extraction is functional */\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"/dev/null","sourceNew":"  /** test arabic PDF extraction is functional */\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd0a7f04b5a49a00149b867e7d51f632fb8a4664","date":1279497978,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0633d6cdc3b9d1f2b0ef8e5ab78701d285db0303","date":1291156410,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d345a86357a4042faeebfad2693a070019c95918","date":1305385272,"type":5,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","0633d6cdc3b9d1f2b0ef8e5ab78701d285db0303"],"0633d6cdc3b9d1f2b0ef8e5ab78701d285db0303":["bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"d345a86357a4042faeebfad2693a070019c95918":["0633d6cdc3b9d1f2b0ef8e5ab78701d285db0303"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["3bb13258feba31ab676502787ab2e1779f129b7a","d345a86357a4042faeebfad2693a070019c95918"],"a3776dccca01c11e7046323cfad46a3b4a471233":["0633d6cdc3b9d1f2b0ef8e5ab78701d285db0303","d345a86357a4042faeebfad2693a070019c95918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3bb13258feba31ab676502787ab2e1779f129b7a":["bd0a7f04b5a49a00149b867e7d51f632fb8a4664","0633d6cdc3b9d1f2b0ef8e5ab78701d285db0303"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d345a86357a4042faeebfad2693a070019c95918"],"bd0a7f04b5a49a00149b867e7d51f632fb8a4664":["1da8d55113b689b06716246649de6f62430f15c0"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"0633d6cdc3b9d1f2b0ef8e5ab78701d285db0303":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d345a86357a4042faeebfad2693a070019c95918","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"1da8d55113b689b06716246649de6f62430f15c0":["5f4e87790277826a2aea119328600dfb07761f32","bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"d345a86357a4042faeebfad2693a070019c95918":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"3bb13258feba31ab676502787ab2e1779f129b7a":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"bd0a7f04b5a49a00149b867e7d51f632fb8a4664":["5f4e87790277826a2aea119328600dfb07761f32","0633d6cdc3b9d1f2b0ef8e5ab78701d285db0303","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}