{"path":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert fieldInfo.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert fieldInfo.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs,\n                                               DocsAndPositionsEnum reuse, boolean needsOffsets)\n    throws IOException {\n\n    if (fieldInfo.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {\n      return null;\n    }\n\n    if (needsOffsets) {\n      return null;\n    }\n\n    assert fieldInfo.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert fieldInfo.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"31f025ae60076ae95274433f3fe8e6ace2857a87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}