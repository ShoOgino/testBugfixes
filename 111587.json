{"path":"src/java/org/apache/solr/core/SolrCore#initListeners().mjava","commits":[{"id":"28a016ae2abf4934515e45810192aa4350e3092b","date":1252309557,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"/dev/null","sourceNew":"  private void initListeners() {\n    List<PluginInfo> l = solrConfig.getPluginInfos(SolrEventListener.class.getName());\n    firstSearcherListeners = new ArrayList<SolrEventListener>();\n    newSearcherListeners = new ArrayList<SolrEventListener>();\n    for (PluginInfo info : l) {\n      SolrEventListener listener = createEventListener(info.className);\n      listener.init(info.initArgs);\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cf8271e70a650d15fbc7354d641c4b1eb2b62d7f","date":1265373758,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    List<PluginInfo> l = solrConfig.getPluginInfos(SolrEventListener.class.getName());\n    firstSearcherListeners = new ArrayList<SolrEventListener>();\n    newSearcherListeners = new ArrayList<SolrEventListener>();\n    for (PluginInfo info : l) {\n      SolrEventListener listener = createEventListener(info.className);\n      listener.init(info.initArgs);\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","bugFix":null,"bugIntro":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cf8271e70a650d15fbc7354d641c4b1eb2b62d7f":["28a016ae2abf4934515e45810192aa4350e3092b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["cf8271e70a650d15fbc7354d641c4b1eb2b62d7f"],"28a016ae2abf4934515e45810192aa4350e3092b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"cf8271e70a650d15fbc7354d641c4b1eb2b62d7f":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["28a016ae2abf4934515e45810192aa4350e3092b"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"28a016ae2abf4934515e45810192aa4350e3092b":["cf8271e70a650d15fbc7354d641c4b1eb2b62d7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}