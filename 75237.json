{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n      throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n    }\n    if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n      throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n    }\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n      throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n    }\n    if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n      throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n    }\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62cc423073d23f01208c6cf85844dedd80011121","date":1454731549,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lon, lat);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n      throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n    }\n    if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n      throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n    }\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lon, lat);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n      throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n    }\n    if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n      throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n    }\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lon, lat);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n      throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n    }\n    if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n      throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n    }\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lon, lat);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a207d19eac354d649c3f0e2cce070017c78125e":["937923083e4d137932336fc80f3d78758ff698a6","62cc423073d23f01208c6cf85844dedd80011121"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","62cc423073d23f01208c6cf85844dedd80011121"],"62cc423073d23f01208c6cf85844dedd80011121":["937923083e4d137932336fc80f3d78758ff698a6"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["5a207d19eac354d649c3f0e2cce070017c78125e"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a093d23e938d132b81b5f2de3d6b168afe3608e"]},"commit2Childs":{"5a207d19eac354d649c3f0e2cce070017c78125e":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"62cc423073d23f01208c6cf85844dedd80011121":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"937923083e4d137932336fc80f3d78758ff698a6":["5a207d19eac354d649c3f0e2cce070017c78125e","62cc423073d23f01208c6cf85844dedd80011121"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}