{"path":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","commits":[{"id":"aa09157b213a620622ccae0ef62a1da45a683222","date":1359149228,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the current value for this id, or null if the\n   *  id isn't in the index or was deleted. */\n  public T get(String id) throws IOException {\n    // First try to get the \"live\" value:\n    T value = current.get(id);\n    if (value == missingValue) {\n      // Deleted but the deletion is not yet reflected in\n      // the reader:\n      return null;\n    } else if (value != null) {\n      return value;\n    } else {\n      value = old.get(id);\n      if (value == missingValue) {\n        // Deleted but the deletion is not yet reflected in\n        // the reader:\n        return null;\n      } else if (value != null) {\n        return value;\n      } else {\n        // It either does not exist in the index, or, it was\n        // already flushed & NRT reader was opened on the\n        // segment, so fallback to current searcher:\n        IndexSearcher s = mgr.acquire();\n        try {\n          return lookupFromSearcher(s, id);\n        } finally {\n          mgr.release(s);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the current value for this id, or null if the\n   *  id isn't in the index or was deleted. */\n  public T get(String id) throws IOException {\n    // First try to get the \"live\" value:\n    T value = current.get(id);\n    if (value == missingValue) {\n      // Deleted but the deletion is not yet reflected in\n      // the reader:\n      return null;\n    } else if (value != null) {\n      return value;\n    } else {\n      value = old.get(id);\n      if (value == missingValue) {\n        // Deleted but the deletion is not yet reflected in\n        // the reader:\n        return null;\n      } else if (value != null) {\n        return value;\n      } else {\n        // It either does not exist in the index, or, it was\n        // already flushed & NRT reader was opened on the\n        // segment, so fallback to current searcher:\n        IndexSearcher s = mgr.acquire();\n        try {\n          return lookupFromSearcher(s, id);\n        } finally {\n          mgr.release(s);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a07fb647035facac4213bc05b893142a292a20cc","date":1367943764,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","sourceNew":"  /** Returns the current value for this id, or null if the\n   *  id isn't in the index or was deleted. */\n  public T get(String id) throws IOException {\n    // First try to get the \"live\" value:\n    T value = current.get(id);\n    if (value == missingValue) {\n      // Deleted but the deletion is not yet reflected in\n      // the reader:\n      return null;\n    } else if (value != null) {\n      return value;\n    } else {\n      value = old.get(id);\n      if (value == missingValue) {\n        // Deleted but the deletion is not yet reflected in\n        // the reader:\n        return null;\n      } else if (value != null) {\n        return value;\n      } else {\n        // It either does not exist in the index, or, it was\n        // already flushed & NRT reader was opened on the\n        // segment, so fallback to current searcher:\n        S s = mgr.acquire();\n        try {\n          return lookupFromSearcher(s, id);\n        } finally {\n          mgr.release(s);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Returns the current value for this id, or null if the\n   *  id isn't in the index or was deleted. */\n  public T get(String id) throws IOException {\n    // First try to get the \"live\" value:\n    T value = current.get(id);\n    if (value == missingValue) {\n      // Deleted but the deletion is not yet reflected in\n      // the reader:\n      return null;\n    } else if (value != null) {\n      return value;\n    } else {\n      value = old.get(id);\n      if (value == missingValue) {\n        // Deleted but the deletion is not yet reflected in\n        // the reader:\n        return null;\n      } else if (value != null) {\n        return value;\n      } else {\n        // It either does not exist in the index, or, it was\n        // already flushed & NRT reader was opened on the\n        // segment, so fallback to current searcher:\n        IndexSearcher s = mgr.acquire();\n        try {\n          return lookupFromSearcher(s, id);\n        } finally {\n          mgr.release(s);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c1ca350a30f47355b5b27ad048195d462059727","date":1416523641,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","sourceNew":"  /** Returns the current value for this id, or null if the\n   *  id isn't in the index or was deleted. */\n  public T get(String id) throws IOException {\n    // First try to get the \"live\" value:\n    T value = current.get(id);\n    if (value == missingValue) {\n      // Deleted but the deletion is not yet reflected in\n      // the reader:\n      return (T)null;\n    } else if (value != null) {\n      return value;\n    } else {\n      value = old.get(id);\n      if (value == missingValue) {\n        // Deleted but the deletion is not yet reflected in\n        // the reader:\n        return null;\n      } else if (value != null) {\n        return value;\n      } else {\n        // It either does not exist in the index, or, it was\n        // already flushed & NRT reader was opened on the\n        // segment, so fallback to current searcher:\n        S s = mgr.acquire();\n        try {\n          return lookupFromSearcher(s, id);\n        } finally {\n          mgr.release(s);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Returns the current value for this id, or null if the\n   *  id isn't in the index or was deleted. */\n  public T get(String id) throws IOException {\n    // First try to get the \"live\" value:\n    T value = current.get(id);\n    if (value == missingValue) {\n      // Deleted but the deletion is not yet reflected in\n      // the reader:\n      return null;\n    } else if (value != null) {\n      return value;\n    } else {\n      value = old.get(id);\n      if (value == missingValue) {\n        // Deleted but the deletion is not yet reflected in\n        // the reader:\n        return null;\n      } else if (value != null) {\n        return value;\n      } else {\n        // It either does not exist in the index, or, it was\n        // already flushed & NRT reader was opened on the\n        // segment, so fallback to current searcher:\n        S s = mgr.acquire();\n        try {\n          return lookupFromSearcher(s, id);\n        } finally {\n          mgr.release(s);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90294f61f1156e3708019cde37e7069bafc5151","date":1416530088,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LiveFieldValues#get(String).mjava","sourceNew":"  /** Returns the current value for this id, or null if the\n   *  id isn't in the index or was deleted. */\n  public T get(String id) throws IOException {\n    // First try to get the \"live\" value:\n    T value = current.get(id);\n    if (value == missingValue) {\n      // Deleted but the deletion is not yet reflected in\n      // the reader:\n      return null;\n    } else if (value != null) {\n      return value;\n    } else {\n      value = old.get(id);\n      if (value == missingValue) {\n        // Deleted but the deletion is not yet reflected in\n        // the reader:\n        return null;\n      } else if (value != null) {\n        return value;\n      } else {\n        // It either does not exist in the index, or, it was\n        // already flushed & NRT reader was opened on the\n        // segment, so fallback to current searcher:\n        S s = mgr.acquire();\n        try {\n          return lookupFromSearcher(s, id);\n        } finally {\n          mgr.release(s);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Returns the current value for this id, or null if the\n   *  id isn't in the index or was deleted. */\n  public T get(String id) throws IOException {\n    // First try to get the \"live\" value:\n    T value = current.get(id);\n    if (value == missingValue) {\n      // Deleted but the deletion is not yet reflected in\n      // the reader:\n      return (T)null;\n    } else if (value != null) {\n      return value;\n    } else {\n      value = old.get(id);\n      if (value == missingValue) {\n        // Deleted but the deletion is not yet reflected in\n        // the reader:\n        return null;\n      } else if (value != null) {\n        return value;\n      } else {\n        // It either does not exist in the index, or, it was\n        // already flushed & NRT reader was opened on the\n        // segment, so fallback to current searcher:\n        S s = mgr.acquire();\n        try {\n          return lookupFromSearcher(s, id);\n        } finally {\n          mgr.release(s);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c1ca350a30f47355b5b27ad048195d462059727":["a07fb647035facac4213bc05b893142a292a20cc"],"d90294f61f1156e3708019cde37e7069bafc5151":["2c1ca350a30f47355b5b27ad048195d462059727"],"a07fb647035facac4213bc05b893142a292a20cc":["aa09157b213a620622ccae0ef62a1da45a683222"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","aa09157b213a620622ccae0ef62a1da45a683222"],"aa09157b213a620622ccae0ef62a1da45a683222":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d90294f61f1156e3708019cde37e7069bafc5151"]},"commit2Childs":{"2c1ca350a30f47355b5b27ad048195d462059727":["d90294f61f1156e3708019cde37e7069bafc5151"],"d90294f61f1156e3708019cde37e7069bafc5151":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a07fb647035facac4213bc05b893142a292a20cc":["2c1ca350a30f47355b5b27ad048195d462059727"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd45d4a2ee01a1932d33eec42f5272c2402da679","aa09157b213a620622ccae0ef62a1da45a683222"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"aa09157b213a620622ccae0ef62a1da45a683222":["a07fb647035facac4213bc05b893142a292a20cc","dd45d4a2ee01a1932d33eec42f5272c2402da679"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dd45d4a2ee01a1932d33eec42f5272c2402da679","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}