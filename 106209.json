{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addDeletesAndPurge(DocumentsWriter,DocumentsWriterDeleteQueue).mjava","commits":[{"id":"33e096accda90a8bd2279f890efe2e287f47c743","date":1326726424,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addDeletesAndPurge(DocumentsWriter,DocumentsWriterDeleteQueue).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void addDeletesAndPurge(DocumentsWriter writer,\n      DocumentsWriterDeleteQueue deleteQueue) throws IOException {\n   incTickets();// first inc the ticket count - freeze opens\n                // a window for #anyChanges to fail\n    boolean success = false;\n    try {\n      queue.add(new GlobalDeletesTicket(deleteQueue.freezeGlobalBuffer(null)));\n      success = true;\n    } finally {\n      if (!success) {\n       decTickets();\n      }\n    }\n    forcePurge(writer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cdce5748259ec5117807d066a180c72f15e6f419"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cdce5748259ec5117807d066a180c72f15e6f419","date":1326963273,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addDeletesAndPurge(DocumentsWriter,DocumentsWriterDeleteQueue).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addDeletesAndPurge(DocumentsWriter,DocumentsWriterDeleteQueue).mjava","sourceNew":"  void addDeletesAndPurge(DocumentsWriter writer,\n      DocumentsWriterDeleteQueue deleteQueue) throws IOException {\n    synchronized (this) {\n      incTickets();// first inc the ticket count - freeze opens\n                   // a window for #anyChanges to fail\n      boolean success = false;\n      try {\n        queue\n            .add(new GlobalDeletesTicket(deleteQueue.freezeGlobalBuffer(null)));\n        success = true;\n      } finally {\n        if (!success) {\n          decTickets();\n        }\n      }\n    }\n    // don't hold the lock on the FlushQueue when forcing the purge - this blocks and deadlocks \n    // if we hold the lock.\n    forcePurge(writer);\n  }\n\n","sourceOld":"  synchronized void addDeletesAndPurge(DocumentsWriter writer,\n      DocumentsWriterDeleteQueue deleteQueue) throws IOException {\n   incTickets();// first inc the ticket count - freeze opens\n                // a window for #anyChanges to fail\n    boolean success = false;\n    try {\n      queue.add(new GlobalDeletesTicket(deleteQueue.freezeGlobalBuffer(null)));\n      success = true;\n    } finally {\n      if (!success) {\n       decTickets();\n      }\n    }\n    forcePurge(writer);\n  }\n\n","bugFix":["33e096accda90a8bd2279f890efe2e287f47c743"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addDeletesAndPurge(DocumentsWriter,DocumentsWriterDeleteQueue).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addDeletesAndPurge(DocumentsWriter,DocumentsWriterDeleteQueue).mjava","sourceNew":"  void addDeletesAndPurge(DocumentsWriter writer,\n      DocumentsWriterDeleteQueue deleteQueue) throws IOException {\n    synchronized (this) {\n      incTickets();// first inc the ticket count - freeze opens\n                   // a window for #anyChanges to fail\n      boolean success = false;\n      try {\n        queue\n            .add(new GlobalDeletesTicket(deleteQueue.freezeGlobalBuffer(null)));\n        success = true;\n      } finally {\n        if (!success) {\n          decTickets();\n        }\n      }\n    }\n    // don't hold the lock on the FlushQueue when forcing the purge - this blocks and deadlocks \n    // if we hold the lock.\n    forcePurge(writer);\n  }\n\n","sourceOld":"  void addDeletesAndPurge(DocumentsWriter writer,\n      DocumentsWriterDeleteQueue deleteQueue) throws IOException {\n    synchronized (this) {\n      incTickets();// first inc the ticket count - freeze opens\n                   // a window for #anyChanges to fail\n      boolean success = false;\n      try {\n        queue\n            .add(new GlobalDeletesTicket(deleteQueue.freezeGlobalBuffer(null)));\n        success = true;\n      } finally {\n        if (!success) {\n          decTickets();\n        }\n      }\n    }\n    // don't hold the lock on the FlushQueue when forcing the purge - this blocks and deadlocks \n    // if we hold the lock.\n    forcePurge(writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cdce5748259ec5117807d066a180c72f15e6f419":["33e096accda90a8bd2279f890efe2e287f47c743"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cdce5748259ec5117807d066a180c72f15e6f419"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33e096accda90a8bd2279f890efe2e287f47c743":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"cdce5748259ec5117807d066a180c72f15e6f419":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33e096accda90a8bd2279f890efe2e287f47c743"],"33e096accda90a8bd2279f890efe2e287f47c743":["cdce5748259ec5117807d066a180c72f15e6f419"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}