{"path":"lucene/src/java/org/apache/lucene/util/BitUtil#nlz(long).mjava","commits":[{"id":"931aa2e14bf0bd782433b017ac4423637019725a","date":1308349478,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BitUtil#nlz(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of leading zero bits.\n   */\n  public static int nlz(long x) {\n   int n = 0;\n   // do the first step as a long\n   int y = (int)(x>>>32);\n   if (y==0) {n+=32; y = (int)(x); }\n   if ((y & 0xFFFF0000) == 0) { n+=16; y<<=16; }\n   if ((y & 0xFF000000) == 0) { n+=8; y<<=8; }\n   return n + nlzTable[y >>> 24];\n /* implementation without table:\n   if ((y & 0xF0000000) == 0) { n+=4; y<<=4; }\n   if ((y & 0xC0000000) == 0) { n+=2; y<<=2; }\n   if ((y & 0x80000000) == 0) { n+=1; y<<=1; }\n   if ((y & 0x80000000) == 0) { n+=1;}\n   return n;\n  */\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/BitUtil#nlz(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of leading zero bits.\n   */\n  public static int nlz(long x) {\n   int n = 0;\n   // do the first step as a long\n   int y = (int)(x>>>32);\n   if (y==0) {n+=32; y = (int)(x); }\n   if ((y & 0xFFFF0000) == 0) { n+=16; y<<=16; }\n   if ((y & 0xFF000000) == 0) { n+=8; y<<=8; }\n   return n + nlzTable[y >>> 24];\n /* implementation without table:\n   if ((y & 0xF0000000) == 0) { n+=4; y<<=4; }\n   if ((y & 0xC0000000) == 0) { n+=2; y<<=2; }\n   if ((y & 0x80000000) == 0) { n+=1; y<<=1; }\n   if ((y & 0x80000000) == 0) { n+=1;}\n   return n;\n  */\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#nlz(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BitUtil#nlz(long).mjava","sourceNew":"  /** Returns the number of leading zero bits.\n   */\n  public static int nlz(long x) {\n   int n = 0;\n   // do the first step as a long\n   int y = (int)(x>>>32);\n   if (y==0) {n+=32; y = (int)(x); }\n   if ((y & 0xFFFF0000) == 0) { n+=16; y<<=16; }\n   if ((y & 0xFF000000) == 0) { n+=8; y<<=8; }\n   return n + nlzTable[y >>> 24];\n /* implementation without table:\n   if ((y & 0xF0000000) == 0) { n+=4; y<<=4; }\n   if ((y & 0xC0000000) == 0) { n+=2; y<<=2; }\n   if ((y & 0x80000000) == 0) { n+=1; y<<=1; }\n   if ((y & 0x80000000) == 0) { n+=1;}\n   return n;\n  */\n  }\n\n","sourceOld":"  /** Returns the number of leading zero bits.\n   */\n  public static int nlz(long x) {\n   int n = 0;\n   // do the first step as a long\n   int y = (int)(x>>>32);\n   if (y==0) {n+=32; y = (int)(x); }\n   if ((y & 0xFFFF0000) == 0) { n+=16; y<<=16; }\n   if ((y & 0xFF000000) == 0) { n+=8; y<<=8; }\n   return n + nlzTable[y >>> 24];\n /* implementation without table:\n   if ((y & 0xF0000000) == 0) { n+=4; y<<=4; }\n   if ((y & 0xC0000000) == 0) { n+=2; y<<=2; }\n   if ((y & 0x80000000) == 0) { n+=1; y<<=1; }\n   if ((y & 0x80000000) == 0) { n+=1;}\n   return n;\n  */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"931aa2e14bf0bd782433b017ac4423637019725a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","931aa2e14bf0bd782433b017ac4423637019725a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["931aa2e14bf0bd782433b017ac4423637019725a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"931aa2e14bf0bd782433b017ac4423637019725a":["7edfc3f7caa7b49a18fe367692768b33b018e9db","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["931aa2e14bf0bd782433b017ac4423637019725a","7edfc3f7caa7b49a18fe367692768b33b018e9db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7edfc3f7caa7b49a18fe367692768b33b018e9db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}