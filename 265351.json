{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","commits":[{"id":"a05464f071eda06541fd9ed6f04aaca99b131dfa","date":1343110729,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","sourceNew":"  // nocommit: spi-hack solr.xxx and o.a.solr.analysis.xxx via a delegator\n  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":"  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bb7d4caf24bc521fa8ac35f463f50724b4a91d8","date":1343155480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","sourceNew":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":"  // nocommit: spi-hack solr.xxx and o.a.solr.analysis.xxx via a delegator\n  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","sourceNew":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":"  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f80818731469e00f54165ec94aae2db868ea05","date":1343266866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","sourceNew":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname) throws IOException {\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"/dev/null","sourceNew":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname) throws IOException {\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"/dev/null","sourceNew":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname) throws IOException {\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","sourceNew":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname) throws IOException {\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"luceneMatchVersion\", getLuceneMatchVersion().toString());\n    Class<? extends TokenizerFactory> clazz = loader.findClass(cname, TokenizerFactory.class);\n    try {\n      TokenizerFactory tokFactory = clazz.getConstructor(Map.class).newInstance(args);\n      if (tokFactory instanceof ResourceLoaderAware) {\n        ((ResourceLoaderAware) tokFactory).inform(loader);\n      }\n      return tokFactory;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname) throws IOException {\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init(args);\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":["ecd7bd52bf60fcbfecf79b3d2467cf7514ae16db"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ecd7bd52bf60fcbfecf79b3d2467cf7514ae16db","date":1368552110,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","sourceNew":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname) throws IOException {\n    Class<? extends TokenizerFactory> clazz = loader.findClass(cname, TokenizerFactory.class);\n    try {\n      TokenizerFactory tokFactory = clazz.getConstructor(Map.class).newInstance(tokArgs);\n      if (tokFactory instanceof ResourceLoaderAware) {\n        ((ResourceLoaderAware) tokFactory).inform(loader);\n      }\n      return tokFactory;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // (there are no tests for this functionality)\n  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname) throws IOException {\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"luceneMatchVersion\", getLuceneMatchVersion().toString());\n    Class<? extends TokenizerFactory> clazz = loader.findClass(cname, TokenizerFactory.class);\n    try {\n      TokenizerFactory tokFactory = clazz.getConstructor(Map.class).newInstance(args);\n      if (tokFactory instanceof ResourceLoaderAware) {\n        ((ResourceLoaderAware) tokFactory).inform(loader);\n      }\n      return tokFactory;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ecd7bd52bf60fcbfecf79b3d2467cf7514ae16db":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f80818731469e00f54165ec94aae2db868ea05"],"7bb7d4caf24bc521fa8ac35f463f50724b4a91d8":["a05464f071eda06541fd9ed6f04aaca99b131dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f80818731469e00f54165ec94aae2db868ea05"],"f6f80818731469e00f54165ec94aae2db868ea05":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"a05464f071eda06541fd9ed6f04aaca99b131dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["f6f80818731469e00f54165ec94aae2db868ea05"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7bb7d4caf24bc521fa8ac35f463f50724b4a91d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecd7bd52bf60fcbfecf79b3d2467cf7514ae16db"]},"commit2Childs":{"ecd7bd52bf60fcbfecf79b3d2467cf7514ae16db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"7bb7d4caf24bc521fa8ac35f463f50724b4a91d8":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","a05464f071eda06541fd9ed6f04aaca99b131dfa","5a1a22b1ad88b436661458df567f3fdb446392a4"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"f6f80818731469e00f54165ec94aae2db868ea05":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a05464f071eda06541fd9ed6f04aaca99b131dfa":["7bb7d4caf24bc521fa8ac35f463f50724b4a91d8"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ecd7bd52bf60fcbfecf79b3d2467cf7514ae16db"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["f6f80818731469e00f54165ec94aae2db868ea05"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}