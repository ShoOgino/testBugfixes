{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41SortedDocValuesConsumer#Lucene41SortedDocValuesConsumer(IndexOutput,IndexOutput,IndexOutput,int,int,int).mjava","commits":[{"id":"340d84be22eb83faa30ac0cbbaa6db6ae6500709","date":1353346410,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41SortedDocValuesConsumer#Lucene41SortedDocValuesConsumer(IndexOutput,IndexOutput,IndexOutput,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41SortedDocValuesConsumer#Lucene41SortedDocValuesConsumer(IndexOutput,IndexOutput,IndexOutput,int,int).mjava","sourceNew":"  public Lucene41SortedDocValuesConsumer(IndexOutput dataOut,\n      IndexOutput indexOut, IndexOutput offsetOut, int valueCount, int maxLength, int docCount)\n      throws IOException {\n    int size;\n    if (offsetOut != null) {\n      size = VALUE_SIZE_VAR;\n      offsetBuffer = new AppendingLongBuffer();  \n      this.offsets = offsetOut;\n      CodecUtil.writeHeader(offsetOut, CODEC_NAME, VERSION_START);\n    } else {\n      size = maxLength;\n      offsetBuffer = null;\n      this.offsets = null;\n    }\n    CodecUtil.writeHeader(dataOut, CODEC_NAME, VERSION_START);\n    dataOut.writeInt(size);\n    dataOut.writeInt(maxLength);\n    dataOut.writeInt(valueCount);\n    CodecUtil.writeHeader(indexOut, CODEC_NAME, VERSION_START);\n    this.data = dataOut;\n    this.index = indexOut;\n    this.valueCount = valueCount;\n    ords = PackedInts.getWriter(index, docCount,\n        PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n  }\n\n","sourceOld":"  public Lucene41SortedDocValuesConsumer(IndexOutput dataOut,\n      IndexOutput indexOut, IndexOutput offsetOut, int valueCount, int maxLength)\n      throws IOException {\n    int size;\n    if (offsetOut != null) {\n      size = VALUE_SIZE_VAR;\n      offsetBuffer = new AppendingLongBuffer();  \n      this.offsets = offsetOut;\n      CodecUtil.writeHeader(offsetOut, CODEC_NAME, VERSION_START);\n    } else {\n      size = maxLength;\n      offsetBuffer = null;\n      this.offsets = null;\n    }\n    CodecUtil.writeHeader(dataOut, CODEC_NAME, VERSION_START);\n    dataOut.writeInt(size);\n    dataOut.writeInt(maxLength);\n    CodecUtil.writeHeader(indexOut, CODEC_NAME, VERSION_START);\n    this.data = dataOut;\n    this.index = indexOut;\n    this.valueCount = valueCount;\n    ords = PackedInts.getWriter(index, valueCount,\n        PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ed9002c5afac843c7f2d04d88e74b40d627e1af","date":1357602069,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41SortedDocValuesConsumer#Lucene41SortedDocValuesConsumer(IndexOutput,IndexOutput,IndexOutput,int,int,int).mjava","sourceNew":null,"sourceOld":"  public Lucene41SortedDocValuesConsumer(IndexOutput dataOut,\n      IndexOutput indexOut, IndexOutput offsetOut, int valueCount, int maxLength, int docCount)\n      throws IOException {\n    int size;\n    if (offsetOut != null) {\n      size = VALUE_SIZE_VAR;\n      offsetBuffer = new AppendingLongBuffer();  \n      this.offsets = offsetOut;\n      CodecUtil.writeHeader(offsetOut, CODEC_NAME, VERSION_START);\n    } else {\n      size = maxLength;\n      offsetBuffer = null;\n      this.offsets = null;\n    }\n    CodecUtil.writeHeader(dataOut, CODEC_NAME, VERSION_START);\n    dataOut.writeInt(size);\n    dataOut.writeInt(maxLength);\n    dataOut.writeInt(valueCount);\n    CodecUtil.writeHeader(indexOut, CODEC_NAME, VERSION_START);\n    this.data = dataOut;\n    this.index = indexOut;\n    this.valueCount = valueCount;\n    ords = PackedInts.getWriter(index, docCount,\n        PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"340d84be22eb83faa30ac0cbbaa6db6ae6500709":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1ed9002c5afac843c7f2d04d88e74b40d627e1af":["340d84be22eb83faa30ac0cbbaa6db6ae6500709"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["340d84be22eb83faa30ac0cbbaa6db6ae6500709","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"340d84be22eb83faa30ac0cbbaa6db6ae6500709":["1ed9002c5afac843c7f2d04d88e74b40d627e1af"],"1ed9002c5afac843c7f2d04d88e74b40d627e1af":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1ed9002c5afac843c7f2d04d88e74b40d627e1af","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}