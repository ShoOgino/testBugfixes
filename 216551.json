{"path":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,String,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,String,int,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,String,int,int).mjava","sourceNew":"    public NodeState(Random random, String baseDir, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(new File(baseDir + \".\" + myNodeID));\n      // TODO: set warmer\n      writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, String baseDir, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(new File(baseDir + \".\" + myNodeID));\n      // TODO: set warmer\n      writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea8db162694636ac3d19d83debf895a9e089f96a","date":1343856398,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,String,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(_TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, String baseDir, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(new File(baseDir + \".\" + myNodeID));\n      // TODO: set warmer\n      writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,String,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(_TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, String baseDir, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(new File(baseDir + \".\" + myNodeID));\n      // TODO: set warmer\n      writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,String,int,int).mjava","sourceNew":null,"sourceOld":"    public NodeState(Random random, String baseDir, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(new File(baseDir + \".\" + myNodeID));\n      // TODO: set warmer\n      writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ea8db162694636ac3d19d83debf895a9e089f96a"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ea8db162694636ac3d19d83debf895a9e089f96a"],"ea8db162694636ac3d19d83debf895a9e089f96a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ea8db162694636ac3d19d83debf895a9e089f96a"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","ea8db162694636ac3d19d83debf895a9e089f96a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"ea8db162694636ac3d19d83debf895a9e089f96a":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}