{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentCommitInfo).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentInfoPerCommit).mjava","sourceNew":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the\n   * compound file format. The default implementation returns <code>true</code>\n   * iff the size of the given mergedInfo is less or equal to\n   * {@link #getMaxCFSSegmentSizeMB()} and the size is less or equal to the\n   * TotalIndexSize * {@link #getNoCFSRatio()} otherwise <code>false</code>.\n   */\n  public boolean useCompoundFile(SegmentInfos infos, SegmentCommitInfo mergedInfo) throws IOException {\n    if (getNoCFSRatio() == 0.0) {\n      return false;\n    }\n    long mergedInfoSize = size(mergedInfo);\n    if (mergedInfoSize > maxCFSSegmentSize) {\n      return false;\n    }\n    if (getNoCFSRatio() >= 1.0) {\n      return true;\n    }\n    long totalSize = 0;\n    for (SegmentCommitInfo info : infos) {\n      totalSize += size(info);\n    }\n    return mergedInfoSize <= getNoCFSRatio() * totalSize;\n  }\n\n","sourceOld":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the\n   * compound file format. The default implementation returns <code>true</code>\n   * iff the size of the given mergedInfo is less or equal to\n   * {@link #getMaxCFSSegmentSizeMB()} and the size is less or equal to the\n   * TotalIndexSize * {@link #getNoCFSRatio()} otherwise <code>false</code>.\n   */\n  public boolean useCompoundFile(SegmentInfos infos, SegmentInfoPerCommit mergedInfo) throws IOException {\n    if (getNoCFSRatio() == 0.0) {\n      return false;\n    }\n    long mergedInfoSize = size(mergedInfo);\n    if (mergedInfoSize > maxCFSSegmentSize) {\n      return false;\n    }\n    if (getNoCFSRatio() >= 1.0) {\n      return true;\n    }\n    long totalSize = 0;\n    for (SegmentInfoPerCommit info : infos) {\n      totalSize += size(info);\n    }\n    return mergedInfoSize <= getNoCFSRatio() * totalSize;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"027bee21e09164c9ee230395405076d1e0034b30","date":1401521821,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#useCompoundFile(SegmentInfos,SegmentCommitInfo).mjava","sourceNew":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the\n   * compound file format. The default implementation returns <code>true</code>\n   * iff the size of the given mergedInfo is less or equal to\n   * {@link #getMaxCFSSegmentSizeMB()} and the size is less or equal to the\n   * TotalIndexSize * {@link #getNoCFSRatio()} otherwise <code>false</code>.\n   */\n  public boolean useCompoundFile(SegmentInfos infos, SegmentCommitInfo mergedInfo, IndexWriter writer) throws IOException {\n    if (getNoCFSRatio() == 0.0) {\n      return false;\n    }\n    long mergedInfoSize = size(mergedInfo, writer);\n    if (mergedInfoSize > maxCFSSegmentSize) {\n      return false;\n    }\n    if (getNoCFSRatio() >= 1.0) {\n      return true;\n    }\n    long totalSize = 0;\n    for (SegmentCommitInfo info : infos) {\n      totalSize += size(info, writer);\n    }\n    return mergedInfoSize <= getNoCFSRatio() * totalSize;\n  }\n\n","sourceOld":"  /**\n   * Returns true if a new segment (regardless of its origin) should use the\n   * compound file format. The default implementation returns <code>true</code>\n   * iff the size of the given mergedInfo is less or equal to\n   * {@link #getMaxCFSSegmentSizeMB()} and the size is less or equal to the\n   * TotalIndexSize * {@link #getNoCFSRatio()} otherwise <code>false</code>.\n   */\n  public boolean useCompoundFile(SegmentInfos infos, SegmentCommitInfo mergedInfo) throws IOException {\n    if (getNoCFSRatio() == 0.0) {\n      return false;\n    }\n    long mergedInfoSize = size(mergedInfo);\n    if (mergedInfoSize > maxCFSSegmentSize) {\n      return false;\n    }\n    if (getNoCFSRatio() >= 1.0) {\n      return true;\n    }\n    long totalSize = 0;\n    for (SegmentCommitInfo info : infos) {\n      totalSize += size(info);\n    }\n    return mergedInfoSize <= getNoCFSRatio() * totalSize;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"027bee21e09164c9ee230395405076d1e0034b30":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["027bee21e09164c9ee230395405076d1e0034b30"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["027bee21e09164c9ee230395405076d1e0034b30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"027bee21e09164c9ee230395405076d1e0034b30":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}