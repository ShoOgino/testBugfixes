{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n    }    \n  }\n\n","sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","date":1308291005,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82c0f50a240cf02105b13b11e49095779864d37f","date":1311151772,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n      this.handlerName = handlerName;\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    this.propWriter = new SimplePropertiesWriter();\n    propWriter.init(this);\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":["b2a6913ca906832d1ef58d72498167acb00a7e4f"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"82c0f50a240cf02105b13b11e49095779864d37f":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0a2903ea38ae3e636b93a08c52a5e37ae939cf6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["82c0f50a240cf02105b13b11e49095779864d37f"]},"commit2Childs":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["c26f00b574427b55127e869b935845554afde1fa"],"82c0f50a240cf02105b13b11e49095779864d37f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b"],"c26f00b574427b55127e869b935845554afde1fa":["82c0f50a240cf02105b13b11e49095779864d37f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}