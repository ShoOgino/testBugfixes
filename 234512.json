{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector, Bits acceptDocs) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, acceptDocs, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector, acceptDocs);\n      }\n    } else {\n      in.score(collector, acceptDocs);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(LeafCollector collector) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector);\n      }\n    } else {\n      in.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector, Bits acceptDocs) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS, scoreMode);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, acceptDocs, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector, acceptDocs);\n      }\n    } else {\n      in.score(collector, acceptDocs);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(LeafCollector collector, Bits acceptDocs) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, acceptDocs, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector, acceptDocs);\n      }\n    } else {\n      in.score(collector, acceptDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector, Bits acceptDocs) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS, scoreMode);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, acceptDocs, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector, acceptDocs);\n      }\n    } else {\n      in.score(collector, acceptDocs);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(LeafCollector collector, Bits acceptDocs) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, acceptDocs, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector, acceptDocs);\n      }\n    } else {\n      in.score(collector, acceptDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer#score(LeafCollector,Bits).mjava","sourceNew":"  @Override\n  public void score(LeafCollector collector, Bits acceptDocs) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(collector, 0, PostingsEnum.NO_MORE_DOCS);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, acceptDocs, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector, acceptDocs);\n      }\n    } else {\n      in.score(collector, acceptDocs);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(LeafCollector collector, Bits acceptDocs) throws IOException {\n    assert max == 0;\n    collector = new AssertingLeafCollector(random, collector, 0, PostingsEnum.NO_MORE_DOCS, scoreMode);\n    if (random.nextBoolean()) {\n      try {\n        final int next = score(collector, acceptDocs, 0, PostingsEnum.NO_MORE_DOCS);\n        assert next == DocIdSetIterator.NO_MORE_DOCS;\n      } catch (UnsupportedOperationException e) {\n        in.score(collector, acceptDocs);\n      }\n    } else {\n      in.score(collector, acceptDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"417142ff08fda9cf0b72d5133e63097a166c6458":["0f4464508ee83288c8c4585b533f9faaa93aa314","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}