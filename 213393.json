{"path":"lucene/core/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e09a3a223be07d75777515a717312813221fe58","date":1328908385,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","sourceNew":null,"sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e09a3a223be07d75777515a717312813221fe58":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e09a3a223be07d75777515a717312813221fe58"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6e09a3a223be07d75777515a717312813221fe58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6e09a3a223be07d75777515a717312813221fe58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}