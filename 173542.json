{"path":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each file in the directory.\n   * \n   * @throws NoSuchDirectoryException if the directory is not prepared for any\n   *         write operations (such as {@link #createOutput(String, IOContext)}).\n   * @throws IOException in case of other IO errors\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each file in the directory.\n   * \n   * @throws NoSuchDirectoryException if the directory is not prepared for any\n   *         write operations (such as {@link #createOutput(String, IOContext)}).\n   * @throws IOException in case of other IO errors\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each file in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each file in the directory.\n   * \n   * @throws NoSuchDirectoryException if the directory is not prepared for any\n   *         write operations (such as {@link #createOutput(String, IOContext)}).\n   * @throws IOException in case of other IO errors\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"302be0cc5e6a28ebcebcac98aa81a92be2e94370","date":1423848654,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each file in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9","date":1454454426,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  // nocommit should this sort?\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44a0466296f4b2d9deac60e3e524628c97aa5191","date":1454532248,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  // nocommit should this sort?\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b457e7ac6faeb9e91a9dd5faaf0e2c7286faac","date":1454606266,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each entry in the directory, in sorted (UTF16, java's String.compare) order.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each entry in the directory, in sorted (UTF16, java's String.compare) order.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each entry in the directory, in sorted (UTF16, java's String.compare) order.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns an array of strings, one for each entry in the directory, in sorted (UTF16, java's String.compare) order.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each entry in the directory.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3adea0022cffaaa592081efed775a7b8bf86b51","date":1532414870,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#listAll().mjava","sourceNew":"  /**\n   * Returns names of all files stored in this directory.\n   * The output must be in sorted (UTF-16, java's {@link String#compareTo}) order.\n   * \n   * @throws IOException in case of I/O error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","sourceOld":"  /**\n   * Returns an array of strings, one for each entry in the directory, in sorted (UTF16, java's String.compare) order.\n   * \n   * @throws IOException in case of IO error\n   */\n  public abstract String[] listAll() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9":["302be0cc5e6a28ebcebcac98aa81a92be2e94370"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["302be0cc5e6a28ebcebcac98aa81a92be2e94370","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["302be0cc5e6a28ebcebcac98aa81a92be2e94370","b0b457e7ac6faeb9e91a9dd5faaf0e2c7286faac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["302be0cc5e6a28ebcebcac98aa81a92be2e94370","b470f36a9372c97283360b1304eacbde22df6c0d"],"f4abec28b874149a7223e32cc7a01704c27790de":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"44a0466296f4b2d9deac60e3e524628c97aa5191":["fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["5a207d19eac354d649c3f0e2cce070017c78125e"],"b0b457e7ac6faeb9e91a9dd5faaf0e2c7286faac":["44a0466296f4b2d9deac60e3e524628c97aa5191"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3adea0022cffaaa592081efed775a7b8bf86b51"],"302be0cc5e6a28ebcebcac98aa81a92be2e94370":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9":["44a0466296f4b2d9deac60e3e524628c97aa5191"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f4abec28b874149a7223e32cc7a01704c27790de"],"5a207d19eac354d649c3f0e2cce070017c78125e":["f3adea0022cffaaa592081efed775a7b8bf86b51"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"f4abec28b874149a7223e32cc7a01704c27790de":["302be0cc5e6a28ebcebcac98aa81a92be2e94370"],"44a0466296f4b2d9deac60e3e524628c97aa5191":["b0b457e7ac6faeb9e91a9dd5faaf0e2c7286faac"],"b0b457e7ac6faeb9e91a9dd5faaf0e2c7286faac":["b470f36a9372c97283360b1304eacbde22df6c0d"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"302be0cc5e6a28ebcebcac98aa81a92be2e94370":["fbc04ab124c4db4a06d2a69891c3ec6ac9f934a9","5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}