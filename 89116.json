{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"6066dbe072ec5334ff5824f474e9d3abd1620fb7","date":1278709584,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    StandardPostingsWriter docsWriter = new StandardPostingsWriterImpl(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    StandardPostingsWriter docsWriter = new StandardPostingsWriterImpl(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    StandardPostingsWriter docsWriter = new StandardPostingsWriterImpl(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    StandardPostingsWriter docsWriter = new StandardPostingsWriterImpl(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","date":1297938719,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new Lucene40PostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["99cf56f3a650b908f7017a72f9d23940418f8a52","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["7b91922b55d15444d554721b352861d028eb8278","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6066dbe072ec5334ff5824f474e9d3abd1620fb7","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["f1bdbf92da222965b46c0a942c3857ba56e5c638","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}