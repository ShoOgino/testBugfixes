{"path":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String,boolean).mjava","commits":[{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: just like {@link\n   *  #getTermsIndex(IndexReader,String)}, but you can specify\n   *  whether more RAM should be consumed in exchange for\n   *  faster lookups (default is \"true\").  Note that the\n   *  first call for a given reader and field \"wins\",\n   *  subsequent calls will share the same cache entry. */\n  public DocTermsIndex getTermsIndex (IndexReader reader, String field, boolean fasterButMoreRAM)\n  throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicIndexReader,String,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String,boolean).mjava","sourceNew":"  /** Expert: just like {@link\n   *  #getTermsIndex(AtomicIndexReader,String)}, but you can specify\n   *  whether more RAM should be consumed in exchange for\n   *  faster lookups (default is \"true\").  Note that the\n   *  first call for a given reader and field \"wins\",\n   *  subsequent calls will share the same cache entry. */\n  public DocTermsIndex getTermsIndex (AtomicIndexReader reader, String field, boolean fasterButMoreRAM)\n  throws IOException;\n\n","sourceOld":"  /** Expert: just like {@link\n   *  #getTermsIndex(IndexReader,String)}, but you can specify\n   *  whether more RAM should be consumed in exchange for\n   *  faster lookups (default is \"true\").  Note that the\n   *  first call for a given reader and field \"wins\",\n   *  subsequent calls will share the same cache entry. */\n  public DocTermsIndex getTermsIndex (IndexReader reader, String field, boolean fasterButMoreRAM)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String,boolean).mjava","sourceNew":"  /** Expert: just like {@link\n   *  #getTermsIndex(AtomicReader,String)}, but you can specify\n   *  whether more RAM should be consumed in exchange for\n   *  faster lookups (default is \"true\").  Note that the\n   *  first call for a given reader and field \"wins\",\n   *  subsequent calls will share the same cache entry. */\n  public DocTermsIndex getTermsIndex (AtomicReader reader, String field, boolean fasterButMoreRAM)\n  throws IOException;\n\n","sourceOld":"  /** Expert: just like {@link\n   *  #getTermsIndex(IndexReader,String)}, but you can specify\n   *  whether more RAM should be consumed in exchange for\n   *  faster lookups (default is \"true\").  Note that the\n   *  first call for a given reader and field \"wins\",\n   *  subsequent calls will share the same cache entry. */\n  public DocTermsIndex getTermsIndex (IndexReader reader, String field, boolean fasterButMoreRAM)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}