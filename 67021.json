{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void multipleAdditiveTreesTestNoFeaturesSpecified() throws Exception {\n    final ModelException expectedException =\n        new ModelException(\"no features declared for model multipleadditivetreesmodel_no_features\");\n    try {\n        createModelFromFiles(\"multipleadditivetreesmodel_no_features.json\",\n            \"multipleadditivetreesmodel_features.json\");\n        fail(\"multipleAdditiveTreesTestNoFeaturesSpecified failed to throw exception: \"+expectedException);\n    } catch (ModelException actualException) {\n      assertEquals(expectedException.toString(), actualException.toString());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void multipleAdditiveTreesTestNoFeaturesSpecified() throws Exception {\n    final ModelException expectedException =\n        new ModelException(\"no features declared for model multipleadditivetreesmodel_no_features\");\n    try {\n        createModelFromFiles(\"multipleadditivetreesmodel_no_features.json\",\n            \"multipleadditivetreesmodel_features.json\");\n        fail(\"multipleAdditiveTreesTestNoFeaturesSpecified failed to throw exception: \"+expectedException);\n    } catch (ModelException actualException) {\n      assertEquals(expectedException.toString(), actualException.toString());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","sourceNew":"  @Test\n  public void multipleAdditiveTreesTestNoFeaturesSpecified() throws Exception {\n    final ModelException expectedException =\n        new ModelException(\"no features declared for model multipleadditivetreesmodel_no_features\");\n    Exception ex = expectThrows(Exception.class, () -> {\n      createModelFromFiles(\"multipleadditivetreesmodel_no_features.json\",\n          \"multipleadditivetreesmodel_features.json\");\n    });\n    Throwable rootError = getRootCause(ex);\n    assertEquals(expectedException.toString(), rootError.toString());\n  }\n\n","sourceOld":"  @Test\n  public void multipleAdditiveTreesTestNoFeaturesSpecified() throws Exception {\n    final ModelException expectedException =\n        new ModelException(\"no features declared for model multipleadditivetreesmodel_no_features\");\n    try {\n        createModelFromFiles(\"multipleadditivetreesmodel_no_features.json\",\n            \"multipleadditivetreesmodel_features.json\");\n        fail(\"multipleAdditiveTreesTestNoFeaturesSpecified failed to throw exception: \"+expectedException);\n    } catch (ModelException actualException) {\n      assertEquals(expectedException.toString(), actualException.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","sourceNew":"  @Test\n  public void multipleAdditiveTreesTestNoFeaturesSpecified() throws Exception {\n    final ModelException expectedException =\n        new ModelException(\"no features declared for model multipleadditivetreesmodel_no_features\");\n    Exception ex = expectThrows(Exception.class, () -> {\n      createModelFromFiles(\"multipleadditivetreesmodel_no_features.json\",\n          \"multipleadditivetreesmodel_features.json\");\n    });\n    Throwable rootError = getRootCause(ex);\n    assertEquals(expectedException.toString(), rootError.toString());\n  }\n\n","sourceOld":"  @Test\n  public void multipleAdditiveTreesTestNoFeaturesSpecified() throws Exception {\n    final ModelException expectedException =\n        new ModelException(\"no features declared for model multipleadditivetreesmodel_no_features\");\n    try {\n        createModelFromFiles(\"multipleadditivetreesmodel_no_features.json\",\n            \"multipleadditivetreesmodel_features.json\");\n        fail(\"multipleAdditiveTreesTestNoFeaturesSpecified failed to throw exception: \"+expectedException);\n    } catch (ModelException actualException) {\n      assertEquals(expectedException.toString(), actualException.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestMultipleAdditiveTreesModel#multipleAdditiveTreesTestNoFeaturesSpecified().mjava","sourceNew":"  @Test\n  public void multipleAdditiveTreesTestNoFeaturesSpecified() throws Exception {\n    final ModelException expectedException =\n        new ModelException(\"no features declared for model multipleadditivetreesmodel_no_features\");\n    Exception ex = expectThrows(Exception.class, () -> {\n      createModelFromFiles(\"multipleadditivetreesmodel_no_features.json\",\n          \"multipleadditivetreesmodel_features.json\");\n    });\n    Throwable rootError = getRootCause(ex);\n    assertEquals(expectedException.toString(), rootError.toString());\n  }\n\n","sourceOld":"  @Test\n  public void multipleAdditiveTreesTestNoFeaturesSpecified() throws Exception {\n    final ModelException expectedException =\n        new ModelException(\"no features declared for model multipleadditivetreesmodel_no_features\");\n    try {\n        createModelFromFiles(\"multipleadditivetreesmodel_no_features.json\",\n            \"multipleadditivetreesmodel_features.json\");\n        fail(\"multipleAdditiveTreesTestNoFeaturesSpecified failed to throw exception: \"+expectedException);\n    } catch (ModelException actualException) {\n      assertEquals(expectedException.toString(), actualException.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["9720b151fde2073f4e401450f4574e5f31c2d0ff","d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}