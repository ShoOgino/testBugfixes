{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"7d9d25893b07af2fc930e9d5c14a4241781185fe","date":1249946967,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   * \n   * @return A TokenStream build from a ArabicLetterTokenizer filtered with\n   *         LowerCaseFilter, ArabicNormalizationFilter,\n   *         PersianNormalizationFilter and Persian Stop words\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(result, stoptable);\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45b06c3ff8a4d9d3d751dd311e51c59303c2719c","date":1250600126,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(result, stoptable);\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   * \n   * @return A TokenStream build from a ArabicLetterTokenizer filtered with\n   *         LowerCaseFilter, ArabicNormalizationFilter,\n   *         PersianNormalizationFilter and Persian Stop words\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(result, stoptable);\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f","date":1255010058,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(false, result, stoptable);\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(result, stoptable);\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                            result, stoptable);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(false, result, stoptable);\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                            result, stoptable);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                            result, stoptable);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41ce0ce6485d29a241c4ca4b6179d14df6a66bae","date":1259357651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                            result, stoptable);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                            result, stoptable);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(matchVersion, result, stoptable);\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                            result, stoptable);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#createComponents(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates {@link TokenStreamComponents} used to tokenize all the text in the provided\n   * {@link Reader}.\n   * \n   * @return {@link TokenStreamComponents} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new ArabicLetterTokenizer(reader);\n    TokenStream result = new LowerCaseFilter(matchVersion, source);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    return new TokenStreamComponents(source, new StopFilter(matchVersion, result, stopwords));\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link ArabicLetterTokenizer}\n   *         filtered with {@link LowerCaseFilter}, \n   *         {@link ArabicNormalizationFilter},\n   *         {@link PersianNormalizationFilter} and Persian Stop words\n   */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer(reader);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new ArabicNormalizationFilter(result);\n    /* additional persian-specific normalization */\n    result = new PersianNormalizationFilter(result);\n    /*\n     * the order here is important: the stopword list is normalized with the\n     * above!\n     */\n    result = new StopFilter(matchVersion, result, stoptable);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ba1116b3450a9c1642c89445d131b37344055245"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["7d9d25893b07af2fc930e9d5c14a4241781185fe"],"ddc5fbfd4c64963aba52713a4496522540294d69":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7d9d25893b07af2fc930e9d5c14a4241781185fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc5fbfd4c64963aba52713a4496522540294d69"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"ba1116b3450a9c1642c89445d131b37344055245":["27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f"]},"commit2Childs":{"27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f":["ba1116b3450a9c1642c89445d131b37344055245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d9d25893b07af2fc930e9d5c14a4241781185fe"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["27fcc5d3f6d65392b2c6b04e8b842e97ea24de1f"],"ddc5fbfd4c64963aba52713a4496522540294d69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d9d25893b07af2fc930e9d5c14a4241781185fe":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"ba1116b3450a9c1642c89445d131b37344055245":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["ddc5fbfd4c64963aba52713a4496522540294d69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}