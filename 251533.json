{"path":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#testSortMissing().mjava","commits":[{"id":"6cad65a3b69d849612888b387fa47b4afa1fca63","date":1483043196,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#testSortMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortMissing() throws Exception {\n    DoubleValuesSource onefield = DoubleValuesSource.fromDoubleField(\"onefield\");\n    TopDocs results = searcher.search(new MatchAllDocsQuery(), 1, new Sort(onefield.getSortField(true)));\n    FieldDoc first = (FieldDoc) results.scoreDocs[0];\n    assertEquals(45.72, first.fields[0]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de0b5d8cac74be1676bcc2f805bc0d0630176659","date":1483048659,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#testSortMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortMissing() throws Exception {\n    DoubleValuesSource onefield = DoubleValuesSource.fromDoubleField(\"onefield\");\n    TopDocs results = searcher.search(new MatchAllDocsQuery(), 1, new Sort(onefield.getSortField(true)));\n    FieldDoc first = (FieldDoc) results.scoreDocs[0];\n    assertEquals(45.72, first.fields[0]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#testSortMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortMissing() throws Exception {\n    DoubleValuesSource onefield = DoubleValuesSource.fromDoubleField(\"onefield\");\n    TopDocs results = searcher.search(new MatchAllDocsQuery(), 1, new Sort(onefield.getSortField(true)));\n    FieldDoc first = (FieldDoc) results.scoreDocs[0];\n    assertEquals(45.72, first.fields[0]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57e484d60e29c53f71211c63a54834c41663b68c","date":1554280956,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#testSortMissingZeroDefault().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#testSortMissing().mjava","sourceNew":"  public void testSortMissingZeroDefault() throws Exception {\n    // docs w/no value get default missing value = 0\n\n    DoubleValuesSource onefield = DoubleValuesSource.fromDoubleField(\"onefield\");\n    // sort decreasing\n    TopDocs results = searcher.search(new MatchAllDocsQuery(), 1, new Sort(onefield.getSortField(true)));\n    FieldDoc first = (FieldDoc) results.scoreDocs[0];\n    assertEquals(LEAST_DOUBLE_VALUE, first.fields[0]);\n\n    // sort increasing\n    results = searcher.search(new MatchAllDocsQuery(), 1, new Sort(onefield.getSortField(false)));\n    first = (FieldDoc) results.scoreDocs[0];\n    assertEquals(0d, first.fields[0]);\n  }\n\n","sourceOld":"  public void testSortMissing() throws Exception {\n    DoubleValuesSource onefield = DoubleValuesSource.fromDoubleField(\"onefield\");\n    TopDocs results = searcher.search(new MatchAllDocsQuery(), 1, new Sort(onefield.getSortField(true)));\n    FieldDoc first = (FieldDoc) results.scoreDocs[0];\n    assertEquals(45.72, first.fields[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6cad65a3b69d849612888b387fa47b4afa1fca63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6cad65a3b69d849612888b387fa47b4afa1fca63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"57e484d60e29c53f71211c63a54834c41663b68c":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57e484d60e29c53f71211c63a54834c41663b68c"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de0b5d8cac74be1676bcc2f805bc0d0630176659"]},"commit2Childs":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["57e484d60e29c53f71211c63a54834c41663b68c","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["de0b5d8cac74be1676bcc2f805bc0d0630176659","6cad65a3b69d849612888b387fa47b4afa1fca63","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"6cad65a3b69d849612888b387fa47b4afa1fca63":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"57e484d60e29c53f71211c63a54834c41663b68c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}