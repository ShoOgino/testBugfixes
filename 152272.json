{"path":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","commits":[{"id":"d52e48927ca4ef3655a261f2230b968b6fdf3608","date":1444652107,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","sourceNew":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, random().nextBoolean());\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.asTwoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, random().nextBoolean());\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.asTwoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","sourceNew":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, random().nextBoolean());\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, random().nextBoolean());\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.asTwoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","sourceNew":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, RandomPicks.randomFrom(random(), ScoreMode.values()));\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, random().nextBoolean());\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","sourceNew":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, RandomPicks.randomFrom(random(), ScoreMode.values()));\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, random().nextBoolean());\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"475584d5e08a22ad3fc7babefe006d77bc744567","date":1523282824,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","sourceNew":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createWeight(searcher.rewrite(query), RandomPicks.randomFrom(random(), ScoreMode.values()), 1);\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, RandomPicks.randomFrom(random(), ScoreMode.values()));\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","sourceNew":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createWeight(searcher.rewrite(query), RandomPicks.randomFrom(random(), ScoreMode.values()), 1);\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createNormalizedWeight(query, RandomPicks.randomFrom(random(), ScoreMode.values()));\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ddef54907d52d0079217460aacd73c5d3bb1d39","date":1527887541,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","sourceNew":null,"sourceOld":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createWeight(searcher.rewrite(query), RandomPicks.randomFrom(random(), ScoreMode.values()), 1);\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testQueryWrapperFilterPropagatesApproximations().mjava","sourceNew":null,"sourceOld":"  public void testQueryWrapperFilterPropagatesApproximations() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc);\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    writer.close();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setQueryCache(null); // to still have approximations\n    final Query query = new QueryWrapperFilter(new RandomApproximationQuery(new TermQuery(new Term(\"foo\", \"bar\")), random()));\n    final Weight weight = searcher.createWeight(searcher.rewrite(query), RandomPicks.randomFrom(random(), ScoreMode.values()), 1);\n    final Scorer scorer = weight.scorer(reader.leaves().get(0));\n    assertNotNull(scorer.twoPhaseIterator());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ddef54907d52d0079217460aacd73c5d3bb1d39":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"d58e44159788900f4a2113b84463dc3fbbf80f20":["417142ff08fda9cf0b72d5133e63097a166c6458","475584d5e08a22ad3fc7babefe006d77bc744567"],"475584d5e08a22ad3fc7babefe006d77bc744567":["417142ff08fda9cf0b72d5133e63097a166c6458"],"d52e48927ca4ef3655a261f2230b968b6fdf3608":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["d58e44159788900f4a2113b84463dc3fbbf80f20","4ddef54907d52d0079217460aacd73c5d3bb1d39"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["d52e48927ca4ef3655a261f2230b968b6fdf3608"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ddef54907d52d0079217460aacd73c5d3bb1d39"],"417142ff08fda9cf0b72d5133e63097a166c6458":["7dd748bb245633a8195281556bb0e68a6ea97d18","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"4ddef54907d52d0079217460aacd73c5d3bb1d39":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d58e44159788900f4a2113b84463dc3fbbf80f20":["4ddef54907d52d0079217460aacd73c5d3bb1d39","b70042a8a492f7054d480ccdd2be9796510d4327"],"475584d5e08a22ad3fc7babefe006d77bc744567":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"d52e48927ca4ef3655a261f2230b968b6fdf3608":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d52e48927ca4ef3655a261f2230b968b6fdf3608"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["d58e44159788900f4a2113b84463dc3fbbf80f20","475584d5e08a22ad3fc7babefe006d77bc744567"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}