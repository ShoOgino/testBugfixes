{"path":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingLeafReader.SortingTermsEnum#docs(Bits,DocsEnum,int).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingLeafReader.SortingTermsEnum#docs(Bits,DocsEnum,int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader.SortingTermsEnum#docs(Bits,DocsEnum,int).mjava","sourceNew":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, final int flags) throws IOException {\n      final DocsEnum inReuse;\n      final SortingDocsEnum wrapReuse;\n      if (reuse != null && reuse instanceof SortingDocsEnum) {\n        // if we're asked to reuse the given DocsEnum and it is Sorting, return\n        // the wrapped one, since some Codecs expect it.\n        wrapReuse = (SortingDocsEnum) reuse;\n        inReuse = wrapReuse.getWrapped();\n      } else {\n        wrapReuse = null;\n        inReuse = reuse;\n      }\n\n      final DocsEnum inDocs = in.docs(newToOld(liveDocs), inReuse, flags);\n      final boolean withFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >=0 && (flags & DocsEnum.FLAG_FREQS) != 0;\n      return new SortingDocsEnum(docMap.size(), wrapReuse, inDocs, withFreqs, docMap);\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, final int flags) throws IOException {\n      final DocsEnum inReuse;\n      final SortingDocsEnum wrapReuse;\n      if (reuse != null && reuse instanceof SortingDocsEnum) {\n        // if we're asked to reuse the given DocsEnum and it is Sorting, return\n        // the wrapped one, since some Codecs expect it.\n        wrapReuse = (SortingDocsEnum) reuse;\n        inReuse = wrapReuse.getWrapped();\n      } else {\n        wrapReuse = null;\n        inReuse = reuse;\n      }\n\n      final DocsEnum inDocs = in.docs(newToOld(liveDocs), inReuse, flags);\n      final boolean withFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >=0 && (flags & DocsEnum.FLAG_FREQS) != 0;\n      return new SortingDocsEnum(docMap.size(), wrapReuse, inDocs, withFreqs, docMap);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e","date":1419346542,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/SortingLeafReader.SortingTermsEnum#docs(Bits,DocsEnum,int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingLeafReader.SortingTermsEnum#docs(Bits,DocsEnum,int).mjava","sourceNew":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, final int flags) throws IOException {\n      final DocsEnum inReuse;\n      final SortingDocsEnum wrapReuse;\n      if (reuse != null && reuse instanceof SortingDocsEnum) {\n        // if we're asked to reuse the given DocsEnum and it is Sorting, return\n        // the wrapped one, since some Codecs expect it.\n        wrapReuse = (SortingDocsEnum) reuse;\n        inReuse = wrapReuse.getWrapped();\n      } else {\n        wrapReuse = null;\n        inReuse = reuse;\n      }\n\n      final DocsEnum inDocs = in.docs(newToOld(liveDocs), inReuse, flags);\n      final boolean withFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >=0 && (flags & DocsEnum.FLAG_FREQS) != 0;\n      return new SortingDocsEnum(docMap.size(), wrapReuse, inDocs, withFreqs, docMap);\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, final int flags) throws IOException {\n      final DocsEnum inReuse;\n      final SortingDocsEnum wrapReuse;\n      if (reuse != null && reuse instanceof SortingDocsEnum) {\n        // if we're asked to reuse the given DocsEnum and it is Sorting, return\n        // the wrapped one, since some Codecs expect it.\n        wrapReuse = (SortingDocsEnum) reuse;\n        inReuse = wrapReuse.getWrapped();\n      } else {\n        wrapReuse = null;\n        inReuse = reuse;\n      }\n\n      final DocsEnum inDocs = in.docs(newToOld(liveDocs), inReuse, flags);\n      final boolean withFreqs = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >=0 && (flags & DocsEnum.FLAG_FREQS) != 0;\n      return new SortingDocsEnum(docMap.size(), wrapReuse, inDocs, withFreqs, docMap);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}