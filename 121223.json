{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final AtomicReaderContext[] leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves[subIndex];\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":["d743dbdc40bef0a47a5d54d99623ef0c2eb5923e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d743dbdc40bef0a47a5d54d99623ef0c2eb5923e","date":1344896544,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.getTopReaderContext().leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private Document getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<LeafReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final LeafReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<AtomicReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final AtomicReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80c55596a764e2d397e982828e75fcac5ce430a0","date":1413987559,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<LeafReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final LeafReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null).bits();\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<LeafReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final LeafReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null);\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b012914a8110b2ff1d075ed1ef72aa57084d4897","date":1414685177,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,BitDocIdSetFilter,int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getParentDoc(IndexReader,Filter,int).mjava","sourceNew":"  private StoredDocument getParentDoc(IndexReader reader, BitDocIdSetFilter parents, int childDocID) throws IOException {\n    final List<LeafReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final LeafReaderContext leaf = leaves.get(subIndex);\n    final BitSet bits = (BitSet) parents.getDocIdSet(leaf).bits();\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","sourceOld":"  private StoredDocument getParentDoc(IndexReader reader, Filter parents, int childDocID) throws IOException {\n    final List<LeafReaderContext> leaves = reader.leaves();\n    final int subIndex = ReaderUtil.subIndex(childDocID, leaves);\n    final LeafReaderContext leaf = leaves.get(subIndex);\n    final FixedBitSet bits = (FixedBitSet) parents.getDocIdSet(leaf, null).bits();\n    return leaf.reader().document(bits.nextSetBit(childDocID - leaf.docBase));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["d743dbdc40bef0a47a5d54d99623ef0c2eb5923e","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"b012914a8110b2ff1d075ed1ef72aa57084d4897":["80c55596a764e2d397e982828e75fcac5ce430a0"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","d743dbdc40bef0a47a5d54d99623ef0c2eb5923e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d743dbdc40bef0a47a5d54d99623ef0c2eb5923e":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"80c55596a764e2d397e982828e75fcac5ce430a0":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["a7e4907084808af8fdb14b9809e6dceaccf6867b","d743dbdc40bef0a47a5d54d99623ef0c2eb5923e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["1d028314cced5858683a1bb4741423d0f934257b"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b012914a8110b2ff1d075ed1ef72aa57084d4897"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"1d028314cced5858683a1bb4741423d0f934257b":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"b012914a8110b2ff1d075ed1ef72aa57084d4897":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","d743dbdc40bef0a47a5d54d99623ef0c2eb5923e","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d743dbdc40bef0a47a5d54d99623ef0c2eb5923e":["1d028314cced5858683a1bb4741423d0f934257b","b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"80c55596a764e2d397e982828e75fcac5ce430a0":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["1d028314cced5858683a1bb4741423d0f934257b"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["80c55596a764e2d397e982828e75fcac5ce430a0"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}