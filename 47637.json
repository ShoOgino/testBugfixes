{"path":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","commits":[{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfo).mjava","sourceNew":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.docCount <= 0 ? 0.0f : ((double)delCount / (double)info.info.docCount));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","sourceOld":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfo info) throws IOException {\n    final long byteSize = info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.docCount <= 0 ? 0.0f : ((double)delCount / (double)info.docCount));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"203d7d3cb7712e10ef33009a63247ae40c302d7a","date":1337798111,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","sourceNew":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.getDocCount() <= 0 ? 0.0f : ((double)delCount / (double)info.info.getDocCount()));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","sourceOld":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.docCount <= 0 ? 0.0f : ((double)delCount / (double)info.info.docCount));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfo).mjava","sourceNew":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.getDocCount() <= 0 ? 0.0f : ((double)delCount / (double)info.info.getDocCount()));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","sourceOld":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfo info) throws IOException {\n    final long byteSize = info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.docCount <= 0 ? 0.0f : ((double)delCount / (double)info.docCount));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b47dabfbaff6449eedcd4321017ab2f73dfa06ab","date":1360797548,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","sourceNew":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.getDocCount() <= 0 ? 0.0f : ((double)delCount / (double)info.info.getDocCount()));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","sourceOld":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.getDocCount() <= 0 ? 0.0f : ((double)delCount / (double)info.info.getDocCount()));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","sourceNew":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.getDocCount() <= 0 ? 0.0f : ((double)delCount / (double)info.info.getDocCount()));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","sourceOld":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.getDocCount() <= 0 ? 0.0f : ((double)delCount / (double)info.info.getDocCount()));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#size(SegmentInfoPerCommit).mjava","sourceNew":null,"sourceOld":"  // Segment size in bytes, pro-rated by % deleted\n  private long size(SegmentInfoPerCommit info) throws IOException {\n    final long byteSize = info.sizeInBytes();    \n    final int delCount = writer.get().numDeletedDocs(info);\n    final double delRatio = (info.info.getDocCount() <= 0 ? 0.0f : ((double)delCount / (double)info.info.getDocCount()));    \n    assert delRatio <= 1.0;\n    return (long) (byteSize * (1.0-delRatio));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","203d7d3cb7712e10ef33009a63247ae40c302d7a"],"3b41f996b22bd5518650f897d050088ff808ec03":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"203d7d3cb7712e10ef33009a63247ae40c302d7a":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"b47dabfbaff6449eedcd4321017ab2f73dfa06ab":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3b41f996b22bd5518650f897d050088ff808ec03","b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"3b41f996b22bd5518650f897d050088ff808ec03":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["203d7d3cb7712e10ef33009a63247ae40c302d7a"],"203d7d3cb7712e10ef33009a63247ae40c302d7a":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"b47dabfbaff6449eedcd4321017ab2f73dfa06ab":["088a7ef694fd43d5d9a4d200c4005865f773d1e7","3b41f996b22bd5518650f897d050088ff808ec03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}