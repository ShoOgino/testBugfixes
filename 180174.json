{"path":"lucene/src/java/org/apache/lucene/util/mutable/MutableValue#compareTo(MutableValue).mjava","commits":[{"id":"c11e605f31ad1dd958113638483a8239de86c49d","date":1319635982,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/mutable/MutableValue#compareTo(MutableValue).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/mutable/MutableValue#compareTo(Object).mjava","sourceNew":"  public int compareTo(MutableValue other) {\n    Class<? extends MutableValue> c1 = this.getClass();\n    Class<? extends MutableValue> c2 = other.getClass();\n    if (c1 != c2) {\n      int c = c1.hashCode() - c2.hashCode();\n      if (c == 0) {\n        c = c1.getCanonicalName().compareTo(c2.getCanonicalName());\n      }\n      return c;\n    }\n    return compareSameType(other);\n  }\n\n","sourceOld":"  public int compareTo(Object other) {\n    Class c1 = this.getClass();\n    Class c2 = other.getClass();\n    if (c1 != c2) {\n      int c = c1.hashCode() - c2.hashCode();\n      if (c == 0) {\n        c = c1.getCanonicalName().compareTo(c2.getCanonicalName());\n      }\n      return c;\n    }\n    return compareSameType(other);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/mutable/MutableValue#compareTo(MutableValue).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/mutable/MutableValue#compareTo(MutableValue).mjava","sourceNew":"  public int compareTo(MutableValue other) {\n    Class<? extends MutableValue> c1 = this.getClass();\n    Class<? extends MutableValue> c2 = other.getClass();\n    if (c1 != c2) {\n      int c = c1.hashCode() - c2.hashCode();\n      if (c == 0) {\n        c = c1.getCanonicalName().compareTo(c2.getCanonicalName());\n      }\n      return c;\n    }\n    return compareSameType(other);\n  }\n\n","sourceOld":"  public int compareTo(MutableValue other) {\n    Class<? extends MutableValue> c1 = this.getClass();\n    Class<? extends MutableValue> c2 = other.getClass();\n    if (c1 != c2) {\n      int c = c1.hashCode() - c2.hashCode();\n      if (c == 0) {\n        c = c1.getCanonicalName().compareTo(c2.getCanonicalName());\n      }\n      return c;\n    }\n    return compareSameType(other);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c11e605f31ad1dd958113638483a8239de86c49d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c11e605f31ad1dd958113638483a8239de86c49d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"c11e605f31ad1dd958113638483a8239de86c49d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c11e605f31ad1dd958113638483a8239de86c49d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}