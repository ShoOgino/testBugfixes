{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerTest#testLinks().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerTest#testLinks().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerTest#testLinks().mjava","sourceNew":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    TermAttribute termAtt = tf.addAttribute(TermAttribute.class);\n    TypeAttribute typeAtt = tf.addAttribute(TypeAttribute.class);\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html#news\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html#news\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"https://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"https://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    \n    assertTrue(tf.incrementToken());\n    assertFalse(tf.incrementToken());\n  }\n\n","sourceOld":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    TermAttribute termAtt = tf.addAttribute(TermAttribute.class);\n    TypeAttribute typeAtt = tf.addAttribute(TypeAttribute.class);\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html#news\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html#news\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"https://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"https://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    \n    assertTrue(tf.incrementToken());\n    assertFalse(tf.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7347509fad0711ac30cb15a746e9a3830a38ebd","date":1275388513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerTest#testLinks().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerTest#testLinks().mjava","sourceNew":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    assertTokenStreamContents(tf,\n        new String[] { \"http://lucene.apache.org/java/docs/index.html#news\", \"here\",\n          \"http://lucene.apache.org/java/docs/index.html?b=c\", \"here\",\n          \"https://lucene.apache.org/java/docs/index.html?b=c\", \"here\" },\n        new String[] { EXTERNAL_LINK_URL, EXTERNAL_LINK,\n          EXTERNAL_LINK_URL, EXTERNAL_LINK,\n          EXTERNAL_LINK_URL, EXTERNAL_LINK, });\n  }\n\n","sourceOld":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    TermAttribute termAtt = tf.addAttribute(TermAttribute.class);\n    TypeAttribute typeAtt = tf.addAttribute(TypeAttribute.class);\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html#news\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html#news\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"https://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"https://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    \n    assertTrue(tf.incrementToken());\n    assertFalse(tf.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerTest#testLinks().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerTest#testLinks().mjava","sourceNew":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    assertTokenStreamContents(tf,\n        new String[] { \"http://lucene.apache.org/java/docs/index.html#news\", \"here\",\n          \"http://lucene.apache.org/java/docs/index.html?b=c\", \"here\",\n          \"https://lucene.apache.org/java/docs/index.html?b=c\", \"here\" },\n        new String[] { EXTERNAL_LINK_URL, EXTERNAL_LINK,\n          EXTERNAL_LINK_URL, EXTERNAL_LINK,\n          EXTERNAL_LINK_URL, EXTERNAL_LINK, });\n  }\n\n","sourceOld":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    assertTokenStreamContents(tf,\n        new String[] { \"http://lucene.apache.org/java/docs/index.html#news\", \"here\",\n          \"http://lucene.apache.org/java/docs/index.html?b=c\", \"here\",\n          \"https://lucene.apache.org/java/docs/index.html?b=c\", \"here\" },\n        new String[] { EXTERNAL_LINK_URL, EXTERNAL_LINK,\n          EXTERNAL_LINK_URL, EXTERNAL_LINK,\n          EXTERNAL_LINK_URL, EXTERNAL_LINK, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}