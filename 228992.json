{"path":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/IndexingNestedDocuments#testIndexingUsingNestPath().mjava","commits":[{"id":"0b5e0da3b576580fb2128e87467fa5f579ca2c33","date":1599081383,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/IndexingNestedDocuments#testIndexingUsingNestPath().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Demo of using <code>NestPath</code> related psuedo-fields when indexing hierarchical documents.\n   * This test code is used as an 'include' from the ref-guide\n   */\n  public void testIndexingUsingNestPath() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, 1, 1).process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    //\n    // DO NOT MODIFY THESE EXAMPLE DOCS WITH OUT MAKING THE SAME CHANGES TO THE JSON AND XML\n    // EQUIVILENT EXAMPLES IN 'indexing-nested-documents.adoc'\n    //\n\n    // tag::nest-path[]\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n      \n      p1.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.setField(\"manuals\", Arrays.asList(m1, m2));\n    }\n\n    final SolrInputDocument p2 = new SolrInputDocument();\n    p2.setField(\"id\", \"P22!prod\");\n    p2.setField(\"name_s\", \"Mont Blanc Fountain Pen\");\n    p2.setField(\"description_t\", \"A Premium Writing Instrument ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P22!S22\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 89);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P22!D42\");\n        m1.setField(\"name_s\", \"Red Mont Blanc Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n      \n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P22!S32\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 67);\n      \n      p2.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P22!D52\");\n      m1.setField(\"name_s\", \"How To Use A Pen\");\n      m1.setField(\"pages_i\", 42);\n      m1.setField(\"content_t\", \"Start by removing the cap ...\");\n\n      p2.setField(\"manuals\", m1);\n    }\n    \n    client.add(Arrays.asList(p1, p2));\n    // end::nest-path[]\n    \n    client.commit();\n\n\n    // Now a quick sanity check that the nest path is working properly...\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Writing\").set(\"fl\", \"*,[child]\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P22!prod\", docs.get(0).getFieldValue(\"id\"));\n    \n    assertEquals(1, docs.get(0).getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, docs.get(0).getFieldValues(\"manuals\").iterator().next().getClass());\n\n    assertEquals(2, docs.get(0).getFieldValues(\"skus\").size());\n    final List<Object> skus = new ArrayList<>(docs.get(0).getFieldValues(\"skus\"));\n    \n    assertEquals(SolrDocument.class, skus.get(0).getClass());\n    assertEquals(SolrDocument.class, skus.get(1).getClass());\n    \n    final SolrDocument red_pen = (SolrDocument) skus.get(0);\n    assertEquals(\"P22!S22\", red_pen.getFieldValue(\"id\"));\n\n    assertEquals(1, red_pen.getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, red_pen.getFieldValues(\"manuals\").iterator().next().getClass());\n\n    final SolrDocument red_pen_brochure = (SolrDocument) red_pen.getFieldValues(\"manuals\").iterator().next();\n    assertEquals(\"P22!D42\", red_pen_brochure.getFieldValue(\"id\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0b5e0da3b576580fb2128e87467fa5f579ca2c33"],"0b5e0da3b576580fb2128e87467fa5f579ca2c33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0b5e0da3b576580fb2128e87467fa5f579ca2c33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"0b5e0da3b576580fb2128e87467fa5f579ca2c33":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}