{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    Terms terms = indexReader.terms(field);\n    if (terms == null) {\n      return null;\n    }\n    TermsEnum iterator = terms.iterator(null);\n    if (iterator.seekExact(term)) {\n      return iterator.docs(bits, null, random().nextBoolean() ? DocsEnum.FLAG_FREQS : DocsEnum.FLAG_NONE);\n    }\n    return null;\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    Terms terms = indexReader.terms(field);\n    if (terms == null) {\n      return null;\n    }\n    TermsEnum iterator = terms.iterator(null);\n    if (iterator.seekExact(term)) {\n      return iterator.docs(bits, null, random().nextBoolean() ? DocsEnum.FLAG_FREQS : DocsEnum.FLAG_NONE);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    Terms terms = indexReader.terms(field);\n    if (terms == null) {\n      return null;\n    }\n    TermsEnum iterator = terms.iterator(null);\n    if (iterator.seekExact(term)) {\n      return iterator.docs(bits, null, random().nextBoolean() ? DocsEnum.FLAG_FREQS : DocsEnum.FLAG_NONE);\n    }\n    return null;\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    Terms terms = indexReader.terms(field);\n    if (terms == null) {\n      return null;\n    }\n    TermsEnum iterator = terms.iterator(null);\n    if (iterator.seekExact(term)) {\n      return iterator.docs(bits, null, random().nextBoolean() ? DocsEnum.FLAG_FREQS : DocsEnum.FLAG_NONE);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","sourceNew":null,"sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    Terms terms = indexReader.terms(field);\n    if (terms == null) {\n      return null;\n    }\n    TermsEnum iterator = terms.iterator(null);\n    if (iterator.seekExact(term)) {\n      return iterator.docs(bits, null, random().nextBoolean() ? DocsEnum.FLAG_FREQS : DocsEnum.FLAG_NONE);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}