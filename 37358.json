{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    reader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n    return searcher;\n  }\n\n","sourceOld":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    reader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dddb2c2ed096135b31cff8907f24ca2f5db46562","date":1413882711,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    searcher.setSimilarity(normSimilarity);\n    return searcher;\n  }\n\n","sourceOld":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    reader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    searcher.setSimilarity(normSimilarity);\n    return searcher;\n  }\n\n","sourceOld":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    reader.setSearcher(searcher); // to later get hold of searcher.getSimilarity()\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c52119942b76e01444c649378d9858d1e12b18","date":1461250903,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    searcher.setSimilarity(normSimilarity);\n    searcher.setQueryCache(null);\n    return searcher;\n  }\n\n","sourceOld":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    searcher.setSimilarity(normSimilarity);\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd8e7e6fde00e161d481d45f7ac5a7fea1c4cb27","date":1461251323,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createSearcher().mjava","sourceNew":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    searcher.setSimilarity(normSimilarity);\n    searcher.setQueryCache(null);\n    return searcher;\n  }\n\n","sourceOld":"  /**\n   * Creates and returns a searcher that can be used to execute arbitrary\n   * Lucene queries and to collect the resulting query results as hits.\n   * \n   * @return a searcher\n   */\n  public IndexSearcher createSearcher() {\n    MemoryIndexReader reader = new MemoryIndexReader();\n    IndexSearcher searcher = new IndexSearcher(reader); // ensures no auto-close !!\n    searcher.setSimilarity(normSimilarity);\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["b89678825b68eccaf09e6ab71675fc0b0af1e099","dddb2c2ed096135b31cff8907f24ca2f5db46562"],"dddb2c2ed096135b31cff8907f24ca2f5db46562":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd8e7e6fde00e161d481d45f7ac5a7fea1c4cb27":["dddb2c2ed096135b31cff8907f24ca2f5db46562","79c52119942b76e01444c649378d9858d1e12b18"],"79c52119942b76e01444c649378d9858d1e12b18":["dddb2c2ed096135b31cff8907f24ca2f5db46562"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd8e7e6fde00e161d481d45f7ac5a7fea1c4cb27"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","dddb2c2ed096135b31cff8907f24ca2f5db46562"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"dddb2c2ed096135b31cff8907f24ca2f5db46562":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","bd8e7e6fde00e161d481d45f7ac5a7fea1c4cb27","79c52119942b76e01444c649378d9858d1e12b18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"bd8e7e6fde00e161d481d45f7ac5a7fea1c4cb27":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"79c52119942b76e01444c649378d9858d1e12b18":["bd8e7e6fde00e161d481d45f7ac5a7fea1c4cb27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}