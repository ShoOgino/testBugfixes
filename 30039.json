{"path":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert ts.valSize == 64 || ts.valSize == 32;\n        return (ts.valSize == 64) ? \n          NumericUtils.longToPrefixCoded(ts.value, ts.shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) ts.value, ts.shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"045811a5786836715a746b4c14522fc6c96c6607","date":1295463542,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","sourceNew":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(rawValue, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) rawValue, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert ts.valSize == 64 || ts.valSize == 32;\n        return (ts.valSize == 64) ? \n          NumericUtils.longToPrefixCoded(ts.value, ts.shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) ts.value, ts.shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":["d37d9627738304db0500dec1c44453fcbb3f5f91"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d37d9627738304db0500dec1c44453fcbb3f5f91","date":1295479243,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","sourceNew":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(rawValue, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) rawValue, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":["045811a5786836715a746b4c14522fc6c96c6607"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","sourceNew":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert ts.valSize == 64 || ts.valSize == 32;\n        return (ts.valSize == 64) ? \n          NumericUtils.longToPrefixCoded(ts.value, ts.shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) ts.value, ts.shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","sourceNew":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert ts.valSize == 64 || ts.valSize == 32;\n        return (ts.valSize == 64) ? \n          NumericUtils.longToPrefixCoded(ts.value, ts.shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) ts.value, ts.shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3d07f1ae3b58102f36f3393c397d78ba4e547a4","date":1300715535,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#fillBytesRef().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","sourceNew":"    public int fillBytesRef() {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","sourceOld":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","sourceNew":null,"sourceOld":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#toBytesRef(BytesRef).mjava","sourceNew":null,"sourceOld":"    public int toBytesRef(BytesRef bytes) {\n      try {\n        assert valueSize == 64 || valueSize == 32;\n        return (valueSize == 64) ? \n          NumericUtils.longToPrefixCoded(value, shift, bytes) :\n          NumericUtils.intToPrefixCoded((int) value, shift, bytes);\n      } catch (IllegalArgumentException iae) {\n        // return empty token before first or after last\n        bytes.length = 0;\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"045811a5786836715a746b4c14522fc6c96c6607":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["e79a6d080bdd5b2a8f56342cf571b5476de04180","b3d07f1ae3b58102f36f3393c397d78ba4e547a4"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3d07f1ae3b58102f36f3393c397d78ba4e547a4"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","d37d9627738304db0500dec1c44453fcbb3f5f91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3d07f1ae3b58102f36f3393c397d78ba4e547a4":["d37d9627738304db0500dec1c44453fcbb3f5f91"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","d37d9627738304db0500dec1c44453fcbb3f5f91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b3d07f1ae3b58102f36f3393c397d78ba4e547a4"],"d37d9627738304db0500dec1c44453fcbb3f5f91":["045811a5786836715a746b4c14522fc6c96c6607"]},"commit2Childs":{"045811a5786836715a746b4c14522fc6c96c6607":["d37d9627738304db0500dec1c44453fcbb3f5f91"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["045811a5786836715a746b4c14522fc6c96c6607","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b3d07f1ae3b58102f36f3393c397d78ba4e547a4":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"d37d9627738304db0500dec1c44453fcbb3f5f91":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3d07f1ae3b58102f36f3393c397d78ba4e547a4","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}