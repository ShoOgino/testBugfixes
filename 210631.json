{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#assertMaps(List[Map],int...).mjava","commits":[{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#assertMaps(List[Map],int...).mjava","pathOld":"/dev/null","sourceNew":"  protected boolean assertMaps(List<Map> maps, int... ids) throws Exception {\n    if(maps.size() != ids.length) {\n      throw new Exception(\"Expected id count != actual map count:\"+ids.length+\":\"+maps.size());\n    }\n\n    int i=0;\n    for(int val : ids) {\n      Map t = maps.get(i);\n      String tip = (String)t.get(\"id\");\n      if(!tip.equals(Integer.toString(val))) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#assertMaps(List[Map],int...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#assertMaps(List[Map],int...).mjava","sourceNew":"  protected boolean assertMaps(@SuppressWarnings({\"rawtypes\"})List<Map> maps, int... ids) throws Exception {\n    if(maps.size() != ids.length) {\n      throw new Exception(\"Expected id count != actual map count:\"+ids.length+\":\"+maps.size());\n    }\n\n    int i=0;\n    for(int val : ids) {\n      @SuppressWarnings({\"rawtypes\"})\n      Map t = maps.get(i);\n      String tip = (String)t.get(\"id\");\n      if(!tip.equals(Integer.toString(val))) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":"  protected boolean assertMaps(List<Map> maps, int... ids) throws Exception {\n    if(maps.size() != ids.length) {\n      throw new Exception(\"Expected id count != actual map count:\"+ids.length+\":\"+maps.size());\n    }\n\n    int i=0;\n    for(int val : ids) {\n      Map t = maps.get(i);\n      String tip = (String)t.get(\"id\");\n      if(!tip.equals(Integer.toString(val))) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}