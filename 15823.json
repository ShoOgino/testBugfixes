{"path":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","commits":[{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"/dev/null","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Directory dir, Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9e22bdf0692bfa61e342b04a6ac7078670c1e16","date":1436866730,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Directory dir, Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException | IllegalStateException exc) {\n      // expected\n      assertTrue(exc.getCause() instanceof IllegalArgumentException);\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Directory dir, Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89697e7abc9807639c384eecf5a2a6eef1080426","date":1587733375,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException | IllegalStateException exc) {\n      // expected\n      assertTrue(exc.getCause() instanceof IllegalArgumentException);\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Directory dir, Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException | IllegalStateException exc) {\n      // expected\n      assertTrue(exc.getCause() instanceof IllegalArgumentException);\n    }\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89697e7abc9807639c384eecf5a2a6eef1080426":["d9e22bdf0692bfa61e342b04a6ac7078670c1e16"],"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"d9e22bdf0692bfa61e342b04a6ac7078670c1e16":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5faf65b6692f15cca0f87bf8666c87899afc619f":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89697e7abc9807639c384eecf5a2a6eef1080426"]},"commit2Childs":{"89697e7abc9807639c384eecf5a2a6eef1080426":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"d9e22bdf0692bfa61e342b04a6ac7078670c1e16":["89697e7abc9807639c384eecf5a2a6eef1080426"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","4d637064d608752565d4f9f41b2497dfdfdde50e"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["d9e22bdf0692bfa61e342b04a6ac7078670c1e16"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}