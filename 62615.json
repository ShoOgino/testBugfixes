{"path":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","sourceNew":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","sourceOld":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"768c48159710aa63efa67c049db149c35c4f423a","date":1323797698,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","sourceNew":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      d = CommandLineUtil.newFSDirectory(clazz, file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","sourceOld":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceb6a6c707ada1df8bde804e25c98668e699a18","date":1323800602,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","sourceNew":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      d = CommandLineUtil.newFSDirectory(clazz, file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","sourceOld":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      // Assuming every FSDirectory has a ctor(File), but not all may take a\n      // LockFactory too, so setting it afterwards.\n      Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n      d = ctor.newInstance(file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectoryImpl(Class[#-extends-FSDirectory],File).mjava","sourceNew":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      d = CommandLineUtil.newFSDirectory(clazz, file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","sourceOld":"  private static Directory newFSDirectoryImpl(\n      Class<? extends FSDirectory> clazz, File file)\n      throws IOException {\n    FSDirectory d = null;\n    try {\n      d = CommandLineUtil.newFSDirectory(clazz, file);\n    } catch (Exception e) {\n      d = FSDirectory.open(file);\n    }\n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ceb6a6c707ada1df8bde804e25c98668e699a18":["7b91922b55d15444d554721b352861d028eb8278","768c48159710aa63efa67c049db149c35c4f423a"],"768c48159710aa63efa67c049db149c35c4f423a":["7b91922b55d15444d554721b352861d028eb8278"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["768c48159710aa63efa67c049db149c35c4f423a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["4ceb6a6c707ada1df8bde804e25c98668e699a18","768c48159710aa63efa67c049db149c35c4f423a"],"4ceb6a6c707ada1df8bde804e25c98668e699a18":[],"768c48159710aa63efa67c049db149c35c4f423a":["4ceb6a6c707ada1df8bde804e25c98668e699a18","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ceb6a6c707ada1df8bde804e25c98668e699a18","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}