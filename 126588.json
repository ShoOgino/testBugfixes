{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#equals(char[],int,int,char[]).mjava","commits":[{"id":"9dd42aeb8984bdfef80056722e7c1c239b7e3c07","date":1274826512,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#equals(char[],int,int,char[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharArrayMap#equals(char[],int,int,char[]).mjava","sourceNew":"  private boolean equals(char[] text1, int off, int len, char[] text2) {\n    if (len != text2.length)\n      return false;\n    final int limit = off+len;\n    if (ignoreCase) {\n      for(int i=0;i<len;) {\n        final int codePointAt = charUtils.codePointAt(text1, off+i, limit);\n        if (Character.toLowerCase(codePointAt) != charUtils.codePointAt(text2, i))\n          return false;\n        i += Character.charCount(codePointAt); \n      }\n    } else {\n      for(int i=0;i<len;i++) {\n        if (text1[off+i] != text2[i])\n          return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean equals(char[] text1, int off, int len, char[] text2) {\n    if (len != text2.length)\n      return false;\n    final int limit = off+len;\n    if (ignoreCase) {\n      for(int i=0;i<len;) {\n        final int codePointAt = charUtils.codePointAt(text1, off+i, limit);\n        if (Character.toLowerCase(codePointAt) != charUtils.codePointAt(text2, i))\n          return false;\n        i += Character.charCount(codePointAt); \n      }\n    } else {\n      for(int i=0;i<len;i++) {\n        if (text1[off+i] != text2[i])\n          return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#equals(char[],int,int,char[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#equals(char[],int,int,char[]).mjava","sourceNew":"  private boolean equals(char[] text1, int off, int len, char[] text2) {\n    if (len != text2.length)\n      return false;\n    final int limit = off+len;\n    if (ignoreCase) {\n      for(int i=0;i<len;) {\n        final int codePointAt = charUtils.codePointAt(text1, off+i, limit);\n        if (Character.toLowerCase(codePointAt) != charUtils.codePointAt(text2, i))\n          return false;\n        i += Character.charCount(codePointAt); \n      }\n    } else {\n      for(int i=0;i<len;i++) {\n        if (text1[off+i] != text2[i])\n          return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean equals(char[] text1, int off, int len, char[] text2) {\n    if (len != text2.length)\n      return false;\n    final int limit = off+len;\n    if (ignoreCase) {\n      for(int i=0;i<len;) {\n        final int codePointAt = charUtils.codePointAt(text1, off+i, limit);\n        if (Character.toLowerCase(codePointAt) != charUtils.codePointAt(text2, i))\n          return false;\n        i += Character.charCount(codePointAt); \n      }\n    } else {\n      for(int i=0;i<len;i++) {\n        if (text1[off+i] != text2[i])\n          return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}