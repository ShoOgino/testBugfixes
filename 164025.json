{"path":"src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","commits":[{"id":"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76","date":1204055227,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","pathOld":"/dev/null","sourceNew":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE)==0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","pathOld":"src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","sourceNew":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE)==0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE)==0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}