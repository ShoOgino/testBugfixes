{"path":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#longToBytes(long,BytesRef).mjava","commits":[{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#longToBytes(long,BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#longToBytes(long,BytesRef).mjava","sourceNew":"  public static void longToBytes(long v, BytesRef bytes) {\n    bytes.offset = 0;\n    bytes.length = 8;\n    bytes.bytes[0] = (byte) (v >> 56);\n    bytes.bytes[1] = (byte) (v >> 48);\n    bytes.bytes[2] = (byte) (v >> 40);\n    bytes.bytes[3] = (byte) (v >> 32);\n    bytes.bytes[4] = (byte) (v >> 24);\n    bytes.bytes[5] = (byte) (v >> 16);\n    bytes.bytes[6] = (byte) (v >> 8);\n    bytes.bytes[7] = (byte) v;\n    assert bytesToLong(bytes) == v: bytesToLong(bytes) + \" vs \" + v + \" bytes=\" + bytes;\n  }\n\n","sourceOld":"  public static void longToBytes(long v, BytesRef bytes) {\n    bytes.offset = 0;\n    bytes.length = 8;\n    bytes.bytes[0] = (byte) (v >> 56);\n    bytes.bytes[1] = (byte) (v >> 48);\n    bytes.bytes[2] = (byte) (v >> 40);\n    bytes.bytes[3] = (byte) (v >> 32);\n    bytes.bytes[4] = (byte) (v >> 24);\n    bytes.bytes[5] = (byte) (v >> 16);\n    bytes.bytes[6] = (byte) (v >> 8);\n    bytes.bytes[7] = (byte) v;\n    assert bytesToLong(bytes) == v: bytesToLong(bytes) + \" vs \" + v + \" bytes=\" + bytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9017ec91c7e47796f2938c5f5705089cb048c4ae","date":1400795272,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#longToBytes(long,BytesRef).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#longToBytes(long,BytesRef).mjava","sourceNew":"  public static void longToBytes(long v, BytesRef bytes) {\n    if (v > MAX_VERSION || v < MIN_VERSION) {\n      throw new IllegalArgumentException(\"version must be >= MIN_VERSION=\" + MIN_VERSION + \" and <= MAX_VERSION=\" + MAX_VERSION + \" (got: \" + v + \")\");\n    }\n    bytes.offset = 0;\n    bytes.length = 8;\n    bytes.bytes[0] = (byte) (v >> 56);\n    bytes.bytes[1] = (byte) (v >> 48);\n    bytes.bytes[2] = (byte) (v >> 40);\n    bytes.bytes[3] = (byte) (v >> 32);\n    bytes.bytes[4] = (byte) (v >> 24);\n    bytes.bytes[5] = (byte) (v >> 16);\n    bytes.bytes[6] = (byte) (v >> 8);\n    bytes.bytes[7] = (byte) v;\n    assert bytesToLong(bytes) == v: bytesToLong(bytes) + \" vs \" + v + \" bytes=\" + bytes;\n  }\n\n","sourceOld":"  public static void longToBytes(long v, BytesRef bytes) {\n    bytes.offset = 0;\n    bytes.length = 8;\n    bytes.bytes[0] = (byte) (v >> 56);\n    bytes.bytes[1] = (byte) (v >> 48);\n    bytes.bytes[2] = (byte) (v >> 40);\n    bytes.bytes[3] = (byte) (v >> 32);\n    bytes.bytes[4] = (byte) (v >> 24);\n    bytes.bytes[5] = (byte) (v >> 16);\n    bytes.bytes[6] = (byte) (v >> 8);\n    bytes.bytes[7] = (byte) v;\n    assert bytesToLong(bytes) == v: bytesToLong(bytes) + \" vs \" + v + \" bytes=\" + bytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#longToBytes(long,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  public static void longToBytes(long v, BytesRef bytes) {\n    if (v > MAX_VERSION || v < MIN_VERSION) {\n      throw new IllegalArgumentException(\"version must be >= MIN_VERSION=\" + MIN_VERSION + \" and <= MAX_VERSION=\" + MAX_VERSION + \" (got: \" + v + \")\");\n    }\n    bytes.offset = 0;\n    bytes.length = 8;\n    bytes.bytes[0] = (byte) (v >> 56);\n    bytes.bytes[1] = (byte) (v >> 48);\n    bytes.bytes[2] = (byte) (v >> 40);\n    bytes.bytes[3] = (byte) (v >> 32);\n    bytes.bytes[4] = (byte) (v >> 24);\n    bytes.bytes[5] = (byte) (v >> 16);\n    bytes.bytes[6] = (byte) (v >> 8);\n    bytes.bytes[7] = (byte) v;\n    assert bytesToLong(bytes) == v: bytesToLong(bytes) + \" vs \" + v + \" bytes=\" + bytes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9017ec91c7e47796f2938c5f5705089cb048c4ae"],"9017ec91c7e47796f2938c5f5705089cb048c4ae":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["9017ec91c7e47796f2938c5f5705089cb048c4ae"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9017ec91c7e47796f2938c5f5705089cb048c4ae":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","4d637064d608752565d4f9f41b2497dfdfdde50e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}