{"path":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#BKDTreeDocValuesConsumer(DocValuesConsumer,SegmentWriteState,int,int).mjava","commits":[{"id":"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96","date":1433340999,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#BKDTreeDocValuesConsumer(DocValuesConsumer,SegmentWriteState,int,int).mjava","pathOld":"/dev/null","sourceNew":"  public BKDTreeDocValuesConsumer(DocValuesConsumer delegate, SegmentWriteState state, int maxPointsInLeafNode, int maxPointsSortInHeap) throws IOException {\n    BKDTreeWriter.verifyParams(maxPointsInLeafNode, maxPointsSortInHeap);\n    this.delegate = delegate;\n    this.maxPointsInLeafNode = maxPointsInLeafNode;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    this.state = state;\n    String datFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.DATA_EXTENSION);\n    out = state.directory.createOutput(datFileName, state.context);\n    CodecUtil.writeIndexHeader(out, BKDTreeDocValuesFormat.DATA_CODEC_NAME, BKDTreeDocValuesFormat.DATA_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#BKDTreeDocValuesConsumer(Directory,String,DocValuesConsumer,SegmentWriteState,int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#BKDTreeDocValuesConsumer(DocValuesConsumer,SegmentWriteState,int,int).mjava","sourceNew":"  public BKDTreeDocValuesConsumer(Directory tempDir, String tempFileNamePrefix, DocValuesConsumer delegate, SegmentWriteState state, int maxPointsInLeafNode, int maxPointsSortInHeap) throws IOException {\n    BKDTreeWriter.verifyParams(maxPointsInLeafNode, maxPointsSortInHeap);\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n    this.delegate = delegate;\n    this.maxPointsInLeafNode = maxPointsInLeafNode;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    this.state = state;\n    String datFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.DATA_EXTENSION);\n    out = state.directory.createOutput(datFileName, state.context);\n    CodecUtil.writeIndexHeader(out, BKDTreeDocValuesFormat.DATA_CODEC_NAME, BKDTreeDocValuesFormat.DATA_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":"  public BKDTreeDocValuesConsumer(DocValuesConsumer delegate, SegmentWriteState state, int maxPointsInLeafNode, int maxPointsSortInHeap) throws IOException {\n    BKDTreeWriter.verifyParams(maxPointsInLeafNode, maxPointsSortInHeap);\n    this.delegate = delegate;\n    this.maxPointsInLeafNode = maxPointsInLeafNode;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    this.state = state;\n    String datFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, BKDTreeDocValuesFormat.DATA_EXTENSION);\n    out = state.directory.createOutput(datFileName, state.context);\n    CodecUtil.writeIndexHeader(out, BKDTreeDocValuesFormat.DATA_CODEC_NAME, BKDTreeDocValuesFormat.DATA_VERSION_CURRENT,\n                               state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}