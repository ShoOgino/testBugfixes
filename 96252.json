{"path":"lucene/src/java/org/apache/lucene/index/ByteBlockPool#setBytesRef(BytesRef,int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteBlockPool#setBytesRef(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  // Fill in a BytesRef from term's length & bytes encoded in\n  // byte block\n  final BytesRef setBytesRef(BytesRef term, int textStart) {\n    final byte[] bytes = term.bytes = buffers[textStart >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    int pos = textStart & DocumentsWriter.BYTE_BLOCK_MASK;\n    if ((bytes[pos] & 0x80) == 0) {\n      // length is 1 byte\n      term.length = bytes[pos];\n      term.offset = pos+1;\n    } else {\n      // length is 2 bytes\n      term.length = (bytes[pos]&0x7f) + ((bytes[pos+1]&0xff)<<7);\n      term.offset = pos+2;\n    }\n    assert term.length >= 0;\n    return term;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteBlockPool#setBytesRef(BytesRef,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteBlockPool#setBytesRef(BytesRef,int).mjava","sourceNew":"  // Fill in a BytesRef from term's length & bytes encoded in\n  // byte block\n  final BytesRef setBytesRef(BytesRef term, int textStart) {\n    final byte[] bytes = term.bytes = buffers[textStart >> DocumentsWriterRAMAllocator.BYTE_BLOCK_SHIFT];\n    int pos = textStart & DocumentsWriterRAMAllocator.BYTE_BLOCK_MASK;\n    if ((bytes[pos] & 0x80) == 0) {\n      // length is 1 byte\n      term.length = bytes[pos];\n      term.offset = pos+1;\n    } else {\n      // length is 2 bytes\n      term.length = (bytes[pos]&0x7f) + ((bytes[pos+1]&0xff)<<7);\n      term.offset = pos+2;\n    }\n    assert term.length >= 0;\n    return term;\n  }\n\n","sourceOld":"  // Fill in a BytesRef from term's length & bytes encoded in\n  // byte block\n  final BytesRef setBytesRef(BytesRef term, int textStart) {\n    final byte[] bytes = term.bytes = buffers[textStart >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    int pos = textStart & DocumentsWriter.BYTE_BLOCK_MASK;\n    if ((bytes[pos] & 0x80) == 0) {\n      // length is 1 byte\n      term.length = bytes[pos];\n      term.offset = pos+1;\n    } else {\n      // length is 2 bytes\n      term.length = (bytes[pos]&0x7f) + ((bytes[pos+1]&0xff)<<7);\n      term.offset = pos+2;\n    }\n    assert term.length >= 0;\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","date":1286023472,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ByteBlockPool#setBytesRef(BytesRef,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteBlockPool#setBytesRef(BytesRef,int).mjava","sourceNew":"  // Fill in a BytesRef from term's length & bytes encoded in\n  // byte block\n  public final BytesRef setBytesRef(BytesRef term, int textStart) {\n    final byte[] bytes = term.bytes = buffers[textStart >> BYTE_BLOCK_SHIFT];\n    int pos = textStart & BYTE_BLOCK_MASK;\n    if ((bytes[pos] & 0x80) == 0) {\n      // length is 1 byte\n      term.length = bytes[pos];\n      term.offset = pos+1;\n    } else {\n      // length is 2 bytes\n      term.length = (bytes[pos]&0x7f) + ((bytes[pos+1]&0xff)<<7);\n      term.offset = pos+2;\n    }\n    assert term.length >= 0;\n    return term;\n  }\n\n","sourceOld":"  // Fill in a BytesRef from term's length & bytes encoded in\n  // byte block\n  final BytesRef setBytesRef(BytesRef term, int textStart) {\n    final byte[] bytes = term.bytes = buffers[textStart >> DocumentsWriter.BYTE_BLOCK_SHIFT];\n    int pos = textStart & DocumentsWriter.BYTE_BLOCK_MASK;\n    if ((bytes[pos] & 0x80) == 0) {\n      // length is 1 byte\n      term.length = bytes[pos];\n      term.offset = pos+1;\n    } else {\n      // length is 2 bytes\n      term.length = (bytes[pos]&0x7f) + ((bytes[pos+1]&0xff)<<7);\n      term.offset = pos+2;\n    }\n    assert term.length >= 0;\n    return term;\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1ca38aecd0204be91049ec782668f642a68d9935","date":1292975343,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/ByteBlockPool#setBytesRef(BytesRef,int).mjava","sourceNew":null,"sourceOld":"  // Fill in a BytesRef from term's length & bytes encoded in\n  // byte block\n  final BytesRef setBytesRef(BytesRef term, int textStart) {\n    final byte[] bytes = term.bytes = buffers[textStart >> DocumentsWriterRAMAllocator.BYTE_BLOCK_SHIFT];\n    int pos = textStart & DocumentsWriterRAMAllocator.BYTE_BLOCK_MASK;\n    if ((bytes[pos] & 0x80) == 0) {\n      // length is 1 byte\n      term.length = bytes[pos];\n      term.offset = pos+1;\n    } else {\n      // length is 2 bytes\n      term.length = (bytes[pos]&0x7f) + ((bytes[pos+1]&0xff)<<7);\n      term.offset = pos+2;\n    }\n    assert term.length >= 0;\n    return term;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"1ca38aecd0204be91049ec782668f642a68d9935":["6c18273ea5b3974d2f30117f46f1ae416c28f727"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"]},"commit2Childs":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["1ca38aecd0204be91049ec782668f642a68d9935"],"1ca38aecd0204be91049ec782668f642a68d9935":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","6c18273ea5b3974d2f30117f46f1ae416c28f727"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1ca38aecd0204be91049ec782668f642a68d9935","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}