{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","commits":[{"id":"bac2bd9d901ec1ee7111a77c8e616d745fb2a362","date":1368131212,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if {@link #getDelegate() delegate} must sync its files.\n   * Currently, only {@link NRTCachingDirectory} requires sync'ing its files\n   * because otherwise they are cached in an internal {@link RAMDirectory}. If\n   * other directories require that too, they should be added to this method.\n   */\n  private boolean mustSync() {\n    Directory delegate = this.delegate;\n    while (true) {\n      if (delegate instanceof RateLimitedDirectoryWrapper) {\n        delegate = ((RateLimitedDirectoryWrapper) delegate).getDelegate();\n      } else if (delegate instanceof TrackingDirectoryWrapper) {\n        delegate = ((TrackingDirectoryWrapper) delegate).getDelegate();\n      } else {\n        break;\n      }\n    }\n    return delegate instanceof NRTCachingDirectory;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399ef3ff6c22f0627c82ac65f32726f3587a2aa1","date":1379005174,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","sourceNew":"  /**\n   * Returns true if {@link #in} must sync its files.\n   * Currently, only {@link NRTCachingDirectory} requires sync'ing its files\n   * because otherwise they are cached in an internal {@link RAMDirectory}. If\n   * other directories require that too, they should be added to this method.\n   */\n  private boolean mustSync() {\n    Directory delegate = in;\n    while (delegate instanceof FilterDirectory) {\n      delegate = ((FilterDirectory) delegate).getDelegate();\n    }\n    return delegate instanceof NRTCachingDirectory;\n  }\n\n","sourceOld":"  /**\n   * Returns true if {@link #getDelegate() delegate} must sync its files.\n   * Currently, only {@link NRTCachingDirectory} requires sync'ing its files\n   * because otherwise they are cached in an internal {@link RAMDirectory}. If\n   * other directories require that too, they should be added to this method.\n   */\n  private boolean mustSync() {\n    Directory delegate = this.delegate;\n    while (true) {\n      if (delegate instanceof RateLimitedDirectoryWrapper) {\n        delegate = ((RateLimitedDirectoryWrapper) delegate).getDelegate();\n      } else if (delegate instanceof TrackingDirectoryWrapper) {\n        delegate = ((TrackingDirectoryWrapper) delegate).getDelegate();\n      } else {\n        break;\n      }\n    }\n    return delegate instanceof NRTCachingDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ff6c6a2ba3fd5c77b185db194c0b76243eef1e1","date":1405334822,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","sourceNew":"  /**\n   * Returns true if {@link #in} must sync its files.\n   * Currently, only {@link NRTCachingDirectory} requires sync'ing its files\n   * because otherwise they are cached in an internal {@link RAMDirectory}. If\n   * other directories require that too, they should be added to this method.\n   */\n  private boolean mustSync() {\n    Directory delegate = in;\n    while (delegate instanceof FilterDirectory) {\n      if (delegate instanceof NRTCachingDirectory) {\n        return true;\n      }\n      delegate = ((FilterDirectory) delegate).getDelegate();\n    }\n    return delegate instanceof NRTCachingDirectory;\n  }\n\n","sourceOld":"  /**\n   * Returns true if {@link #in} must sync its files.\n   * Currently, only {@link NRTCachingDirectory} requires sync'ing its files\n   * because otherwise they are cached in an internal {@link RAMDirectory}. If\n   * other directories require that too, they should be added to this method.\n   */\n  private boolean mustSync() {\n    Directory delegate = in;\n    while (delegate instanceof FilterDirectory) {\n      delegate = ((FilterDirectory) delegate).getDelegate();\n    }\n    return delegate instanceof NRTCachingDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98b44240f64a2d6935543ff25faee750b29204eb","date":1424972040,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true if {@link #in} must sync its files.\n   * Currently, only {@link NRTCachingDirectory} requires sync'ing its files\n   * because otherwise they are cached in an internal {@link RAMDirectory}. If\n   * other directories require that too, they should be added to this method.\n   */\n  private boolean mustSync() {\n    Directory delegate = in;\n    while (delegate instanceof FilterDirectory) {\n      if (delegate instanceof NRTCachingDirectory) {\n        return true;\n      }\n      delegate = ((FilterDirectory) delegate).getDelegate();\n    }\n    return delegate instanceof NRTCachingDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98a04f56464afdffd4c430d6c47a0c868a38354e","date":1424985833,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true if {@link #in} must sync its files.\n   * Currently, only {@link NRTCachingDirectory} requires sync'ing its files\n   * because otherwise they are cached in an internal {@link RAMDirectory}. If\n   * other directories require that too, they should be added to this method.\n   */\n  private boolean mustSync() {\n    Directory delegate = in;\n    while (delegate instanceof FilterDirectory) {\n      if (delegate instanceof NRTCachingDirectory) {\n        return true;\n      }\n      delegate = ((FilterDirectory) delegate).getDelegate();\n    }\n    return delegate instanceof NRTCachingDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#mustSync().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true if {@link #in} must sync its files.\n   * Currently, only {@link NRTCachingDirectory} requires sync'ing its files\n   * because otherwise they are cached in an internal {@link RAMDirectory}. If\n   * other directories require that too, they should be added to this method.\n   */\n  private boolean mustSync() {\n    Directory delegate = in;\n    while (delegate instanceof FilterDirectory) {\n      if (delegate instanceof NRTCachingDirectory) {\n        return true;\n      }\n      delegate = ((FilterDirectory) delegate).getDelegate();\n    }\n    return delegate instanceof NRTCachingDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["1ff6c6a2ba3fd5c77b185db194c0b76243eef1e1","98a04f56464afdffd4c430d6c47a0c868a38354e"],"98a04f56464afdffd4c430d6c47a0c868a38354e":["1ff6c6a2ba3fd5c77b185db194c0b76243eef1e1","98b44240f64a2d6935543ff25faee750b29204eb"],"1ff6c6a2ba3fd5c77b185db194c0b76243eef1e1":["399ef3ff6c22f0627c82ac65f32726f3587a2aa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"399ef3ff6c22f0627c82ac65f32726f3587a2aa1":["bac2bd9d901ec1ee7111a77c8e616d745fb2a362"],"bac2bd9d901ec1ee7111a77c8e616d745fb2a362":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"98b44240f64a2d6935543ff25faee750b29204eb":["1ff6c6a2ba3fd5c77b185db194c0b76243eef1e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98a04f56464afdffd4c430d6c47a0c868a38354e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"98a04f56464afdffd4c430d6c47a0c868a38354e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1ff6c6a2ba3fd5c77b185db194c0b76243eef1e1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98a04f56464afdffd4c430d6c47a0c868a38354e","98b44240f64a2d6935543ff25faee750b29204eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bac2bd9d901ec1ee7111a77c8e616d745fb2a362"],"399ef3ff6c22f0627c82ac65f32726f3587a2aa1":["1ff6c6a2ba3fd5c77b185db194c0b76243eef1e1"],"bac2bd9d901ec1ee7111a77c8e616d745fb2a362":["399ef3ff6c22f0627c82ac65f32726f3587a2aa1"],"98b44240f64a2d6935543ff25faee750b29204eb":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}