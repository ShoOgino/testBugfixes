{"path":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","sourceNew":"  /**\n   * Marks the current token as keyword iff set to <code>true</code>.\n   * \n   * @param isKeyword\n   *          <code>true</code> iff the current token is a keyword, otherwise\n   *          <code>false</code>.\n   */\n  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","sourceOld":"  /**\n   * Marks the current token as keyword iff set to <code>true</code>.\n   * \n   * @param isKeyword\n   *          <code>true</code> iff the current token is a keyword, otherwise\n   *          <code>false</code>.\n   */\n  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27f7a67b528a360bdc01ea05af57e6459fe42ac0","date":1346299172,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","sourceNew":"  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","sourceOld":"  /**\n   * Marks the current token as keyword iff set to <code>true</code>.\n   * \n   * @param isKeyword\n   *          <code>true</code> iff the current token is a keyword, otherwise\n   *          <code>false</code>.\n   */\n  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","sourceNew":"  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","sourceOld":"  /**\n   * Marks the current token as keyword iff set to <code>true</code>.\n   * \n   * @param isKeyword\n   *          <code>true</code> iff the current token is a keyword, otherwise\n   *          <code>false</code>.\n   */\n  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","sourceNew":"  @Override\n  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","sourceOld":"  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttributeImpl#setKeyword(boolean).mjava","sourceNew":"  @Override\n  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","sourceOld":"  public void setKeyword(boolean isKeyword) {\n    keyword = isKeyword;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["27f7a67b528a360bdc01ea05af57e6459fe42ac0","7530de27b87b961b51f01bd1299b7004d46e8823"],"27f7a67b528a360bdc01ea05af57e6459fe42ac0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","27f7a67b528a360bdc01ea05af57e6459fe42ac0"],"7530de27b87b961b51f01bd1299b7004d46e8823":["27f7a67b528a360bdc01ea05af57e6459fe42ac0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"27f7a67b528a360bdc01ea05af57e6459fe42ac0":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","05a14b2611ead08655a2b2bdc61632eb31316e57","7530de27b87b961b51f01bd1299b7004d46e8823"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["27f7a67b528a360bdc01ea05af57e6459fe42ac0","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}