{"path":"src/test/org/apache/solr/common/util/ContentStreamTest#testURLStream().mjava","commits":[{"id":"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","date":1181791578,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/common/util/ContentStreamTest#testURLStream().mjava","pathOld":"src/test/org/apache/solr/util/ContentStreamTest#testURLStream().mjava","sourceNew":"  public void testURLStream() throws IOException \n  {\n    String content = null;\n    URL url = new URL( \"http://svn.apache.org/repos/asf/lucene/solr/trunk/\" );\n    InputStream in = url.openStream();\n    try {\n      content = IOUtils.toString( in );\n    } \n    finally {\n      IOUtils.closeQuietly(in);\n    }\n    \n    assertTrue( content.length() > 10 ); // found something...\n    \n    ContentStreamBase stream = new ContentStreamBase.URLStream( url );\n    assertEquals( content.length(), stream.getSize().intValue() );\n    \n    // Test the stream\n    in = stream.getStream();\n    try {\n      assertTrue( IOUtils.contentEquals( \n          new ByteArrayInputStream( content.getBytes() ), in ) );\n    } \n    finally {\n      IOUtils.closeQuietly(in);\n    }\n\n    // Re-open the stream and this time use a reader\n    stream = new ContentStreamBase.URLStream( url );\n    assertTrue( IOUtils.contentEquals( new StringReader( content ), stream.getReader() ) );\n  }\n\n","sourceOld":"  public void testURLStream() throws IOException \n  {\n    String content = null;\n    URL url = new URL( \"http://svn.apache.org/repos/asf/lucene/solr/trunk/\" );\n    InputStream in = url.openStream();\n    try {\n      content = IOUtils.toString( in );\n    } \n    finally {\n      IOUtils.closeQuietly(in);\n    }\n    \n    assertTrue( content.length() > 10 ); // found something...\n    \n    ContentStreamBase stream = new ContentStreamBase.URLStream( url );\n    assertEquals( content.length(), stream.getSize().intValue() );\n    \n    // Test the stream\n    in = stream.getStream();\n    try {\n      assertTrue( IOUtils.contentEquals( \n          new ByteArrayInputStream( content.getBytes() ), in ) );\n    } \n    finally {\n      IOUtils.closeQuietly(in);\n    }\n\n    // Re-open the stream and this time use a reader\n    stream = new ContentStreamBase.URLStream( url );\n    assertTrue( IOUtils.contentEquals( new StringReader( content ), stream.getReader() ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/common/util/ContentStreamTest#testURLStream().mjava","pathOld":"src/test/org/apache/solr/common/util/ContentStreamTest#testURLStream().mjava","sourceNew":"  public void testURLStream() throws IOException \n  {\n    String content = null;\n    URL url = new URL( \"http://svn.apache.org/repos/asf/lucene/solr/trunk/\" );\n    InputStream in = url.openStream();\n    try {\n      content = IOUtils.toString( in );\n    } \n    finally {\n      IOUtils.closeQuietly(in);\n    }\n    \n    assertTrue( content.length() > 10 ); // found something...\n    \n    ContentStreamBase stream = new ContentStreamBase.URLStream( url );\n    assertEquals( content.length(), stream.getSize().intValue() );\n    \n    // Test the stream\n    in = stream.getStream();\n    try {\n      assertTrue( IOUtils.contentEquals( \n          new ByteArrayInputStream( content.getBytes() ), in ) );\n    } \n    finally {\n      IOUtils.closeQuietly(in);\n    }\n\n    // Re-open the stream and this time use a reader\n    stream = new ContentStreamBase.URLStream( url );\n    assertTrue( IOUtils.contentEquals( new StringReader( content ), stream.getReader() ) );\n  }\n\n","sourceOld":"  public void testURLStream() throws IOException \n  {\n    String content = null;\n    URL url = new URL( \"http://svn.apache.org/repos/asf/lucene/solr/trunk/\" );\n    InputStream in = url.openStream();\n    try {\n      content = IOUtils.toString( in );\n    } \n    finally {\n      IOUtils.closeQuietly(in);\n    }\n    \n    assertTrue( content.length() > 10 ); // found something...\n    \n    ContentStreamBase stream = new ContentStreamBase.URLStream( url );\n    assertEquals( content.length(), stream.getSize().intValue() );\n    \n    // Test the stream\n    in = stream.getStream();\n    try {\n      assertTrue( IOUtils.contentEquals( \n          new ByteArrayInputStream( content.getBytes() ), in ) );\n    } \n    finally {\n      IOUtils.closeQuietly(in);\n    }\n\n    // Re-open the stream and this time use a reader\n    stream = new ContentStreamBase.URLStream( url );\n    assertTrue( IOUtils.contentEquals( new StringReader( content ), stream.getReader() ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}