{"path":"solr/core/src/java/org/apache/solr/handler/admin/IndexSizeEstimator#setSamplingPercent(float).mjava","commits":[{"id":"e4583dbd381e291c87e23144564c59ba3391b188","date":1560187306,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/IndexSizeEstimator#setSamplingPercent(float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sampling percent (a number greater than 0 and less or equal to 100). When index size exceeds\n   * the threshold then approximately only this percent of data will be retrieved from the index and the\n   * totals will be extrapolated.\n   * @param percent sample percent. Default value is {@link #DEFAULT_SAMPLING_PERCENT}.\n   * @throws IllegalArgumentException when value is less than or equal to 0.0 or greater than 100.0, or\n   *        the sampling percent is so small that less than 10 documents would be sampled.\n   */\n  public void setSamplingPercent(float percent) throws IllegalArgumentException {\n    if (percent <= 0 || percent > 100) {\n      throw new IllegalArgumentException(\"samplingPercent must be 0 < percent <= 100\");\n    }\n    if (reader.maxDoc() > samplingThreshold) {\n      samplingStep = Math.round(100.0f / samplingPercent);\n      log.info(\"- number of documents {} larger than {}, sampling percent is {} and sampling step {}\", reader.maxDoc(), samplingThreshold, samplingPercent, samplingStep);\n      if (reader.maxDoc() / samplingStep < 10) {\n        throw new IllegalArgumentException(\"Out of \" + reader.maxDoc() + \" less than 10 documents would be sampled, which is too unreliable. Increase the samplingPercent.\");\n      }\n    }\n    this.samplingPercent = percent;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/IndexSizeEstimator#setSamplingPercent(float).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/IndexSizeEstimator#setSamplingPercent(float).mjava","sourceNew":"  /**\n   * Sampling percent (a number greater than 0 and less or equal to 100). When index size exceeds\n   * the threshold then approximately only this percent of data will be retrieved from the index and the\n   * totals will be extrapolated.\n   * @param percent sample percent. Default value is {@link #DEFAULT_SAMPLING_PERCENT}.\n   * @throws IllegalArgumentException when value is less than or equal to 0.0 or greater than 100.0, or\n   *        the sampling percent is so small that less than 10 documents would be sampled.\n   */\n  public void setSamplingPercent(float percent) throws IllegalArgumentException {\n    if (percent <= 0 || percent > 100) {\n      throw new IllegalArgumentException(\"samplingPercent must be 0 < percent <= 100\");\n    }\n    if (reader.maxDoc() > samplingThreshold) {\n      samplingStep = Math.round(100.0f / samplingPercent);\n      if (log.isInfoEnabled()) {\n        log.info(\"- number of documents {} larger than {}, sampling percent is {} and sampling step {}\", reader.maxDoc(), samplingThreshold, samplingPercent, samplingStep);\n      }\n      if (reader.maxDoc() / samplingStep < 10) {\n        throw new IllegalArgumentException(\"Out of \" + reader.maxDoc() + \" less than 10 documents would be sampled, which is too unreliable. Increase the samplingPercent.\");\n      }\n    }\n    this.samplingPercent = percent;\n  }\n\n","sourceOld":"  /**\n   * Sampling percent (a number greater than 0 and less or equal to 100). When index size exceeds\n   * the threshold then approximately only this percent of data will be retrieved from the index and the\n   * totals will be extrapolated.\n   * @param percent sample percent. Default value is {@link #DEFAULT_SAMPLING_PERCENT}.\n   * @throws IllegalArgumentException when value is less than or equal to 0.0 or greater than 100.0, or\n   *        the sampling percent is so small that less than 10 documents would be sampled.\n   */\n  public void setSamplingPercent(float percent) throws IllegalArgumentException {\n    if (percent <= 0 || percent > 100) {\n      throw new IllegalArgumentException(\"samplingPercent must be 0 < percent <= 100\");\n    }\n    if (reader.maxDoc() > samplingThreshold) {\n      samplingStep = Math.round(100.0f / samplingPercent);\n      log.info(\"- number of documents {} larger than {}, sampling percent is {} and sampling step {}\", reader.maxDoc(), samplingThreshold, samplingPercent, samplingStep);\n      if (reader.maxDoc() / samplingStep < 10) {\n        throw new IllegalArgumentException(\"Out of \" + reader.maxDoc() + \" less than 10 documents would be sampled, which is too unreliable. Increase the samplingPercent.\");\n      }\n    }\n    this.samplingPercent = percent;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["e4583dbd381e291c87e23144564c59ba3391b188"],"e4583dbd381e291c87e23144564c59ba3391b188":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4583dbd381e291c87e23144564c59ba3391b188"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e4583dbd381e291c87e23144564c59ba3391b188":["575e66bd4b2349209027f6801184da7fc3cba13f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}