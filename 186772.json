{"path":"src/java/org/apache/solr/common/SolrInputDocument#setRemoveDuplicateFieldValues(String,boolean).mjava","commits":[{"id":"9e90486608f7012c992de10544f6940a730a00e6","date":1182105448,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/SolrInputDocument#setRemoveDuplicateFieldValues(String,boolean).mjava","pathOld":"src/java/org/apache/solr/common/SolrInputDocument#setKeepDuplicateFieldValues(String,boolean).mjava","sourceNew":"  /**\n   * Should the Document be able to contain duplicate values for the same field?\n   * \n   * By default, all field values are maintained.  If you only want to distinct values\n   * set setKeepDuplicateFieldValues( \"fieldname\", false );\n   * \n   * To change the default behavior, use <code>null</code> as the fieldname.\n   * \n   * NOTE: this must be called before adding any values to the given field.\n   */\n  public void setRemoveDuplicateFieldValues( String name, boolean v )\n  {\n    if( this.getFieldValues( name ) != null ) {\n      // If it was not distinct and changed to distinct, we could, but this seems like a better rule\n      throw new RuntimeException( \"You can't change a fields distinctness after it is initialized.\" );\n    }\n    \n    if( _removeDuplicates == null ) {\n      if( v == false ) {\n        // we only care about 'true'  we don't need to make a map unless \n        // something does not want multiple values\n        return; \n      }\n      _removeDuplicates = new HashMap<String, Boolean>();\n    }\n    _removeDuplicates.put( name, v );\n  }\n\n","sourceOld":"  /**\n   * Should the Document be able to contain duplicate values for the same field?\n   * \n   * By default, all field values are maintained.  If you only want to distinct values\n   * set setKeepDuplicateFieldValues( \"fieldname\", false );\n   * \n   * To change the default behavior, use <code>null</code> as the fieldname.\n   * \n   * NOTE: this must be called before adding any values to the given field.\n   */\n  public void setKeepDuplicateFieldValues( String name, boolean v )\n  {\n    if( this.getFieldValues( name ) != null ) {\n      // If it was not distinct and changed to distinct, we could, but this seems like a better rule\n      throw new RuntimeException( \"You can't change a fields distinctness after it is initialized.\" );\n    }\n    \n    if( _keepDuplicates == null ) {\n      if( v == true ) {\n        // we only care about 'false'  we don't need to make a map unless \n        // something does not want multiple values\n        return; \n      }\n      _keepDuplicates = new HashMap<String, Boolean>();\n    }\n    _keepDuplicates.put( name, v );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ebb24ab555aab7c4dd5d2264c06a4f19fb217913","date":1183353562,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/SolrInputDocument#setRemoveDuplicateFieldValues(String,boolean).mjava","pathOld":"src/java/org/apache/solr/common/SolrInputDocument#setRemoveDuplicateFieldValues(String,boolean).mjava","sourceNew":"  /**\n   * Should the Document be able to contain duplicate values for the same field?\n   * \n   * By default, all field values are maintained.  If you only want to distinct values\n   * set setKeepDuplicateFieldValues( \"fieldname\", false );\n   * \n   * To change the default behavior, use <code>null</code> as the fieldname.\n   * \n   * NOTE: this must be called before adding any values to the given field.\n   */\n  public void setRemoveDuplicateFieldValues( String name, boolean v )\n  {\n    if( _fields.get( name ) != null ) {\n      // If it was not distinct and changed to distinct, we could, but this seems like a better rule\n      throw new RuntimeException( \"You can't change a fields distinctness after it is initialized.\" );\n    }\n    \n    if( _removeDuplicates == null ) {\n      if( v == false ) {\n        // we only care about 'true'  we don't need to make a map unless \n        // something does not want multiple values\n        return; \n      }\n      _removeDuplicates = new HashMap<String, Boolean>();\n    }\n    _removeDuplicates.put( name, v );\n  }\n\n","sourceOld":"  /**\n   * Should the Document be able to contain duplicate values for the same field?\n   * \n   * By default, all field values are maintained.  If you only want to distinct values\n   * set setKeepDuplicateFieldValues( \"fieldname\", false );\n   * \n   * To change the default behavior, use <code>null</code> as the fieldname.\n   * \n   * NOTE: this must be called before adding any values to the given field.\n   */\n  public void setRemoveDuplicateFieldValues( String name, boolean v )\n  {\n    if( this.getFieldValues( name ) != null ) {\n      // If it was not distinct and changed to distinct, we could, but this seems like a better rule\n      throw new RuntimeException( \"You can't change a fields distinctness after it is initialized.\" );\n    }\n    \n    if( _removeDuplicates == null ) {\n      if( v == false ) {\n        // we only care about 'true'  we don't need to make a map unless \n        // something does not want multiple values\n        return; \n      }\n      _removeDuplicates = new HashMap<String, Boolean>();\n    }\n    _removeDuplicates.put( name, v );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31","date":1186291613,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/common/SolrInputDocument#setRemoveDuplicateFieldValues(String,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Should the Document be able to contain duplicate values for the same field?\n   * \n   * By default, all field values are maintained.  If you only want to distinct values\n   * set setKeepDuplicateFieldValues( \"fieldname\", false );\n   * \n   * To change the default behavior, use <code>null</code> as the fieldname.\n   * \n   * NOTE: this must be called before adding any values to the given field.\n   */\n  public void setRemoveDuplicateFieldValues( String name, boolean v )\n  {\n    if( _fields.get( name ) != null ) {\n      // If it was not distinct and changed to distinct, we could, but this seems like a better rule\n      throw new RuntimeException( \"You can't change a fields distinctness after it is initialized.\" );\n    }\n    \n    if( _removeDuplicates == null ) {\n      if( v == false ) {\n        // we only care about 'true'  we don't need to make a map unless \n        // something does not want multiple values\n        return; \n      }\n      _removeDuplicates = new HashMap<String, Boolean>();\n    }\n    _removeDuplicates.put( name, v );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e90486608f7012c992de10544f6940a730a00e6":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ebb24ab555aab7c4dd5d2264c06a4f19fb217913":["9e90486608f7012c992de10544f6940a730a00e6"],"edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31":["ebb24ab555aab7c4dd5d2264c06a4f19fb217913"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9e90486608f7012c992de10544f6940a730a00e6":["ebb24ab555aab7c4dd5d2264c06a4f19fb217913"],"ebb24ab555aab7c4dd5d2264c06a4f19fb217913":["edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31"],"edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["9e90486608f7012c992de10544f6940a730a00e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["edc3bf9089835e5d2a7c98b802ea6d9d1ff91e31","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}