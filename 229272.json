{"path":"src/test/org/apache/solr/analysis/TestSynonymFilter#assertTokEqual(List,List).mjava","commits":[{"id":"0d3072fffb39e4aa50fce38815821919b35fc194","date":1138579199,"type":0,"author":"Yoav Shapira","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestSynonymFilter#assertTokEqual(List,List).mjava","pathOld":"/dev/null","sourceNew":"  public void assertTokEqual(List a, List b) {\r\n    assertTokEq(a,b);\r\n    assertTokEq(b,a);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c1781d63ce2d5e979c8b3f35682b60a86f5df553"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c1781d63ce2d5e979c8b3f35682b60a86f5df553","date":1153254917,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestSynonymFilter#assertTokEqual(List,List).mjava","pathOld":"src/test/org/apache/solr/analysis/TestSynonymFilter#assertTokEqual(List,List).mjava","sourceNew":"  public void assertTokEqual(List a, List b) {\n    assertTokEq(a,b);\n    assertTokEq(b,a);\n  }\n\n","sourceOld":"  public void assertTokEqual(List a, List b) {\r\n    assertTokEq(a,b);\r\n    assertTokEq(b,a);\r\n  }\r\n\n","bugFix":["0d3072fffb39e4aa50fce38815821919b35fc194"],"bugIntro":["751bd9c20e69c4ab60e9b7c5f01ad1a3ff353226"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"751bd9c20e69c4ab60e9b7c5f01ad1a3ff353226","date":1172784996,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestSynonymFilter#assertTokEqual(List,List).mjava","pathOld":"src/test/org/apache/solr/analysis/TestSynonymFilter#assertTokEqual(List,List).mjava","sourceNew":"  public void assertTokEqual(List a, List b) {\n    assertTokEq(a,b,false);\n    assertTokEq(b,a,false);\n  }\n\n","sourceOld":"  public void assertTokEqual(List a, List b) {\n    assertTokEq(a,b);\n    assertTokEq(b,a);\n  }\n\n","bugFix":["c1781d63ce2d5e979c8b3f35682b60a86f5df553"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de4d615b00f60dce1293e87276b0685ce0f0d621","date":1179940685,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/BaseTokenTestCase#assertTokEqual(List[Token],List[Token]).mjava","pathOld":"src/test/org/apache/solr/analysis/TestSynonymFilter#assertTokEqual(List,List).mjava","sourceNew":"  public void assertTokEqual(List<Token> a, List<Token> b) {\n    assertTokEq(a,b,false);\n    assertTokEq(b,a,false);\n  }\n\n","sourceOld":"  public void assertTokEqual(List a, List b) {\n    assertTokEq(a,b,false);\n    assertTokEq(b,a,false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de4d615b00f60dce1293e87276b0685ce0f0d621":["751bd9c20e69c4ab60e9b7c5f01ad1a3ff353226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c1781d63ce2d5e979c8b3f35682b60a86f5df553":["0d3072fffb39e4aa50fce38815821919b35fc194"],"751bd9c20e69c4ab60e9b7c5f01ad1a3ff353226":["c1781d63ce2d5e979c8b3f35682b60a86f5df553"],"0d3072fffb39e4aa50fce38815821919b35fc194":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"de4d615b00f60dce1293e87276b0685ce0f0d621":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0d3072fffb39e4aa50fce38815821919b35fc194"],"c1781d63ce2d5e979c8b3f35682b60a86f5df553":["751bd9c20e69c4ab60e9b7c5f01ad1a3ff353226"],"751bd9c20e69c4ab60e9b7c5f01ad1a3ff353226":["de4d615b00f60dce1293e87276b0685ce0f0d621"],"0d3072fffb39e4aa50fce38815821919b35fc194":["c1781d63ce2d5e979c8b3f35682b60a86f5df553"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de4d615b00f60dce1293e87276b0685ce0f0d621","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}