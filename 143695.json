{"path":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testRewriteRetentionQuery().mjava","commits":[{"id":"743dcb70b7e21ab1d1c57de457b895fa6a7968df","date":1535987980,"type":0,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testRewriteRetentionQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testRewriteRetentionQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig().setSoftDeletesField(\"soft_deletes\")\n        .setMergePolicy(new SoftDeletesRetentionMergePolicy(\"soft_deletes\",\n            () -> new PrefixQuery(new Term(\"id\", \"foo\")), newMergePolicy()));\n    IndexWriter writer = new IndexWriter(dir, config);\n\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"foo-1\", Field.Store.YES));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(new StringField(\"id\", \"foo-2\", Field.Store.YES));\n    writer.softUpdateDocument(new Term(\"id\", \"foo-1\"), d, new NumericDocValuesField(\"soft_deletes\", 1));\n\n    d = new Document();\n    d.add(new StringField(\"id\", \"bar-1\", Field.Store.YES));\n    writer.addDocument(d);\n    d.add(new StringField(\"id\", \"bar-2\", Field.Store.YES));\n    writer.softUpdateDocument(new Term(\"id\", \"bar-1\"), d, new NumericDocValuesField(\"soft_deletes\", 1));\n\n    writer.forceMerge(1);\n    assertEquals(2, writer.numDocs()); // foo-2, bar-2\n    assertEquals(3, writer.maxDoc());  // foo-1, foo-2, bar-2\n    IOUtils.close(writer, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feb4029567b43f074ed7b6eb8fb126d355075dfd","date":1544812585,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testRewriteRetentionQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSoftDeletesRetentionMergePolicy#testRewriteRetentionQuery().mjava","sourceNew":"  public void testRewriteRetentionQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig().setSoftDeletesField(\"soft_deletes\")\n        .setMergePolicy(new SoftDeletesRetentionMergePolicy(\"soft_deletes\",\n            () -> new PrefixQuery(new Term(\"id\", \"foo\")), newMergePolicy()));\n    IndexWriter writer = new IndexWriter(dir, config);\n\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"foo-1\", Field.Store.YES));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(new StringField(\"id\", \"foo-2\", Field.Store.YES));\n    writer.softUpdateDocument(new Term(\"id\", \"foo-1\"), d, new NumericDocValuesField(\"soft_deletes\", 1));\n\n    d = new Document();\n    d.add(new StringField(\"id\", \"bar-1\", Field.Store.YES));\n    writer.addDocument(d);\n    d.add(new StringField(\"id\", \"bar-2\", Field.Store.YES));\n    writer.softUpdateDocument(new Term(\"id\", \"bar-1\"), d, new NumericDocValuesField(\"soft_deletes\", 1));\n\n    writer.forceMerge(1);\n    assertEquals(2, writer.getDocStats().numDocs); // foo-2, bar-2\n    assertEquals(3, writer.getDocStats().maxDoc);  // foo-1, foo-2, bar-2\n    IOUtils.close(writer, dir);\n  }\n\n","sourceOld":"  public void testRewriteRetentionQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig().setSoftDeletesField(\"soft_deletes\")\n        .setMergePolicy(new SoftDeletesRetentionMergePolicy(\"soft_deletes\",\n            () -> new PrefixQuery(new Term(\"id\", \"foo\")), newMergePolicy()));\n    IndexWriter writer = new IndexWriter(dir, config);\n\n    Document d = new Document();\n    d.add(new StringField(\"id\", \"foo-1\", Field.Store.YES));\n    writer.addDocument(d);\n    d = new Document();\n    d.add(new StringField(\"id\", \"foo-2\", Field.Store.YES));\n    writer.softUpdateDocument(new Term(\"id\", \"foo-1\"), d, new NumericDocValuesField(\"soft_deletes\", 1));\n\n    d = new Document();\n    d.add(new StringField(\"id\", \"bar-1\", Field.Store.YES));\n    writer.addDocument(d);\n    d.add(new StringField(\"id\", \"bar-2\", Field.Store.YES));\n    writer.softUpdateDocument(new Term(\"id\", \"bar-1\"), d, new NumericDocValuesField(\"soft_deletes\", 1));\n\n    writer.forceMerge(1);\n    assertEquals(2, writer.numDocs()); // foo-2, bar-2\n    assertEquals(3, writer.maxDoc());  // foo-1, foo-2, bar-2\n    IOUtils.close(writer, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"feb4029567b43f074ed7b6eb8fb126d355075dfd":["743dcb70b7e21ab1d1c57de457b895fa6a7968df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"743dcb70b7e21ab1d1c57de457b895fa6a7968df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["feb4029567b43f074ed7b6eb8fb126d355075dfd"]},"commit2Childs":{"feb4029567b43f074ed7b6eb8fb126d355075dfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["743dcb70b7e21ab1d1c57de457b895fa6a7968df"],"743dcb70b7e21ab1d1c57de457b895fa6a7968df":["feb4029567b43f074ed7b6eb8fb126d355075dfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}