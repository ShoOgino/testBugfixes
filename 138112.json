{"path":"src/test/org/apache/solr/util/TestNumberUtils#getDoubleSpecial().mjava","commits":[{"id":"a65a1a6171dfe798e06ba17f494a7a8747a11baa","date":1212716672,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/util/TestNumberUtils#getDoubleSpecial().mjava","pathOld":"src/java/org/apache/solr/util/test/TestNumberUtils#getDoubleSpecial().mjava","sourceNew":"  static double getDoubleSpecial() {\n    int i = rng.nextInt();\n    long j = rng.nextLong();\n    double f = Double.longBitsToDouble(j);\n    if (f!=f) f=0; // get rid of NaN for comparison purposes\n    if ((i & 0x10) != 0) return f;\n    return dspecial[((int)j&0x7fffffff) % dspecial.length]* ((i & 0x20)==0?1:-1) + ((i&0x03)-1);\n  }\n\n","sourceOld":"  static double getDoubleSpecial() {\n    int i = rng.nextInt();\n    long j = rng.nextLong();\n    double f = Double.longBitsToDouble(j);\n    if (f!=f) f=0; // get rid of NaN for comparison purposes\n    if ((i & 0x10) != 0) return f;\n    return dspecial[((int)j&0x7fffffff) % dspecial.length]* ((i & 0x20)==0?1:-1) + ((i&0x03)-1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/util/TestNumberUtils#getDoubleSpecial().mjava","pathOld":"src/test/org/apache/solr/util/TestNumberUtils#getDoubleSpecial().mjava","sourceNew":"  static double getDoubleSpecial() {\n    int i = rng.nextInt();\n    long j = rng.nextLong();\n    double f = Double.longBitsToDouble(j);\n    if (f!=f) f=0; // get rid of NaN for comparison purposes\n    if ((i & 0x10) != 0) return f;\n    return dspecial[((int)j&0x7fffffff) % dspecial.length]* ((i & 0x20)==0?1:-1) + ((i&0x03)-1);\n  }\n\n","sourceOld":"  static double getDoubleSpecial() {\n    int i = rng.nextInt();\n    long j = rng.nextLong();\n    double f = Double.longBitsToDouble(j);\n    if (f!=f) f=0; // get rid of NaN for comparison purposes\n    if ((i & 0x10) != 0) return f;\n    return dspecial[((int)j&0x7fffffff) % dspecial.length]* ((i & 0x20)==0?1:-1) + ((i&0x03)-1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a65a1a6171dfe798e06ba17f494a7a8747a11baa":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["a65a1a6171dfe798e06ba17f494a7a8747a11baa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a65a1a6171dfe798e06ba17f494a7a8747a11baa":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["a65a1a6171dfe798e06ba17f494a7a8747a11baa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}