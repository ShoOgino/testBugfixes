{"path":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedSkipReader#readSkipData(int,IndexInput).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedSkipReader#readSkipData(int,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    if (DEBUG) {\n      System.out.println(\"readSkipData level=\" + level);\n    }\n    int delta = skipStream.readVInt();\n    if (DEBUG) {\n      System.out.println(\"  delta=\" + delta);\n    }\n    docPointer[level] += skipStream.readVInt();\n    if (DEBUG) {\n      System.out.println(\"  docFP=\" + docPointer[level]);\n    }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      if (DEBUG) {\n        System.out.println(\"  posFP=\" + posPointer[level]);\n      }\n      posBufferUpto[level] = skipStream.readVInt();\n      if (DEBUG) {\n        System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (endOffset != null) {\n        endOffset[level] += skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f81e20fb7784c464473faba4f1fdd4f775e8ee87"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f81e20fb7784c464473faba4f1fdd4f775e8ee87","date":1343937502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedSkipReader#readSkipData(int,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedSkipReader#readSkipData(int,IndexInput).mjava","sourceNew":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    if (DEBUG) {\n      System.out.println(\"readSkipData level=\" + level);\n    }\n    int delta = skipStream.readVInt();\n    if (DEBUG) {\n      System.out.println(\"  delta=\" + delta);\n    }\n    docPointer[level] += skipStream.readVInt();\n    if (DEBUG) {\n      System.out.println(\"  docFP=\" + docPointer[level]);\n    }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      if (DEBUG) {\n        System.out.println(\"  posFP=\" + posPointer[level]);\n      }\n      posBufferUpto[level] = skipStream.readVInt();\n      if (DEBUG) {\n        System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (startOffset != null) {\n        startOffset[level] += skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","sourceOld":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    if (DEBUG) {\n      System.out.println(\"readSkipData level=\" + level);\n    }\n    int delta = skipStream.readVInt();\n    if (DEBUG) {\n      System.out.println(\"  delta=\" + delta);\n    }\n    docPointer[level] += skipStream.readVInt();\n    if (DEBUG) {\n      System.out.println(\"  docFP=\" + docPointer[level]);\n    }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      if (DEBUG) {\n        System.out.println(\"  posFP=\" + posPointer[level]);\n      }\n      posBufferUpto[level] = skipStream.readVInt();\n      if (DEBUG) {\n        System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (endOffset != null) {\n        endOffset[level] += skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","bugFix":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedSkipReader#readSkipData(int,IndexInput).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    if (DEBUG) {\n      System.out.println(\"readSkipData level=\" + level);\n    }\n    int delta = skipStream.readVInt();\n    if (DEBUG) {\n      System.out.println(\"  delta=\" + delta);\n    }\n    docPointer[level] += skipStream.readVInt();\n    if (DEBUG) {\n      System.out.println(\"  docFP=\" + docPointer[level]);\n    }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      if (DEBUG) {\n        System.out.println(\"  posFP=\" + posPointer[level]);\n      }\n      posBufferUpto[level] = skipStream.readVInt();\n      if (DEBUG) {\n        System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (startOffset != null) {\n        startOffset[level] += skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["f81e20fb7784c464473faba4f1fdd4f775e8ee87"],"f81e20fb7784c464473faba4f1fdd4f775e8ee87":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["f81e20fb7784c464473faba4f1fdd4f775e8ee87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[],"f81e20fb7784c464473faba4f1fdd4f775e8ee87":["e6b41208259e8566cba0ecac7da6a331ea9732dd"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}