{"path":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testMessage(Map[String,Exception],String).mjava","commits":[{"id":"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0","date":1377955248,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testMessage(Map[String,Exception],String).mjava","pathOld":"/dev/null","sourceNew":"  // See fi the message you expect is in the list of failures\n  private void testMessage(Map<String, Exception> failures, String lookFor) {\n    for (Exception e : failures.values()) {\n      if (e.getMessage().indexOf(lookFor) != -1) return;\n    }\n    fail(\"Should have found message containing these tokens \" + lookFor + \" in the failure messages\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testMessage(Map[String,Exception],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testMessage(Map[String,Exception],String).mjava","sourceNew":"  // See fi the message you expect is in the list of failures\n  private void testMessage(Map<String, Exception> failures, String lookFor) {\n    List<String> messages = new ArrayList<>();\n    for (Exception e : failures.values()) {\n      String message = e.getCause().getMessage();\n      messages.add(message);\n      if (message.contains(lookFor)) return;\n    }\n    fail(\"Should have found message containing these tokens \" + lookFor + \" in the failure messages: \" + messages);\n  }\n\n","sourceOld":"  // See fi the message you expect is in the list of failures\n  private void testMessage(Map<String, Exception> failures, String lookFor) {\n    for (Exception e : failures.values()) {\n      if (e.getMessage().indexOf(lookFor) != -1) return;\n    }\n    fail(\"Should have found message containing these tokens \" + lookFor + \" in the failure messages\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d629ca62e3b8ab6e29a127aebe213163d490413","date":1405524223,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testMessage(Map[String,CoreContainer.CoreLoadFailure],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#testMessage(Map[String,Exception],String).mjava","sourceNew":"  // See fi the message you expect is in the list of failures\n  private void testMessage(Map<String, CoreContainer.CoreLoadFailure> failures, String lookFor) {\n    List<String> messages = new ArrayList<>();\n    for (CoreContainer.CoreLoadFailure e : failures.values()) {\n      String message = e.exception.getCause().getMessage();\n      messages.add(message);\n      if (message.contains(lookFor)) return;\n    }\n    fail(\"Should have found message containing these tokens \" + lookFor + \" in the failure messages: \" + messages);\n  }\n\n","sourceOld":"  // See fi the message you expect is in the list of failures\n  private void testMessage(Map<String, Exception> failures, String lookFor) {\n    List<String> messages = new ArrayList<>();\n    for (Exception e : failures.values()) {\n      String message = e.getCause().getMessage();\n      messages.add(message);\n      if (message.contains(lookFor)) return;\n    }\n    fail(\"Should have found message containing these tokens \" + lookFor + \" in the failure messages: \" + messages);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d629ca62e3b8ab6e29a127aebe213163d490413":["2d4e985daefcb892b529223b478c47985fc3c483"],"2d4e985daefcb892b529223b478c47985fc3c483":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d629ca62e3b8ab6e29a127aebe213163d490413"]},"commit2Childs":{"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["2d4e985daefcb892b529223b478c47985fc3c483"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"2d629ca62e3b8ab6e29a127aebe213163d490413":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2d4e985daefcb892b529223b478c47985fc3c483":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}