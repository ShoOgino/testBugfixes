{"path":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","sourceNew":"  /**\n   * Test memory required for the storage.\n   */\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    final RamUsageEstimator rue = new RamUsageEstimator();\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              rue.estimateRamUsage(lookup)));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test memory required for the storage.\n   */\n  @Test\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    final RamUsageEstimator rue = new RamUsageEstimator();\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              rue.estimateRamUsage(lookup)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","sourceNew":"  /**\n   * Test memory required for the storage.\n   */\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    final RamUsageEstimator rue = new RamUsageEstimator();\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              rue.estimateRamUsage(lookup)));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test memory required for the storage.\n   */\n  @Test\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    final RamUsageEstimator rue = new RamUsageEstimator();\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              rue.estimateRamUsage(lookup)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","sourceNew":"  /**\n   * Test memory required for the storage.\n   */\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    final RamUsageEstimator rue = new RamUsageEstimator();\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              rue.estimateRamUsage(lookup)));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test memory required for the storage.\n   */\n  @Test\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    final RamUsageEstimator rue = new RamUsageEstimator();\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              rue.estimateRamUsage(lookup)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd6c9e9b1251473f465b0443b56046b2658402da","date":1332082750,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","sourceNew":"  /**\n   * Test memory required for the storage.\n   */\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              RamUsageEstimator.sizeOf(lookup)));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test memory required for the storage.\n   */\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    final RamUsageEstimator rue = new RamUsageEstimator();\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              rue.estimateRamUsage(lookup)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testStorageNeeds().mjava","sourceNew":"  /**\n   * Test memory required for the storage.\n   */\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              RamUsageEstimator.sizeOf(lookup)));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test memory required for the storage.\n   */\n  public void testStorageNeeds() throws Exception {\n    System.err.println(\"-- RAM consumption\");\n    for (Class<? extends Lookup> cls : benchmarkClasses) {\n      Lookup lookup = buildLookup(cls, dictionaryInput);\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s size[B]:%,13d\",\n              lookup.getClass().getSimpleName(), \n              RamUsageEstimator.sizeOf(lookup)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["dd6c9e9b1251473f465b0443b56046b2658402da"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd6c9e9b1251473f465b0443b56046b2658402da":["e230a61047bc041516c811baa08a7174d6f8322a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","dd6c9e9b1251473f465b0443b56046b2658402da","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"dd6c9e9b1251473f465b0443b56046b2658402da":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}