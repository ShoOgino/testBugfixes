{"path":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","commits":[{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(Version.LUCENE_CURRENT);\n    IndexWriter w = new IndexWriter(dir, a, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, a, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(Version.LUCENE_CURRENT);\n    IndexWriter w = new IndexWriter(dir, a, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, a, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, a, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, a, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["ba1116b3450a9c1642c89445d131b37344055245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"ba1116b3450a9c1642c89445d131b37344055245":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba1116b3450a9c1642c89445d131b37344055245"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"ba1116b3450a9c1642c89445d131b37344055245":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}