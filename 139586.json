{"path":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feb75c13cdf6b27b36407e4b15b35cf3142ab619","date":1310465075,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e26e75cfb1a17b3f7431fafc9cb3caf5678681a5","date":1336412267,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (!staticStats.contains(name))\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                      String.class.getName(), null, true, false, false));\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn( \"Could not getStatistics on info bean \"\n                + infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":["6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b","00da8b51bdeae168a5b26ec506db372b219ca7a2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<MBeanAttributeInfo>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3532ef9e3edcbdf674841a5f549101f5416c62a5","date":1416413081,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0094ec1f4134315c70a7c4393df01a259d89161","date":1420652120,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f0c8426396c925de8db3ed3f8ff40fd73670a5c","date":1474556641,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          log.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"126d6ad24eed13163ba0959435d5a80e5672837c","date":1474567302,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          log.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          log.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          log.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          LOG.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":null,"sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          log.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#getMBeanInfo().mjava","sourceNew":null,"sourceOld":"    @Override\n    public MBeanInfo getMBeanInfo() {\n      ArrayList<MBeanAttributeInfo> attrInfoList = new ArrayList<>();\n\n      for (String stat : staticStats) {\n        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),\n                null, true, false, false));\n      }\n\n      // add core's hashcode\n      attrInfoList.add(new MBeanAttributeInfo(\"coreHashCode\", String.class.getName(),\n                null, true, false, false));\n\n      try {\n        NamedList dynamicStats = infoBean.getStatistics();\n        \n        if (useCachedStatsBetweenGetMBeanInfoCalls) {\n          cachedDynamicStats = dynamicStats;\n        }\n        \n        if (dynamicStats != null) {\n          for (int i = 0; i < dynamicStats.size(); i++) {\n            String name = dynamicStats.getName(i);\n            if (staticStats.contains(name)) {\n              continue;\n            }\n            Class type = dynamicStats.get(name).getClass();\n            OpenType typeBox = determineType(type);\n            if (type.equals(String.class) || typeBox == null) {\n              attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),\n                  String.class.getName(), null, true, false, false));\n            } else {\n              attrInfoList.add(new OpenMBeanAttributeInfoSupport(\n                  dynamicStats.getName(i), dynamicStats.getName(i), typeBox,\n                  true, false, false));\n            }\n          }\n        }\n      } catch (Exception e) {\n        // don't log issue if the core is closing\n        if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))\n          log.warn(\"Could not getStatistics on info bean {}\", infoBean.getName(), e);\n      }\n\n      MBeanAttributeInfo[] attrInfoArr = attrInfoList\n              .toArray(new MBeanAttributeInfo[attrInfoList.size()]);\n      return new MBeanInfo(getClass().getName(), infoBean\n              .getDescription(), attrInfoArr, null, null, null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3532ef9e3edcbdf674841a5f549101f5416c62a5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["e26e75cfb1a17b3f7431fafc9cb3caf5678681a5","7530de27b87b961b51f01bd1299b7004d46e8823"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7530de27b87b961b51f01bd1299b7004d46e8823"],"feb75c13cdf6b27b36407e4b15b35cf3142ab619":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"816521ebaad5add9cb96bb88c577394e2938c40b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["d0094ec1f4134315c70a7c4393df01a259d89161"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d0094ec1f4134315c70a7c4393df01a259d89161","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"126d6ad24eed13163ba0959435d5a80e5672837c":["d0094ec1f4134315c70a7c4393df01a259d89161","7f0c8426396c925de8db3ed3f8ff40fd73670a5c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e26e75cfb1a17b3f7431fafc9cb3caf5678681a5":["feb75c13cdf6b27b36407e4b15b35cf3142ab619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d0094ec1f4134315c70a7c4393df01a259d89161","126d6ad24eed13163ba0959435d5a80e5672837c"],"d0094ec1f4134315c70a7c4393df01a259d89161":["3532ef9e3edcbdf674841a5f549101f5416c62a5"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["e26e75cfb1a17b3f7431fafc9cb3caf5678681a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"3532ef9e3edcbdf674841a5f549101f5416c62a5":["d0094ec1f4134315c70a7c4393df01a259d89161"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3532ef9e3edcbdf674841a5f549101f5416c62a5"],"feb75c13cdf6b27b36407e4b15b35cf3142ab619":["e26e75cfb1a17b3f7431fafc9cb3caf5678681a5"],"c26f00b574427b55127e869b935845554afde1fa":["feb75c13cdf6b27b36407e4b15b35cf3142ab619"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["126d6ad24eed13163ba0959435d5a80e5672837c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"126d6ad24eed13163ba0959435d5a80e5672837c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"e26e75cfb1a17b3f7431fafc9cb3caf5678681a5":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d0094ec1f4134315c70a7c4393df01a259d89161":["7f0c8426396c925de8db3ed3f8ff40fd73670a5c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","126d6ad24eed13163ba0959435d5a80e5672837c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}