{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","commits":[{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolverImpl,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolverImpl();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68b2523bf6d81a99aa007384dc8a69a71fec1cce","date":1477560907,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"rawtypes\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"rawtypes\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, @SuppressWarnings({\"rawtypes\"})DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTestCase#getContext(EntityProcessorWrapper,VariableResolver,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(EntityProcessorWrapper parent,\n                                   VariableResolver resolver, @SuppressWarnings({\"rawtypes\"})DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolver();\n    final Context delegate = new ContextImpl(parent, resolver,\n            parentDataSource, currProcess,\n        new HashMap<>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields, parent == null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["7c7b0ae5716b6c2044195a818e9ae58205175659","68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c7b0ae5716b6c2044195a818e9ae58205175659"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"68b2523bf6d81a99aa007384dc8a69a71fec1cce":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","407687e67faf6e1f02a211ca078d8e3eed631027","68b2523bf6d81a99aa007384dc8a69a71fec1cce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["024e13388acbf5562fcbb77a129620982a5e2d79"],"68b2523bf6d81a99aa007384dc8a69a71fec1cce":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}