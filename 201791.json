{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#unescape(String,int,int,StringBuilder).mjava","commits":[{"id":"a1b7f1cd68896fbbc518d7cc9ce49cb9cda9ab45","date":1569046571,"type":0,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#unescape(String,int,int,StringBuilder).mjava","pathOld":"/dev/null","sourceNew":"  /* Fill in sb with a string from i to the first unescaped comma, or n.\n      Return the index past the unescaped comma, or n if no unescaped comma exists */\n  private int unescape(String s, int i, int n, StringBuilder sb) throws SyntaxError {\n    for (; i < n; ++i) {\n      char c = s.charAt(i);\n      if (c == '\\\\') {\n        ++i;\n        if (i < n) {\n          c = s.charAt(i);\n        } else {\n          throw new SyntaxError(\"Unfinished escape at index \" + i + \" in facet range \" + s);\n        }\n      } else if (c == ',') {\n        return i + 1;\n      }\n      sb.append(c);\n    }\n    return n;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor#unescape(String,int,int,StringBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#unescape(String,int,int,StringBuilder).mjava","sourceNew":"  /* Fill in sb with a string from i to the first unescaped comma, or n.\n      Return the index past the unescaped comma, or n if no unescaped comma exists */\n  private int unescape(String s, int i, int n, StringBuilder sb) throws SyntaxError {\n    for (; i < n; ++i) {\n      char c = s.charAt(i);\n      if (c == '\\\\') {\n        ++i;\n        if (i < n) {\n          c = s.charAt(i);\n        } else {\n          throw new SyntaxError(\"Unfinished escape at index \" + i + \" in facet range \" + s);\n        }\n      } else if (c == ',') {\n        return i + 1;\n      }\n      sb.append(c);\n    }\n    return n;\n  }\n\n","sourceOld":"  /* Fill in sb with a string from i to the first unescaped comma, or n.\n      Return the index past the unescaped comma, or n if no unescaped comma exists */\n  private int unescape(String s, int i, int n, StringBuilder sb) throws SyntaxError {\n    for (; i < n; ++i) {\n      char c = s.charAt(i);\n      if (c == '\\\\') {\n        ++i;\n        if (i < n) {\n          c = s.charAt(i);\n        } else {\n          throw new SyntaxError(\"Unfinished escape at index \" + i + \" in facet range \" + s);\n        }\n      } else if (c == ',') {\n        return i + 1;\n      }\n      sb.append(c);\n    }\n    return n;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["a1b7f1cd68896fbbc518d7cc9ce49cb9cda9ab45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1b7f1cd68896fbbc518d7cc9ce49cb9cda9ab45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a1b7f1cd68896fbbc518d7cc9ce49cb9cda9ab45"],"a1b7f1cd68896fbbc518d7cc9ce49cb9cda9ab45":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}