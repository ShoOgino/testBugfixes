{"path":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","commits":[{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues values = in.getSortedSetDocValues(field);\n    if (values != null) {\n      return values;\n    }\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues values = in.getSortedSetDocValues(field);\n    if (values != null) {\n      return values;\n    }\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues values = in.getSortedSetDocValues(field);\n    if (values != null) {\n      return values;\n    }\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b107346d6f511cbb411725ae85fa167de3cc916","date":1518457408,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues values = in.getSortedSetDocValues(field);\n    if (values != null) {\n      return values;\n    }\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n        case BINARY:\n        case LEGACY_DOUBLE:\n        case LEGACY_FLOAT:\n        case LEGACY_INTEGER:\n        case LEGACY_LONG:\n        case DOUBLE_POINT:\n        case FLOAT_POINT:\n        case INTEGER_POINT:\n        case LONG_POINT:\n        case SORTED:\n          break;\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues values = in.getSortedSetDocValues(field);\n    if (values != null) {\n      return values;\n    }\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues values = in.getSortedSetDocValues(field);\n    if (values != null) {\n      return values;\n    }\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n        case BINARY:\n        case LEGACY_DOUBLE:\n        case LEGACY_FLOAT:\n        case LEGACY_INTEGER:\n        case LEGACY_LONG:\n        case DOUBLE_POINT:\n        case FLOAT_POINT:\n        case INTEGER_POINT:\n        case LONG_POINT:\n        case SORTED:\n          break;\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues values = in.getSortedSetDocValues(field);\n    if (values != null) {\n      return values;\n    }\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0e121d43b5a10f2df530f406f935102656e9c4e8","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"7b107346d6f511cbb411725ae85fa167de3cc916":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"83870855d82aba6819217abeff5a40779dbb28b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","7b107346d6f511cbb411725ae85fa167de3cc916"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","83870855d82aba6819217abeff5a40779dbb28b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["7b107346d6f511cbb411725ae85fa167de3cc916","bfcdec9fcf0409223f35c5ec3bc14094314941b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"7b107346d6f511cbb411725ae85fa167de3cc916":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}